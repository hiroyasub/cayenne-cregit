begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|naming
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|DataChannelDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|DataNodeDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DataMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbRelationship
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|Embeddable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|EmbeddableAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjRelationship
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|Procedure
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ProcedureParameter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|QueryDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_class
specifier|public
class|class
name|NameBuilderTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testName_Root
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"project"
argument_list|,
name|NameBuilder
operator|.
name|builder
argument_list|(
operator|new
name|DataChannelDescriptor
argument_list|()
argument_list|)
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testName_DataChannelDescriptorContext
parameter_list|()
throws|throws
name|Exception
block|{
name|DataChannelDescriptor
name|descriptor
init|=
operator|new
name|DataChannelDescriptor
argument_list|()
decl_stmt|;
name|DataMap
name|m0
init|=
operator|new
name|DataMap
argument_list|()
decl_stmt|;
name|m0
operator|.
name|setName
argument_list|(
name|NameBuilder
operator|.
name|builder
argument_list|(
name|m0
argument_list|)
operator|.
name|in
argument_list|(
name|descriptor
argument_list|)
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"datamap"
argument_list|,
name|m0
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|descriptor
operator|.
name|getDataMaps
argument_list|()
operator|.
name|add
argument_list|(
name|m0
argument_list|)
expr_stmt|;
name|DataMap
name|m1
init|=
operator|new
name|DataMap
argument_list|()
decl_stmt|;
name|m1
operator|.
name|setName
argument_list|(
name|NameBuilder
operator|.
name|builder
argument_list|(
name|m1
argument_list|)
operator|.
name|in
argument_list|(
name|descriptor
argument_list|)
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"datamap1"
argument_list|,
name|m1
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|descriptor
operator|.
name|getDataMaps
argument_list|()
operator|.
name|add
argument_list|(
name|m1
argument_list|)
expr_stmt|;
name|DataNodeDescriptor
name|nd0
init|=
operator|new
name|DataNodeDescriptor
argument_list|()
decl_stmt|;
name|nd0
operator|.
name|setName
argument_list|(
name|NameBuilder
operator|.
name|builder
argument_list|(
name|nd0
argument_list|)
operator|.
name|in
argument_list|(
name|descriptor
argument_list|)
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"datanode"
argument_list|,
name|nd0
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|descriptor
operator|.
name|getNodeDescriptors
argument_list|()
operator|.
name|add
argument_list|(
name|nd0
argument_list|)
expr_stmt|;
name|DataNodeDescriptor
name|nd1
init|=
operator|new
name|DataNodeDescriptor
argument_list|()
decl_stmt|;
name|nd1
operator|.
name|setName
argument_list|(
name|NameBuilder
operator|.
name|builder
argument_list|(
name|nd1
argument_list|)
operator|.
name|in
argument_list|(
name|descriptor
argument_list|)
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"datanode1"
argument_list|,
name|nd1
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|descriptor
operator|.
name|getNodeDescriptors
argument_list|()
operator|.
name|add
argument_list|(
name|nd1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testName_DataMapContext
parameter_list|()
block|{
name|DataMap
name|map
init|=
operator|new
name|DataMap
argument_list|()
decl_stmt|;
name|map
operator|.
name|setDefaultPackage
argument_list|(
literal|"com.foo"
argument_list|)
expr_stmt|;
name|DbEntity
name|de0
init|=
operator|new
name|DbEntity
argument_list|()
decl_stmt|;
name|de0
operator|.
name|setName
argument_list|(
name|NameBuilder
operator|.
name|builder
argument_list|(
name|de0
argument_list|)
operator|.
name|in
argument_list|(
name|map
argument_list|)
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"db_entity"
argument_list|,
name|de0
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|map
operator|.
name|addDbEntity
argument_list|(
name|de0
argument_list|)
expr_stmt|;
name|DbEntity
name|de1
init|=
operator|new
name|DbEntity
argument_list|()
decl_stmt|;
name|de1
operator|.
name|setName
argument_list|(
name|NameBuilder
operator|.
name|builder
argument_list|(
name|de1
argument_list|)
operator|.
name|in
argument_list|(
name|map
argument_list|)
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"db_entity1"
argument_list|,
name|de1
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|map
operator|.
name|addDbEntity
argument_list|(
name|de1
argument_list|)
expr_stmt|;
name|ObjEntity
name|oe0
init|=
operator|new
name|ObjEntity
argument_list|()
decl_stmt|;
name|oe0
operator|.
name|setName
argument_list|(
name|NameBuilder
operator|.
name|builder
argument_list|(
name|oe0
argument_list|)
operator|.
name|in
argument_list|(
name|map
argument_list|)
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ObjEntity"
argument_list|,
name|oe0
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|map
operator|.
name|addObjEntity
argument_list|(
name|oe0
argument_list|)
expr_stmt|;
name|ObjEntity
name|oe1
init|=
operator|new
name|ObjEntity
argument_list|()
decl_stmt|;
name|oe1
operator|.
name|setName
argument_list|(
name|NameBuilder
operator|.
name|builder
argument_list|(
name|oe1
argument_list|)
operator|.
name|in
argument_list|(
name|map
argument_list|)
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ObjEntity1"
argument_list|,
name|oe1
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|map
operator|.
name|addObjEntity
argument_list|(
name|oe1
argument_list|)
expr_stmt|;
name|ObjEntity
name|oe2
init|=
operator|new
name|ObjEntity
argument_list|()
decl_stmt|;
name|oe2
operator|.
name|setName
argument_list|(
name|NameBuilder
operator|.
name|builder
argument_list|(
name|oe0
argument_list|)
operator|.
name|in
argument_list|(
name|map
argument_list|)
operator|.
name|baseName
argument_list|(
literal|"db_entity"
argument_list|)
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Should not conflict with similarly named DbEntity"
argument_list|,
literal|"Db_entity"
argument_list|,
name|oe2
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|map
operator|.
name|addObjEntity
argument_list|(
name|oe2
argument_list|)
expr_stmt|;
name|Procedure
name|p0
init|=
operator|new
name|Procedure
argument_list|()
decl_stmt|;
name|p0
operator|.
name|setName
argument_list|(
name|NameBuilder
operator|.
name|builder
argument_list|(
name|p0
argument_list|)
operator|.
name|in
argument_list|(
name|map
argument_list|)
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"procedure"
argument_list|,
name|p0
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|map
operator|.
name|addProcedure
argument_list|(
name|p0
argument_list|)
expr_stmt|;
name|Procedure
name|p1
init|=
operator|new
name|Procedure
argument_list|()
decl_stmt|;
name|p1
operator|.
name|setName
argument_list|(
name|NameBuilder
operator|.
name|builder
argument_list|(
name|p1
argument_list|)
operator|.
name|in
argument_list|(
name|map
argument_list|)
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"procedure1"
argument_list|,
name|p1
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|map
operator|.
name|addProcedure
argument_list|(
name|p1
argument_list|)
expr_stmt|;
name|Procedure
name|p2
init|=
operator|new
name|Procedure
argument_list|()
decl_stmt|;
name|p2
operator|.
name|setName
argument_list|(
name|NameBuilder
operator|.
name|builder
argument_list|(
name|p1
argument_list|)
operator|.
name|in
argument_list|(
name|map
argument_list|)
operator|.
name|baseName
argument_list|(
literal|"db_enity"
argument_list|)
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Should not conflict with similarly named DbEntity"
argument_list|,
literal|"db_enity"
argument_list|,
name|p2
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|map
operator|.
name|addProcedure
argument_list|(
name|p2
argument_list|)
expr_stmt|;
name|QueryDescriptor
name|q0
init|=
name|QueryDescriptor
operator|.
name|selectQueryDescriptor
argument_list|()
decl_stmt|;
name|q0
operator|.
name|setName
argument_list|(
name|NameBuilder
operator|.
name|builder
argument_list|(
name|q0
argument_list|)
operator|.
name|in
argument_list|(
name|map
argument_list|)
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"query"
argument_list|,
name|q0
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|map
operator|.
name|addQueryDescriptor
argument_list|(
name|q0
argument_list|)
expr_stmt|;
name|QueryDescriptor
name|q1
init|=
name|QueryDescriptor
operator|.
name|ejbqlQueryDescriptor
argument_list|()
decl_stmt|;
name|q1
operator|.
name|setName
argument_list|(
name|NameBuilder
operator|.
name|builder
argument_list|(
name|q1
argument_list|)
operator|.
name|in
argument_list|(
name|map
argument_list|)
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"query1"
argument_list|,
name|q1
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|map
operator|.
name|addQueryDescriptor
argument_list|(
name|q1
argument_list|)
expr_stmt|;
name|Embeddable
name|e0
init|=
operator|new
name|Embeddable
argument_list|()
decl_stmt|;
name|e0
operator|.
name|setClassName
argument_list|(
literal|"com.foo."
operator|+
name|NameBuilder
operator|.
name|builder
argument_list|(
name|e0
argument_list|)
operator|.
name|in
argument_list|(
name|map
argument_list|)
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"com.foo.Embeddable"
argument_list|,
name|e0
operator|.
name|getClassName
argument_list|()
argument_list|)
expr_stmt|;
name|map
operator|.
name|addEmbeddable
argument_list|(
name|e0
argument_list|)
expr_stmt|;
name|Embeddable
name|e1
init|=
operator|new
name|Embeddable
argument_list|()
decl_stmt|;
name|e1
operator|.
name|setClassName
argument_list|(
literal|"com.foo."
operator|+
name|NameBuilder
operator|.
name|builder
argument_list|(
name|e1
argument_list|)
operator|.
name|in
argument_list|(
name|map
argument_list|)
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"com.foo.Embeddable1"
argument_list|,
name|e1
operator|.
name|getClassName
argument_list|()
argument_list|)
expr_stmt|;
name|map
operator|.
name|addEmbeddable
argument_list|(
name|e1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testName_ObjEntityContext
parameter_list|()
block|{
name|ObjEntity
name|entity
init|=
operator|new
name|ObjEntity
argument_list|()
decl_stmt|;
name|entity
operator|.
name|getCallbackMap
argument_list|()
operator|.
name|getPostAdd
argument_list|()
operator|.
name|addCallbackMethod
argument_list|(
literal|"getMe"
argument_list|)
expr_stmt|;
name|ObjAttribute
name|a0
init|=
operator|new
name|ObjAttribute
argument_list|()
decl_stmt|;
name|String
name|na0
init|=
name|NameBuilder
operator|.
name|builder
argument_list|(
name|a0
argument_list|)
operator|.
name|in
argument_list|(
name|entity
argument_list|)
operator|.
name|name
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"untitledAttr"
argument_list|,
name|na0
argument_list|)
expr_stmt|;
name|a0
operator|.
name|setName
argument_list|(
name|na0
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addAttribute
argument_list|(
name|a0
argument_list|)
expr_stmt|;
name|ObjAttribute
name|a1
init|=
operator|new
name|ObjAttribute
argument_list|()
decl_stmt|;
name|String
name|na1
init|=
name|NameBuilder
operator|.
name|builder
argument_list|(
name|a1
argument_list|)
operator|.
name|in
argument_list|(
name|entity
argument_list|)
operator|.
name|name
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"untitledAttr1"
argument_list|,
name|na1
argument_list|)
expr_stmt|;
name|a1
operator|.
name|setName
argument_list|(
name|na1
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addAttribute
argument_list|(
name|a1
argument_list|)
expr_stmt|;
name|ObjAttribute
name|a2
init|=
operator|new
name|ObjAttribute
argument_list|()
decl_stmt|;
name|String
name|na2
init|=
name|NameBuilder
operator|.
name|builder
argument_list|(
name|a2
argument_list|)
operator|.
name|in
argument_list|(
name|entity
argument_list|)
operator|.
name|baseName
argument_list|(
literal|"me"
argument_list|)
operator|.
name|name
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Conflict with callback method was not detected"
argument_list|,
literal|"me1"
argument_list|,
name|na2
argument_list|)
expr_stmt|;
name|a2
operator|.
name|setName
argument_list|(
name|na2
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addAttribute
argument_list|(
name|a2
argument_list|)
expr_stmt|;
name|ObjRelationship
name|r0
init|=
operator|new
name|ObjRelationship
argument_list|()
decl_stmt|;
name|String
name|nr0
init|=
name|NameBuilder
operator|.
name|builder
argument_list|(
name|r0
argument_list|)
operator|.
name|in
argument_list|(
name|entity
argument_list|)
operator|.
name|name
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"untitledRel"
argument_list|,
name|nr0
argument_list|)
expr_stmt|;
name|r0
operator|.
name|setName
argument_list|(
name|nr0
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addRelationship
argument_list|(
name|r0
argument_list|)
expr_stmt|;
name|ObjRelationship
name|r1
init|=
operator|new
name|ObjRelationship
argument_list|()
decl_stmt|;
name|String
name|nr1
init|=
name|NameBuilder
operator|.
name|builder
argument_list|(
name|r1
argument_list|)
operator|.
name|in
argument_list|(
name|entity
argument_list|)
operator|.
name|name
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"untitledRel1"
argument_list|,
name|nr1
argument_list|)
expr_stmt|;
name|r1
operator|.
name|setName
argument_list|(
name|nr1
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addRelationship
argument_list|(
name|r1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testName_DbEntityContext
parameter_list|()
block|{
name|DbEntity
name|entity
init|=
operator|new
name|DbEntity
argument_list|()
decl_stmt|;
name|DbAttribute
name|a0
init|=
operator|new
name|DbAttribute
argument_list|()
decl_stmt|;
name|String
name|na0
init|=
name|NameBuilder
operator|.
name|builder
argument_list|(
name|a0
argument_list|)
operator|.
name|in
argument_list|(
name|entity
argument_list|)
operator|.
name|name
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"untitledAttr"
argument_list|,
name|na0
argument_list|)
expr_stmt|;
name|a0
operator|.
name|setName
argument_list|(
name|na0
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addAttribute
argument_list|(
name|a0
argument_list|)
expr_stmt|;
name|DbAttribute
name|a1
init|=
operator|new
name|DbAttribute
argument_list|()
decl_stmt|;
name|String
name|na1
init|=
name|NameBuilder
operator|.
name|builder
argument_list|(
name|a1
argument_list|)
operator|.
name|in
argument_list|(
name|entity
argument_list|)
operator|.
name|name
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"untitledAttr1"
argument_list|,
name|na1
argument_list|)
expr_stmt|;
name|a1
operator|.
name|setName
argument_list|(
name|na1
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addAttribute
argument_list|(
name|a1
argument_list|)
expr_stmt|;
name|DbRelationship
name|r0
init|=
operator|new
name|DbRelationship
argument_list|()
decl_stmt|;
name|String
name|nr0
init|=
name|NameBuilder
operator|.
name|builder
argument_list|(
name|r0
argument_list|)
operator|.
name|in
argument_list|(
name|entity
argument_list|)
operator|.
name|name
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"untitledRel"
argument_list|,
name|nr0
argument_list|)
expr_stmt|;
name|r0
operator|.
name|setName
argument_list|(
name|nr0
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addRelationship
argument_list|(
name|r0
argument_list|)
expr_stmt|;
name|DbRelationship
name|r1
init|=
operator|new
name|DbRelationship
argument_list|()
decl_stmt|;
name|String
name|nr1
init|=
name|NameBuilder
operator|.
name|builder
argument_list|(
name|r1
argument_list|)
operator|.
name|in
argument_list|(
name|entity
argument_list|)
operator|.
name|name
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"untitledRel1"
argument_list|,
name|nr1
argument_list|)
expr_stmt|;
name|r1
operator|.
name|setName
argument_list|(
name|nr1
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addRelationship
argument_list|(
name|r1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testName_ProcedureContext
parameter_list|()
block|{
name|Procedure
name|procedure
init|=
operator|new
name|Procedure
argument_list|()
decl_stmt|;
name|ProcedureParameter
name|p0
init|=
operator|new
name|ProcedureParameter
argument_list|()
decl_stmt|;
name|p0
operator|.
name|setName
argument_list|(
name|NameBuilder
operator|.
name|builder
argument_list|(
name|p0
argument_list|)
operator|.
name|in
argument_list|(
name|procedure
argument_list|)
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"UntitledProcedureParameter"
argument_list|,
name|p0
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|procedure
operator|.
name|addCallParameter
argument_list|(
name|p0
argument_list|)
expr_stmt|;
name|ProcedureParameter
name|p1
init|=
operator|new
name|ProcedureParameter
argument_list|()
decl_stmt|;
name|p1
operator|.
name|setName
argument_list|(
name|NameBuilder
operator|.
name|builder
argument_list|(
name|p1
argument_list|)
operator|.
name|in
argument_list|(
name|procedure
argument_list|)
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"UntitledProcedureParameter1"
argument_list|,
name|p1
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|procedure
operator|.
name|addCallParameter
argument_list|(
name|p1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testName_EmbeddableContext
parameter_list|()
block|{
name|Embeddable
name|embeddable
init|=
operator|new
name|Embeddable
argument_list|()
decl_stmt|;
name|EmbeddableAttribute
name|ea0
init|=
operator|new
name|EmbeddableAttribute
argument_list|()
decl_stmt|;
name|ea0
operator|.
name|setName
argument_list|(
name|NameBuilder
operator|.
name|builder
argument_list|(
name|ea0
argument_list|)
operator|.
name|in
argument_list|(
name|embeddable
argument_list|)
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"untitledAttr"
argument_list|,
name|ea0
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|embeddable
operator|.
name|addAttribute
argument_list|(
name|ea0
argument_list|)
expr_stmt|;
name|EmbeddableAttribute
name|ea1
init|=
operator|new
name|EmbeddableAttribute
argument_list|()
decl_stmt|;
name|ea1
operator|.
name|setName
argument_list|(
name|NameBuilder
operator|.
name|builder
argument_list|(
name|ea1
argument_list|)
operator|.
name|in
argument_list|(
name|embeddable
argument_list|)
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"untitledAttr1"
argument_list|,
name|ea1
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|embeddable
operator|.
name|addAttribute
argument_list|(
name|ea1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testName_UncapitalizeAttributeNames
parameter_list|()
throws|throws
name|Exception
block|{
name|ObjEntity
name|entity
init|=
operator|new
name|ObjEntity
argument_list|()
decl_stmt|;
name|ObjAttribute
name|a0
init|=
operator|new
name|ObjAttribute
argument_list|()
decl_stmt|;
name|String
name|na0
init|=
name|NameBuilder
operator|.
name|builder
argument_list|(
name|a0
argument_list|)
operator|.
name|in
argument_list|(
name|entity
argument_list|)
operator|.
name|baseName
argument_list|(
literal|"myName"
argument_list|)
operator|.
name|name
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"myName"
argument_list|,
name|na0
argument_list|)
expr_stmt|;
name|a0
operator|.
name|setName
argument_list|(
name|na0
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addAttribute
argument_list|(
name|a0
argument_list|)
expr_stmt|;
name|ObjAttribute
name|a1
init|=
operator|new
name|ObjAttribute
argument_list|()
decl_stmt|;
name|String
name|na1
init|=
name|NameBuilder
operator|.
name|builder
argument_list|(
name|a1
argument_list|)
operator|.
name|in
argument_list|(
name|entity
argument_list|)
operator|.
name|baseName
argument_list|(
literal|"MyName"
argument_list|)
operator|.
name|name
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"myName1"
argument_list|,
name|na1
argument_list|)
expr_stmt|;
name|a1
operator|.
name|setName
argument_list|(
name|na1
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addAttribute
argument_list|(
name|a1
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testName_Callbacks_ObjEntityContext
parameter_list|()
block|{
name|ObjEntity
name|entity
init|=
operator|new
name|ObjEntity
argument_list|()
decl_stmt|;
name|String
name|c0
init|=
name|NameBuilder
operator|.
name|builderForCallbackMethod
argument_list|(
name|entity
argument_list|)
operator|.
name|name
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"onEvent"
argument_list|,
name|c0
argument_list|)
expr_stmt|;
name|entity
operator|.
name|getCallbackMap
argument_list|()
operator|.
name|getPostAdd
argument_list|()
operator|.
name|addCallbackMethod
argument_list|(
name|c0
argument_list|)
expr_stmt|;
name|String
name|c1
init|=
name|NameBuilder
operator|.
name|builderForCallbackMethod
argument_list|(
name|entity
argument_list|)
operator|.
name|name
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"onEvent1"
argument_list|,
name|c1
argument_list|)
expr_stmt|;
name|entity
operator|.
name|getCallbackMap
argument_list|()
operator|.
name|getPostAdd
argument_list|()
operator|.
name|addCallbackMethod
argument_list|(
name|c1
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addAttribute
argument_list|(
operator|new
name|ObjAttribute
argument_list|(
literal|"untitledAttr"
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|c3
init|=
name|NameBuilder
operator|.
name|builderForCallbackMethod
argument_list|(
name|entity
argument_list|)
operator|.
name|baseName
argument_list|(
literal|"getUntitledAttr"
argument_list|)
operator|.
name|name
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"getUntitledAttr1"
argument_list|,
name|c3
argument_list|)
expr_stmt|;
name|entity
operator|.
name|getCallbackMap
argument_list|()
operator|.
name|getPostAdd
argument_list|()
operator|.
name|addCallbackMethod
argument_list|(
name|c3
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

