begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|merge
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|merge
operator|.
name|builders
operator|.
name|DbEntityBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|merge
operator|.
name|factory
operator|.
name|HSQLMergerTokenFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DataMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|merge
operator|.
name|builders
operator|.
name|ObjectMother
operator|.
name|dataMap
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|merge
operator|.
name|builders
operator|.
name|ObjectMother
operator|.
name|dbAttr
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|merge
operator|.
name|builders
operator|.
name|ObjectMother
operator|.
name|dbEntity
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_class
specifier|public
class|class
name|DbMergerTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testEmptyDataMap
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|dbMerger
argument_list|()
operator|.
name|createMergeTokens
argument_list|(
operator|new
name|ArrayList
argument_list|<
name|DbEntity
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|,
operator|new
name|ArrayList
argument_list|<
name|DbEntity
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAddTable
parameter_list|()
throws|throws
name|Exception
block|{
name|DbEntityBuilder
name|dbEntity
init|=
name|dbEntity
argument_list|(
literal|"table1"
argument_list|)
operator|.
name|attributes
argument_list|(
name|dbAttr
argument_list|(
literal|"attr01"
argument_list|)
operator|.
name|typeInt
argument_list|()
argument_list|)
decl_stmt|;
name|DataMap
name|existing
init|=
name|dataMap
argument_list|()
operator|.
name|with
argument_list|(
name|dbEntity
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|MergerToken
argument_list|>
name|tokens
init|=
name|dbMerger
argument_list|()
operator|.
name|createMergeTokens
argument_list|(
name|existing
operator|.
name|getDbEntities
argument_list|()
argument_list|,
operator|new
name|ArrayList
argument_list|<
name|DbEntity
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|tokens
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|factory
argument_list|()
operator|.
name|createCreateTableToDb
argument_list|(
name|dbEntity
operator|.
name|build
argument_list|()
argument_list|)
operator|.
name|getTokenValue
argument_list|()
argument_list|,
name|tokens
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTokenValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRemoveTable
parameter_list|()
throws|throws
name|Exception
block|{
name|DataMap
name|db
init|=
name|dataMap
argument_list|()
operator|.
name|with
argument_list|(
name|dbEntity
argument_list|(
literal|"table1"
argument_list|)
operator|.
name|attributes
argument_list|(
name|dbAttr
argument_list|(
literal|"attr01"
argument_list|)
operator|.
name|typeInt
argument_list|()
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|MergerToken
argument_list|>
name|tokens
init|=
name|dbMerger
argument_list|()
operator|.
name|createMergeTokens
argument_list|(
operator|new
name|ArrayList
argument_list|<
name|DbEntity
argument_list|>
argument_list|(
literal|0
argument_list|)
argument_list|,
name|db
operator|.
name|getDbEntities
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|tokens
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|factory
argument_list|()
operator|.
name|createDropTableToDb
argument_list|(
name|db
operator|.
name|getDbEntity
argument_list|(
literal|"table1"
argument_list|)
argument_list|)
operator|.
name|getTokenValue
argument_list|()
argument_list|,
name|tokens
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTokenValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAddColumn
parameter_list|()
throws|throws
name|Exception
block|{
name|DataMap
name|existing
init|=
name|dataMap
argument_list|()
operator|.
name|with
argument_list|(
name|dbEntity
argument_list|(
literal|"table1"
argument_list|)
operator|.
name|attributes
argument_list|(
name|dbAttr
argument_list|(
literal|"attr01"
argument_list|)
operator|.
name|typeInt
argument_list|()
argument_list|,
name|dbAttr
argument_list|(
literal|"attr02"
argument_list|)
operator|.
name|typeInt
argument_list|()
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|DataMap
name|db
init|=
name|dataMap
argument_list|()
operator|.
name|with
argument_list|(
name|dbEntity
argument_list|(
literal|"table1"
argument_list|)
operator|.
name|attributes
argument_list|(
name|dbAttr
argument_list|(
literal|"attr01"
argument_list|)
operator|.
name|typeInt
argument_list|()
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|MergerToken
argument_list|>
name|tokens
init|=
name|dbMerger
argument_list|()
operator|.
name|createMergeTokens
argument_list|(
name|existing
operator|.
name|getDbEntities
argument_list|()
argument_list|,
name|db
operator|.
name|getDbEntities
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|tokens
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|DbEntity
name|entity
init|=
name|existing
operator|.
name|getDbEntity
argument_list|(
literal|"table1"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|factory
argument_list|()
operator|.
name|createAddColumnToDb
argument_list|(
name|entity
argument_list|,
name|entity
operator|.
name|getAttribute
argument_list|(
literal|"attr02"
argument_list|)
argument_list|)
operator|.
name|getTokenValue
argument_list|()
argument_list|,
name|tokens
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTokenValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAddRelationship
parameter_list|()
throws|throws
name|Exception
block|{
name|DataMap
name|existing
init|=
name|dataMap
argument_list|()
operator|.
name|with
argument_list|(
name|dbEntity
argument_list|(
literal|"table1"
argument_list|)
operator|.
name|attributes
argument_list|(
name|dbAttr
argument_list|(
literal|"attr01"
argument_list|)
operator|.
name|typeInt
argument_list|()
argument_list|,
name|dbAttr
argument_list|(
literal|"attr02"
argument_list|)
operator|.
name|typeInt
argument_list|()
argument_list|)
argument_list|,
name|dbEntity
argument_list|(
literal|"table2"
argument_list|)
operator|.
name|attributes
argument_list|(
name|dbAttr
argument_list|(
literal|"attr01"
argument_list|)
operator|.
name|typeInt
argument_list|()
operator|.
name|primaryKey
argument_list|()
argument_list|,
name|dbAttr
argument_list|(
literal|"attr02"
argument_list|)
operator|.
name|typeInt
argument_list|()
argument_list|)
argument_list|)
operator|.
name|join
argument_list|(
literal|"rel"
argument_list|,
literal|"table1.attr01"
argument_list|,
literal|"table2.attr01"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|DataMap
name|db
init|=
name|dataMap
argument_list|()
operator|.
name|with
argument_list|(
name|dbEntity
argument_list|(
literal|"table1"
argument_list|)
operator|.
name|attributes
argument_list|(
name|dbAttr
argument_list|(
literal|"attr01"
argument_list|)
operator|.
name|typeInt
argument_list|()
argument_list|,
name|dbAttr
argument_list|(
literal|"attr02"
argument_list|)
operator|.
name|typeInt
argument_list|()
argument_list|)
argument_list|,
name|dbEntity
argument_list|(
literal|"table2"
argument_list|)
operator|.
name|attributes
argument_list|(
name|dbAttr
argument_list|(
literal|"attr01"
argument_list|)
operator|.
name|typeInt
argument_list|()
operator|.
name|primaryKey
argument_list|()
argument_list|,
name|dbAttr
argument_list|(
literal|"attr02"
argument_list|)
operator|.
name|typeInt
argument_list|()
argument_list|)
argument_list|)
comment|//.join("table1.attr01", "table2.attr01")
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|MergerToken
argument_list|>
name|tokens
init|=
name|dbMerger
argument_list|()
operator|.
name|createMergeTokens
argument_list|(
name|existing
operator|.
name|getDbEntities
argument_list|()
argument_list|,
name|db
operator|.
name|getDbEntities
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|tokens
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|DbEntity
name|entity
init|=
name|existing
operator|.
name|getDbEntity
argument_list|(
literal|"table1"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|factory
argument_list|()
operator|.
name|createAddRelationshipToDb
argument_list|(
name|entity
argument_list|,
name|entity
operator|.
name|getRelationship
argument_list|(
literal|"rel"
argument_list|)
argument_list|)
operator|.
name|getTokenValue
argument_list|()
argument_list|,
name|tokens
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTokenValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testAddRelationship1
parameter_list|()
throws|throws
name|Exception
block|{
name|DataMap
name|existing
init|=
name|dataMap
argument_list|()
operator|.
name|with
argument_list|(
name|dbEntity
argument_list|(
literal|"table1"
argument_list|)
operator|.
name|attributes
argument_list|(
name|dbAttr
argument_list|(
literal|"attr01"
argument_list|)
operator|.
name|typeInt
argument_list|()
argument_list|,
name|dbAttr
argument_list|(
literal|"attr02"
argument_list|)
operator|.
name|typeInt
argument_list|()
argument_list|)
argument_list|,
name|dbEntity
argument_list|(
literal|"table2"
argument_list|)
operator|.
name|attributes
argument_list|(
name|dbAttr
argument_list|(
literal|"attr01"
argument_list|)
operator|.
name|typeInt
argument_list|()
operator|.
name|primaryKey
argument_list|()
argument_list|,
name|dbAttr
argument_list|(
literal|"attr02"
argument_list|)
operator|.
name|typeInt
argument_list|()
operator|.
name|primaryKey
argument_list|()
argument_list|,
name|dbAttr
argument_list|(
literal|"attr03"
argument_list|)
operator|.
name|typeInt
argument_list|()
operator|.
name|primaryKey
argument_list|()
argument_list|)
argument_list|)
operator|.
name|join
argument_list|(
literal|"rel"
argument_list|,
literal|"table1.attr01"
argument_list|,
literal|"table2.attr01"
argument_list|)
operator|.
name|join
argument_list|(
literal|"rel1"
argument_list|,
literal|"table1.attr01"
argument_list|,
literal|"table2.attr03"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|DataMap
name|db
init|=
name|dataMap
argument_list|()
operator|.
name|with
argument_list|(
name|dbEntity
argument_list|(
literal|"table1"
argument_list|)
operator|.
name|attributes
argument_list|(
name|dbAttr
argument_list|(
literal|"attr01"
argument_list|)
operator|.
name|typeInt
argument_list|()
argument_list|,
name|dbAttr
argument_list|(
literal|"attr02"
argument_list|)
operator|.
name|typeInt
argument_list|()
argument_list|)
argument_list|,
name|dbEntity
argument_list|(
literal|"table2"
argument_list|)
operator|.
name|attributes
argument_list|(
name|dbAttr
argument_list|(
literal|"attr01"
argument_list|)
operator|.
name|typeInt
argument_list|()
operator|.
name|primaryKey
argument_list|()
argument_list|,
name|dbAttr
argument_list|(
literal|"attr02"
argument_list|)
operator|.
name|typeInt
argument_list|()
operator|.
name|primaryKey
argument_list|()
argument_list|,
name|dbAttr
argument_list|(
literal|"attr03"
argument_list|)
operator|.
name|typeInt
argument_list|()
operator|.
name|primaryKey
argument_list|()
argument_list|)
argument_list|)
operator|.
name|join
argument_list|(
literal|"rel"
argument_list|,
literal|"table1.attr01"
argument_list|,
literal|"table2.attr02"
argument_list|)
operator|.
name|join
argument_list|(
literal|"rel1"
argument_list|,
literal|"table1.attr01"
argument_list|,
literal|"table2.attr03"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|MergerToken
argument_list|>
name|tokens
init|=
name|dbMerger
argument_list|()
operator|.
name|createMergeTokens
argument_list|(
name|existing
operator|.
name|getDbEntities
argument_list|()
argument_list|,
name|db
operator|.
name|getDbEntities
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|tokens
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|DbEntity
name|entity
init|=
name|existing
operator|.
name|getDbEntity
argument_list|(
literal|"table1"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|factory
argument_list|()
operator|.
name|createDropRelationshipToDb
argument_list|(
name|entity
argument_list|,
name|entity
operator|.
name|getRelationship
argument_list|(
literal|"rel"
argument_list|)
argument_list|)
operator|.
name|getTokenValue
argument_list|()
argument_list|,
name|tokens
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTokenValue
argument_list|()
argument_list|)
expr_stmt|;
name|entity
operator|=
name|db
operator|.
name|getDbEntity
argument_list|(
literal|"table1"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|factory
argument_list|()
operator|.
name|createAddRelationshipToDb
argument_list|(
name|entity
argument_list|,
name|entity
operator|.
name|getRelationship
argument_list|(
literal|"rel"
argument_list|)
argument_list|)
operator|.
name|getTokenValue
argument_list|()
argument_list|,
name|tokens
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTokenValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRemoveRelationship
parameter_list|()
throws|throws
name|Exception
block|{
name|DataMap
name|existing
init|=
name|dataMap
argument_list|()
operator|.
name|with
argument_list|(
name|dbEntity
argument_list|(
literal|"table1"
argument_list|)
operator|.
name|attributes
argument_list|(
name|dbAttr
argument_list|(
literal|"attr01"
argument_list|)
operator|.
name|typeInt
argument_list|()
argument_list|,
name|dbAttr
argument_list|(
literal|"attr02"
argument_list|)
operator|.
name|typeInt
argument_list|()
argument_list|)
argument_list|,
name|dbEntity
argument_list|(
literal|"table2"
argument_list|)
operator|.
name|attributes
argument_list|(
name|dbAttr
argument_list|(
literal|"attr01"
argument_list|)
operator|.
name|typeInt
argument_list|()
operator|.
name|primaryKey
argument_list|()
argument_list|,
name|dbAttr
argument_list|(
literal|"attr02"
argument_list|)
operator|.
name|typeInt
argument_list|()
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|DataMap
name|db
init|=
name|dataMap
argument_list|()
operator|.
name|with
argument_list|(
name|dbEntity
argument_list|(
literal|"table1"
argument_list|)
operator|.
name|attributes
argument_list|(
name|dbAttr
argument_list|(
literal|"attr01"
argument_list|)
operator|.
name|typeInt
argument_list|()
argument_list|,
name|dbAttr
argument_list|(
literal|"attr02"
argument_list|)
operator|.
name|typeInt
argument_list|()
argument_list|)
argument_list|,
name|dbEntity
argument_list|(
literal|"table2"
argument_list|)
operator|.
name|attributes
argument_list|(
name|dbAttr
argument_list|(
literal|"attr01"
argument_list|)
operator|.
name|typeInt
argument_list|()
operator|.
name|primaryKey
argument_list|()
argument_list|,
name|dbAttr
argument_list|(
literal|"attr02"
argument_list|)
operator|.
name|typeInt
argument_list|()
argument_list|)
argument_list|)
operator|.
name|join
argument_list|(
literal|"rel"
argument_list|,
literal|"table1.attr01"
argument_list|,
literal|"table2.attr01"
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|MergerToken
argument_list|>
name|tokens
init|=
name|dbMerger
argument_list|()
operator|.
name|createMergeTokens
argument_list|(
name|existing
operator|.
name|getDbEntities
argument_list|()
argument_list|,
name|db
operator|.
name|getDbEntities
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|tokens
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|DbEntity
name|entity
init|=
name|db
operator|.
name|getDbEntity
argument_list|(
literal|"table1"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|factory
argument_list|()
operator|.
name|createDropRelationshipToDb
argument_list|(
name|entity
argument_list|,
name|entity
operator|.
name|getRelationship
argument_list|(
literal|"rel"
argument_list|)
argument_list|)
operator|.
name|getTokenValue
argument_list|()
argument_list|,
name|tokens
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTokenValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testRemoveColumn
parameter_list|()
throws|throws
name|Exception
block|{
name|DataMap
name|existing
init|=
name|dataMap
argument_list|()
operator|.
name|with
argument_list|(
name|dbEntity
argument_list|(
literal|"table1"
argument_list|)
operator|.
name|attributes
argument_list|(
name|dbAttr
argument_list|(
literal|"attr01"
argument_list|)
operator|.
name|typeInt
argument_list|()
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|DataMap
name|db
init|=
name|dataMap
argument_list|()
operator|.
name|with
argument_list|(
name|dbEntity
argument_list|(
literal|"table1"
argument_list|)
operator|.
name|attributes
argument_list|(
name|dbAttr
argument_list|(
literal|"attr01"
argument_list|)
operator|.
name|typeInt
argument_list|()
argument_list|,
name|dbAttr
argument_list|(
literal|"attr02"
argument_list|)
operator|.
name|typeInt
argument_list|()
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|MergerToken
argument_list|>
name|tokens
init|=
name|dbMerger
argument_list|()
operator|.
name|createMergeTokens
argument_list|(
name|existing
operator|.
name|getDbEntities
argument_list|()
argument_list|,
name|db
operator|.
name|getDbEntities
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|tokens
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|DbEntity
name|entity
init|=
name|db
operator|.
name|getDbEntity
argument_list|(
literal|"table1"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|factory
argument_list|()
operator|.
name|createDropColumnToModel
argument_list|(
name|entity
argument_list|,
name|entity
operator|.
name|getAttribute
argument_list|(
literal|"attr02"
argument_list|)
argument_list|)
operator|.
name|getTokenValue
argument_list|()
argument_list|,
name|tokens
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTokenValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testNoChanges
parameter_list|()
throws|throws
name|Exception
block|{
name|DataMap
name|dataMap1
init|=
name|dataMap
argument_list|()
operator|.
name|with
argument_list|(
name|dbEntity
argument_list|(
literal|"table1"
argument_list|)
operator|.
name|attributes
argument_list|(
name|dbAttr
argument_list|(
literal|"attr01"
argument_list|)
operator|.
name|typeInt
argument_list|()
argument_list|,
name|dbAttr
argument_list|(
literal|"attr02"
argument_list|)
operator|.
name|typeInt
argument_list|()
argument_list|,
name|dbAttr
argument_list|(
literal|"attr03"
argument_list|)
operator|.
name|typeInt
argument_list|()
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|DataMap
name|dataMap2
init|=
name|dataMap
argument_list|()
operator|.
name|with
argument_list|(
name|dbEntity
argument_list|(
literal|"table1"
argument_list|)
operator|.
name|attributes
argument_list|(
name|dbAttr
argument_list|(
literal|"attr01"
argument_list|)
operator|.
name|typeInt
argument_list|()
argument_list|,
name|dbAttr
argument_list|(
literal|"attr02"
argument_list|)
operator|.
name|typeInt
argument_list|()
argument_list|,
name|dbAttr
argument_list|(
literal|"attr03"
argument_list|)
operator|.
name|typeInt
argument_list|()
argument_list|)
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|dbMerger
argument_list|()
operator|.
name|createMergeTokens
argument_list|(
name|dataMap1
operator|.
name|getDbEntities
argument_list|()
argument_list|,
name|dataMap2
operator|.
name|getDbEntities
argument_list|()
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|DbMerger
name|dbMerger
parameter_list|()
block|{
return|return
name|DbMerger
operator|.
name|build
argument_list|(
name|factory
argument_list|()
argument_list|)
return|;
block|}
specifier|private
name|HSQLMergerTokenFactory
name|factory
parameter_list|()
block|{
return|return
operator|new
name|HSQLMergerTokenFactory
argument_list|()
return|;
block|}
block|}
end_class

end_unit

