begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|reverse
operator|.
name|dbload
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|server
operator|.
name|ServerRuntime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|DbAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|naming
operator|.
name|DefaultObjectNameGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|naming
operator|.
name|NoStemStemmer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DataMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbRelationship
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|UnitDbAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|server
operator|.
name|CayenneProjects
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|server
operator|.
name|ServerCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|server
operator|.
name|ServerCaseDataSourceFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|server
operator|.
name|UseServerRuntime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Connection
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_comment
comment|/**  * All tests have been moved to corresponding loaders tests.  */
end_comment

begin_class
annotation|@
name|UseServerRuntime
argument_list|(
name|CayenneProjects
operator|.
name|TESTMAP_PROJECT
argument_list|)
specifier|public
class|class
name|DbLoaderIT
extends|extends
name|ServerCase
block|{
specifier|private
specifier|static
specifier|final
name|DbLoaderConfiguration
name|CONFIG
init|=
operator|new
name|DbLoaderConfiguration
argument_list|()
decl_stmt|;
annotation|@
name|Inject
specifier|private
name|ServerRuntime
name|runtime
decl_stmt|;
annotation|@
name|Inject
specifier|private
name|DbAdapter
name|adapter
decl_stmt|;
annotation|@
name|Inject
specifier|private
name|ServerCaseDataSourceFactory
name|dataSourceFactory
decl_stmt|;
annotation|@
name|Inject
specifier|private
name|UnitDbAdapter
name|accessStackAdapter
decl_stmt|;
specifier|private
name|Connection
name|connection
decl_stmt|;
comment|/**      * Test that parts of loader are in place      */
annotation|@
name|Test
specifier|public
name|void
name|testSimpleLoad
parameter_list|()
throws|throws
name|Exception
block|{
name|DbLoader
name|loader
init|=
name|createDbLoader
argument_list|(
literal|true
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|DataMap
name|loaded
init|=
name|loader
operator|.
name|load
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|loaded
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"__generated_by_dbloader__"
argument_list|,
name|loaded
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
comment|// DbEntity
name|DbEntity
name|artist
init|=
name|loaded
operator|.
name|getDbEntity
argument_list|(
literal|"ARTIST"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|artist
argument_list|)
expr_stmt|;
comment|// DbAttribute
name|DbAttribute
name|id
init|=
name|artist
operator|.
name|getAttribute
argument_list|(
literal|"ARTIST_ID"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|id
operator|.
name|isMandatory
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|id
operator|.
name|isPrimaryKey
argument_list|()
argument_list|)
expr_stmt|;
name|DbAttribute
name|name
init|=
name|artist
operator|.
name|getAttribute
argument_list|(
literal|"ARTIST_NAME"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|name
operator|.
name|isMandatory
argument_list|()
argument_list|)
expr_stmt|;
name|DbAttribute
name|date
init|=
name|artist
operator|.
name|getAttribute
argument_list|(
literal|"DATE_OF_BIRTH"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|date
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|date
operator|.
name|isMandatory
argument_list|()
argument_list|)
expr_stmt|;
comment|// DbRelationship
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|artist
operator|.
name|getRelationships
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|DbRelationship
name|exhibits
init|=
name|artist
operator|.
name|getRelationship
argument_list|(
literal|"artistExhibits"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|exhibits
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ARTIST_EXHIBIT"
argument_list|,
name|exhibits
operator|.
name|getTargetEntityName
argument_list|()
argument_list|)
expr_stmt|;
name|DbEntity
name|target
init|=
name|exhibits
operator|.
name|getTargetEntity
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|target
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Before
specifier|public
name|void
name|before
parameter_list|()
throws|throws
name|Exception
block|{
name|this
operator|.
name|connection
operator|=
name|dataSourceFactory
operator|.
name|getSharedDataSource
argument_list|()
operator|.
name|getConnection
argument_list|()
expr_stmt|;
block|}
specifier|private
name|DbLoader
name|createDbLoader
parameter_list|(
name|boolean
name|meaningfulPK
parameter_list|,
name|boolean
name|meaningfulFK
parameter_list|)
block|{
return|return
operator|new
name|DbLoader
argument_list|(
name|adapter
argument_list|,
name|connection
argument_list|,
name|CONFIG
argument_list|,
literal|null
argument_list|,
operator|new
name|DefaultObjectNameGenerator
argument_list|(
name|NoStemStemmer
operator|.
name|getInstance
argument_list|()
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|After
specifier|public
name|void
name|after
parameter_list|()
throws|throws
name|Exception
block|{
name|connection
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

