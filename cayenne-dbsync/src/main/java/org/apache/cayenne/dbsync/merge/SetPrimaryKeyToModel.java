begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|merge
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|merge
operator|.
name|factory
operator|.
name|MergerTokenFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|event
operator|.
name|AttributeEvent
import|;
end_import

begin_class
specifier|public
class|class
name|SetPrimaryKeyToModel
extends|extends
name|AbstractToModelToken
operator|.
name|Entity
block|{
specifier|private
name|Collection
argument_list|<
name|DbAttribute
argument_list|>
name|primaryKeyOriginal
decl_stmt|;
specifier|private
name|Collection
argument_list|<
name|DbAttribute
argument_list|>
name|primaryKeyNew
decl_stmt|;
specifier|private
name|String
name|detectedPrimaryKeyName
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|primaryKeyNewAttributeNames
init|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|SetPrimaryKeyToModel
parameter_list|(
name|DbEntity
name|entity
parameter_list|,
name|Collection
argument_list|<
name|DbAttribute
argument_list|>
name|primaryKeyOriginal
parameter_list|,
name|Collection
argument_list|<
name|DbAttribute
argument_list|>
name|primaryKeyNew
parameter_list|,
name|String
name|detectedPrimaryKeyName
parameter_list|)
block|{
name|super
argument_list|(
literal|"Set Primary Key"
argument_list|,
name|entity
argument_list|)
expr_stmt|;
name|this
operator|.
name|primaryKeyOriginal
operator|=
name|primaryKeyOriginal
expr_stmt|;
name|this
operator|.
name|primaryKeyNew
operator|=
name|primaryKeyNew
expr_stmt|;
name|this
operator|.
name|detectedPrimaryKeyName
operator|=
name|detectedPrimaryKeyName
expr_stmt|;
for|for
control|(
name|DbAttribute
name|attr
range|:
name|primaryKeyNew
control|)
block|{
name|primaryKeyNewAttributeNames
operator|.
name|add
argument_list|(
name|attr
operator|.
name|getName
argument_list|()
operator|.
name|toUpperCase
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|MergerToken
name|createReverse
parameter_list|(
name|MergerTokenFactory
name|factory
parameter_list|)
block|{
return|return
name|factory
operator|.
name|createSetPrimaryKeyToDb
argument_list|(
name|getEntity
argument_list|()
argument_list|,
name|primaryKeyNew
argument_list|,
name|primaryKeyOriginal
argument_list|,
name|detectedPrimaryKeyName
argument_list|)
return|;
block|}
specifier|public
name|void
name|execute
parameter_list|(
name|MergerContext
name|mergerContext
parameter_list|)
block|{
name|DbEntity
name|e
init|=
name|getEntity
argument_list|()
decl_stmt|;
for|for
control|(
name|DbAttribute
name|attr
range|:
name|e
operator|.
name|getAttributes
argument_list|()
control|)
block|{
name|boolean
name|wasPrimaryKey
init|=
name|attr
operator|.
name|isPrimaryKey
argument_list|()
decl_stmt|;
name|boolean
name|willBePrimaryKey
init|=
name|primaryKeyNewAttributeNames
operator|.
name|contains
argument_list|(
name|attr
operator|.
name|getName
argument_list|()
operator|.
name|toUpperCase
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|wasPrimaryKey
operator|!=
name|willBePrimaryKey
condition|)
block|{
name|attr
operator|.
name|setPrimaryKey
argument_list|(
name|willBePrimaryKey
argument_list|)
expr_stmt|;
name|e
operator|.
name|dbAttributeChanged
argument_list|(
operator|new
name|AttributeEvent
argument_list|(
name|this
argument_list|,
name|attr
argument_list|,
name|e
argument_list|)
argument_list|)
expr_stmt|;
name|mergerContext
operator|.
name|getModelMergeDelegate
argument_list|()
operator|.
name|dbAttributeModified
argument_list|(
name|attr
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

