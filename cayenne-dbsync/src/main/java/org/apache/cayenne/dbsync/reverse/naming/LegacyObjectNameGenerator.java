begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|reverse
operator|.
name|naming
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|reverse
operator|.
name|db
operator|.
name|ExportedKey
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbRelationship
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|util
operator|.
name|Util
import|;
end_import

begin_comment
comment|/**  * BasicNamingStrategy is an naming strategy that creates names in Cayenne's  * old-fashioned manner, i.e. the same way Cayenne did before 3.0  *  * @since 4.0  */
end_comment

begin_class
specifier|public
class|class
name|LegacyObjectNameGenerator
implements|implements
name|ObjectNameGenerator
block|{
specifier|public
name|String
name|createDbRelationshipName
parameter_list|(
name|ExportedKey
name|key
parameter_list|,
name|boolean
name|toMany
parameter_list|)
block|{
name|String
name|uglyName
init|=
operator|(
name|toMany
operator|)
condition|?
name|key
operator|.
name|getFKTableName
argument_list|()
operator|+
literal|"_ARRAY"
else|:
literal|"to_"
operator|+
name|key
operator|.
name|getPKTableName
argument_list|()
decl_stmt|;
return|return
name|Util
operator|.
name|underscoredToJava
argument_list|(
name|uglyName
argument_list|,
literal|false
argument_list|)
return|;
block|}
specifier|public
name|String
name|createObjEntityName
parameter_list|(
name|DbEntity
name|dbEntity
parameter_list|)
block|{
return|return
name|Util
operator|.
name|underscoredToJava
argument_list|(
name|dbEntity
operator|.
name|getName
argument_list|()
argument_list|,
literal|true
argument_list|)
return|;
block|}
specifier|public
name|String
name|createObjAttributeName
parameter_list|(
name|DbAttribute
name|attr
parameter_list|)
block|{
return|return
name|Util
operator|.
name|underscoredToJava
argument_list|(
name|attr
operator|.
name|getName
argument_list|()
argument_list|,
literal|false
argument_list|)
return|;
block|}
specifier|public
name|String
name|createObjRelationshipName
parameter_list|(
name|DbRelationship
name|dbRel
parameter_list|)
block|{
return|return
name|Util
operator|.
name|underscoredToJava
argument_list|(
name|dbRel
operator|.
name|getName
argument_list|()
argument_list|,
literal|false
argument_list|)
return|;
block|}
block|}
end_class

end_unit

