begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|merge
operator|.
name|factory
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|DbAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|merge
operator|.
name|token
operator|.
name|MergerToken
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|merge
operator|.
name|token
operator|.
name|db
operator|.
name|CreateTableToDb
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|merge
operator|.
name|token
operator|.
name|db
operator|.
name|DropRelationshipToDb
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|merge
operator|.
name|token
operator|.
name|db
operator|.
name|SetAllowNullToDb
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|merge
operator|.
name|token
operator|.
name|db
operator|.
name|SetColumnTypeToDb
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|merge
operator|.
name|token
operator|.
name|db
operator|.
name|SetNotNullToDb
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbJoin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbRelationship
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_class
specifier|public
class|class
name|OpenBaseMergerTokenFactory
extends|extends
name|DefaultMergerTokenFactory
block|{
annotation|@
name|Override
specifier|public
name|MergerToken
name|createCreateTableToDb
parameter_list|(
name|DbEntity
name|entity
parameter_list|)
block|{
return|return
operator|new
name|CreateTableToDb
argument_list|(
name|entity
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|createSql
parameter_list|(
name|DbAdapter
name|adapter
parameter_list|)
block|{
name|List
argument_list|<
name|String
argument_list|>
name|sqls
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
comment|// create table first as OpenBase adapter created primary key in its
comment|// getPkGenerator().createAutoPkStatements
name|sqls
operator|.
name|add
argument_list|(
name|adapter
operator|.
name|createTable
argument_list|(
name|getEntity
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|sqls
operator|.
name|addAll
argument_list|(
name|adapter
operator|.
name|getPkGenerator
argument_list|()
operator|.
name|createAutoPkStatements
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|getEntity
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|sqls
return|;
block|}
block|}
return|;
block|}
annotation|@
name|Override
specifier|public
name|MergerToken
name|createDropRelationshipToDb
parameter_list|(
specifier|final
name|DbEntity
name|entity
parameter_list|,
specifier|final
name|DbRelationship
name|rel
parameter_list|)
block|{
return|return
operator|new
name|DropRelationshipToDb
argument_list|(
name|entity
argument_list|,
name|rel
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|createSql
parameter_list|(
name|DbAdapter
name|adapter
parameter_list|)
block|{
comment|// FK_NAME form jdbc metadata seem to be wrong. It contain a column name
comment|// and not the 'relationshipName'
comment|// TODO: tell openbase developer mail list
name|DbEntity
name|source
init|=
name|getEntity
argument_list|()
decl_stmt|;
name|DbEntity
name|dest
init|=
name|rel
operator|.
name|getTargetEntity
argument_list|()
decl_stmt|;
comment|// only use the first. See adapter
comment|// TODO: can we be sure this is the first and same as used by the adapter?
name|DbJoin
name|join
init|=
name|rel
operator|.
name|getJoins
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
comment|// see comment in adapter for why source and dest is switched around..
return|return
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"delete from _SYS_RELATIONSHIP where "
operator|+
literal|" source_table = '"
operator|+
name|dest
operator|.
name|getFullyQualifiedName
argument_list|()
operator|+
literal|"'"
operator|+
literal|" and source_column = '"
operator|+
name|join
operator|.
name|getTargetName
argument_list|()
operator|+
literal|"'"
operator|+
literal|" and dest_table = '"
operator|+
name|source
operator|.
name|getFullyQualifiedName
argument_list|()
operator|+
literal|"'"
operator|+
literal|" and dest_column = '"
operator|+
name|join
operator|.
name|getSourceName
argument_list|()
operator|+
literal|"'"
argument_list|)
return|;
block|}
block|}
return|;
block|}
annotation|@
name|Override
specifier|public
name|MergerToken
name|createSetColumnTypeToDb
parameter_list|(
specifier|final
name|DbEntity
name|entity
parameter_list|,
specifier|final
name|DbAttribute
name|columnOriginal
parameter_list|,
specifier|final
name|DbAttribute
name|columnNew
parameter_list|)
block|{
return|return
operator|new
name|SetColumnTypeToDb
argument_list|(
name|entity
argument_list|,
name|columnOriginal
argument_list|,
name|columnNew
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|createSql
parameter_list|(
name|DbAdapter
name|adapter
parameter_list|)
block|{
name|List
argument_list|<
name|String
argument_list|>
name|sqls
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
if|if
condition|(
name|columnOriginal
operator|.
name|getMaxLength
argument_list|()
operator|!=
name|columnNew
operator|.
name|getMaxLength
argument_list|()
condition|)
block|{
name|sqls
operator|.
name|add
argument_list|(
literal|"ALTER TABLE "
operator|+
name|entity
operator|.
name|getFullyQualifiedName
argument_list|()
operator|+
literal|" COLUMN "
operator|+
name|columnNew
operator|.
name|getName
argument_list|()
operator|+
literal|" SET LENGTH "
operator|+
name|columnNew
operator|.
name|getMaxLength
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|sqls
return|;
block|}
block|}
return|;
block|}
annotation|@
name|Override
specifier|public
name|MergerToken
name|createSetNotNullToDb
parameter_list|(
name|DbEntity
name|entity
parameter_list|,
name|DbAttribute
name|column
parameter_list|)
block|{
return|return
operator|new
name|SetNotNullToDb
argument_list|(
name|entity
argument_list|,
name|column
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|createSql
parameter_list|(
name|DbAdapter
name|adapter
parameter_list|)
block|{
return|return
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"ALTER TABLE "
operator|+
name|getEntity
argument_list|()
operator|.
name|getFullyQualifiedName
argument_list|()
operator|+
literal|" COLUMN "
operator|+
name|getColumn
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|" SET NOT NULL"
argument_list|)
return|;
block|}
block|}
return|;
block|}
annotation|@
name|Override
specifier|public
name|MergerToken
name|createSetAllowNullToDb
parameter_list|(
name|DbEntity
name|entity
parameter_list|,
name|DbAttribute
name|column
parameter_list|)
block|{
return|return
operator|new
name|SetAllowNullToDb
argument_list|(
name|entity
argument_list|,
name|column
argument_list|)
block|{
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|String
argument_list|>
name|createSql
parameter_list|(
name|DbAdapter
name|adapter
parameter_list|)
block|{
return|return
name|Collections
operator|.
name|singletonList
argument_list|(
literal|"ALTER TABLE "
operator|+
name|getEntity
argument_list|()
operator|.
name|getFullyQualifiedName
argument_list|()
operator|+
literal|" COLUMN "
operator|+
name|getColumn
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|" SET NULL"
argument_list|)
return|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

