begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|merge
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|merge
operator|.
name|factory
operator|.
name|MergerTokenFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|merge
operator|.
name|token
operator|.
name|MergerToken
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DataMap
import|;
end_import

begin_class
class|class
name|ChainMerger
parameter_list|<
name|T
parameter_list|,
name|M
parameter_list|>
extends|extends
name|AbstractMerger
argument_list|<
name|T
argument_list|,
name|M
argument_list|>
block|{
specifier|private
specifier|final
name|AbstractMerger
argument_list|<
name|T
argument_list|,
name|M
argument_list|>
name|merger
decl_stmt|;
specifier|private
specifier|final
name|AbstractMerger
argument_list|<
name|?
argument_list|,
name|T
argument_list|>
name|parentMerger
decl_stmt|;
name|ChainMerger
parameter_list|(
name|MergerTokenFactory
name|tokenFactory
parameter_list|,
name|AbstractMerger
argument_list|<
name|T
argument_list|,
name|M
argument_list|>
name|merger
parameter_list|,
name|AbstractMerger
argument_list|<
name|?
argument_list|,
name|T
argument_list|>
name|parentMerger
parameter_list|)
block|{
name|super
argument_list|(
name|tokenFactory
argument_list|)
expr_stmt|;
name|this
operator|.
name|merger
operator|=
name|merger
expr_stmt|;
name|this
operator|.
name|parentMerger
operator|=
name|parentMerger
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|List
argument_list|<
name|MergerToken
argument_list|>
name|createMergeTokens
parameter_list|()
block|{
return|return
name|createMergeTokens
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Override
name|MergerDictionaryDiff
argument_list|<
name|M
argument_list|>
name|createDiff
parameter_list|(
name|T
name|unused1
parameter_list|,
name|T
name|unused2
parameter_list|)
block|{
name|MergerDictionaryDiff
argument_list|<
name|M
argument_list|>
name|diff
init|=
operator|new
name|MergerDictionaryDiff
argument_list|<>
argument_list|()
decl_stmt|;
name|MergerDictionaryDiff
argument_list|<
name|T
argument_list|>
name|parentDiff
init|=
name|parentMerger
operator|.
name|getDiff
argument_list|()
decl_stmt|;
name|merger
operator|.
name|setOriginalDictionary
argument_list|(
name|parentMerger
operator|.
name|getOriginalDictionary
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|MergerDiffPair
argument_list|<
name|T
argument_list|>
name|pair
range|:
name|parentDiff
operator|.
name|getSame
argument_list|()
control|)
block|{
name|diff
operator|.
name|addAll
argument_list|(
name|merger
operator|.
name|createDiff
argument_list|(
name|pair
operator|.
name|getOriginal
argument_list|()
argument_list|,
name|pair
operator|.
name|getImported
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|diff
return|;
block|}
annotation|@
name|Override
name|Collection
argument_list|<
name|MergerToken
argument_list|>
name|createTokensForMissingOriginal
parameter_list|(
name|M
name|imported
parameter_list|)
block|{
return|return
name|merger
operator|.
name|createTokensForMissingOriginal
argument_list|(
name|imported
argument_list|)
return|;
block|}
annotation|@
name|Override
name|Collection
argument_list|<
name|MergerToken
argument_list|>
name|createTokensForMissingImported
parameter_list|(
name|M
name|original
parameter_list|)
block|{
return|return
name|merger
operator|.
name|createTokensForMissingImported
argument_list|(
name|original
argument_list|)
return|;
block|}
annotation|@
name|Override
name|Collection
argument_list|<
name|MergerToken
argument_list|>
name|createTokensForSame
parameter_list|(
name|MergerDiffPair
argument_list|<
name|M
argument_list|>
name|same
parameter_list|)
block|{
return|return
name|merger
operator|.
name|createTokensForSame
argument_list|(
name|same
argument_list|)
return|;
block|}
block|}
end_class

end_unit

