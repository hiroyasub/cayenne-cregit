begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|reverse
operator|.
name|filters
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|StringUtils
operator|.
name|isBlank
import|;
end_import

begin_comment
comment|/**  * @since 4.0  */
end_comment

begin_class
specifier|public
class|class
name|LegacyFilterConfigBridge
block|{
specifier|private
name|String
name|catalog
decl_stmt|;
specifier|private
name|String
name|schema
decl_stmt|;
specifier|private
name|String
name|includeTableFilters
decl_stmt|;
specifier|private
name|String
name|includeColumnFilters
decl_stmt|;
specifier|private
name|String
name|includeProceduresFilters
decl_stmt|;
specifier|private
name|String
name|excludeTableFilters
decl_stmt|;
specifier|private
name|String
name|excludeColumnFilters
decl_stmt|;
specifier|private
name|String
name|excludeProceduresFilters
decl_stmt|;
specifier|private
name|boolean
name|loadProcedures
decl_stmt|;
specifier|public
name|LegacyFilterConfigBridge
parameter_list|()
block|{
block|}
specifier|public
name|LegacyFilterConfigBridge
name|catalog
parameter_list|(
name|String
name|catalog
parameter_list|)
block|{
name|this
operator|.
name|catalog
operator|=
name|catalog
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|String
name|catalog
parameter_list|()
block|{
return|return
name|catalog
return|;
block|}
specifier|public
name|LegacyFilterConfigBridge
name|schema
parameter_list|(
name|String
name|schema
parameter_list|)
block|{
name|this
operator|.
name|schema
operator|=
name|schema
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|String
name|schema
parameter_list|()
block|{
return|return
name|schema
return|;
block|}
specifier|public
name|LegacyFilterConfigBridge
name|includeTables
parameter_list|(
name|String
name|tableFilters
parameter_list|)
block|{
if|if
condition|(
name|isBlank
argument_list|(
name|tableFilters
argument_list|)
condition|)
block|{
return|return
name|this
return|;
block|}
name|this
operator|.
name|includeTableFilters
operator|=
name|transform
argument_list|(
name|tableFilters
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|LegacyFilterConfigBridge
name|includeColumns
parameter_list|(
name|String
name|columnFilters
parameter_list|)
block|{
if|if
condition|(
name|isBlank
argument_list|(
name|columnFilters
argument_list|)
condition|)
block|{
return|return
name|this
return|;
block|}
name|this
operator|.
name|includeColumnFilters
operator|=
name|transform
argument_list|(
name|columnFilters
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|LegacyFilterConfigBridge
name|includeProcedures
parameter_list|(
name|String
name|proceduresFilters
parameter_list|)
block|{
if|if
condition|(
name|isBlank
argument_list|(
name|proceduresFilters
argument_list|)
condition|)
block|{
return|return
name|this
return|;
block|}
name|this
operator|.
name|includeProceduresFilters
operator|=
name|transform
argument_list|(
name|proceduresFilters
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|LegacyFilterConfigBridge
name|excludeTables
parameter_list|(
name|String
name|tableFilters
parameter_list|)
block|{
if|if
condition|(
name|isBlank
argument_list|(
name|tableFilters
argument_list|)
condition|)
block|{
return|return
name|this
return|;
block|}
name|this
operator|.
name|excludeTableFilters
operator|=
name|transform
argument_list|(
name|tableFilters
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|LegacyFilterConfigBridge
name|excludeColumns
parameter_list|(
name|String
name|columnFilters
parameter_list|)
block|{
if|if
condition|(
name|isBlank
argument_list|(
name|columnFilters
argument_list|)
condition|)
block|{
return|return
name|this
return|;
block|}
name|this
operator|.
name|excludeColumnFilters
operator|=
name|transform
argument_list|(
name|columnFilters
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|LegacyFilterConfigBridge
name|excludeProcedures
parameter_list|(
name|String
name|proceduresFilters
parameter_list|)
block|{
if|if
condition|(
name|isBlank
argument_list|(
name|proceduresFilters
argument_list|)
condition|)
block|{
return|return
name|this
return|;
block|}
name|this
operator|.
name|excludeProceduresFilters
operator|=
name|transform
argument_list|(
name|proceduresFilters
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
specifier|static
name|String
name|transform
parameter_list|(
name|String
name|pattern
parameter_list|)
block|{
return|return
literal|"^"
operator|+
name|pattern
operator|.
name|replaceAll
argument_list|(
literal|"[*?]"
argument_list|,
literal|".$0"
argument_list|)
operator|+
literal|"$"
return|;
block|}
specifier|public
name|void
name|setProceduresFilters
parameter_list|(
name|boolean
name|loadProcedures
parameter_list|)
block|{
name|this
operator|.
name|loadProcedures
operator|=
name|loadProcedures
expr_stmt|;
block|}
specifier|public
name|String
name|getIncludeTableFilters
parameter_list|()
block|{
return|return
name|includeTableFilters
return|;
block|}
specifier|public
name|String
name|getIncludeColumnFilters
parameter_list|()
block|{
return|return
name|includeColumnFilters
return|;
block|}
specifier|public
name|String
name|getIncludeProceduresFilters
parameter_list|()
block|{
return|return
name|includeProceduresFilters
return|;
block|}
specifier|public
name|String
name|getExcludeTableFilters
parameter_list|()
block|{
return|return
name|excludeTableFilters
return|;
block|}
specifier|public
name|String
name|getExcludeColumnFilters
parameter_list|()
block|{
return|return
name|excludeColumnFilters
return|;
block|}
specifier|public
name|String
name|getExcludeProceduresFilters
parameter_list|()
block|{
return|return
name|excludeProceduresFilters
return|;
block|}
specifier|public
name|boolean
name|isLoadProcedures
parameter_list|()
block|{
return|return
name|loadProcedures
return|;
block|}
block|}
end_class

end_unit

