begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|project
operator|.
name|compatibility
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|DataChannelDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|project
operator|.
name|upgrade
operator|.
name|DefaultUpgradeService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|project
operator|.
name|upgrade
operator|.
name|UpgradeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|project
operator|.
name|upgrade
operator|.
name|handlers
operator|.
name|UpgradeHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|resource
operator|.
name|Resource
import|;
end_import

begin_comment
comment|/**  * @since 4.1  */
end_comment

begin_class
specifier|public
class|class
name|CompatibilityUpgradeService
extends|extends
name|DefaultUpgradeService
block|{
annotation|@
name|Inject
name|DocumentProvider
name|documentProvider
decl_stmt|;
specifier|public
name|CompatibilityUpgradeService
parameter_list|(
annotation|@
name|Inject
name|List
argument_list|<
name|UpgradeHandler
argument_list|>
name|handlerList
parameter_list|)
block|{
name|super
argument_list|(
name|handlerList
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Resource
name|upgradeProject
parameter_list|(
name|Resource
name|resource
parameter_list|)
block|{
name|List
argument_list|<
name|UpgradeHandler
argument_list|>
name|handlerList
init|=
name|getHandlersForVersion
argument_list|(
name|loadProjectVersion
argument_list|(
name|resource
argument_list|)
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|UpgradeUnit
argument_list|>
name|upgradeUnits
init|=
name|upgradeDOM
argument_list|(
name|resource
argument_list|,
name|handlerList
argument_list|)
decl_stmt|;
for|for
control|(
name|UpgradeUnit
name|unit
range|:
name|upgradeUnits
control|)
block|{
name|documentProvider
operator|.
name|putDocument
argument_list|(
name|unit
operator|.
name|getResource
argument_list|()
operator|.
name|getURL
argument_list|()
argument_list|,
name|unit
operator|.
name|getDocument
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|resource
return|;
block|}
specifier|public
name|void
name|upgradeModel
parameter_list|(
name|Resource
name|resource
parameter_list|,
name|DataChannelDescriptor
name|descriptor
parameter_list|)
block|{
name|List
argument_list|<
name|UpgradeHandler
argument_list|>
name|handlerList
init|=
name|getHandlersForVersion
argument_list|(
name|loadProjectVersion
argument_list|(
name|resource
argument_list|)
argument_list|)
decl_stmt|;
for|for
control|(
name|UpgradeHandler
name|handler
range|:
name|handlerList
control|)
block|{
name|handler
operator|.
name|processModel
argument_list|(
name|descriptor
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

