begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|lifecycle
operator|.
name|changemap
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ObjectId
import|;
end_import

begin_comment
comment|/**  * @since 4.0  */
end_comment

begin_class
specifier|public
class|class
name|MutableToManyRelationshipChange
implements|implements
name|ToManyRelationshipChange
block|{
specifier|private
name|Collection
argument_list|<
name|ObjectId
argument_list|>
name|added
decl_stmt|;
specifier|private
name|Collection
argument_list|<
name|ObjectId
argument_list|>
name|removed
decl_stmt|;
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|accept
parameter_list|(
name|PropertyChangeVisitor
argument_list|<
name|T
argument_list|>
name|visitor
parameter_list|)
block|{
return|return
name|visitor
operator|.
name|visitToManyRelationship
argument_list|(
name|this
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|Collection
argument_list|<
name|ObjectId
argument_list|>
name|getAdded
parameter_list|()
block|{
return|return
name|added
operator|==
literal|null
condition|?
name|Collections
operator|.
expr|<
name|ObjectId
operator|>
name|emptyList
argument_list|()
else|:
name|added
return|;
block|}
annotation|@
name|Override
specifier|public
name|Collection
argument_list|<
name|ObjectId
argument_list|>
name|getRemoved
parameter_list|()
block|{
return|return
name|removed
operator|==
literal|null
condition|?
name|Collections
operator|.
expr|<
name|ObjectId
operator|>
name|emptyList
argument_list|()
else|:
name|removed
return|;
block|}
specifier|public
name|void
name|connected
parameter_list|(
name|ObjectId
name|o
parameter_list|)
block|{
comment|// TODO: cancel previously removed ?
if|if
condition|(
name|added
operator|==
literal|null
condition|)
block|{
name|added
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
block|}
name|added
operator|.
name|add
argument_list|(
name|o
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|disconnected
parameter_list|(
name|ObjectId
name|o
parameter_list|)
block|{
comment|// TODO: cancel previously added ?
if|if
condition|(
name|removed
operator|==
literal|null
condition|)
block|{
name|removed
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
block|}
name|removed
operator|.
name|add
argument_list|(
name|o
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

