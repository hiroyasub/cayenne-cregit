begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|lifecycle
operator|.
name|changeset
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|DataChannel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|DataChannelFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|DataChannelFilterChain
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ObjectContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|QueryResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|graph
operator|.
name|GraphDiff
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|Query
import|;
end_import

begin_comment
comment|/**  * A {@link DataChannelFilter} that provides interested parties with a thread-local access  * to the current commit changeset. It will only return a non-null change set when commit  * within the scope of the filter  * {@link #onSync(ObjectContext, GraphDiff, int, DataChannelFilterChain)} method. The  * filter is intended to be used by pre-commit and post-commit listeners.  *   * @since 3.1  */
end_comment

begin_class
specifier|public
class|class
name|ChangeSetFilter
implements|implements
name|DataChannelFilter
block|{
specifier|private
specifier|static
specifier|final
name|ThreadLocal
argument_list|<
name|ChangeSet
argument_list|>
name|PRE_COMMIT_CHANGE_SET
init|=
operator|new
name|ThreadLocal
argument_list|<
name|ChangeSet
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
specifier|static
name|ChangeSet
name|preCommitChangeSet
parameter_list|()
block|{
return|return
name|PRE_COMMIT_CHANGE_SET
operator|.
name|get
argument_list|()
return|;
block|}
specifier|public
name|void
name|init
parameter_list|(
name|DataChannel
name|channel
parameter_list|)
block|{
comment|// noop..
block|}
specifier|public
name|QueryResponse
name|onQuery
parameter_list|(
name|ObjectContext
name|originatingContext
parameter_list|,
name|Query
name|query
parameter_list|,
name|DataChannelFilterChain
name|filterChain
parameter_list|)
block|{
return|return
name|filterChain
operator|.
name|onQuery
argument_list|(
name|originatingContext
argument_list|,
name|query
argument_list|)
return|;
block|}
specifier|public
name|GraphDiff
name|onSync
parameter_list|(
name|ObjectContext
name|originatingContext
parameter_list|,
name|GraphDiff
name|changes
parameter_list|,
name|int
name|syncType
parameter_list|,
name|DataChannelFilterChain
name|filterChain
parameter_list|)
block|{
try|try
block|{
name|PRE_COMMIT_CHANGE_SET
operator|.
name|set
argument_list|(
operator|new
name|GenericChangeSet
argument_list|(
name|changes
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|filterChain
operator|.
name|onSync
argument_list|(
name|originatingContext
argument_list|,
name|changes
argument_list|,
name|syncType
argument_list|)
return|;
block|}
finally|finally
block|{
name|PRE_COMMIT_CHANGE_SET
operator|.
name|set
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

