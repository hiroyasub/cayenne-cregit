begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|lifecycle
operator|.
name|audit
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|CayenneRuntimeException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|Persistent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|lifecycle
operator|.
name|changeset
operator|.
name|ChangeSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|lifecycle
operator|.
name|changeset
operator|.
name|ChangeSetFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|lifecycle
operator|.
name|changeset
operator|.
name|PropertyChange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjRelationship
import|;
end_import

begin_class
annotation|@
name|Deprecated
class|class
name|AuditableEntityDescriptor
block|{
specifier|private
name|Collection
argument_list|<
name|String
argument_list|>
name|ignoredProperties
decl_stmt|;
name|AuditableEntityDescriptor
parameter_list|(
name|ObjEntity
name|auditableEntity
parameter_list|,
name|String
index|[]
name|ignoredProperties
parameter_list|)
block|{
name|this
operator|.
name|ignoredProperties
operator|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
expr_stmt|;
comment|// ignore runtime relationships
for|for
control|(
name|ObjRelationship
name|relationship
range|:
name|auditableEntity
operator|.
name|getRelationships
argument_list|()
control|)
block|{
if|if
condition|(
name|relationship
operator|.
name|isRuntime
argument_list|()
condition|)
block|{
name|this
operator|.
name|ignoredProperties
operator|.
name|add
argument_list|(
name|relationship
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|// ignore explicitly specified properties
if|if
condition|(
name|ignoredProperties
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|String
name|property
range|:
name|ignoredProperties
control|)
block|{
name|this
operator|.
name|ignoredProperties
operator|.
name|add
argument_list|(
name|property
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|boolean
name|auditableChange
parameter_list|(
name|Persistent
name|object
parameter_list|)
block|{
if|if
condition|(
name|ignoredProperties
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
return|return
literal|true
return|;
block|}
name|ChangeSet
name|changeSet
init|=
name|ChangeSetFilter
operator|.
name|preCommitChangeSet
argument_list|()
decl_stmt|;
if|if
condition|(
name|changeSet
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|CayenneRuntimeException
argument_list|(
literal|"Required ChangeSetFilter is not installed, or is in the wrong place in the filter chain."
argument_list|)
throw|;
block|}
name|Map
argument_list|<
name|String
argument_list|,
name|PropertyChange
argument_list|>
name|changes
init|=
name|changeSet
operator|.
name|getChanges
argument_list|(
name|object
argument_list|)
decl_stmt|;
if|if
condition|(
name|changes
operator|.
name|size
argument_list|()
operator|>
name|ignoredProperties
operator|.
name|size
argument_list|()
condition|)
block|{
return|return
literal|true
return|;
block|}
for|for
control|(
name|String
name|key
range|:
name|changes
operator|.
name|keySet
argument_list|()
control|)
block|{
if|if
condition|(
operator|!
name|ignoredProperties
operator|.
name|contains
argument_list|(
name|key
argument_list|)
condition|)
block|{
return|return
literal|true
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
block|}
end_class

end_unit

