begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|lifecycle
operator|.
name|cache
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|Persistent
import|;
end_import

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|Arrays
operator|.
name|asList
import|;
end_import

begin_comment
comment|/**  * @since 4.0  */
end_comment

begin_class
specifier|public
class|class
name|CacheGroupsHandler
implements|implements
name|InvalidationHandler
block|{
comment|/**      * Return invalidation function that returns values      * of {@link CacheGroups} annotations for the given type.      */
annotation|@
name|Override
specifier|public
name|InvalidationFunction
name|canHandle
parameter_list|(
name|Class
argument_list|<
name|?
extends|extends
name|Persistent
argument_list|>
name|type
parameter_list|)
block|{
name|CacheGroups
name|a
init|=
name|type
operator|.
name|getAnnotation
argument_list|(
name|CacheGroups
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|a
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
name|String
index|[]
name|groups
init|=
name|a
operator|.
name|value
argument_list|()
decl_stmt|;
if|if
condition|(
name|groups
operator|.
name|length
operator|==
literal|0
condition|)
block|{
return|return
literal|null
return|;
block|}
specifier|final
name|Collection
argument_list|<
name|String
argument_list|>
name|groupsList
init|=
name|asList
argument_list|(
name|groups
argument_list|)
decl_stmt|;
return|return
operator|new
name|InvalidationFunction
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Collection
argument_list|<
name|String
argument_list|>
name|apply
parameter_list|(
name|Persistent
name|persistent
parameter_list|)
block|{
return|return
name|groupsList
return|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

