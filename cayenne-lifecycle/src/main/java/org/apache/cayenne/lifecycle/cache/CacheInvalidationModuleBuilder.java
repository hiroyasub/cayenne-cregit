begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|lifecycle
operator|.
name|cache
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|server
operator|.
name|ServerModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Binder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|ListBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Module
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|tx
operator|.
name|TransactionFilter
import|;
end_import

begin_comment
comment|/**  * @since 4.0  */
end_comment

begin_class
specifier|public
class|class
name|CacheInvalidationModuleBuilder
block|{
specifier|public
specifier|static
specifier|final
name|String
name|INVALIDATION_HANDLERS_LIST
init|=
literal|"cayenne.querycache.invalidation_handlers"
decl_stmt|;
specifier|private
name|Collection
argument_list|<
name|Class
argument_list|<
name|?
extends|extends
name|InvalidationHandler
argument_list|>
argument_list|>
name|handlerTypes
decl_stmt|;
specifier|private
name|Collection
argument_list|<
name|InvalidationHandler
argument_list|>
name|handlerInstances
decl_stmt|;
specifier|public
specifier|static
name|CacheInvalidationModuleBuilder
name|builder
parameter_list|()
block|{
return|return
operator|new
name|CacheInvalidationModuleBuilder
argument_list|()
return|;
block|}
specifier|private
specifier|static
name|ListBuilder
argument_list|<
name|InvalidationHandler
argument_list|>
name|contributeInvalidationHandler
parameter_list|(
name|Binder
name|binder
parameter_list|)
block|{
return|return
name|binder
operator|.
name|bindList
argument_list|(
name|InvalidationHandler
operator|.
name|class
argument_list|,
name|INVALIDATION_HANDLERS_LIST
argument_list|)
return|;
block|}
name|CacheInvalidationModuleBuilder
parameter_list|()
block|{
name|this
operator|.
name|handlerTypes
operator|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
expr_stmt|;
name|this
operator|.
name|handlerInstances
operator|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
expr_stmt|;
block|}
specifier|public
name|CacheInvalidationModuleBuilder
name|invalidationHandler
parameter_list|(
name|Class
argument_list|<
name|?
extends|extends
name|InvalidationHandler
argument_list|>
name|handlerType
parameter_list|)
block|{
name|handlerTypes
operator|.
name|add
argument_list|(
name|handlerType
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|CacheInvalidationModuleBuilder
name|invalidationHandler
parameter_list|(
name|InvalidationHandler
name|handlerInstance
parameter_list|)
block|{
name|handlerInstances
operator|.
name|add
argument_list|(
name|handlerInstance
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|Module
name|build
parameter_list|()
block|{
return|return
operator|new
name|Module
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|(
name|Binder
name|binder
parameter_list|)
block|{
name|ListBuilder
argument_list|<
name|InvalidationHandler
argument_list|>
name|handlers
init|=
name|contributeInvalidationHandler
argument_list|(
name|binder
argument_list|)
decl_stmt|;
name|handlers
operator|.
name|add
argument_list|(
name|CacheGroupsHandler
operator|.
name|class
argument_list|)
expr_stmt|;
name|handlers
operator|.
name|addAll
argument_list|(
name|handlerInstances
argument_list|)
expr_stmt|;
for|for
control|(
name|Class
argument_list|<
name|?
extends|extends
name|InvalidationHandler
argument_list|>
name|handlerType
range|:
name|handlerTypes
control|)
block|{
name|handlers
operator|.
name|add
argument_list|(
name|handlerType
argument_list|)
expr_stmt|;
block|}
comment|// want the filter to be INSIDE transaction
name|ServerModule
operator|.
name|contributeDomainFilters
argument_list|(
name|binder
argument_list|)
operator|.
name|add
argument_list|(
name|CacheInvalidationFilter
operator|.
name|class
argument_list|)
operator|.
name|before
argument_list|(
name|TransactionFilter
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
block|}
return|;
block|}
block|}
end_class

end_unit

