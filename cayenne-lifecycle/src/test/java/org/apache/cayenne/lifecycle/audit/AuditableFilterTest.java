begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|lifecycle
operator|.
name|audit
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|CayenneDataObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|DataChannel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|DataChannelFilterChain
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|DataObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ObjectContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ObjectId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|Persistent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|server
operator|.
name|ServerRuntime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|graph
operator|.
name|GraphDiff
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|lifecycle
operator|.
name|db
operator|.
name|Auditable1
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|lifecycle
operator|.
name|db
operator|.
name|AuditableChildUuid
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|lifecycle
operator|.
name|id
operator|.
name|IdCoder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|lifecycle
operator|.
name|relationship
operator|.
name|ObjectIdRelationshipHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|EntityResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|invocation
operator|.
name|InvocationOnMock
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|stubbing
operator|.
name|Answer
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Matchers
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|when
import|;
end_import

begin_class
annotation|@
name|Deprecated
specifier|public
class|class
name|AuditableFilterTest
block|{
specifier|private
name|AuditableProcessor
name|processor
decl_stmt|;
specifier|private
name|ServerRuntime
name|runtime
decl_stmt|;
specifier|private
name|AuditableFilter
name|filter
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|EntityResolver
name|resolver
init|=
name|mock
argument_list|(
name|EntityResolver
operator|.
name|class
argument_list|)
decl_stmt|;
name|ObjEntity
name|objectEntity
init|=
operator|new
name|ObjEntity
argument_list|(
literal|"CayenneDataObject"
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|resolver
operator|.
name|lookupObjEntity
argument_list|(
name|any
argument_list|(
name|Object
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|objectEntity
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|resolver
operator|.
name|getObjEntity
argument_list|(
name|any
argument_list|(
name|Persistent
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|objectEntity
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|resolver
operator|.
name|getObjEntity
argument_list|(
name|any
argument_list|(
name|Class
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|objectEntity
argument_list|)
expr_stmt|;
name|DataChannel
name|channel
init|=
name|mock
argument_list|(
name|DataChannel
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|channel
operator|.
name|getEntityResolver
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|resolver
argument_list|)
expr_stmt|;
name|this
operator|.
name|processor
operator|=
name|mock
argument_list|(
name|AuditableProcessor
operator|.
name|class
argument_list|)
expr_stmt|;
name|this
operator|.
name|runtime
operator|=
name|ServerRuntime
operator|.
name|builder
argument_list|()
operator|.
name|addConfig
argument_list|(
literal|"cayenne-lifecycle.xml"
argument_list|)
operator|.
name|build
argument_list|()
expr_stmt|;
name|this
operator|.
name|filter
operator|=
operator|new
name|AuditableFilter
argument_list|(
name|processor
argument_list|)
expr_stmt|;
name|this
operator|.
name|filter
operator|.
name|init
argument_list|(
name|channel
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|tearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|runtime
operator|.
name|shutdown
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testInsertAudit
parameter_list|()
block|{
name|Persistent
name|audited
init|=
name|mock
argument_list|(
name|Persistent
operator|.
name|class
argument_list|)
decl_stmt|;
name|filter
operator|.
name|insertAudit
argument_list|(
name|audited
argument_list|)
expr_stmt|;
name|filter
operator|.
name|postSync
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|processor
argument_list|)
operator|.
name|audit
argument_list|(
name|audited
argument_list|,
name|AuditableOperation
operator|.
name|INSERT
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDeleteAudit
parameter_list|()
block|{
name|Persistent
name|audited
init|=
name|mock
argument_list|(
name|Persistent
operator|.
name|class
argument_list|)
decl_stmt|;
name|filter
operator|.
name|deleteAudit
argument_list|(
name|audited
argument_list|)
expr_stmt|;
name|filter
operator|.
name|postSync
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|processor
argument_list|)
operator|.
name|audit
argument_list|(
name|audited
argument_list|,
name|AuditableOperation
operator|.
name|DELETE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testUpdateAudit
parameter_list|()
block|{
name|Persistent
name|audited
init|=
name|mock
argument_list|(
name|Persistent
operator|.
name|class
argument_list|)
decl_stmt|;
name|filter
operator|.
name|updateAudit
argument_list|(
name|audited
argument_list|)
expr_stmt|;
name|filter
operator|.
name|postSync
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|processor
argument_list|)
operator|.
name|audit
argument_list|(
name|audited
argument_list|,
name|AuditableOperation
operator|.
name|UPDATE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testUpdateAuditChild
parameter_list|()
block|{
name|Persistent
name|auditedParent
init|=
name|mock
argument_list|(
name|Persistent
operator|.
name|class
argument_list|)
decl_stmt|;
name|DataObject
name|audited
init|=
operator|new
name|MockAuditableChild
argument_list|()
decl_stmt|;
name|audited
operator|.
name|setObjectId
argument_list|(
operator|new
name|ObjectId
argument_list|(
literal|"MockAuditableChild"
argument_list|,
literal|"a"
argument_list|,
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|audited
operator|.
name|writeProperty
argument_list|(
literal|"parent"
argument_list|,
name|auditedParent
argument_list|)
expr_stmt|;
name|filter
operator|.
name|updateAuditChild
argument_list|(
name|audited
argument_list|)
expr_stmt|;
name|filter
operator|.
name|postSync
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|processor
argument_list|)
operator|.
name|audit
argument_list|(
name|auditedParent
argument_list|,
name|AuditableOperation
operator|.
name|UPDATE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testUpdateAuditChildByObjectIdRelationship
parameter_list|()
block|{
name|ObjectContext
name|context
init|=
name|runtime
operator|.
name|newContext
argument_list|()
decl_stmt|;
name|Auditable1
name|auditedParent
init|=
name|context
operator|.
name|newObject
argument_list|(
name|Auditable1
operator|.
name|class
argument_list|)
decl_stmt|;
name|AuditableChildUuid
name|audited
init|=
name|context
operator|.
name|newObject
argument_list|(
name|AuditableChildUuid
operator|.
name|class
argument_list|)
decl_stmt|;
name|IdCoder
name|refHandler
init|=
operator|new
name|IdCoder
argument_list|(
name|context
operator|.
name|getEntityResolver
argument_list|()
argument_list|)
decl_stmt|;
name|ObjectIdRelationshipHandler
name|handler
init|=
operator|new
name|ObjectIdRelationshipHandler
argument_list|(
name|refHandler
argument_list|)
decl_stmt|;
name|handler
operator|.
name|relate
argument_list|(
name|audited
argument_list|,
name|auditedParent
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|filter
operator|.
name|updateAuditChild
argument_list|(
name|audited
argument_list|)
expr_stmt|;
name|filter
operator|.
name|postSync
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|processor
argument_list|)
operator|.
name|audit
argument_list|(
name|auditedParent
argument_list|,
name|AuditableOperation
operator|.
name|UPDATE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testOnSyncPassThrough
parameter_list|()
block|{
name|ObjectContext
name|context
init|=
name|mock
argument_list|(
name|ObjectContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|GraphDiff
name|changes
init|=
name|mock
argument_list|(
name|GraphDiff
operator|.
name|class
argument_list|)
decl_stmt|;
name|DataChannelFilterChain
name|chain
init|=
name|mock
argument_list|(
name|DataChannelFilterChain
operator|.
name|class
argument_list|)
decl_stmt|;
name|filter
operator|.
name|onSync
argument_list|(
name|context
argument_list|,
name|changes
argument_list|,
name|DataChannel
operator|.
name|FLUSH_CASCADE_SYNC
argument_list|,
name|chain
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|chain
argument_list|)
operator|.
name|onSync
argument_list|(
name|context
argument_list|,
name|changes
argument_list|,
name|DataChannel
operator|.
name|FLUSH_CASCADE_SYNC
argument_list|)
expr_stmt|;
name|filter
operator|.
name|onSync
argument_list|(
name|context
argument_list|,
name|changes
argument_list|,
name|DataChannel
operator|.
name|ROLLBACK_CASCADE_SYNC
argument_list|,
name|chain
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|chain
argument_list|)
operator|.
name|onSync
argument_list|(
name|context
argument_list|,
name|changes
argument_list|,
name|DataChannel
operator|.
name|ROLLBACK_CASCADE_SYNC
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testOnSyncAuditEventsCollapse
parameter_list|()
block|{
name|ObjectContext
name|context
init|=
name|mock
argument_list|(
name|ObjectContext
operator|.
name|class
argument_list|)
decl_stmt|;
name|GraphDiff
name|changes
init|=
name|mock
argument_list|(
name|GraphDiff
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|DataObject
name|auditedParent1
init|=
operator|new
name|CayenneDataObject
argument_list|()
decl_stmt|;
specifier|final
name|DataObject
name|audited11
init|=
operator|new
name|MockAuditableChild
argument_list|()
decl_stmt|;
name|audited11
operator|.
name|writeProperty
argument_list|(
literal|"parent"
argument_list|,
name|auditedParent1
argument_list|)
expr_stmt|;
specifier|final
name|DataObject
name|audited12
init|=
operator|new
name|MockAuditableChild
argument_list|()
decl_stmt|;
name|audited12
operator|.
name|writeProperty
argument_list|(
literal|"parent"
argument_list|,
name|auditedParent1
argument_list|)
expr_stmt|;
specifier|final
name|DataObject
name|audited13
init|=
operator|new
name|MockAuditableChild
argument_list|()
decl_stmt|;
name|audited13
operator|.
name|writeProperty
argument_list|(
literal|"parent"
argument_list|,
name|auditedParent1
argument_list|)
expr_stmt|;
name|DataChannelFilterChain
name|chain
init|=
name|mock
argument_list|(
name|DataChannelFilterChain
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|chain
operator|.
name|onSync
argument_list|(
name|context
argument_list|,
name|changes
argument_list|,
name|DataChannel
operator|.
name|FLUSH_CASCADE_SYNC
argument_list|)
argument_list|)
operator|.
name|thenAnswer
argument_list|(
operator|new
name|Answer
argument_list|<
name|GraphDiff
argument_list|>
argument_list|()
block|{
specifier|public
name|GraphDiff
name|answer
parameter_list|(
name|InvocationOnMock
name|invocation
parameter_list|)
throws|throws
name|Throwable
block|{
name|filter
operator|.
name|updateAudit
argument_list|(
name|auditedParent1
argument_list|)
expr_stmt|;
name|filter
operator|.
name|updateAuditChild
argument_list|(
name|audited11
argument_list|)
expr_stmt|;
name|filter
operator|.
name|updateAuditChild
argument_list|(
name|audited12
argument_list|)
expr_stmt|;
name|filter
operator|.
name|updateAuditChild
argument_list|(
name|audited13
argument_list|)
expr_stmt|;
return|return
name|mock
argument_list|(
name|GraphDiff
operator|.
name|class
argument_list|)
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|filter
operator|.
name|onSync
argument_list|(
name|context
argument_list|,
name|changes
argument_list|,
name|DataChannel
operator|.
name|FLUSH_CASCADE_SYNC
argument_list|,
name|chain
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|chain
argument_list|)
operator|.
name|onSync
argument_list|(
name|context
argument_list|,
name|changes
argument_list|,
name|DataChannel
operator|.
name|FLUSH_CASCADE_SYNC
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|processor
argument_list|)
operator|.
name|audit
argument_list|(
name|auditedParent1
argument_list|,
name|AuditableOperation
operator|.
name|UPDATE
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

