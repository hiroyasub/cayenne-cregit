begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|project
operator|.
name|upgrade
operator|.
name|handlers
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|xpath
operator|.
name|XPath
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|xpath
operator|.
name|XPathConstants
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|xpath
operator|.
name|XPathExpressionException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|xpath
operator|.
name|XPathFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|DataChannelDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|project
operator|.
name|upgrade
operator|.
name|UpgradeUnit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|NodeList
import|;
end_import

begin_comment
comment|/**  * Interface that upgrade handlers should implement.  * Implementation also should be injected into DI stack in right order.  *  * @since 4.1  */
end_comment

begin_interface
specifier|public
interface|interface
name|UpgradeHandler
block|{
comment|/**      * @return target version for this handler      */
name|String
name|getVersion
parameter_list|()
function_decl|;
comment|/**      * Process DOM for the project root file (e.g. cayenne-project.xml)      */
name|void
name|processProjectDom
parameter_list|(
name|UpgradeUnit
name|upgradeUnit
parameter_list|)
function_decl|;
comment|/**      * Process DOM for the data map file (e.g. datamap.map.xml)      */
name|void
name|processDataMapDom
parameter_list|(
name|UpgradeUnit
name|upgradeUnit
parameter_list|)
function_decl|;
comment|/**      * This method should be avoided as much as possible, as      * using this method will make upgrade process not future proof and      * will require refactoring if model should change.      */
specifier|default
name|void
name|processModel
parameter_list|(
name|DataChannelDescriptor
name|dataChannelDescriptor
parameter_list|)
block|{
block|}
comment|/**      * Upgrade Domain schema and version info      * @param upgradeUnit for the datamap      */
specifier|default
name|void
name|updateDomainSchemaAndVersion
parameter_list|(
name|UpgradeUnit
name|upgradeUnit
parameter_list|)
block|{
name|Element
name|domain
init|=
name|upgradeUnit
operator|.
name|getDocument
argument_list|()
operator|.
name|getDocumentElement
argument_list|()
decl_stmt|;
comment|// update schema
name|domain
operator|.
name|setAttribute
argument_list|(
literal|"xmlns"
argument_list|,
literal|"http://cayenne.apache.org/schema/"
operator|+
name|getVersion
argument_list|()
operator|+
literal|"/domain"
argument_list|)
expr_stmt|;
name|domain
operator|.
name|setAttribute
argument_list|(
literal|"xmlns:xsi"
argument_list|,
literal|"http://www.w3.org/2001/XMLSchema-instance"
argument_list|)
expr_stmt|;
name|domain
operator|.
name|setAttribute
argument_list|(
literal|"xsi:schemaLocation"
argument_list|,
literal|"http://cayenne.apache.org/schema/"
operator|+
name|getVersion
argument_list|()
operator|+
literal|"/domain "
operator|+
literal|"https://cayenne.apache.org/schema/"
operator|+
name|getVersion
argument_list|()
operator|+
literal|"/domain.xsd"
argument_list|)
expr_stmt|;
comment|// update version
name|domain
operator|.
name|setAttribute
argument_list|(
literal|"project-version"
argument_list|,
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Upgrade DataMap schema and version info      * @param upgradeUnit for the datamap      */
specifier|default
name|void
name|updateDataMapSchemaAndVersion
parameter_list|(
name|UpgradeUnit
name|upgradeUnit
parameter_list|)
block|{
name|Element
name|dataMap
init|=
name|upgradeUnit
operator|.
name|getDocument
argument_list|()
operator|.
name|getDocumentElement
argument_list|()
decl_stmt|;
comment|// update schema
name|dataMap
operator|.
name|setAttribute
argument_list|(
literal|"xmlns"
argument_list|,
literal|"http://cayenne.apache.org/schema/"
operator|+
name|getVersion
argument_list|()
operator|+
literal|"/modelMap"
argument_list|)
expr_stmt|;
name|dataMap
operator|.
name|setAttribute
argument_list|(
literal|"xsi:schemaLocation"
argument_list|,
literal|"http://cayenne.apache.org/schema/"
operator|+
name|getVersion
argument_list|()
operator|+
literal|"/modelMap "
operator|+
literal|"https://cayenne.apache.org/schema/"
operator|+
name|getVersion
argument_list|()
operator|+
literal|"/modelMap.xsd"
argument_list|)
expr_stmt|;
comment|// update version
name|dataMap
operator|.
name|setAttribute
argument_list|(
literal|"project-version"
argument_list|,
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Update schema for the given extension      * @param upgradeUnit a unit to work with      * @param extension name of the extension (cgen, dbimport, graph )      */
specifier|default
name|void
name|updateExtensionSchema
parameter_list|(
name|UpgradeUnit
name|upgradeUnit
parameter_list|,
name|String
name|extension
parameter_list|)
block|{
name|XPath
name|xpath
init|=
name|XPathFactory
operator|.
name|newInstance
argument_list|()
operator|.
name|newXPath
argument_list|()
decl_stmt|;
name|NodeList
name|nodes
decl_stmt|;
try|try
block|{
name|nodes
operator|=
operator|(
name|NodeList
operator|)
name|xpath
operator|.
name|evaluate
argument_list|(
literal|"/data-map/*[local-name()='"
operator|+
name|extension
operator|+
literal|"']"
argument_list|,
name|upgradeUnit
operator|.
name|getDocument
argument_list|()
argument_list|,
name|XPathConstants
operator|.
name|NODESET
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|XPathExpressionException
name|e
parameter_list|)
block|{
return|return;
block|}
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|nodes
operator|.
name|getLength
argument_list|()
condition|;
name|j
operator|++
control|)
block|{
name|Element
name|element
init|=
operator|(
name|Element
operator|)
name|nodes
operator|.
name|item
argument_list|(
name|j
argument_list|)
decl_stmt|;
name|element
operator|.
name|setAttribute
argument_list|(
literal|"xmlns"
argument_list|,
literal|"http://cayenne.apache.org/schema/"
operator|+
name|getVersion
argument_list|()
operator|+
literal|"/"
operator|+
name|extension
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_interface

end_unit

