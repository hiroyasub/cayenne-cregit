begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|project
operator|.
name|upgrade
operator|.
name|v9
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|CayenneRuntimeException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|ConfigurationNameMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|DataMapLoader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|DefaultConfigurationNameMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|XMLDataMapLoader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|spi
operator|.
name|DefaultAdhocObjectFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|spi
operator|.
name|DefaultClassLoaderManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|project
operator|.
name|FileProjectSaver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|project
operator|.
name|ProjectSaver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|project
operator|.
name|unit
operator|.
name|Project2Case
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|project
operator|.
name|upgrade
operator|.
name|UpgradeHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|resource
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|resource
operator|.
name|URLResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|test
operator|.
name|file
operator|.
name|FileUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|test
operator|.
name|resource
operator|.
name|ResourceUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Node
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|NodeList
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|xpath
operator|.
name|XPath
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|xpath
operator|.
name|XPathConstants
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|xpath
operator|.
name|XPathFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotSame
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|ProjectUpgrader_V9Test
extends|extends
name|Project2Case
block|{
specifier|protected
name|File
name|setupTestDirectory
parameter_list|(
name|String
name|subfolder
parameter_list|)
block|{
name|String
name|classPath
init|=
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|replace
argument_list|(
literal|'.'
argument_list|,
literal|'/'
argument_list|)
decl_stmt|;
name|String
name|location
init|=
literal|"target/testrun/"
operator|+
name|classPath
operator|+
literal|"/"
operator|+
name|subfolder
decl_stmt|;
name|File
name|testDirectory
init|=
operator|new
name|File
argument_list|(
name|location
argument_list|)
decl_stmt|;
comment|// delete old tests
if|if
condition|(
name|testDirectory
operator|.
name|exists
argument_list|()
condition|)
block|{
if|if
condition|(
operator|!
name|FileUtil
operator|.
name|delete
argument_list|(
name|location
argument_list|,
literal|true
argument_list|)
condition|)
block|{
throw|throw
operator|new
name|CayenneRuntimeException
argument_list|(
literal|"Error deleting test directory '%s'"
argument_list|,
name|location
argument_list|)
throw|;
block|}
block|}
if|if
condition|(
operator|!
name|testDirectory
operator|.
name|mkdirs
argument_list|()
condition|)
block|{
throw|throw
operator|new
name|CayenneRuntimeException
argument_list|(
literal|"Error creating test directory '%s'"
argument_list|,
name|location
argument_list|)
throw|;
block|}
return|return
name|testDirectory
return|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testPerformUpgradeFrom8
parameter_list|()
throws|throws
name|Exception
block|{
name|File
name|testFolder
init|=
name|setupTestDirectory
argument_list|(
literal|"testPerformUpgradeFrom8"
argument_list|)
decl_stmt|;
name|String
name|sourceUrl
init|=
name|getClass
argument_list|()
operator|.
name|getPackage
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|replace
argument_list|(
literal|'.'
argument_list|,
literal|'/'
argument_list|)
operator|+
literal|"/"
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|sources
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|sources
operator|.
name|add
argument_list|(
literal|"cayenne-PROJECT1.xml"
argument_list|)
expr_stmt|;
name|sources
operator|.
name|add
argument_list|(
literal|"testProjectMap1_1.map.xml"
argument_list|)
expr_stmt|;
name|sources
operator|.
name|add
argument_list|(
literal|"testProjectMap1_2.map.xml"
argument_list|)
expr_stmt|;
name|sources
operator|.
name|add
argument_list|(
literal|"reverseEngineering.xml"
argument_list|)
expr_stmt|;
comment|// upgrades are done in-place, so copy it first
name|List
argument_list|<
name|File
argument_list|>
name|targetsBefore
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|source
range|:
name|sources
control|)
block|{
name|URL
name|url
init|=
name|getClass
argument_list|()
operator|.
name|getClassLoader
argument_list|()
operator|.
name|getResource
argument_list|(
name|sourceUrl
operator|+
name|source
argument_list|)
decl_stmt|;
name|File
name|target
init|=
operator|new
name|File
argument_list|(
name|testFolder
argument_list|,
name|source
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|source
argument_list|)
expr_stmt|;
name|ResourceUtil
operator|.
name|copyResourceToFile
argument_list|(
name|url
argument_list|,
name|target
argument_list|)
expr_stmt|;
name|targetsBefore
operator|.
name|add
argument_list|(
name|target
argument_list|)
expr_stmt|;
block|}
name|Module
name|testModule
init|=
operator|new
name|Module
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|(
name|Binder
name|binder
parameter_list|)
block|{
name|binder
operator|.
name|bind
argument_list|(
name|ClassLoaderManager
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|DefaultClassLoaderManager
operator|.
name|class
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|AdhocObjectFactory
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|DefaultAdhocObjectFactory
operator|.
name|class
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|ProjectSaver
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|FileProjectSaver
operator|.
name|class
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|ConfigurationNameMapper
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|DefaultConfigurationNameMapper
operator|.
name|class
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|DataMapLoader
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|XMLDataMapLoader
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
name|ProjectUpgrader_V9
name|upgrader
init|=
operator|new
name|ProjectUpgrader_V9
argument_list|()
decl_stmt|;
name|Injector
name|injector
init|=
name|DIBootstrap
operator|.
name|createInjector
argument_list|(
name|testModule
argument_list|)
decl_stmt|;
name|injector
operator|.
name|injectMembers
argument_list|(
name|upgrader
argument_list|)
expr_stmt|;
name|Resource
name|source
init|=
operator|new
name|URLResource
argument_list|(
name|targetsBefore
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|toURL
argument_list|()
argument_list|)
decl_stmt|;
name|UpgradeHandler
name|handler
init|=
name|upgrader
operator|.
name|getUpgradeHandler
argument_list|(
name|source
argument_list|)
decl_stmt|;
name|Resource
name|upgraded
init|=
name|handler
operator|.
name|performUpgrade
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|upgraded
argument_list|)
expr_stmt|;
name|assertNotSame
argument_list|(
name|source
argument_list|,
name|upgrader
argument_list|)
expr_stmt|;
comment|// check that all the new files are created...
name|String
index|[]
name|targetsAfterNames
init|=
operator|new
name|String
index|[]
block|{
literal|"cayenne-PROJECT1.xml"
block|,
literal|"testProjectMap1_1.map.xml"
block|,
literal|"testProjectMap1_2.map.xml"
block|}
decl_stmt|;
name|File
index|[]
name|targetsAfter
init|=
operator|new
name|File
index|[
name|targetsAfterNames
operator|.
name|length
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|targetsAfter
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|targetsAfter
index|[
name|i
index|]
operator|=
operator|new
name|File
argument_list|(
name|testFolder
argument_list|,
name|targetsAfterNames
index|[
name|i
index|]
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"File was not created: "
operator|+
name|targetsAfter
index|[
name|i
index|]
operator|.
name|getAbsolutePath
argument_list|()
argument_list|,
name|targetsAfter
index|[
name|i
index|]
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|// assert XML structure of the generated files
name|assertPerformUpgradeFrom8_cayenne
argument_list|(
name|targetsAfter
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertPerformUpgradeFrom8_map1_1
argument_list|(
name|targetsAfter
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|assertPerformUpgradeFrom8_map1_2
argument_list|(
name|targetsAfter
index|[
literal|2
index|]
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|new
name|File
argument_list|(
name|testFolder
argument_list|,
literal|"reverseEngineering.xml"
argument_list|)
operator|.
name|exists
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertPerformUpgradeFrom8_cayenne
parameter_list|(
name|File
name|file
parameter_list|)
throws|throws
name|Exception
block|{
name|Document
name|document
init|=
name|toDOMTree
argument_list|(
name|file
argument_list|)
decl_stmt|;
name|XPath
name|xpath
init|=
name|XPathFactory
operator|.
name|newInstance
argument_list|()
operator|.
name|newXPath
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
name|xpath
operator|.
name|evaluate
argument_list|(
literal|"/domain/@name"
argument_list|,
name|document
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"9"
argument_list|,
name|xpath
operator|.
name|evaluate
argument_list|(
literal|"/domain/@project-version"
argument_list|,
name|document
argument_list|)
argument_list|)
expr_stmt|;
name|NodeList
name|maps
init|=
operator|(
name|NodeList
operator|)
name|xpath
operator|.
name|evaluate
argument_list|(
literal|"/domain/map"
argument_list|,
name|document
argument_list|,
name|XPathConstants
operator|.
name|NODESET
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|maps
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|maps
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|Node
name|map1
init|=
name|maps
operator|.
name|item
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Node
name|map2
init|=
name|maps
operator|.
name|item
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"testProjectMap1_1"
argument_list|,
name|xpath
operator|.
name|evaluate
argument_list|(
literal|"@name"
argument_list|,
name|map1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"testProjectMap1_2"
argument_list|,
name|xpath
operator|.
name|evaluate
argument_list|(
literal|"@name"
argument_list|,
name|map2
argument_list|)
argument_list|)
expr_stmt|;
name|NodeList
name|nodes
init|=
operator|(
name|NodeList
operator|)
name|xpath
operator|.
name|evaluate
argument_list|(
literal|"/domain/node"
argument_list|,
name|document
argument_list|,
name|XPathConstants
operator|.
name|NODESET
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|nodes
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|nodes
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertPerformUpgradeFrom8_map1_1
parameter_list|(
name|File
name|file
parameter_list|)
throws|throws
name|Exception
block|{
name|Document
name|document
init|=
name|toDOMTree
argument_list|(
name|file
argument_list|)
decl_stmt|;
name|XPath
name|xpath
init|=
name|XPathFactory
operator|.
name|newInstance
argument_list|()
operator|.
name|newXPath
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"9"
argument_list|,
name|xpath
operator|.
name|evaluate
argument_list|(
literal|"/data-map/@project-version"
argument_list|,
name|document
argument_list|)
argument_list|)
expr_stmt|;
name|NodeList
name|reverseEngineeringNodes
init|=
operator|(
name|NodeList
operator|)
name|xpath
operator|.
name|evaluate
argument_list|(
literal|"/data-map/reverse-engineering-config"
argument_list|,
name|document
argument_list|,
name|XPathConstants
operator|.
name|NODESET
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|reverseEngineeringNodes
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertPerformUpgradeFrom8_map1_2
parameter_list|(
name|File
name|file
parameter_list|)
throws|throws
name|Exception
block|{
name|Document
name|document
init|=
name|toDOMTree
argument_list|(
name|file
argument_list|)
decl_stmt|;
name|XPath
name|xpath
init|=
name|XPathFactory
operator|.
name|newInstance
argument_list|()
operator|.
name|newXPath
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"9"
argument_list|,
name|xpath
operator|.
name|evaluate
argument_list|(
literal|"/data-map/@project-version"
argument_list|,
name|document
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

