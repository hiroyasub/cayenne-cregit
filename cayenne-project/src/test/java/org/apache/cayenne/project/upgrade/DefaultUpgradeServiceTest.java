begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|project
operator|.
name|upgrade
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStreamReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|DocumentBuilder
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|xml
operator|.
name|parsers
operator|.
name|DocumentBuilderFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|project
operator|.
name|upgrade
operator|.
name|handlers
operator|.
name|UpgradeHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|resource
operator|.
name|Resource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|resource
operator|.
name|URLResource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|util
operator|.
name|Util
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
import|;
end_import

begin_import
import|import
name|org
operator|.
name|w3c
operator|.
name|dom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|InputSource
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|ArgumentMatchers
operator|.
name|any
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * @since 4.1  */
end_comment

begin_class
specifier|public
class|class
name|DefaultUpgradeServiceTest
block|{
name|DefaultUpgradeService
name|upgradeService
decl_stmt|;
name|List
argument_list|<
name|UpgradeHandler
argument_list|>
name|handlers
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|createService
parameter_list|()
block|{
name|createHandlers
argument_list|()
expr_stmt|;
name|upgradeService
operator|=
operator|new
name|DefaultUpgradeService
argument_list|(
name|handlers
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|getUpgradeType
parameter_list|()
throws|throws
name|Exception
block|{
name|UpgradeMetaData
name|metaData
init|=
name|upgradeService
operator|.
name|getUpgradeType
argument_list|(
name|getResourceForVersion
argument_list|(
literal|"5"
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|UpgradeType
operator|.
name|INTERMEDIATE_UPGRADE_NEEDED
argument_list|,
name|metaData
operator|.
name|getUpgradeType
argument_list|()
argument_list|)
expr_stmt|;
name|metaData
operator|=
name|upgradeService
operator|.
name|getUpgradeType
argument_list|(
name|getResourceForVersion
argument_list|(
literal|"6"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|UpgradeType
operator|.
name|UPGRADE_NEEDED
argument_list|,
name|metaData
operator|.
name|getUpgradeType
argument_list|()
argument_list|)
expr_stmt|;
name|metaData
operator|=
name|upgradeService
operator|.
name|getUpgradeType
argument_list|(
name|getResourceForVersion
argument_list|(
literal|"10"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|UpgradeType
operator|.
name|UPGRADE_NEEDED
argument_list|,
name|metaData
operator|.
name|getUpgradeType
argument_list|()
argument_list|)
expr_stmt|;
name|metaData
operator|=
name|upgradeService
operator|.
name|getUpgradeType
argument_list|(
name|getResourceForVersion
argument_list|(
literal|"11"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|UpgradeType
operator|.
name|UPGRADE_NOT_NEEDED
argument_list|,
name|metaData
operator|.
name|getUpgradeType
argument_list|()
argument_list|)
expr_stmt|;
name|metaData
operator|=
name|upgradeService
operator|.
name|getUpgradeType
argument_list|(
name|getResourceForVersion
argument_list|(
literal|"12"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|UpgradeType
operator|.
name|DOWNGRADE_NEEDED
argument_list|,
name|metaData
operator|.
name|getUpgradeType
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|getHandlersForVersion
parameter_list|()
throws|throws
name|Exception
block|{
name|List
argument_list|<
name|UpgradeHandler
argument_list|>
name|handlers
init|=
name|upgradeService
operator|.
name|getHandlersForVersion
argument_list|(
literal|"6"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|handlers
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|handlers
operator|=
name|upgradeService
operator|.
name|getHandlersForVersion
argument_list|(
literal|"9"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|handlers
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"10"
argument_list|,
name|handlers
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"11"
argument_list|,
name|handlers
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getVersion
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|getAdditionalDatamapResources
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|url
init|=
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"../cayenne-PROJECT1.xml"
argument_list|)
decl_stmt|;
name|Resource
name|resource
init|=
operator|new
name|URLResource
argument_list|(
name|url
argument_list|)
decl_stmt|;
name|Document
name|document
init|=
name|readDocument
argument_list|(
name|url
argument_list|)
decl_stmt|;
name|UpgradeUnit
name|unit
init|=
operator|new
name|UpgradeUnit
argument_list|(
name|resource
argument_list|,
name|document
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Resource
argument_list|>
name|resources
init|=
name|upgradeService
operator|.
name|getAdditionalDatamapResources
argument_list|(
name|unit
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|resources
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|resources
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getURL
argument_list|()
operator|.
name|sameFile
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"../testProjectMap1_1.map.xml"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|loadProjectVersion
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
literal|"3.2.1.0"
argument_list|,
name|upgradeService
operator|.
name|loadProjectVersion
argument_list|(
name|getResourceForVersion
argument_list|(
literal|"3.2.1.0"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"10"
argument_list|,
name|upgradeService
operator|.
name|loadProjectVersion
argument_list|(
name|getResourceForVersion
argument_list|(
literal|"10"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|decodeVersion
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
literal|1.2340
argument_list|,
name|DefaultUpgradeService
operator|.
name|decodeVersion
argument_list|(
literal|"1.2.3.4"
argument_list|)
argument_list|,
literal|0.000001
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1.0004
argument_list|,
name|DefaultUpgradeService
operator|.
name|decodeVersion
argument_list|(
literal|"1.0.0.0.4"
argument_list|)
argument_list|,
literal|0.000001
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|DefaultUpgradeService
operator|.
name|decodeVersion
argument_list|(
literal|"10"
argument_list|)
argument_list|,
literal|0.000001
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|upgradeDOM
parameter_list|()
throws|throws
name|Exception
block|{
name|Resource
name|resource
init|=
operator|new
name|URLResource
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"../cayenne-PROJECT1.xml"
argument_list|)
argument_list|)
decl_stmt|;
comment|// Mock service so it will use actual reading but skip actual saving part
name|upgradeService
operator|=
name|mock
argument_list|(
name|DefaultUpgradeService
operator|.
name|class
argument_list|)
expr_stmt|;
name|when
argument_list|(
name|upgradeService
operator|.
name|upgradeDOM
argument_list|(
name|any
argument_list|(
name|Resource
operator|.
name|class
argument_list|)
argument_list|,
name|ArgumentMatchers
operator|.
expr|<
name|UpgradeHandler
operator|>
name|anyList
argument_list|()
argument_list|)
argument_list|)
operator|.
name|thenCallRealMethod
argument_list|()
expr_stmt|;
name|when
argument_list|(
name|upgradeService
operator|.
name|getAdditionalDatamapResources
argument_list|(
name|any
argument_list|(
name|UpgradeUnit
operator|.
name|class
argument_list|)
argument_list|)
argument_list|)
operator|.
name|thenCallRealMethod
argument_list|()
expr_stmt|;
name|upgradeService
operator|.
name|upgradeDOM
argument_list|(
name|resource
argument_list|,
name|handlers
argument_list|)
expr_stmt|;
comment|// one for project and two for data maps
comment|//        verify(upgradeService, times(3)).saveDocument(any(UpgradeUnit.class));
for|for
control|(
name|UpgradeHandler
name|handler
range|:
name|handlers
control|)
block|{
name|verify
argument_list|(
name|handler
argument_list|)
operator|.
name|getVersion
argument_list|()
expr_stmt|;
name|verify
argument_list|(
name|handler
argument_list|)
operator|.
name|processProjectDom
argument_list|(
name|any
argument_list|(
name|UpgradeUnit
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
comment|// two data maps
name|verify
argument_list|(
name|handler
argument_list|,
name|times
argument_list|(
literal|2
argument_list|)
argument_list|)
operator|.
name|processDataMapDom
argument_list|(
name|any
argument_list|(
name|UpgradeUnit
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|verifyNoMoreInteractions
argument_list|(
name|handler
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Test
specifier|public
name|void
name|readDocument
parameter_list|()
throws|throws
name|Exception
block|{
name|Document
name|document
init|=
name|Util
operator|.
name|readDocument
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"../cayenne-PROJECT1.xml"
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"11"
argument_list|,
name|document
operator|.
name|getDocumentElement
argument_list|()
operator|.
name|getAttribute
argument_list|(
literal|"project-version"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Document
name|readDocument
parameter_list|(
name|URL
name|url
parameter_list|)
throws|throws
name|Exception
block|{
name|DocumentBuilder
name|db
init|=
name|DocumentBuilderFactory
operator|.
name|newInstance
argument_list|()
operator|.
name|newDocumentBuilder
argument_list|()
decl_stmt|;
return|return
name|db
operator|.
name|parse
argument_list|(
operator|new
name|InputSource
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
name|url
operator|.
name|openStream
argument_list|()
argument_list|)
argument_list|)
argument_list|)
return|;
block|}
specifier|private
name|void
name|createHandlers
parameter_list|()
block|{
name|handlers
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
name|String
index|[]
name|versions
init|=
block|{
literal|"7"
block|,
literal|"8"
block|,
literal|"9"
block|,
literal|"10"
block|,
literal|"11"
block|}
decl_stmt|;
for|for
control|(
name|String
name|version
range|:
name|versions
control|)
block|{
name|handlers
operator|.
name|add
argument_list|(
name|createHandler
argument_list|(
name|version
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|UpgradeHandler
name|createHandler
parameter_list|(
name|String
name|version
parameter_list|)
block|{
name|UpgradeHandler
name|handler
init|=
name|mock
argument_list|(
name|UpgradeHandler
operator|.
name|class
argument_list|)
decl_stmt|;
name|when
argument_list|(
name|handler
operator|.
name|getVersion
argument_list|()
argument_list|)
operator|.
name|thenReturn
argument_list|(
name|version
argument_list|)
expr_stmt|;
return|return
name|handler
return|;
block|}
specifier|private
name|Resource
name|getResourceForVersion
parameter_list|(
name|String
name|version
parameter_list|)
block|{
return|return
operator|new
name|URLResource
argument_list|(
name|getClass
argument_list|()
operator|.
name|getResource
argument_list|(
literal|"handlers/cayenne-project-v"
operator|+
name|version
operator|+
literal|".xml"
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

