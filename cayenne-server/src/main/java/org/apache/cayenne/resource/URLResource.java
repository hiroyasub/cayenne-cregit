begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|resource
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|MalformedURLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|CayenneRuntimeException
import|;
end_import

begin_comment
comment|/**  * A {@link Resource} implementation wrapping a resource URL.  *   * @since 3.1  */
end_comment

begin_class
specifier|public
class|class
name|URLResource
implements|implements
name|Resource
block|{
specifier|private
name|URL
name|url
decl_stmt|;
specifier|public
name|URLResource
parameter_list|(
name|URL
name|url
parameter_list|)
block|{
name|this
operator|.
name|url
operator|=
name|url
expr_stmt|;
block|}
specifier|public
name|Resource
name|getRelativeResource
parameter_list|(
name|String
name|relativePath
parameter_list|)
block|{
try|try
block|{
return|return
operator|new
name|URLResource
argument_list|(
operator|new
name|URL
argument_list|(
name|url
argument_list|,
name|relativePath
argument_list|)
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|MalformedURLException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|CayenneRuntimeException
argument_list|(
literal|"Error creating relative resource '%s' : '%s'"
argument_list|,
name|e
argument_list|,
name|url
argument_list|,
name|relativePath
argument_list|)
throw|;
block|}
block|}
specifier|public
name|URL
name|getURL
parameter_list|()
block|{
return|return
name|url
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|String
name|urlString
init|=
name|String
operator|.
name|valueOf
argument_list|(
name|url
argument_list|)
decl_stmt|;
return|return
literal|"<URLResource: "
operator|+
name|urlString
operator|+
literal|">"
return|;
block|}
block|}
end_class

end_unit

