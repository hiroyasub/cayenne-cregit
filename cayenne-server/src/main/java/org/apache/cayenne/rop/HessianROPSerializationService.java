begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|rop
package|;
end_package

begin_import
import|import
name|com
operator|.
name|caucho
operator|.
name|hessian
operator|.
name|io
operator|.
name|Hessian2Output
import|;
end_import

begin_import
import|import
name|com
operator|.
name|caucho
operator|.
name|hessian
operator|.
name|io
operator|.
name|HessianInput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|caucho
operator|.
name|hessian
operator|.
name|io
operator|.
name|HessianOutput
import|;
end_import

begin_import
import|import
name|com
operator|.
name|caucho
operator|.
name|hessian
operator|.
name|io
operator|.
name|SerializerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|DataChannel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|remote
operator|.
name|hessian
operator|.
name|HessianConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|remote
operator|.
name|hessian
operator|.
name|service
operator|.
name|HessianService
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|*
import|;
end_import

begin_class
specifier|public
class|class
name|HessianROPSerializationService
implements|implements
name|ROPSerializationService
block|{
specifier|protected
name|SerializerFactory
name|serializerFactory
decl_stmt|;
specifier|public
name|HessianROPSerializationService
parameter_list|(
name|SerializerFactory
name|serializerFactory
parameter_list|)
block|{
name|this
operator|.
name|serializerFactory
operator|=
name|serializerFactory
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|byte
index|[]
name|serialize
parameter_list|(
name|Object
name|object
parameter_list|)
throws|throws
name|IOException
block|{
name|ByteArrayOutputStream
name|bytes
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|HessianOutput
name|out
init|=
operator|new
name|HessianOutput
argument_list|(
name|bytes
argument_list|)
decl_stmt|;
name|out
operator|.
name|setSerializerFactory
argument_list|(
name|serializerFactory
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeObject
argument_list|(
name|object
argument_list|)
expr_stmt|;
return|return
name|bytes
operator|.
name|toByteArray
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|serialize
parameter_list|(
name|Object
name|object
parameter_list|,
name|OutputStream
name|outputStream
parameter_list|)
throws|throws
name|IOException
block|{
name|Hessian2Output
name|out
init|=
operator|new
name|Hessian2Output
argument_list|(
name|outputStream
argument_list|)
decl_stmt|;
name|out
operator|.
name|setSerializerFactory
argument_list|(
name|serializerFactory
argument_list|)
expr_stmt|;
name|out
operator|.
name|writeObject
argument_list|(
name|object
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|deserialize
parameter_list|(
name|byte
index|[]
name|serializedObject
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|objectClass
parameter_list|)
throws|throws
name|IOException
block|{
name|HessianInput
name|in
init|=
operator|new
name|HessianInput
argument_list|(
operator|new
name|ByteArrayInputStream
argument_list|(
name|serializedObject
argument_list|)
argument_list|)
decl_stmt|;
name|in
operator|.
name|setSerializerFactory
argument_list|(
name|serializerFactory
argument_list|)
expr_stmt|;
return|return
name|objectClass
operator|.
name|cast
argument_list|(
name|in
operator|.
name|readObject
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|T
name|deserialize
parameter_list|(
name|InputStream
name|input
parameter_list|,
name|Class
argument_list|<
name|T
argument_list|>
name|objectClass
parameter_list|)
throws|throws
name|IOException
block|{
name|HessianInput
name|in
init|=
operator|new
name|HessianInput
argument_list|(
name|input
argument_list|)
decl_stmt|;
name|in
operator|.
name|setSerializerFactory
argument_list|(
name|serializerFactory
argument_list|)
expr_stmt|;
return|return
name|objectClass
operator|.
name|cast
argument_list|(
name|in
operator|.
name|readObject
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

