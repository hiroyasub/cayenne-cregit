begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|template
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|template
operator|.
name|directive
operator|.
name|Bind
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|template
operator|.
name|directive
operator|.
name|BindEqual
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|template
operator|.
name|directive
operator|.
name|BindNotEqual
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|template
operator|.
name|directive
operator|.
name|BindObjectEqual
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|template
operator|.
name|directive
operator|.
name|BindObjectNotEqual
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|template
operator|.
name|directive
operator|.
name|Directive
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|template
operator|.
name|directive
operator|.
name|Result
import|;
end_import

begin_comment
comment|/**  * @since 4.1  */
end_comment

begin_class
specifier|public
class|class
name|DefaultTemplateContextFactory
implements|implements
name|TemplateContextFactory
block|{
specifier|private
specifier|final
name|SQLTemplateRenderingUtils
name|helper
decl_stmt|;
comment|// directive map is static for now, can be easily injected
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|Directive
argument_list|>
name|directives
decl_stmt|;
specifier|public
name|DefaultTemplateContextFactory
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Directive
argument_list|>
name|directiveHashMap
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|directiveHashMap
operator|.
name|put
argument_list|(
literal|"bind"
argument_list|,
name|Bind
operator|.
name|INSTANCE
argument_list|)
expr_stmt|;
name|directiveHashMap
operator|.
name|put
argument_list|(
literal|"bindEqual"
argument_list|,
name|BindEqual
operator|.
name|INSTANCE
argument_list|)
expr_stmt|;
name|directiveHashMap
operator|.
name|put
argument_list|(
literal|"bindNotEqual"
argument_list|,
name|BindNotEqual
operator|.
name|INSTANCE
argument_list|)
expr_stmt|;
name|directiveHashMap
operator|.
name|put
argument_list|(
literal|"bindObjectEqual"
argument_list|,
name|BindObjectEqual
operator|.
name|INSTANCE
argument_list|)
expr_stmt|;
name|directiveHashMap
operator|.
name|put
argument_list|(
literal|"bindObjectNotEqual"
argument_list|,
name|BindObjectNotEqual
operator|.
name|INSTANCE
argument_list|)
expr_stmt|;
name|directiveHashMap
operator|.
name|put
argument_list|(
literal|"result"
argument_list|,
name|Result
operator|.
name|INSTANCE
argument_list|)
expr_stmt|;
name|directives
operator|=
name|Collections
operator|.
name|unmodifiableMap
argument_list|(
name|directiveHashMap
argument_list|)
expr_stmt|;
name|helper
operator|=
operator|new
name|SQLTemplateRenderingUtils
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Context
name|createContext
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|?
argument_list|>
name|parameters
parameter_list|,
name|boolean
name|positionalMode
parameter_list|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|realParameters
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|(
name|parameters
operator|.
name|size
argument_list|()
operator|+
literal|1
argument_list|)
decl_stmt|;
name|realParameters
operator|.
name|putAll
argument_list|(
name|parameters
argument_list|)
expr_stmt|;
name|realParameters
operator|.
name|put
argument_list|(
literal|"helper"
argument_list|,
name|helper
argument_list|)
expr_stmt|;
return|return
operator|new
name|Context
argument_list|(
name|directives
argument_list|,
name|realParameters
argument_list|,
name|positionalMode
argument_list|)
return|;
block|}
block|}
end_class

end_unit

