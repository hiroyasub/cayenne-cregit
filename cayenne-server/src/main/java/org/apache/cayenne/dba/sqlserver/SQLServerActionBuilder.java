begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|sqlserver
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|DataNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|JdbcActionBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * @since 1.2  */
end_comment

begin_class
specifier|public
class|class
name|SQLServerActionBuilder
extends|extends
name|JdbcActionBuilder
block|{
comment|/** 	 * Stores the major version of the database. 	 * 	 * @since 4.2 	 */
specifier|private
name|Integer
name|version
decl_stmt|;
comment|/** 	 * @since 4.0 	 */
specifier|public
name|SQLServerActionBuilder
parameter_list|(
name|DataNode
name|dataNode
parameter_list|)
block|{
name|super
argument_list|(
name|dataNode
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|SQLAction
name|batchAction
parameter_list|(
name|BatchQuery
name|query
parameter_list|)
block|{
comment|// check run strategy...
comment|// optimistic locking is not supported in batches due to JDBC driver
comment|// limitations
name|boolean
name|useOptimisticLock
init|=
name|query
operator|.
name|isUsingOptimisticLocking
argument_list|()
decl_stmt|;
name|boolean
name|runningAsBatch
init|=
operator|!
name|useOptimisticLock
operator|&&
name|dataNode
operator|.
name|getAdapter
argument_list|()
operator|.
name|supportsBatchUpdates
argument_list|()
decl_stmt|;
return|return
operator|new
name|SQLServerBatchAction
argument_list|(
name|query
argument_list|,
name|dataNode
argument_list|,
name|runningAsBatch
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|SQLAction
name|procedureAction
parameter_list|(
name|ProcedureQuery
name|query
parameter_list|)
block|{
return|return
operator|new
name|SQLServerProcedureAction
argument_list|(
name|query
argument_list|,
name|dataNode
argument_list|)
return|;
block|}
comment|/** 	 * @since 4.2 	 */
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|SQLAction
name|objectSelectAction
parameter_list|(
name|SelectQuery
argument_list|<
name|T
argument_list|>
name|query
parameter_list|)
block|{
if|if
condition|(
name|query
operator|.
name|getOrderings
argument_list|()
operator|==
literal|null
operator|||
name|query
operator|.
name|getOrderings
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|0
operator|||
name|version
operator|==
literal|null
operator|||
name|version
operator|<
literal|12
condition|)
block|{
return|return
operator|new
name|SQLServerSelectAction
argument_list|(
name|query
argument_list|,
name|dataNode
argument_list|,
literal|true
argument_list|)
return|;
block|}
return|return
operator|new
name|SQLServerSelectAction
argument_list|(
name|query
argument_list|,
name|dataNode
argument_list|,
literal|false
argument_list|)
return|;
block|}
comment|/** 	 * @since 4.2 	 */
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|SQLAction
name|objectSelectAction
parameter_list|(
name|FluentSelect
argument_list|<
name|T
argument_list|>
name|query
parameter_list|)
block|{
if|if
condition|(
name|query
operator|.
name|getOrderings
argument_list|()
operator|==
literal|null
operator|||
name|query
operator|.
name|getOrderings
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|0
operator|||
name|version
operator|==
literal|null
operator|||
name|version
operator|<
literal|12
condition|)
block|{
return|return
operator|new
name|SQLServerSelectAction
argument_list|(
name|query
argument_list|,
name|dataNode
argument_list|,
literal|true
argument_list|)
return|;
block|}
return|return
operator|new
name|SQLServerSelectAction
argument_list|(
name|query
argument_list|,
name|dataNode
argument_list|,
literal|false
argument_list|)
return|;
block|}
specifier|public
name|Integer
name|getVersion
parameter_list|()
block|{
return|return
name|version
return|;
block|}
specifier|public
name|void
name|setVersion
parameter_list|(
name|Integer
name|version
parameter_list|)
block|{
name|this
operator|.
name|version
operator|=
name|version
expr_stmt|;
block|}
block|}
end_class

end_unit

