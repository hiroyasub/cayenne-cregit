begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_comment
comment|/**  * Description of the database version and its type  */
end_comment

begin_class
specifier|public
class|class
name|DbVersion
implements|implements
name|Comparable
argument_list|<
name|DbVersion
argument_list|>
block|{
comment|/**      * DbVersion: majorVersion = 11, minorVersion = 0      */
specifier|public
specifier|static
specifier|final
name|DbVersion
name|MS_SQL_2012
decl_stmt|;
comment|/**      * DbVersion: majorVersion = 10, minorVersion = 0      */
specifier|public
specifier|static
specifier|final
name|DbVersion
name|MS_SQL_2008
decl_stmt|;
static|static
block|{
name|MS_SQL_2012
operator|=
operator|new
name|DbVersion
argument_list|(
name|DbType
operator|.
name|MS_SQL
argument_list|,
literal|11
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|MS_SQL_2008
operator|=
operator|new
name|DbVersion
argument_list|(
name|DbType
operator|.
name|MS_SQL
argument_list|,
literal|10
argument_list|,
literal|0
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|final
name|DbType
name|dbType
decl_stmt|;
specifier|private
specifier|final
name|int
name|majorVersion
decl_stmt|;
specifier|private
specifier|final
name|int
name|minorVersion
decl_stmt|;
specifier|public
name|DbVersion
parameter_list|(
name|DbType
name|dbType
parameter_list|,
name|int
name|majorVersion
parameter_list|,
name|int
name|minorVersion
parameter_list|)
block|{
name|this
operator|.
name|dbType
operator|=
name|dbType
expr_stmt|;
name|this
operator|.
name|majorVersion
operator|=
name|majorVersion
expr_stmt|;
name|this
operator|.
name|minorVersion
operator|=
name|minorVersion
expr_stmt|;
block|}
specifier|public
name|int
name|getMajorVersion
parameter_list|()
block|{
return|return
name|majorVersion
return|;
block|}
specifier|public
name|int
name|getMinorVersion
parameter_list|()
block|{
return|return
name|minorVersion
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|obj
operator|==
name|this
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
operator|!
operator|(
name|obj
operator|instanceof
name|DbVersion
operator|)
condition|)
block|{
return|return
literal|false
return|;
block|}
name|DbVersion
name|dbVersion
init|=
operator|(
name|DbVersion
operator|)
name|obj
decl_stmt|;
return|return
name|dbVersion
operator|.
name|majorVersion
operator|==
name|this
operator|.
name|majorVersion
operator|&&
name|dbVersion
operator|.
name|minorVersion
operator|==
name|this
operator|.
name|minorVersion
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|Objects
operator|.
name|hash
argument_list|(
name|this
operator|.
name|majorVersion
argument_list|,
name|this
operator|.
name|minorVersion
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"DbVersion: [dbType: '"
operator|+
name|this
operator|.
name|dbType
operator|.
name|getType
argument_list|()
operator|+
literal|"', majorVersion:'"
operator|+
name|this
operator|.
name|majorVersion
operator|+
literal|"', minorVersion:'"
operator|+
name|this
operator|.
name|minorVersion
operator|+
literal|"']"
return|;
block|}
comment|/**      * @return {@code true} if the types of equivalents,      * {@code false} otherwise      */
specifier|public
name|boolean
name|isTypeCheck
parameter_list|(
name|DbVersion
name|o
parameter_list|)
block|{
return|return
name|this
operator|.
name|dbType
operator|==
name|o
operator|.
name|dbType
return|;
block|}
comment|/**      * Compare by version, type is not taken into account.      * Before calling this method, do a check:      * {@link DbVersion#isTypeCheck(org.apache.cayenne.dba.DbVersion)}      */
annotation|@
name|Override
specifier|public
name|int
name|compareTo
parameter_list|(
name|DbVersion
name|o
parameter_list|)
block|{
if|if
condition|(
name|o
operator|.
name|equals
argument_list|(
name|this
argument_list|)
condition|)
block|{
return|return
literal|0
return|;
block|}
if|if
condition|(
name|this
operator|.
name|majorVersion
operator|==
name|o
operator|.
name|minorVersion
condition|)
block|{
return|return
name|this
operator|.
name|minorVersion
operator|-
name|o
operator|.
name|minorVersion
return|;
block|}
return|return
name|this
operator|.
name|majorVersion
operator|-
name|o
operator|.
name|majorVersion
return|;
block|}
specifier|public
enum|enum
name|DbType
block|{
name|MS_SQL
argument_list|(
literal|"MICROSOFT SQL SERVER"
argument_list|)
block|;
specifier|private
specifier|final
name|String
name|type
decl_stmt|;
name|DbType
parameter_list|(
name|String
name|type
parameter_list|)
block|{
name|this
operator|.
name|type
operator|=
name|type
expr_stmt|;
block|}
specifier|public
name|String
name|getType
parameter_list|()
block|{
return|return
name|type
return|;
block|}
block|}
block|}
end_class

end_unit

