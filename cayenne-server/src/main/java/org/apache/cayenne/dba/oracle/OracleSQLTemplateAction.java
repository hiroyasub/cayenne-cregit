begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|oracle
package|;
end_package

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|ResultSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|SQLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Statement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|DataNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|OperationObserver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|jdbc
operator|.
name|RowDescriptorBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|jdbc
operator|.
name|SQLStatement
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|jdbc
operator|.
name|SQLTemplateAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|SQLTemplate
import|;
end_import

begin_comment
comment|/**  * @since 3.0  */
end_comment

begin_class
class|class
name|OracleSQLTemplateAction
extends|extends
name|SQLTemplateAction
block|{
specifier|protected
name|DbEntity
name|dbEntity
decl_stmt|;
name|OracleSQLTemplateAction
parameter_list|(
name|SQLTemplate
name|query
parameter_list|,
name|DataNode
name|dataNode
parameter_list|)
block|{
name|super
argument_list|(
name|query
argument_list|,
name|dataNode
argument_list|)
expr_stmt|;
name|this
operator|.
name|dbEntity
operator|=
name|query
operator|.
name|getMetaData
argument_list|(
name|dataNode
operator|.
name|getEntityResolver
argument_list|()
argument_list|)
operator|.
name|getDbEntity
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|processSelectResult
parameter_list|(
name|SQLStatement
name|compiled
parameter_list|,
name|Connection
name|connection
parameter_list|,
name|Statement
name|statement
parameter_list|,
name|ResultSet
name|resultSet
parameter_list|,
name|OperationObserver
name|callback
parameter_list|,
name|long
name|startTime
parameter_list|)
throws|throws
name|Exception
block|{
comment|// wrap ResultSet to distinguish between Integer and BigDecimal for
comment|// Oracle NUMBER
comment|// columns...
if|if
condition|(
name|compiled
operator|.
name|getResultColumns
argument_list|()
operator|.
name|length
operator|==
literal|0
condition|)
block|{
name|resultSet
operator|=
operator|new
name|OracleResultSetWrapper
argument_list|(
name|resultSet
argument_list|)
expr_stmt|;
block|}
name|super
operator|.
name|processSelectResult
argument_list|(
name|compiled
argument_list|,
name|connection
argument_list|,
name|statement
argument_list|,
name|resultSet
argument_list|,
name|callback
argument_list|,
name|startTime
argument_list|)
expr_stmt|;
block|}
comment|/** 	 * @since 3.0 	 */
annotation|@
name|Override
specifier|protected
name|RowDescriptorBuilder
name|configureRowDescriptorBuilder
parameter_list|(
name|SQLStatement
name|compiled
parameter_list|,
name|ResultSet
name|resultSet
parameter_list|)
throws|throws
name|SQLException
block|{
name|RowDescriptorBuilder
name|builder
init|=
name|super
operator|.
name|configureRowDescriptorBuilder
argument_list|(
name|compiled
argument_list|,
name|resultSet
argument_list|)
decl_stmt|;
return|return
name|builder
return|;
block|}
block|}
end_class

end_unit

