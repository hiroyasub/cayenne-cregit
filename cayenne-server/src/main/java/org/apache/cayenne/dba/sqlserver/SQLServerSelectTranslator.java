begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|sqlserver
package|;
end_package

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|DataNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|trans
operator|.
name|SelectTranslator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|Query
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|QueryMetadata
import|;
end_import

begin_class
specifier|public
class|class
name|SQLServerSelectTranslator
extends|extends
name|SelectTranslator
block|{
comment|/**      * @since 3.2      */
specifier|public
name|SQLServerSelectTranslator
parameter_list|(
name|Query
name|query
parameter_list|,
name|DataNode
name|dataNode
parameter_list|,
name|Connection
name|connection
parameter_list|)
block|{
name|super
argument_list|(
name|query
argument_list|,
name|dataNode
argument_list|,
name|connection
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|appendLimitAndOffsetClauses
parameter_list|(
name|StringBuilder
name|buffer
parameter_list|)
block|{
name|QueryMetadata
name|metadata
init|=
name|getQuery
argument_list|()
operator|.
name|getMetaData
argument_list|(
name|getEntityResolver
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|limit
init|=
name|metadata
operator|.
name|getFetchLimit
argument_list|()
decl_stmt|;
name|int
name|offset
init|=
name|metadata
operator|.
name|getFetchOffset
argument_list|()
decl_stmt|;
if|if
condition|(
name|limit
operator|>
literal|0
condition|)
block|{
name|String
name|sql
init|=
name|buffer
operator|.
name|toString
argument_list|()
decl_stmt|;
comment|// If contains distinct insert top limit after
if|if
condition|(
name|sql
operator|.
name|startsWith
argument_list|(
literal|"SELECT DISTINCT "
argument_list|)
condition|)
block|{
name|buffer
operator|.
name|replace
argument_list|(
literal|0
argument_list|,
literal|15
argument_list|,
literal|"SELECT DISTINCT TOP "
operator|+
operator|(
name|offset
operator|+
name|limit
operator|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|buffer
operator|.
name|replace
argument_list|(
literal|0
argument_list|,
literal|6
argument_list|,
literal|"SELECT TOP "
operator|+
operator|(
name|offset
operator|+
name|limit
operator|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

