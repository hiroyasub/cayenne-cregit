begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|flush
operator|.
name|operation
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|CayenneRuntimeException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|PersistenceState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|Persistent
import|;
end_import

begin_comment
comment|/**  * @since 4.2  */
end_comment

begin_enum
specifier|public
enum|enum
name|DbRowOpType
implements|implements
name|Comparable
argument_list|<
name|DbRowOpType
argument_list|>
block|{
name|INSERT
block|,
name|UPDATE
block|,
name|DELETE
block|;
specifier|public
specifier|static
name|DbRowOpType
name|forObject
parameter_list|(
name|Persistent
name|object
parameter_list|)
block|{
switch|switch
condition|(
name|object
operator|.
name|getPersistenceState
argument_list|()
condition|)
block|{
case|case
name|PersistenceState
operator|.
name|NEW
case|:
return|return
name|INSERT
return|;
case|case
name|PersistenceState
operator|.
name|MODIFIED
case|:
return|return
name|UPDATE
return|;
case|case
name|PersistenceState
operator|.
name|DELETED
case|:
return|return
name|DELETE
return|;
block|}
throw|throw
operator|new
name|CayenneRuntimeException
argument_list|(
literal|"Trying to flush object %s in wrong persistence state %s"
argument_list|,
name|object
argument_list|,
name|PersistenceState
operator|.
name|persistenceStateName
argument_list|(
name|object
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
argument_list|)
throw|;
block|}
block|}
end_enum

end_unit

