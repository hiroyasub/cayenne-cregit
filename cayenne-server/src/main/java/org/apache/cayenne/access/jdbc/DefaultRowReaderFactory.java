begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|jdbc
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|CayenneRuntimeException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|EntityResultSegment
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|QueryMetadata
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|ScalarResultSegment
import|;
end_import

begin_comment
comment|/**  * @since 3.2  */
end_comment

begin_class
specifier|public
class|class
name|DefaultRowReaderFactory
implements|implements
name|RowReaderFactory
block|{
annotation|@
name|Override
specifier|public
name|RowReader
argument_list|<
name|?
argument_list|>
name|createRowReader
parameter_list|(
name|RowDescriptor
name|descriptor
parameter_list|,
name|QueryMetadata
name|queryMetadata
parameter_list|)
block|{
name|List
argument_list|<
name|Object
argument_list|>
name|rsMapping
init|=
name|queryMetadata
operator|.
name|getResultSetMapping
argument_list|()
decl_stmt|;
if|if
condition|(
name|rsMapping
operator|==
literal|null
condition|)
block|{
return|return
name|createFullRowReader
argument_list|(
name|descriptor
argument_list|,
name|queryMetadata
argument_list|)
return|;
block|}
name|int
name|resultWidth
init|=
name|rsMapping
operator|.
name|size
argument_list|()
decl_stmt|;
if|if
condition|(
name|resultWidth
operator|==
literal|0
condition|)
block|{
throw|throw
operator|new
name|CayenneRuntimeException
argument_list|(
literal|"Empty result descriptor"
argument_list|)
throw|;
block|}
if|else if
condition|(
name|resultWidth
operator|==
literal|1
condition|)
block|{
name|Object
name|segment
init|=
name|rsMapping
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
if|if
condition|(
name|segment
operator|instanceof
name|EntityResultSegment
condition|)
block|{
return|return
name|createEntityRowReader
argument_list|(
name|descriptor
argument_list|,
name|queryMetadata
argument_list|,
operator|(
name|EntityResultSegment
operator|)
name|segment
argument_list|)
return|;
block|}
else|else
block|{
return|return
operator|new
name|ScalarRowReader
argument_list|<
name|Object
argument_list|>
argument_list|(
name|descriptor
argument_list|,
operator|(
name|ScalarResultSegment
operator|)
name|segment
argument_list|)
return|;
block|}
block|}
else|else
block|{
name|CompoundRowReader
name|reader
init|=
operator|new
name|CompoundRowReader
argument_list|(
name|resultWidth
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|resultWidth
condition|;
name|i
operator|++
control|)
block|{
name|Object
name|segment
init|=
name|rsMapping
operator|.
name|get
argument_list|(
name|i
argument_list|)
decl_stmt|;
if|if
condition|(
name|segment
operator|instanceof
name|EntityResultSegment
condition|)
block|{
name|reader
operator|.
name|addRowReader
argument_list|(
name|i
argument_list|,
name|createEntityRowReader
argument_list|(
name|descriptor
argument_list|,
name|queryMetadata
argument_list|,
operator|(
name|EntityResultSegment
operator|)
name|segment
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|reader
operator|.
name|addRowReader
argument_list|(
name|i
argument_list|,
operator|new
name|ScalarRowReader
argument_list|<
name|Object
argument_list|>
argument_list|(
name|descriptor
argument_list|,
operator|(
name|ScalarResultSegment
operator|)
name|segment
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|reader
return|;
block|}
block|}
specifier|private
name|RowReader
argument_list|<
name|?
argument_list|>
name|createEntityRowReader
parameter_list|(
name|RowDescriptor
name|descriptor
parameter_list|,
name|QueryMetadata
name|queryMetadata
parameter_list|,
name|EntityResultSegment
name|resultMetadata
parameter_list|)
block|{
if|if
condition|(
name|queryMetadata
operator|.
name|getPageSize
argument_list|()
operator|>
literal|0
condition|)
block|{
return|return
operator|new
name|IdRowReader
argument_list|<
name|Object
argument_list|>
argument_list|(
name|descriptor
argument_list|,
name|queryMetadata
argument_list|)
return|;
block|}
if|else if
condition|(
name|resultMetadata
operator|.
name|getClassDescriptor
argument_list|()
operator|!=
literal|null
operator|&&
name|resultMetadata
operator|.
name|getClassDescriptor
argument_list|()
operator|.
name|hasSubclasses
argument_list|()
condition|)
block|{
return|return
operator|new
name|InheritanceAwareEntityRowReader
argument_list|(
name|descriptor
argument_list|,
name|resultMetadata
argument_list|)
return|;
block|}
else|else
block|{
return|return
operator|new
name|EntityRowReader
argument_list|(
name|descriptor
argument_list|,
name|resultMetadata
argument_list|)
return|;
block|}
block|}
specifier|private
name|RowReader
argument_list|<
name|?
argument_list|>
name|createFullRowReader
parameter_list|(
name|RowDescriptor
name|descriptor
parameter_list|,
name|QueryMetadata
name|queryMetadata
parameter_list|)
block|{
if|if
condition|(
name|queryMetadata
operator|.
name|getPageSize
argument_list|()
operator|>
literal|0
condition|)
block|{
return|return
operator|new
name|IdRowReader
argument_list|<
name|Object
argument_list|>
argument_list|(
name|descriptor
argument_list|,
name|queryMetadata
argument_list|)
return|;
block|}
if|else if
condition|(
name|queryMetadata
operator|.
name|getClassDescriptor
argument_list|()
operator|!=
literal|null
operator|&&
name|queryMetadata
operator|.
name|getClassDescriptor
argument_list|()
operator|.
name|hasSubclasses
argument_list|()
condition|)
block|{
return|return
operator|new
name|InheritanceAwareRowReader
argument_list|(
name|descriptor
argument_list|,
name|queryMetadata
argument_list|)
return|;
block|}
else|else
block|{
return|return
operator|new
name|FullRowReader
argument_list|(
name|descriptor
argument_list|,
name|queryMetadata
argument_list|)
return|;
block|}
block|}
block|}
end_class

end_unit

