begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|DataRow
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ObjectId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|Persistent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|reflect
operator|.
name|ClassDescriptor
import|;
end_import

begin_comment
comment|/**  * @since 4.0  */
end_comment

begin_class
class|class
name|PrefetchObjectResolver
extends|extends
name|ObjectResolver
block|{
specifier|private
name|Map
argument_list|<
name|ObjectId
argument_list|,
name|Persistent
argument_list|>
name|seen
decl_stmt|;
name|PrefetchObjectResolver
parameter_list|(
name|DataContext
name|context
parameter_list|,
name|ClassDescriptor
name|descriptor
parameter_list|,
name|boolean
name|refresh
parameter_list|,
name|Map
argument_list|<
name|ObjectId
argument_list|,
name|Persistent
argument_list|>
name|seen
parameter_list|)
block|{
name|super
argument_list|(
name|context
argument_list|,
name|descriptor
argument_list|,
name|refresh
argument_list|)
expr_stmt|;
name|this
operator|.
name|seen
operator|=
name|seen
expr_stmt|;
block|}
annotation|@
name|Override
name|Persistent
name|objectFromDataRow
parameter_list|(
name|DataRow
name|row
parameter_list|,
name|ObjectId
name|anId
parameter_list|,
name|ClassDescriptor
name|classDescriptor
parameter_list|)
block|{
comment|// skip processing of objects that were already processed in this
comment|// transaction, either by this node or by some other node...
comment|// added per CAY-1695 ..
name|Persistent
name|object
init|=
name|seen
operator|.
name|get
argument_list|(
name|anId
argument_list|)
decl_stmt|;
if|if
condition|(
name|object
operator|==
literal|null
condition|)
block|{
name|object
operator|=
name|super
operator|.
name|objectFromDataRow
argument_list|(
name|row
argument_list|,
name|anId
argument_list|,
name|classDescriptor
argument_list|)
expr_stmt|;
name|seen
operator|.
name|put
argument_list|(
name|anId
argument_list|,
name|object
argument_list|)
expr_stmt|;
block|}
return|return
name|object
return|;
block|}
block|}
end_class

end_unit

