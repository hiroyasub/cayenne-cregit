begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|translator
operator|.
name|select
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbRelationship
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|JoinType
import|;
end_import

begin_comment
comment|/**  * @since 4.2  */
end_comment

begin_class
class|class
name|TableTreeNode
block|{
comment|// path that spawned this node
specifier|private
specifier|final
name|PathComponents
name|attributePath
decl_stmt|;
specifier|private
specifier|final
name|DbEntity
name|entity
decl_stmt|;
specifier|private
specifier|final
name|String
name|tableAlias
decl_stmt|;
specifier|private
specifier|final
name|JoinType
name|joinType
decl_stmt|;
comment|// relationship that connects this node with parent (or null if this is root)
specifier|private
specifier|final
name|DbRelationship
name|relationship
decl_stmt|;
name|TableTreeNode
parameter_list|(
name|DbEntity
name|entity
parameter_list|,
name|String
name|tableAlias
parameter_list|)
block|{
name|this
operator|.
name|attributePath
operator|=
operator|new
name|PathComponents
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|this
operator|.
name|entity
operator|=
name|entity
expr_stmt|;
name|this
operator|.
name|tableAlias
operator|=
name|tableAlias
expr_stmt|;
name|this
operator|.
name|relationship
operator|=
literal|null
expr_stmt|;
name|this
operator|.
name|joinType
operator|=
literal|null
expr_stmt|;
block|}
name|TableTreeNode
parameter_list|(
name|String
name|path
parameter_list|,
name|DbRelationship
name|relationship
parameter_list|,
name|String
name|tableAlias
parameter_list|,
name|JoinType
name|joinType
parameter_list|)
block|{
name|this
operator|.
name|attributePath
operator|=
operator|new
name|PathComponents
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|this
operator|.
name|entity
operator|=
name|relationship
operator|.
name|getTargetEntity
argument_list|()
expr_stmt|;
name|this
operator|.
name|tableAlias
operator|=
name|tableAlias
expr_stmt|;
name|this
operator|.
name|relationship
operator|=
name|relationship
expr_stmt|;
name|this
operator|.
name|joinType
operator|=
name|joinType
expr_stmt|;
block|}
specifier|public
name|PathComponents
name|getAttributePath
parameter_list|()
block|{
return|return
name|attributePath
return|;
block|}
specifier|public
name|DbEntity
name|getEntity
parameter_list|()
block|{
return|return
name|entity
return|;
block|}
specifier|public
name|String
name|getTableAlias
parameter_list|()
block|{
return|return
name|tableAlias
return|;
block|}
specifier|public
name|JoinType
name|getJoinType
parameter_list|()
block|{
return|return
name|joinType
return|;
block|}
specifier|public
name|DbRelationship
name|getRelationship
parameter_list|()
block|{
return|return
name|relationship
return|;
block|}
block|}
end_class

end_unit

