begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|event
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|DataRow
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ObjectId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|event
operator|.
name|CayenneEvent
import|;
end_import

begin_comment
comment|/**  * Event sent on modification of the DataRowStore.  *   * @since 1.1  */
end_comment

begin_class
specifier|public
class|class
name|SnapshotEvent
extends|extends
name|CayenneEvent
block|{
specifier|protected
name|long
name|timestamp
decl_stmt|;
specifier|protected
name|Collection
argument_list|<
name|ObjectId
argument_list|>
name|deletedIds
decl_stmt|;
specifier|protected
name|Collection
argument_list|<
name|ObjectId
argument_list|>
name|invalidatedIds
decl_stmt|;
specifier|protected
name|Map
argument_list|<
name|ObjectId
argument_list|,
name|DataRow
argument_list|>
name|modifiedDiffs
decl_stmt|;
specifier|protected
name|Collection
argument_list|<
name|ObjectId
argument_list|>
name|indirectlyModifiedIds
decl_stmt|;
specifier|public
name|SnapshotEvent
parameter_list|(
name|Object
name|source
parameter_list|,
name|Object
name|postedBy
parameter_list|,
name|Map
argument_list|<
name|ObjectId
argument_list|,
name|DataRow
argument_list|>
name|modifiedDiffs
parameter_list|,
name|Collection
argument_list|<
name|ObjectId
argument_list|>
name|deletedIds
parameter_list|,
name|Collection
argument_list|<
name|ObjectId
argument_list|>
name|invalidatedIds
parameter_list|,
name|Collection
argument_list|<
name|ObjectId
argument_list|>
name|indirectlyModifiedIds
parameter_list|)
block|{
name|super
argument_list|(
name|source
argument_list|,
name|postedBy
argument_list|,
literal|null
argument_list|)
expr_stmt|;
name|this
operator|.
name|timestamp
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
expr_stmt|;
name|this
operator|.
name|modifiedDiffs
operator|=
name|modifiedDiffs
expr_stmt|;
name|this
operator|.
name|deletedIds
operator|=
name|deletedIds
expr_stmt|;
name|this
operator|.
name|invalidatedIds
operator|=
name|invalidatedIds
expr_stmt|;
name|this
operator|.
name|indirectlyModifiedIds
operator|=
name|indirectlyModifiedIds
expr_stmt|;
block|}
specifier|public
name|long
name|getTimestamp
parameter_list|()
block|{
return|return
name|timestamp
return|;
block|}
specifier|public
name|Map
argument_list|<
name|ObjectId
argument_list|,
name|DataRow
argument_list|>
name|getModifiedDiffs
parameter_list|()
block|{
return|return
operator|(
name|modifiedDiffs
operator|!=
literal|null
operator|)
condition|?
name|modifiedDiffs
else|:
name|Collections
operator|.
expr|<
name|ObjectId
operator|,
name|DataRow
operator|>
name|emptyMap
argument_list|()
return|;
block|}
specifier|public
name|Collection
argument_list|<
name|ObjectId
argument_list|>
name|getDeletedIds
parameter_list|()
block|{
return|return
operator|(
name|deletedIds
operator|!=
literal|null
operator|)
condition|?
name|deletedIds
else|:
name|Collections
operator|.
expr|<
name|ObjectId
operator|>
name|emptyList
argument_list|()
return|;
block|}
specifier|public
name|Collection
argument_list|<
name|ObjectId
argument_list|>
name|getInvalidatedIds
parameter_list|()
block|{
return|return
operator|(
name|invalidatedIds
operator|!=
literal|null
operator|)
condition|?
name|invalidatedIds
else|:
name|Collections
operator|.
expr|<
name|ObjectId
operator|>
name|emptyList
argument_list|()
return|;
block|}
specifier|public
name|Collection
argument_list|<
name|ObjectId
argument_list|>
name|getIndirectlyModifiedIds
parameter_list|()
block|{
return|return
operator|(
name|indirectlyModifiedIds
operator|!=
literal|null
operator|)
condition|?
name|indirectlyModifiedIds
else|:
name|Collections
operator|.
expr|<
name|ObjectId
operator|>
name|emptyList
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuilder
name|buffer
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|buffer
operator|.
name|append
argument_list|(
literal|"[SnapshotEvent] source: "
argument_list|)
operator|.
name|append
argument_list|(
name|getSource
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|ObjectId
argument_list|,
name|DataRow
argument_list|>
name|modified
init|=
name|getModifiedDiffs
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|modified
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|buffer
operator|.
name|append
argument_list|(
literal|", modified "
argument_list|)
operator|.
name|append
argument_list|(
name|modified
operator|.
name|size
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|" id(s)"
argument_list|)
expr_stmt|;
block|}
name|Collection
argument_list|<
name|ObjectId
argument_list|>
name|deleted
init|=
name|getDeletedIds
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|deleted
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|buffer
operator|.
name|append
argument_list|(
literal|", deleted "
argument_list|)
operator|.
name|append
argument_list|(
name|deleted
operator|.
name|size
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|" id(s)"
argument_list|)
expr_stmt|;
block|}
name|Collection
argument_list|<
name|ObjectId
argument_list|>
name|invalidated
init|=
name|getInvalidatedIds
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|invalidated
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|buffer
operator|.
name|append
argument_list|(
literal|", invalidated "
argument_list|)
operator|.
name|append
argument_list|(
name|invalidated
operator|.
name|size
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|" id(s)"
argument_list|)
expr_stmt|;
block|}
name|Collection
argument_list|<
name|ObjectId
argument_list|>
name|related
init|=
name|getIndirectlyModifiedIds
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|related
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|buffer
operator|.
name|append
argument_list|(
literal|", indirectly modified "
argument_list|)
operator|.
name|append
argument_list|(
name|related
operator|.
name|size
argument_list|()
argument_list|)
operator|.
name|append
argument_list|(
literal|" id(s)"
argument_list|)
expr_stmt|;
block|}
return|return
name|buffer
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

