begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|types
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|concurrent
operator|.
name|ConcurrentHashMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Inject
import|;
end_import

begin_comment
comment|/**  * Default implementation of {@link ValueObjectTypeRegistry}  * @since 4.0  */
end_comment

begin_class
specifier|public
class|class
name|DefaultValueObjectTypeRegistry
implements|implements
name|ValueObjectTypeRegistry
block|{
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|ValueObjectType
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
argument_list|>
name|typeCache
decl_stmt|;
specifier|public
name|DefaultValueObjectTypeRegistry
parameter_list|(
annotation|@
name|Inject
name|List
argument_list|<
name|ValueObjectType
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
argument_list|>
name|valueObjectTypeList
parameter_list|)
block|{
name|typeCache
operator|=
operator|new
name|ConcurrentHashMap
argument_list|<>
argument_list|()
expr_stmt|;
name|buildTypeCache
argument_list|(
name|valueObjectTypeList
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|buildTypeCache
parameter_list|(
name|List
argument_list|<
name|ValueObjectType
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
argument_list|>
name|valueObjectTypeList
parameter_list|)
block|{
for|for
control|(
name|ValueObjectType
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
name|valueObjectType
range|:
name|valueObjectTypeList
control|)
block|{
name|typeCache
operator|.
name|put
argument_list|(
name|valueObjectType
operator|.
name|getValueType
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|valueObjectType
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * @inheritDoc      */
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
annotation|@
name|Override
specifier|public
parameter_list|<
name|T
parameter_list|>
name|ValueObjectType
argument_list|<
name|T
argument_list|,
name|?
argument_list|>
name|getValueType
parameter_list|(
name|Class
argument_list|<
name|?
extends|extends
name|T
argument_list|>
name|valueClass
parameter_list|)
block|{
name|ValueObjectType
name|type
init|=
name|typeCache
operator|.
name|get
argument_list|(
name|valueClass
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|type
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
return|return
name|type
return|;
block|}
block|}
end_class

end_unit

