begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|xml
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|DataChannelDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|Attributes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|ContentHandler
import|;
end_import

begin_comment
comment|/**  * @since 4.1  */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|DataChannelHandler
extends|extends
name|VersionAwareHandler
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|logger
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|XMLDataChannelDescriptorLoader
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|static
specifier|final
name|String
name|DOMAIN_TAG
init|=
literal|"domain"
decl_stmt|;
specifier|private
name|XMLDataChannelDescriptorLoader
name|xmlDataChannelDescriptorLoader
decl_stmt|;
name|DataChannelDescriptor
name|descriptor
decl_stmt|;
specifier|public
name|DataChannelHandler
parameter_list|(
name|XMLDataChannelDescriptorLoader
name|xmlDataChannelDescriptorLoader
parameter_list|,
name|DataChannelDescriptor
name|dataChannelDescriptor
parameter_list|,
name|LoaderContext
name|loaderContext
parameter_list|)
block|{
name|super
argument_list|(
name|loaderContext
argument_list|,
name|DOMAIN_TAG
argument_list|)
expr_stmt|;
name|this
operator|.
name|xmlDataChannelDescriptorLoader
operator|=
name|xmlDataChannelDescriptorLoader
expr_stmt|;
name|this
operator|.
name|descriptor
operator|=
name|dataChannelDescriptor
expr_stmt|;
name|setTargetNamespace
argument_list|(
name|DataChannelDescriptor
operator|.
name|SCHEMA_XSD
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|ContentHandler
name|createChildTagHandler
parameter_list|(
name|String
name|namespaceURI
parameter_list|,
name|String
name|localName
parameter_list|,
name|String
name|name
parameter_list|,
name|Attributes
name|attributes
parameter_list|)
block|{
if|if
condition|(
name|localName
operator|.
name|equals
argument_list|(
name|DOMAIN_TAG
argument_list|)
condition|)
block|{
return|return
operator|new
name|DataChannelChildrenHandler
argument_list|(
name|xmlDataChannelDescriptorLoader
argument_list|,
name|this
argument_list|)
return|;
block|}
name|logger
operator|.
name|info
argument_list|(
name|unexpectedTagMessage
argument_list|(
name|localName
argument_list|,
name|DOMAIN_TAG
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|super
operator|.
name|createChildTagHandler
argument_list|(
name|namespaceURI
argument_list|,
name|localName
argument_list|,
name|name
argument_list|,
name|attributes
argument_list|)
return|;
block|}
block|}
end_class

end_unit

