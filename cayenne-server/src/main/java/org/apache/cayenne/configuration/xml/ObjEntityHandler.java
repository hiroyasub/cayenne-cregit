begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|xml
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|exp
operator|.
name|ExpressionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|exp
operator|.
name|ExpressionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|CallbackDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DataMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|Attributes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|ContentHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_comment
comment|/**  * @since 4.1  */
end_comment

begin_class
specifier|public
class|class
name|ObjEntityHandler
extends|extends
name|NamespaceAwareNestedTagHandler
block|{
specifier|private
specifier|static
name|Logger
name|logger
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|ObjEntityHandler
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|OBJ_ENTITY_TAG
init|=
literal|"obj-entity"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|OBJ_ATTRIBUTE_TAG
init|=
literal|"obj-attribute"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|OBJ_ATTRIBUTE_OVERRIDE_TAG
init|=
literal|"attribute-override"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|EMBEDDED_ATTRIBUTE_TAG
init|=
literal|"embedded-attribute"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|QUALIFIER_TAG
init|=
literal|"qualifier"
decl_stmt|;
comment|// lifecycle listeners and callbacks related
specifier|private
specifier|static
specifier|final
name|String
name|POST_ADD_TAG
init|=
literal|"post-add"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PRE_PERSIST_TAG
init|=
literal|"pre-persist"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|POST_PERSIST_TAG
init|=
literal|"post-persist"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PRE_UPDATE_TAG
init|=
literal|"pre-update"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|POST_UPDATE_TAG
init|=
literal|"post-update"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|PRE_REMOVE_TAG
init|=
literal|"pre-remove"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|POST_REMOVE_TAG
init|=
literal|"post-remove"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|POST_LOAD_TAG
init|=
literal|"post-load"
decl_stmt|;
specifier|private
name|DataMap
name|map
decl_stmt|;
specifier|private
name|ObjEntity
name|entity
decl_stmt|;
specifier|private
name|ObjAttribute
name|lastAttribute
decl_stmt|;
specifier|public
name|ObjEntityHandler
parameter_list|(
name|NamespaceAwareNestedTagHandler
name|parentHandler
parameter_list|,
name|DataMap
name|map
parameter_list|)
block|{
name|super
argument_list|(
name|parentHandler
argument_list|)
expr_stmt|;
name|this
operator|.
name|map
operator|=
name|map
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|boolean
name|processElement
parameter_list|(
name|String
name|namespaceURI
parameter_list|,
name|String
name|localName
parameter_list|,
name|Attributes
name|attributes
parameter_list|)
throws|throws
name|SAXException
block|{
switch|switch
condition|(
name|localName
condition|)
block|{
case|case
name|OBJ_ENTITY_TAG
case|:
name|createObjEntity
argument_list|(
name|attributes
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
case|case
name|OBJ_ATTRIBUTE_TAG
case|:
name|createObjAttribute
argument_list|(
name|attributes
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
case|case
name|OBJ_ATTRIBUTE_OVERRIDE_TAG
case|:
name|processStartAttributeOverride
argument_list|(
name|attributes
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
case|case
name|QUALIFIER_TAG
case|:
return|return
literal|true
return|;
case|case
name|POST_ADD_TAG
case|:
case|case
name|PRE_PERSIST_TAG
case|:
case|case
name|POST_PERSIST_TAG
case|:
case|case
name|PRE_UPDATE_TAG
case|:
case|case
name|POST_UPDATE_TAG
case|:
case|case
name|PRE_REMOVE_TAG
case|:
case|case
name|POST_REMOVE_TAG
case|:
case|case
name|POST_LOAD_TAG
case|:
name|createCallback
argument_list|(
name|localName
argument_list|,
name|attributes
argument_list|)
expr_stmt|;
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|protected
name|ContentHandler
name|createChildTagHandler
parameter_list|(
name|String
name|namespaceURI
parameter_list|,
name|String
name|localName
parameter_list|,
name|String
name|qName
parameter_list|,
name|Attributes
name|attributes
parameter_list|)
block|{
if|if
condition|(
name|namespaceURI
operator|.
name|equals
argument_list|(
name|targetNamespace
argument_list|)
condition|)
block|{
switch|switch
condition|(
name|localName
condition|)
block|{
case|case
name|EMBEDDED_ATTRIBUTE_TAG
case|:
return|return
operator|new
name|EmbeddableAttributeHandler
argument_list|(
name|this
argument_list|,
name|entity
argument_list|)
return|;
block|}
block|}
return|return
name|super
operator|.
name|createChildTagHandler
argument_list|(
name|namespaceURI
argument_list|,
name|localName
argument_list|,
name|qName
argument_list|,
name|attributes
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|processCharData
parameter_list|(
name|String
name|localName
parameter_list|,
name|String
name|data
parameter_list|)
block|{
switch|switch
condition|(
name|localName
condition|)
block|{
case|case
name|QUALIFIER_TAG
case|:
name|createQualifier
argument_list|(
name|data
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
specifier|private
name|void
name|createObjEntity
parameter_list|(
name|Attributes
name|attributes
parameter_list|)
block|{
name|entity
operator|=
operator|new
name|ObjEntity
argument_list|(
name|attributes
operator|.
name|getValue
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setClassName
argument_list|(
name|attributes
operator|.
name|getValue
argument_list|(
literal|"className"
argument_list|)
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setClientClassName
argument_list|(
name|attributes
operator|.
name|getValue
argument_list|(
literal|"clientClassName"
argument_list|)
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setAbstract
argument_list|(
name|DataMapHandler
operator|.
name|TRUE
operator|.
name|equalsIgnoreCase
argument_list|(
name|attributes
operator|.
name|getValue
argument_list|(
literal|"abstract"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setReadOnly
argument_list|(
name|DataMapHandler
operator|.
name|TRUE
operator|.
name|equalsIgnoreCase
argument_list|(
name|attributes
operator|.
name|getValue
argument_list|(
literal|"readOnly"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setServerOnly
argument_list|(
name|DataMapHandler
operator|.
name|TRUE
operator|.
name|equalsIgnoreCase
argument_list|(
name|attributes
operator|.
name|getValue
argument_list|(
literal|"serverOnly"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
literal|"optimistic"
operator|.
name|equals
argument_list|(
name|attributes
operator|.
name|getValue
argument_list|(
literal|""
argument_list|,
literal|"lock-type"
argument_list|)
argument_list|)
condition|)
block|{
name|entity
operator|.
name|setDeclaredLockType
argument_list|(
name|ObjEntity
operator|.
name|LOCK_TYPE_OPTIMISTIC
argument_list|)
expr_stmt|;
block|}
name|String
name|superEntityName
init|=
name|attributes
operator|.
name|getValue
argument_list|(
literal|"superEntityName"
argument_list|)
decl_stmt|;
if|if
condition|(
name|superEntityName
operator|!=
literal|null
condition|)
block|{
name|entity
operator|.
name|setSuperEntityName
argument_list|(
name|superEntityName
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|entity
operator|.
name|setSuperClassName
argument_list|(
name|attributes
operator|.
name|getValue
argument_list|(
literal|"superClassName"
argument_list|)
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setClientSuperClassName
argument_list|(
name|attributes
operator|.
name|getValue
argument_list|(
literal|"clientSuperClassName"
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|entity
operator|.
name|setDbEntityName
argument_list|(
name|attributes
operator|.
name|getValue
argument_list|(
literal|"dbEntityName"
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|addObjEntity
argument_list|(
name|entity
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|createObjAttribute
parameter_list|(
name|Attributes
name|attributes
parameter_list|)
block|{
name|String
name|dbPath
init|=
name|attributes
operator|.
name|getValue
argument_list|(
literal|"db-attribute-path"
argument_list|)
decl_stmt|;
if|if
condition|(
name|dbPath
operator|==
literal|null
condition|)
block|{
name|dbPath
operator|=
name|attributes
operator|.
name|getValue
argument_list|(
literal|"db-attribute-name"
argument_list|)
expr_stmt|;
block|}
name|lastAttribute
operator|=
operator|new
name|ObjAttribute
argument_list|(
name|attributes
operator|.
name|getValue
argument_list|(
literal|"name"
argument_list|)
argument_list|)
expr_stmt|;
name|lastAttribute
operator|.
name|setType
argument_list|(
name|attributes
operator|.
name|getValue
argument_list|(
literal|"type"
argument_list|)
argument_list|)
expr_stmt|;
name|lastAttribute
operator|.
name|setUsedForLocking
argument_list|(
name|DataMapHandler
operator|.
name|TRUE
operator|.
name|equalsIgnoreCase
argument_list|(
name|attributes
operator|.
name|getValue
argument_list|(
literal|"lock"
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|lastAttribute
operator|.
name|setDbAttributePath
argument_list|(
name|dbPath
argument_list|)
expr_stmt|;
name|entity
operator|.
name|addAttribute
argument_list|(
name|lastAttribute
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|processStartAttributeOverride
parameter_list|(
name|Attributes
name|attributes
parameter_list|)
block|{
name|entity
operator|.
name|addAttributeOverride
argument_list|(
name|attributes
operator|.
name|getValue
argument_list|(
literal|"name"
argument_list|)
argument_list|,
name|attributes
operator|.
name|getValue
argument_list|(
literal|"db-attribute-path"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|CallbackDescriptor
name|getCallbackDescriptor
parameter_list|(
name|String
name|type
parameter_list|)
block|{
if|if
condition|(
name|entity
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
switch|switch
condition|(
name|type
condition|)
block|{
case|case
name|POST_ADD_TAG
case|:
return|return
name|entity
operator|.
name|getCallbackMap
argument_list|()
operator|.
name|getPostAdd
argument_list|()
return|;
case|case
name|PRE_PERSIST_TAG
case|:
return|return
name|entity
operator|.
name|getCallbackMap
argument_list|()
operator|.
name|getPrePersist
argument_list|()
return|;
case|case
name|POST_PERSIST_TAG
case|:
return|return
name|entity
operator|.
name|getCallbackMap
argument_list|()
operator|.
name|getPostPersist
argument_list|()
return|;
case|case
name|PRE_UPDATE_TAG
case|:
return|return
name|entity
operator|.
name|getCallbackMap
argument_list|()
operator|.
name|getPreUpdate
argument_list|()
return|;
case|case
name|POST_UPDATE_TAG
case|:
return|return
name|entity
operator|.
name|getCallbackMap
argument_list|()
operator|.
name|getPostUpdate
argument_list|()
return|;
case|case
name|PRE_REMOVE_TAG
case|:
return|return
name|entity
operator|.
name|getCallbackMap
argument_list|()
operator|.
name|getPreRemove
argument_list|()
return|;
case|case
name|POST_REMOVE_TAG
case|:
return|return
name|entity
operator|.
name|getCallbackMap
argument_list|()
operator|.
name|getPostRemove
argument_list|()
return|;
case|case
name|POST_LOAD_TAG
case|:
return|return
name|entity
operator|.
name|getCallbackMap
argument_list|()
operator|.
name|getPostLoad
argument_list|()
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|private
name|void
name|createCallback
parameter_list|(
name|String
name|type
parameter_list|,
name|Attributes
name|attributes
parameter_list|)
block|{
name|String
name|methodName
init|=
name|attributes
operator|.
name|getValue
argument_list|(
literal|"method-name"
argument_list|)
decl_stmt|;
name|CallbackDescriptor
name|descriptor
init|=
name|getCallbackDescriptor
argument_list|(
name|type
argument_list|)
decl_stmt|;
if|if
condition|(
name|descriptor
operator|!=
literal|null
condition|)
block|{
name|descriptor
operator|.
name|addCallbackMethod
argument_list|(
name|methodName
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|createQualifier
parameter_list|(
name|String
name|qualifier
parameter_list|)
block|{
if|if
condition|(
name|qualifier
operator|.
name|trim
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
return|return;
block|}
if|if
condition|(
name|entity
operator|!=
literal|null
condition|)
block|{
try|try
block|{
name|entity
operator|.
name|setDeclaredQualifier
argument_list|(
name|ExpressionFactory
operator|.
name|exp
argument_list|(
name|qualifier
argument_list|)
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ExpressionException
name|ex
parameter_list|)
block|{
name|logger
operator|.
name|warn
argument_list|(
literal|"Unable to parse entity "
operator|+
name|entity
operator|.
name|getName
argument_list|()
operator|+
literal|" qualifier"
argument_list|,
name|ex
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|ObjEntity
name|getEntity
parameter_list|()
block|{
return|return
name|entity
return|;
block|}
specifier|public
name|ObjAttribute
name|getLastAttribute
parameter_list|()
block|{
return|return
name|lastAttribute
return|;
block|}
block|}
end_class

end_unit

