begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|server
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|GregorianCalendar
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|DataChannel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|DataChannelFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|DataChannelQueryFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|DataChannelSyncFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|DataDomain
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|DataRowStoreFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|DefaultDataRowStoreFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|DefaultObjectMapRetainStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|ObjectMapRetainStrategy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|dbsync
operator|.
name|DefaultSchemaUpdateStrategyFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|dbsync
operator|.
name|SchemaUpdateStrategyFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|jdbc
operator|.
name|SQLTemplateProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|jdbc
operator|.
name|reader
operator|.
name|DefaultRowReaderFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|jdbc
operator|.
name|reader
operator|.
name|RowReaderFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|translator
operator|.
name|batch
operator|.
name|BatchTranslatorFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|translator
operator|.
name|batch
operator|.
name|DefaultBatchTranslatorFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|translator
operator|.
name|select
operator|.
name|DefaultSelectTranslatorFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|translator
operator|.
name|select
operator|.
name|SelectTranslatorFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|types
operator|.
name|BigDecimalType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|types
operator|.
name|BigIntegerValueType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|types
operator|.
name|BooleanType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|types
operator|.
name|ByteArrayType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|types
operator|.
name|ByteType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|types
operator|.
name|CalendarType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|types
operator|.
name|CharType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|types
operator|.
name|CharacterValueType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|types
operator|.
name|DateType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|types
operator|.
name|DefaultValueObjectTypeRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|types
operator|.
name|DoubleType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|types
operator|.
name|ExtendedType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|types
operator|.
name|ExtendedTypeFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|types
operator|.
name|FloatType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|types
operator|.
name|IntegerType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|types
operator|.
name|LocalDateTimeValueType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|types
operator|.
name|LocalDateValueType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|types
operator|.
name|LocalTimeValueType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|types
operator|.
name|LongType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|types
operator|.
name|ShortType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|types
operator|.
name|TimeType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|types
operator|.
name|TimestampType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|types
operator|.
name|UUIDValueType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|types
operator|.
name|UtilDateType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|types
operator|.
name|ValueObjectType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|types
operator|.
name|ValueObjectTypeRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|types
operator|.
name|VoidType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ashwood
operator|.
name|AshwoodEntitySorter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|cache
operator|.
name|MapQueryCacheProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|cache
operator|.
name|QueryCache
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|ConfigurationNameMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|DataChannelDescriptorLoader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|DataChannelDescriptorMerger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|DataMapLoader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|DefaultConfigurationNameMapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|DefaultDataChannelDescriptorMerger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|DefaultObjectStoreFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|DefaultRuntimeProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|ObjectContextFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|ObjectStoreFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|RuntimeProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|xml
operator|.
name|DataChannelMetaData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|xml
operator|.
name|DefaultHandlerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|xml
operator|.
name|HandlerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|xml
operator|.
name|NoopDataChannelMetaData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|xml
operator|.
name|XMLDataChannelDescriptorLoader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|xml
operator|.
name|XMLDataMapLoader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|xml
operator|.
name|XMLReaderProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|JdbcPkGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|PkGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|db2
operator|.
name|DB2Adapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|db2
operator|.
name|DB2PkGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|db2
operator|.
name|DB2Sniffer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|derby
operator|.
name|DerbyAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|derby
operator|.
name|DerbyPkGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|derby
operator|.
name|DerbySniffer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|firebird
operator|.
name|FirebirdSniffer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|frontbase
operator|.
name|FrontBaseAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|frontbase
operator|.
name|FrontBasePkGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|frontbase
operator|.
name|FrontBaseSniffer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|h2
operator|.
name|H2Adapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|h2
operator|.
name|H2PkGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|h2
operator|.
name|H2Sniffer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|hsqldb
operator|.
name|HSQLDBSniffer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|ingres
operator|.
name|IngresAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|ingres
operator|.
name|IngresPkGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|ingres
operator|.
name|IngresSniffer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|mariadb
operator|.
name|MariaDBSniffer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|mysql
operator|.
name|MySQLAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|mysql
operator|.
name|MySQLPkGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|mysql
operator|.
name|MySQLSniffer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|openbase
operator|.
name|OpenBaseAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|openbase
operator|.
name|OpenBasePkGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|openbase
operator|.
name|OpenBaseSniffer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|oracle
operator|.
name|Oracle8Adapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|oracle
operator|.
name|OracleAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|oracle
operator|.
name|OraclePkGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|oracle
operator|.
name|OracleSniffer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|postgres
operator|.
name|PostgresAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|postgres
operator|.
name|PostgresPkGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|postgres
operator|.
name|PostgresSniffer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|sqlite
operator|.
name|SQLiteSniffer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|sqlserver
operator|.
name|SQLServerAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|sqlserver
operator|.
name|SQLServerSniffer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|sybase
operator|.
name|SybaseAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|sybase
operator|.
name|SybasePkGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|sybase
operator|.
name|SybaseSniffer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|AdhocObjectFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Binder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|ClassLoaderManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Key
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|ListBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|MapBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Module
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|spi
operator|.
name|DefaultAdhocObjectFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|spi
operator|.
name|DefaultClassLoaderManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|event
operator|.
name|EventBridge
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|event
operator|.
name|EventManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|event
operator|.
name|EventManagerProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|event
operator|.
name|NoopEventBridgeProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|log
operator|.
name|JdbcEventLogger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|log
operator|.
name|Slf4jJdbcEventLogger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|EntitySorter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|resource
operator|.
name|ClassLoaderResourceLocator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|resource
operator|.
name|ResourceLocator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|template
operator|.
name|CayenneSQLTemplateProcessor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|template
operator|.
name|DefaultTemplateContextFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|template
operator|.
name|TemplateContextFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|tx
operator|.
name|DefaultTransactionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|tx
operator|.
name|DefaultTransactionManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|tx
operator|.
name|TransactionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|tx
operator|.
name|TransactionFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|tx
operator|.
name|TransactionManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|XMLReader
import|;
end_import

begin_comment
comment|/**  * A DI module containing all Cayenne server runtime configuration.  *  * @since 3.1  */
end_comment

begin_class
specifier|public
class|class
name|ServerModule
implements|implements
name|Module
block|{
specifier|private
specifier|static
specifier|final
name|int
name|DEFAULT_MAX_ID_QUALIFIER_SIZE
init|=
literal|10000
decl_stmt|;
comment|/**      * Sets transaction management to either external or internal transactions. Default is internally-managed transactions.      *      * @param binder      DI binder passed to the module during injector startup.      * @param useExternal whether external (true) or internal (false) transaction management should be used.      * @since 4.0      */
specifier|public
specifier|static
name|void
name|useExternalTransactions
parameter_list|(
name|Binder
name|binder
parameter_list|,
name|boolean
name|useExternal
parameter_list|)
block|{
name|contributeProperties
argument_list|(
name|binder
argument_list|)
operator|.
name|put
argument_list|(
name|Constants
operator|.
name|SERVER_EXTERNAL_TX_PROPERTY
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|useExternal
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Sets max size of snapshot cache, in pre 4.0 version this was set in the Modeler.      *      * @param binder DI binder passed to the module during injector startup.      * @param size   max size of snapshot cache      * @since 4.0      */
specifier|public
specifier|static
name|void
name|setSnapshotCacheSize
parameter_list|(
name|Binder
name|binder
parameter_list|,
name|int
name|size
parameter_list|)
block|{
name|contributeProperties
argument_list|(
name|binder
argument_list|)
operator|.
name|put
argument_list|(
name|Constants
operator|.
name|SNAPSHOT_CACHE_SIZE_PROPERTY
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|size
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Provides access to a DI collection builder for String locations that allows downstream modules to      * "contribute" their own Cayenne project locations.      *      * @param binder DI binder passed to the module during injector startup.      * @return ListBuilder for String locations.      * @since 4.0      */
specifier|public
specifier|static
name|ListBuilder
argument_list|<
name|String
argument_list|>
name|contributeProjectLocations
parameter_list|(
name|Binder
name|binder
parameter_list|)
block|{
return|return
name|binder
operator|.
name|bindList
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|Constants
operator|.
name|SERVER_PROJECT_LOCATIONS_LIST
argument_list|)
return|;
block|}
comment|/**      * Provides access to a DI collection builder for {@link DataChannelFilter}'s that allows downstream modules to      * "contribute" their own DataDomain filters      *      * @param binder DI binder passed to the module during injector startup.      * @return ListBuilder for DataChannelFilter.      * @since 4.0      * @deprecated since 4.1 use {@link #contributeDomainQueryFilters(Binder)} and {@link #contributeDomainSyncFilters(Binder)}      */
annotation|@
name|Deprecated
specifier|public
specifier|static
name|ListBuilder
argument_list|<
name|DataChannelFilter
argument_list|>
name|contributeDomainFilters
parameter_list|(
name|Binder
name|binder
parameter_list|)
block|{
return|return
name|binder
operator|.
name|bindList
argument_list|(
name|DataChannelFilter
operator|.
name|class
argument_list|,
name|Constants
operator|.
name|SERVER_DOMAIN_FILTERS_LIST
argument_list|)
return|;
block|}
comment|/**      * Provides access to a DI collection builder for {@link DataChannelQueryFilter}'s that allows downstream modules to      * "contribute" their own DataDomain query filters      *      * @param binder DI binder passed to the module during injector startup.      * @return ListBuilder for DataChannelQueryFilter.      * @since 4.1      */
specifier|public
specifier|static
name|ListBuilder
argument_list|<
name|DataChannelQueryFilter
argument_list|>
name|contributeDomainQueryFilters
parameter_list|(
name|Binder
name|binder
parameter_list|)
block|{
return|return
name|binder
operator|.
name|bindList
argument_list|(
name|DataChannelQueryFilter
operator|.
name|class
argument_list|)
return|;
block|}
comment|/**      * Provides access to a DI collection builder for {@link DataChannelSyncFilter}'s that allows downstream modules to      * "contribute" their own DataDomain sync filters      *      * @param binder DI binder passed to the module during injector startup.      * @return ListBuilder for DataChannelSyncFilter.      * @since 4.1      */
specifier|public
specifier|static
name|ListBuilder
argument_list|<
name|DataChannelSyncFilter
argument_list|>
name|contributeDomainSyncFilters
parameter_list|(
name|Binder
name|binder
parameter_list|)
block|{
return|return
name|binder
operator|.
name|bindList
argument_list|(
name|DataChannelSyncFilter
operator|.
name|class
argument_list|)
return|;
block|}
comment|/**      * Provides access to a DI collection builder for lifecycle events listeners.      *      * @param binder DI binder passed to the module during injector startup.      * @return ListBuilder for listener Objects.      * @since 4.0      */
specifier|public
specifier|static
name|ListBuilder
argument_list|<
name|Object
argument_list|>
name|contributeDomainListeners
parameter_list|(
name|Binder
name|binder
parameter_list|)
block|{
return|return
name|binder
operator|.
name|bindList
argument_list|(
name|Object
operator|.
name|class
argument_list|,
name|Constants
operator|.
name|SERVER_DOMAIN_LISTENERS_LIST
argument_list|)
return|;
block|}
comment|/**      * Provides access to a DI collection builder for {@link DbAdapterDetector}'s that allows downstream modules to      * "contribute" their own adapter detectors.      *      * @param binder DI binder passed to the module during injector startup.      * @return ListBuilder for DbAdapterDetectors.      * @since 4.0      */
specifier|public
specifier|static
name|ListBuilder
argument_list|<
name|DbAdapterDetector
argument_list|>
name|contributeAdapterDetectors
parameter_list|(
name|Binder
name|binder
parameter_list|)
block|{
return|return
name|binder
operator|.
name|bindList
argument_list|(
name|DbAdapterDetector
operator|.
name|class
argument_list|,
name|Constants
operator|.
name|SERVER_ADAPTER_DETECTORS_LIST
argument_list|)
return|;
block|}
comment|/**      * Provides access to a DI map builder for {@link PkGenerator}'s that allows downstream modules to      * "contribute" their own pk generators.      *      * @param binder DI binder passed to the module during injector startup.      * @return MapBuilder for properties.      * @since 4.1      */
specifier|public
specifier|static
name|MapBuilder
argument_list|<
name|PkGenerator
argument_list|>
name|contributePkGenerators
parameter_list|(
name|Binder
name|binder
parameter_list|)
block|{
return|return
name|binder
operator|.
name|bindMap
argument_list|(
name|PkGenerator
operator|.
name|class
argument_list|)
return|;
block|}
comment|/**      * Provides access to a DI map builder for runtime properties that allows downstream modules to      * "contribute" their own properties.      *      * @param binder DI binder passed to the module during injector startup.      * @return MapBuilder for properties.      * @since 4.0      */
specifier|public
specifier|static
name|MapBuilder
argument_list|<
name|String
argument_list|>
name|contributeProperties
parameter_list|(
name|Binder
name|binder
parameter_list|)
block|{
return|return
name|binder
operator|.
name|bindMap
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|Constants
operator|.
name|PROPERTIES_MAP
argument_list|)
return|;
block|}
comment|/**      * Provides access to a DI collection builder for {@link ExtendedTypeFactory}'s that allows downstream modules to      * "contribute" their own factories.      *      * @param binder DI binder passed to the module during injector startup.      * @return ListBuilder for ExtendedTypes.      * @since 4.0      */
specifier|public
specifier|static
name|ListBuilder
argument_list|<
name|ExtendedTypeFactory
argument_list|>
name|contributeTypeFactories
parameter_list|(
name|Binder
name|binder
parameter_list|)
block|{
return|return
name|binder
operator|.
name|bindList
argument_list|(
name|ExtendedTypeFactory
operator|.
name|class
argument_list|,
name|Constants
operator|.
name|SERVER_TYPE_FACTORIES_LIST
argument_list|)
return|;
block|}
comment|/**      * Provides access to a DI collection builder for default adapter-agnostic {@link ExtendedType}'s that allows      * downstream modules to "contribute" their own types. "Default" types are loaded before adapter-provided or "user"      * types, so they may be overridden by those.      *      * @param binder DI binder passed to the module during injector startup.      * @return ListBuilder for ExtendedTypes.      * @since 4.0      */
specifier|public
specifier|static
name|ListBuilder
argument_list|<
name|ExtendedType
argument_list|>
name|contributeDefaultTypes
parameter_list|(
name|Binder
name|binder
parameter_list|)
block|{
return|return
name|binder
operator|.
name|bindList
argument_list|(
name|ExtendedType
operator|.
name|class
argument_list|,
name|Constants
operator|.
name|SERVER_DEFAULT_TYPES_LIST
argument_list|)
return|;
block|}
comment|/**      * Provides access to a DI collection builder for {@link ExtendedType}'s that allows downstream modules to "contribute"      * their own types. Unlike "default" types (see {@link #contributeDefaultTypes(Binder)}), "user" types are loaded      * after the adapter-provided types and can override those.      *      * @param binder DI binder passed to the module during injector startup.      * @return ListBuilder for ExtendedTypes.      * @since 4.0      */
specifier|public
specifier|static
name|ListBuilder
argument_list|<
name|ExtendedType
argument_list|>
name|contributeUserTypes
parameter_list|(
name|Binder
name|binder
parameter_list|)
block|{
return|return
name|binder
operator|.
name|bindList
argument_list|(
name|ExtendedType
operator|.
name|class
argument_list|,
name|Constants
operator|.
name|SERVER_USER_TYPES_LIST
argument_list|)
return|;
block|}
comment|/**      * @param binder DI binder passed to module during injector startup      * @return ListBuilder for user-contributed ValueObjectTypes      * @since 4.0      */
specifier|public
specifier|static
name|ListBuilder
argument_list|<
name|ValueObjectType
argument_list|>
name|contributeValueObjectTypes
parameter_list|(
name|Binder
name|binder
parameter_list|)
block|{
return|return
name|binder
operator|.
name|bindList
argument_list|(
name|ValueObjectType
operator|.
name|class
argument_list|)
return|;
block|}
comment|/**      * Creates a new {@link ServerModule}.      *      * @since 4.0      */
specifier|public
name|ServerModule
parameter_list|()
block|{
block|}
specifier|public
name|void
name|configure
parameter_list|(
name|Binder
name|binder
parameter_list|)
block|{
comment|// configure global stack properties
name|contributeProperties
argument_list|(
name|binder
argument_list|)
operator|.
name|put
argument_list|(
name|Constants
operator|.
name|SERVER_MAX_ID_QUALIFIER_SIZE_PROPERTY
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|DEFAULT_MAX_ID_QUALIFIER_SIZE
argument_list|)
argument_list|)
expr_stmt|;
name|contributeProperties
argument_list|(
name|binder
argument_list|)
operator|.
name|put
argument_list|(
name|Constants
operator|.
name|SERVER_CONTEXTS_SYNC_PROPERTY
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|JdbcEventLogger
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|Slf4jJdbcEventLogger
operator|.
name|class
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|ClassLoaderManager
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|DefaultClassLoaderManager
operator|.
name|class
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|AdhocObjectFactory
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|DefaultAdhocObjectFactory
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// configure known DbAdapter detectors in reverse order of popularity.
comment|// Users can add their own to install custom adapters automatically
name|contributeAdapterDetectors
argument_list|(
name|binder
argument_list|)
operator|.
name|add
argument_list|(
name|FirebirdSniffer
operator|.
name|class
argument_list|)
operator|.
name|add
argument_list|(
name|OpenBaseSniffer
operator|.
name|class
argument_list|)
operator|.
name|add
argument_list|(
name|FrontBaseSniffer
operator|.
name|class
argument_list|)
operator|.
name|add
argument_list|(
name|IngresSniffer
operator|.
name|class
argument_list|)
operator|.
name|add
argument_list|(
name|SQLiteSniffer
operator|.
name|class
argument_list|)
operator|.
name|add
argument_list|(
name|DB2Sniffer
operator|.
name|class
argument_list|)
operator|.
name|add
argument_list|(
name|H2Sniffer
operator|.
name|class
argument_list|)
operator|.
name|add
argument_list|(
name|HSQLDBSniffer
operator|.
name|class
argument_list|)
operator|.
name|add
argument_list|(
name|SybaseSniffer
operator|.
name|class
argument_list|)
operator|.
name|add
argument_list|(
name|DerbySniffer
operator|.
name|class
argument_list|)
operator|.
name|add
argument_list|(
name|SQLServerSniffer
operator|.
name|class
argument_list|)
operator|.
name|add
argument_list|(
name|OracleSniffer
operator|.
name|class
argument_list|)
operator|.
name|add
argument_list|(
name|PostgresSniffer
operator|.
name|class
argument_list|)
operator|.
name|add
argument_list|(
name|MySQLSniffer
operator|.
name|class
argument_list|)
operator|.
name|add
argument_list|(
name|MariaDBSniffer
operator|.
name|class
argument_list|)
expr_stmt|;
comment|//installing Pk for adapters
name|binder
operator|.
name|bind
argument_list|(
name|PkGeneratorFactoryProvider
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|PkGeneratorFactoryProvider
operator|.
name|class
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|PkGenerator
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|JdbcPkGenerator
operator|.
name|class
argument_list|)
expr_stmt|;
comment|//set PkGenerators for current Adapters
name|contributePkGenerators
argument_list|(
name|binder
argument_list|)
operator|.
name|put
argument_list|(
name|DB2Adapter
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|DB2PkGenerator
operator|.
name|class
argument_list|)
operator|.
name|put
argument_list|(
name|DerbyAdapter
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|DerbyPkGenerator
operator|.
name|class
argument_list|)
operator|.
name|put
argument_list|(
name|FrontBaseAdapter
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|FrontBasePkGenerator
operator|.
name|class
argument_list|)
operator|.
name|put
argument_list|(
name|H2Adapter
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|H2PkGenerator
operator|.
name|class
argument_list|)
operator|.
name|put
argument_list|(
name|IngresAdapter
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|IngresPkGenerator
operator|.
name|class
argument_list|)
operator|.
name|put
argument_list|(
name|MySQLAdapter
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|MySQLPkGenerator
operator|.
name|class
argument_list|)
operator|.
name|put
argument_list|(
name|OpenBaseAdapter
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|OpenBasePkGenerator
operator|.
name|class
argument_list|)
operator|.
name|put
argument_list|(
name|OracleAdapter
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|OraclePkGenerator
operator|.
name|class
argument_list|)
operator|.
name|put
argument_list|(
name|Oracle8Adapter
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|OraclePkGenerator
operator|.
name|class
argument_list|)
operator|.
name|put
argument_list|(
name|PostgresAdapter
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|PostgresPkGenerator
operator|.
name|class
argument_list|)
operator|.
name|put
argument_list|(
name|SQLServerAdapter
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|SybasePkGenerator
operator|.
name|class
argument_list|)
operator|.
name|put
argument_list|(
name|SybaseAdapter
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|SybasePkGenerator
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// configure a filter chain with only one TransactionFilter as default
name|contributeDomainFilters
argument_list|(
name|binder
argument_list|)
expr_stmt|;
name|contributeDomainQueryFilters
argument_list|(
name|binder
argument_list|)
expr_stmt|;
name|contributeDomainSyncFilters
argument_list|(
name|binder
argument_list|)
operator|.
name|add
argument_list|(
name|TransactionFilter
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// init listener list
name|contributeDomainListeners
argument_list|(
name|binder
argument_list|)
expr_stmt|;
comment|// configure extended types
name|contributeDefaultTypes
argument_list|(
name|binder
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|VoidType
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|BigDecimalType
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|BooleanType
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|ByteType
argument_list|(
literal|false
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|CharType
argument_list|(
literal|false
argument_list|,
literal|true
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|DoubleType
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|FloatType
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|IntegerType
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|LongType
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|ShortType
argument_list|(
literal|false
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|ByteArrayType
argument_list|(
literal|false
argument_list|,
literal|true
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|DateType
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|TimeType
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|TimestampType
argument_list|()
argument_list|)
comment|// should be converted from ExtendedType to ValueType
operator|.
name|add
argument_list|(
operator|new
name|UtilDateType
argument_list|()
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|CalendarType
argument_list|<>
argument_list|(
name|GregorianCalendar
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|add
argument_list|(
operator|new
name|CalendarType
argument_list|<>
argument_list|(
name|Calendar
operator|.
name|class
argument_list|)
argument_list|)
expr_stmt|;
name|contributeUserTypes
argument_list|(
name|binder
argument_list|)
expr_stmt|;
name|contributeTypeFactories
argument_list|(
name|binder
argument_list|)
expr_stmt|;
comment|// Custom ValueObjects types contribution
name|contributeValueObjectTypes
argument_list|(
name|binder
argument_list|)
operator|.
name|add
argument_list|(
name|BigIntegerValueType
operator|.
name|class
argument_list|)
operator|.
name|add
argument_list|(
name|UUIDValueType
operator|.
name|class
argument_list|)
operator|.
name|add
argument_list|(
name|LocalDateValueType
operator|.
name|class
argument_list|)
operator|.
name|add
argument_list|(
name|LocalTimeValueType
operator|.
name|class
argument_list|)
operator|.
name|add
argument_list|(
name|LocalDateTimeValueType
operator|.
name|class
argument_list|)
operator|.
name|add
argument_list|(
name|CharacterValueType
operator|.
name|class
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|ValueObjectTypeRegistry
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|DefaultValueObjectTypeRegistry
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// configure explicit configurations
name|contributeProjectLocations
argument_list|(
name|binder
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|ConfigurationNameMapper
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|DefaultConfigurationNameMapper
operator|.
name|class
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|EventManager
operator|.
name|class
argument_list|)
operator|.
name|toProvider
argument_list|(
name|EventManagerProvider
operator|.
name|class
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|QueryCache
operator|.
name|class
argument_list|)
operator|.
name|toProvider
argument_list|(
name|MapQueryCacheProvider
operator|.
name|class
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|EventBridge
operator|.
name|class
argument_list|)
operator|.
name|toProvider
argument_list|(
name|NoopEventBridgeProvider
operator|.
name|class
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|DataRowStoreFactory
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|DefaultDataRowStoreFactory
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// a service to provide the main stack DataDomain
name|binder
operator|.
name|bind
argument_list|(
name|DataDomain
operator|.
name|class
argument_list|)
operator|.
name|toProvider
argument_list|(
name|DataDomainProvider
operator|.
name|class
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|DataNodeFactory
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|DefaultDataNodeFactory
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// will return DataDomain for request for a DataChannel
name|binder
operator|.
name|bind
argument_list|(
name|DataChannel
operator|.
name|class
argument_list|)
operator|.
name|toProvider
argument_list|(
name|DomainDataChannelProvider
operator|.
name|class
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|ObjectContextFactory
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|DataContextFactory
operator|.
name|class
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|TransactionFactory
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|DefaultTransactionFactory
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// a service to load project XML descriptors
name|binder
operator|.
name|bind
argument_list|(
name|DataChannelDescriptorLoader
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|XMLDataChannelDescriptorLoader
operator|.
name|class
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|DataChannelDescriptorMerger
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|DefaultDataChannelDescriptorMerger
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// a service to load DataMap XML descriptors
name|binder
operator|.
name|bind
argument_list|(
name|DataMapLoader
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|XMLDataMapLoader
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// a locator of resources, such as XML descriptors
name|binder
operator|.
name|bind
argument_list|(
name|ResourceLocator
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|ClassLoaderResourceLocator
operator|.
name|class
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|Key
operator|.
name|get
argument_list|(
name|ResourceLocator
operator|.
name|class
argument_list|,
name|Constants
operator|.
name|SERVER_RESOURCE_LOCATOR
argument_list|)
argument_list|)
operator|.
name|to
argument_list|(
name|ClassLoaderResourceLocator
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// a global properties object
name|binder
operator|.
name|bind
argument_list|(
name|RuntimeProperties
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|DefaultRuntimeProperties
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// a service to load DataSourceFactories. DelegatingDataSourceFactory
comment|// will attempt to find the actual worker factory dynamically on each
comment|// call depending on DataNodeDescriptor data and the environment
name|binder
operator|.
name|bind
argument_list|(
name|DataSourceFactory
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|DelegatingDataSourceFactory
operator|.
name|class
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|SchemaUpdateStrategyFactory
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|DefaultSchemaUpdateStrategyFactory
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// a default DBAdapterFactory used to load custom and automatic
comment|// DbAdapters
name|binder
operator|.
name|bind
argument_list|(
name|DbAdapterFactory
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|DefaultDbAdapterFactory
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// binding AshwoodEntitySorter without scope, as this is a stateful
comment|// object and is
comment|// configured by the owning domain
name|binder
operator|.
name|bind
argument_list|(
name|EntitySorter
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|AshwoodEntitySorter
operator|.
name|class
argument_list|)
operator|.
name|withoutScope
argument_list|()
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|BatchTranslatorFactory
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|DefaultBatchTranslatorFactory
operator|.
name|class
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|SelectTranslatorFactory
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|DefaultSelectTranslatorFactory
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// a default ObjectMapRetainStrategy used to create objects map for
comment|// ObjectStore
name|binder
operator|.
name|bind
argument_list|(
name|ObjectMapRetainStrategy
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|DefaultObjectMapRetainStrategy
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// a default ObjectStoreFactory used to create ObjectStores for contexts
name|binder
operator|.
name|bind
argument_list|(
name|ObjectStoreFactory
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|DefaultObjectStoreFactory
operator|.
name|class
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|TransactionManager
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|DefaultTransactionManager
operator|.
name|class
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|RowReaderFactory
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|DefaultRowReaderFactory
operator|.
name|class
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|SQLTemplateProcessor
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|CayenneSQLTemplateProcessor
operator|.
name|class
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|TemplateContextFactory
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|DefaultTemplateContextFactory
operator|.
name|class
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|HandlerFactory
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|DefaultHandlerFactory
operator|.
name|class
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|DataChannelMetaData
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|NoopDataChannelMetaData
operator|.
name|class
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|XMLReader
operator|.
name|class
argument_list|)
operator|.
name|toProviderInstance
argument_list|(
operator|new
name|XMLReaderProvider
argument_list|(
literal|false
argument_list|)
argument_list|)
operator|.
name|withoutScope
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

