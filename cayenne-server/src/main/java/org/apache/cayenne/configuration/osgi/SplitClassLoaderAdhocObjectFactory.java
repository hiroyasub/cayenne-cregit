begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|osgi
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|AdhocObjectFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|spi
operator|.
name|DefaultAdhocObjectFactory
import|;
end_import

begin_comment
comment|/**  * An OSGi-friendly {@link AdhocObjectFactory} that tries to detect the right  * ClassLoader for any given resource based on the package name.  *   * @since 3.2  */
end_comment

begin_class
class|class
name|SplitClassLoaderAdhocObjectFactory
extends|extends
name|DefaultAdhocObjectFactory
block|{
specifier|private
specifier|static
specifier|final
name|String
name|CAYENNE_PACKAGE
init|=
literal|"org/apache/cayenne"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|CAYENNE_DI_PACKAGE_SUFFIX
init|=
literal|"/di"
decl_stmt|;
specifier|private
name|OsgiEnvironment
name|osgiEnvironment
decl_stmt|;
name|SplitClassLoaderAdhocObjectFactory
parameter_list|(
annotation|@
name|Inject
name|OsgiEnvironment
name|osgiEnvironment
parameter_list|)
block|{
name|this
operator|.
name|osgiEnvironment
operator|=
name|osgiEnvironment
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|ClassLoader
name|getClassLoader
parameter_list|(
name|String
name|resourceName
parameter_list|)
block|{
if|if
condition|(
name|resourceName
operator|==
literal|null
operator|||
name|resourceName
operator|.
name|length
argument_list|()
operator|<
literal|2
condition|)
block|{
return|return
name|applicationClassLoader
argument_list|(
name|resourceName
argument_list|)
return|;
block|}
name|String
name|normalizedName
init|=
name|resourceName
operator|.
name|charAt
argument_list|(
literal|0
argument_list|)
operator|==
literal|'/'
condition|?
name|resourceName
operator|.
name|substring
argument_list|(
literal|1
argument_list|)
else|:
name|resourceName
decl_stmt|;
if|if
condition|(
name|normalizedName
operator|.
name|startsWith
argument_list|(
name|CAYENNE_PACKAGE
argument_list|)
condition|)
block|{
return|return
operator|(
name|normalizedName
operator|.
name|substring
argument_list|(
name|CAYENNE_PACKAGE
operator|.
name|length
argument_list|()
argument_list|)
operator|.
name|startsWith
argument_list|(
name|CAYENNE_DI_PACKAGE_SUFFIX
argument_list|)
operator|)
condition|?
name|cayenneDiClassLoader
argument_list|()
else|:
name|cayenneServerClassLoader
argument_list|()
return|;
block|}
return|return
name|applicationClassLoader
argument_list|(
name|resourceName
argument_list|)
return|;
block|}
specifier|protected
name|ClassLoader
name|applicationClassLoader
parameter_list|(
name|String
name|resourceName
parameter_list|)
block|{
return|return
name|osgiEnvironment
operator|.
name|applicationClassLoader
argument_list|(
name|resourceName
argument_list|)
return|;
block|}
specifier|protected
name|ClassLoader
name|cayenneDiClassLoader
parameter_list|()
block|{
return|return
name|osgiEnvironment
operator|.
name|cayenneDiClassLoader
argument_list|()
return|;
block|}
specifier|protected
name|ClassLoader
name|cayenneServerClassLoader
parameter_list|()
block|{
return|return
name|osgiEnvironment
operator|.
name|cayenneServerClassLoader
argument_list|()
return|;
block|}
block|}
end_class

end_unit

