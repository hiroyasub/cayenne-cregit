begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Serializable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|util
operator|.
name|XMLEncoder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|util
operator|.
name|XMLSerializable
import|;
end_import

begin_comment
comment|/**  * Helper JavaBean class that holds DataSource information for the Cayenne-managed DataSource.  * @since 4.3  */
end_comment

begin_class
specifier|public
class|class
name|DataSourceDescriptor
implements|implements
name|Serializable
implements|,
name|XMLSerializable
block|{
specifier|protected
name|String
name|jdbcDriver
decl_stmt|;
specifier|protected
name|String
name|dataSourceUrl
decl_stmt|;
specifier|protected
name|String
name|userName
decl_stmt|;
specifier|protected
name|String
name|password
decl_stmt|;
specifier|protected
name|int
name|minConnections
init|=
literal|1
decl_stmt|;
specifier|protected
name|int
name|maxConnections
init|=
literal|1
decl_stmt|;
specifier|public
name|String
name|getJdbcDriver
parameter_list|()
block|{
return|return
name|jdbcDriver
return|;
block|}
specifier|public
name|void
name|setJdbcDriver
parameter_list|(
name|String
name|jdbcDriver
parameter_list|)
block|{
name|this
operator|.
name|jdbcDriver
operator|=
name|jdbcDriver
expr_stmt|;
block|}
specifier|public
name|String
name|getDataSourceUrl
parameter_list|()
block|{
return|return
name|dataSourceUrl
return|;
block|}
specifier|public
name|void
name|setDataSourceUrl
parameter_list|(
name|String
name|dataSourceUrl
parameter_list|)
block|{
name|this
operator|.
name|dataSourceUrl
operator|=
name|dataSourceUrl
expr_stmt|;
block|}
specifier|public
name|String
name|getUserName
parameter_list|()
block|{
return|return
name|userName
return|;
block|}
specifier|public
name|void
name|setUserName
parameter_list|(
name|String
name|userName
parameter_list|)
block|{
name|this
operator|.
name|userName
operator|=
name|userName
expr_stmt|;
block|}
specifier|public
name|String
name|getPassword
parameter_list|()
block|{
return|return
name|password
return|;
block|}
specifier|public
name|void
name|setPassword
parameter_list|(
name|String
name|password
parameter_list|)
block|{
name|this
operator|.
name|password
operator|=
name|password
expr_stmt|;
block|}
specifier|public
name|int
name|getMinConnections
parameter_list|()
block|{
return|return
name|minConnections
return|;
block|}
specifier|public
name|void
name|setMinConnections
parameter_list|(
name|int
name|minConnections
parameter_list|)
block|{
name|this
operator|.
name|minConnections
operator|=
name|minConnections
expr_stmt|;
block|}
specifier|public
name|int
name|getMaxConnections
parameter_list|()
block|{
return|return
name|maxConnections
return|;
block|}
specifier|public
name|void
name|setMaxConnections
parameter_list|(
name|int
name|maxConnections
parameter_list|)
block|{
name|this
operator|.
name|maxConnections
operator|=
name|maxConnections
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|o
condition|)
return|return
literal|true
return|;
if|if
condition|(
name|o
operator|==
literal|null
operator|||
name|getClass
argument_list|()
operator|!=
name|o
operator|.
name|getClass
argument_list|()
condition|)
return|return
literal|false
return|;
name|DataSourceDescriptor
name|that
init|=
operator|(
name|DataSourceDescriptor
operator|)
name|o
decl_stmt|;
return|return
name|minConnections
operator|==
name|that
operator|.
name|minConnections
operator|&&
name|maxConnections
operator|==
name|that
operator|.
name|maxConnections
operator|&&
name|Objects
operator|.
name|equals
argument_list|(
name|jdbcDriver
argument_list|,
name|that
operator|.
name|jdbcDriver
argument_list|)
operator|&&
name|Objects
operator|.
name|equals
argument_list|(
name|dataSourceUrl
argument_list|,
name|that
operator|.
name|dataSourceUrl
argument_list|)
operator|&&
name|Objects
operator|.
name|equals
argument_list|(
name|userName
argument_list|,
name|that
operator|.
name|userName
argument_list|)
operator|&&
name|Objects
operator|.
name|equals
argument_list|(
name|password
argument_list|,
name|that
operator|.
name|password
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
return|return
name|Objects
operator|.
name|hash
argument_list|(
name|jdbcDriver
argument_list|,
name|dataSourceUrl
argument_list|,
name|userName
argument_list|,
name|password
argument_list|,
name|minConnections
argument_list|,
name|maxConnections
argument_list|)
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"rawtypes"
argument_list|)
annotation|@
name|Override
specifier|public
name|void
name|encodeAsXML
parameter_list|(
name|XMLEncoder
name|encoder
parameter_list|,
name|ConfigurationNodeVisitor
name|delegate
parameter_list|)
block|{
name|encoder
operator|.
name|start
argument_list|(
literal|"data-source"
argument_list|)
operator|.
name|start
argument_list|(
literal|"driver"
argument_list|)
operator|.
name|attribute
argument_list|(
literal|"value"
argument_list|,
name|jdbcDriver
argument_list|)
operator|.
name|end
argument_list|()
operator|.
name|start
argument_list|(
literal|"url"
argument_list|)
operator|.
name|attribute
argument_list|(
literal|"value"
argument_list|,
name|dataSourceUrl
argument_list|)
operator|.
name|end
argument_list|()
operator|.
name|start
argument_list|(
literal|"login"
argument_list|)
operator|.
name|attribute
argument_list|(
literal|"userName"
argument_list|,
name|userName
argument_list|)
operator|.
name|attribute
argument_list|(
literal|"password"
argument_list|,
name|password
argument_list|)
operator|.
name|end
argument_list|()
operator|.
name|start
argument_list|(
literal|"connectionPool"
argument_list|)
operator|.
name|attribute
argument_list|(
literal|"min"
argument_list|,
name|minConnections
argument_list|)
operator|.
name|attribute
argument_list|(
literal|"max"
argument_list|,
name|maxConnections
argument_list|)
operator|.
name|end
argument_list|()
operator|.
name|end
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
literal|"["
operator|+
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|":"
operator|+
literal|"\n   driver: "
operator|+
name|jdbcDriver
operator|+
literal|"\n   url: "
operator|+
name|dataSourceUrl
operator|+
literal|"\n   user name: "
operator|+
name|userName
operator|+
literal|"\n   password: "
operator|+
literal|"**********"
operator|+
literal|"\n   min. connections: "
operator|+
name|minConnections
operator|+
literal|"\n   max. connections: "
operator|+
name|maxConnections
operator|+
literal|"\n]"
return|;
block|}
block|}
end_class

end_unit

