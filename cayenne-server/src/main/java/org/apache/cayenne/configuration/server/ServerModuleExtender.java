begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|server
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|DataChannelQueryFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|DataChannelSyncFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|types
operator|.
name|ExtendedType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|types
operator|.
name|ExtendedTypeFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|types
operator|.
name|ValueObjectType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|DbAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|PkGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Binder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|ListBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|MapBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|tx
operator|.
name|TransactionFilter
import|;
end_import

begin_comment
comment|/**  * A builder of extensions for {@link ServerModule}.  *  * @see ServerModule#extend(Binder)  * @since 5.0  */
end_comment

begin_class
specifier|public
class|class
name|ServerModuleExtender
block|{
specifier|private
specifier|final
name|Binder
name|binder
decl_stmt|;
specifier|private
name|MapBuilder
argument_list|<
name|String
argument_list|>
name|properties
decl_stmt|;
specifier|private
name|ListBuilder
argument_list|<
name|String
argument_list|>
name|projectLocations
decl_stmt|;
specifier|private
name|ListBuilder
argument_list|<
name|DbAdapterDetector
argument_list|>
name|adapterDetectors
decl_stmt|;
specifier|private
name|MapBuilder
argument_list|<
name|PkGenerator
argument_list|>
name|pkGenerators
decl_stmt|;
specifier|private
name|ListBuilder
argument_list|<
name|DataChannelQueryFilter
argument_list|>
name|queryFilters
decl_stmt|;
specifier|private
name|ListBuilder
argument_list|<
name|DataChannelSyncFilter
argument_list|>
name|syncFilters
decl_stmt|;
specifier|private
name|ListBuilder
argument_list|<
name|Object
argument_list|>
name|listeners
decl_stmt|;
specifier|private
name|ListBuilder
argument_list|<
name|ExtendedType
argument_list|>
name|defaultExtendedTypes
decl_stmt|;
specifier|private
name|ListBuilder
argument_list|<
name|ExtendedType
argument_list|>
name|userExtendedTypes
decl_stmt|;
specifier|private
name|ListBuilder
argument_list|<
name|ExtendedTypeFactory
argument_list|>
name|extendedTypeFactories
decl_stmt|;
specifier|private
name|ListBuilder
argument_list|<
name|ValueObjectType
argument_list|>
name|valueObjectTypes
decl_stmt|;
specifier|protected
name|ServerModuleExtender
parameter_list|(
name|Binder
name|binder
parameter_list|)
block|{
name|this
operator|.
name|binder
operator|=
name|binder
expr_stmt|;
block|}
specifier|protected
name|ServerModuleExtender
name|initAllExtensions
parameter_list|()
block|{
name|contributeProperties
argument_list|()
expr_stmt|;
name|contributeProjectLocations
argument_list|()
expr_stmt|;
name|contributeAdapterDetectors
argument_list|()
expr_stmt|;
name|contributePkGenerators
argument_list|()
expr_stmt|;
name|contributeQueryFilters
argument_list|()
expr_stmt|;
name|contributeSyncFilters
argument_list|()
expr_stmt|;
name|contributeListeners
argument_list|()
expr_stmt|;
name|contributeDefaultExtendedTypes
argument_list|()
expr_stmt|;
name|contributeUserExtendedTypes
argument_list|()
expr_stmt|;
name|contributeExtendedTypeFactories
argument_list|()
expr_stmt|;
name|contributeValueObjectTypes
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Sets Cayenne runtime property. Property names known to Cayenne are defined in the {@link Constants} interface.      */
specifier|public
name|ServerModuleExtender
name|setProperty
parameter_list|(
name|String
name|key
parameter_list|,
name|Object
name|value
parameter_list|)
block|{
name|contributeProperties
argument_list|()
operator|.
name|put
argument_list|(
name|key
argument_list|,
name|value
operator|!=
literal|null
condition|?
name|value
operator|.
name|toString
argument_list|()
else|:
literal|null
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Configures the stack to synchronize data between ObjectContexts. This is false by default.      */
specifier|public
name|ServerModuleExtender
name|syncContexts
parameter_list|()
block|{
name|contributeProperties
argument_list|()
operator|.
name|put
argument_list|(
name|Constants
operator|.
name|SERVER_CONTEXTS_SYNC_PROPERTY
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Sets transaction management to either external. By default, transactions are internally managed by Cayenne.      */
specifier|public
name|ServerModuleExtender
name|externalTransactions
parameter_list|()
block|{
name|contributeProperties
argument_list|()
operator|.
name|put
argument_list|(
name|Constants
operator|.
name|SERVER_EXTERNAL_TX_PROPERTY
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Sets max size of snapshot cache.      *      * @param size max size of snapshot cache      */
specifier|public
name|ServerModuleExtender
name|snapshotCacheSize
parameter_list|(
name|int
name|size
parameter_list|)
block|{
name|contributeProperties
argument_list|()
operator|.
name|put
argument_list|(
name|Constants
operator|.
name|SNAPSHOT_CACHE_SIZE_PROPERTY
argument_list|,
name|Integer
operator|.
name|toString
argument_list|(
name|size
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Adds a custom project location.      */
specifier|public
name|ServerModuleExtender
name|addProjectLocation
parameter_list|(
name|String
name|location
parameter_list|)
block|{
name|contributeProjectLocations
argument_list|()
operator|.
name|add
argument_list|(
name|location
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Adds a custom PK generator per DbAdapter      */
specifier|public
name|ServerModuleExtender
name|addPkGenerator
parameter_list|(
name|Class
argument_list|<
name|?
extends|extends
name|DbAdapter
argument_list|>
name|adapter
parameter_list|,
name|PkGenerator
name|pkGenerator
parameter_list|)
block|{
name|contributePkGenerators
argument_list|()
operator|.
name|put
argument_list|(
name|adapter
operator|.
name|getName
argument_list|()
argument_list|,
name|pkGenerator
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Adds a custom PK generator per DbAdapter      */
specifier|public
name|ServerModuleExtender
name|addPkGenerator
parameter_list|(
name|Class
argument_list|<
name|?
extends|extends
name|DbAdapter
argument_list|>
name|adapter
parameter_list|,
name|Class
argument_list|<
name|?
extends|extends
name|PkGenerator
argument_list|>
name|pkGeneratorType
parameter_list|)
block|{
name|contributePkGenerators
argument_list|()
operator|.
name|put
argument_list|(
name|adapter
operator|.
name|getName
argument_list|()
argument_list|,
name|pkGeneratorType
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Adds a custom query filter to the end of the existing filter list      */
specifier|public
name|ServerModuleExtender
name|addQueryFilter
parameter_list|(
name|DataChannelQueryFilter
name|queryFilter
parameter_list|)
block|{
name|contributeQueryFilters
argument_list|()
operator|.
name|add
argument_list|(
name|queryFilter
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Adds a custom query filter to the end of the existing filter list      */
specifier|public
name|ServerModuleExtender
name|addQueryFilter
parameter_list|(
name|Class
argument_list|<
name|?
extends|extends
name|DataChannelQueryFilter
argument_list|>
name|queryFilterType
parameter_list|)
block|{
name|contributeQueryFilters
argument_list|()
operator|.
name|add
argument_list|(
name|queryFilterType
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Adds a custom sync filter.      */
specifier|public
name|ServerModuleExtender
name|addSyncFilter
parameter_list|(
name|DataChannelSyncFilter
name|syncFilter
parameter_list|)
block|{
name|contributeSyncFilters
argument_list|()
operator|.
name|add
argument_list|(
name|syncFilter
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Adds a custom sync filter.      */
specifier|public
name|ServerModuleExtender
name|addSyncFilter
parameter_list|(
name|Class
argument_list|<
name|?
extends|extends
name|DataChannelSyncFilter
argument_list|>
name|syncFilterType
parameter_list|)
block|{
name|contributeSyncFilters
argument_list|()
operator|.
name|add
argument_list|(
name|syncFilterType
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Adds a custom sync filter. Depending on the "includeInTransaction" parameter value it is added either      * before or after the {@link TransactionFilter}.      */
specifier|public
name|ServerModuleExtender
name|addSyncFilter
parameter_list|(
name|DataChannelSyncFilter
name|syncFilter
parameter_list|,
name|boolean
name|includeInTransaction
parameter_list|)
block|{
if|if
condition|(
name|includeInTransaction
condition|)
block|{
name|contributeSyncFilters
argument_list|()
operator|.
name|insertBefore
argument_list|(
name|syncFilter
argument_list|,
name|TransactionFilter
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|contributeSyncFilters
argument_list|()
operator|.
name|addAfter
argument_list|(
name|syncFilter
argument_list|,
name|TransactionFilter
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**      * Adds a custom sync filter. Depending on the "includeInTransaction" parameter value it is added either      * before or after the {@link TransactionFilter}.      */
specifier|public
name|ServerModuleExtender
name|addSyncFilter
parameter_list|(
name|Class
argument_list|<
name|?
extends|extends
name|DataChannelSyncFilter
argument_list|>
name|syncFilterType
parameter_list|,
name|boolean
name|includeInTransaction
parameter_list|)
block|{
if|if
condition|(
name|includeInTransaction
condition|)
block|{
name|contributeSyncFilters
argument_list|()
operator|.
name|insertBefore
argument_list|(
name|syncFilterType
argument_list|,
name|TransactionFilter
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|contributeSyncFilters
argument_list|()
operator|.
name|addAfter
argument_list|(
name|syncFilterType
argument_list|,
name|TransactionFilter
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
return|return
name|this
return|;
block|}
comment|/**      * Registers an annotated event listener.      */
specifier|public
name|ServerModuleExtender
name|addListener
parameter_list|(
name|Object
name|listener
parameter_list|)
block|{
name|contributeListeners
argument_list|()
operator|.
name|add
argument_list|(
name|listener
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Registers an annotated event listener of a given type      */
specifier|public
name|ServerModuleExtender
name|addListenerType
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|listenerType
parameter_list|)
block|{
name|contributeListeners
argument_list|()
operator|.
name|add
argument_list|(
name|listenerType
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Adds a custom DbAdapterDetector      */
specifier|public
name|ServerModuleExtender
name|addAdapterDetector
parameter_list|(
name|DbAdapterDetector
name|adapterDetector
parameter_list|)
block|{
name|contributeAdapterDetectors
argument_list|()
operator|.
name|add
argument_list|(
name|adapterDetector
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Adds a custom DbAdapterDetector      */
specifier|public
name|ServerModuleExtender
name|addAdapterDetector
parameter_list|(
name|Class
argument_list|<
name|?
extends|extends
name|DbAdapterDetector
argument_list|>
name|adapterDetectorType
parameter_list|)
block|{
name|contributeAdapterDetectors
argument_list|()
operator|.
name|add
argument_list|(
name|adapterDetectorType
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Adds a default adapter-agnostic ExtendedType. "Default" types are loaded before adapter-provided or "user"      * types, so they may be overridden by those.      */
specifier|public
name|ServerModuleExtender
name|addDefaultExtendedType
parameter_list|(
name|ExtendedType
argument_list|<
name|?
argument_list|>
name|type
parameter_list|)
block|{
name|contributeDefaultExtendedTypes
argument_list|()
operator|.
name|add
argument_list|(
name|type
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Adds a default adapter-agnostic ExtendedType. "Default" types are loaded before adapter-provided or "user"      * types, so they may be overridden by those.      */
specifier|public
name|ServerModuleExtender
name|addDefaultExtendedType
parameter_list|(
name|Class
argument_list|<
name|?
extends|extends
name|ExtendedType
argument_list|<
name|?
argument_list|>
argument_list|>
name|type
parameter_list|)
block|{
name|contributeDefaultExtendedTypes
argument_list|()
operator|.
name|add
argument_list|(
name|type
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Adds an adapter-agnostic ExtendedType. "User" types are loaded after default and adapter-provided types and      * can override those.      */
specifier|public
name|ServerModuleExtender
name|addUserExtendedType
parameter_list|(
name|ExtendedType
argument_list|<
name|?
argument_list|>
name|type
parameter_list|)
block|{
name|contributeUserExtendedTypes
argument_list|()
operator|.
name|add
argument_list|(
name|type
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Adds an adapter-agnostic ExtendedType. "User" types are loaded after default and adapter-provided types and      * can override those.      */
specifier|public
name|ServerModuleExtender
name|addUserExtendedType
parameter_list|(
name|Class
argument_list|<
name|?
extends|extends
name|ExtendedType
argument_list|<
name|?
argument_list|>
argument_list|>
name|type
parameter_list|)
block|{
name|contributeUserExtendedTypes
argument_list|()
operator|.
name|add
argument_list|(
name|type
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Adds an ExtendedTypeFactory used for dynamic extended type creation.      */
specifier|public
name|ServerModuleExtender
name|addExtendedTypeFactory
parameter_list|(
name|ExtendedTypeFactory
name|factory
parameter_list|)
block|{
name|contributeExtendedTypeFactories
argument_list|()
operator|.
name|add
argument_list|(
name|factory
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Adds an ExtendedTypeFactory used for dynamic extended type creation.      */
specifier|public
name|ServerModuleExtender
name|addExtendedTypeFactory
parameter_list|(
name|Class
argument_list|<
name|?
extends|extends
name|ExtendedTypeFactory
argument_list|>
name|factoryType
parameter_list|)
block|{
name|contributeExtendedTypeFactories
argument_list|()
operator|.
name|add
argument_list|(
name|factoryType
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Adds a custom {@link ValueObjectType}.      */
specifier|public
name|ServerModuleExtender
name|addValueObjectType
parameter_list|(
name|ValueObjectType
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
name|type
parameter_list|)
block|{
name|contributeValueObjectTypes
argument_list|()
operator|.
name|add
argument_list|(
name|type
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Adds a custom {@link ValueObjectType}.      */
specifier|public
name|ServerModuleExtender
name|addValueObjectType
parameter_list|(
name|Class
argument_list|<
name|?
extends|extends
name|ValueObjectType
argument_list|<
name|?
argument_list|,
name|?
argument_list|>
argument_list|>
name|type
parameter_list|)
block|{
name|contributeValueObjectTypes
argument_list|()
operator|.
name|add
argument_list|(
name|type
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|ListBuilder
argument_list|<
name|String
argument_list|>
name|contributeProjectLocations
parameter_list|()
block|{
return|return
name|projectLocations
operator|!=
literal|null
condition|?
name|projectLocations
else|:
operator|(
name|projectLocations
operator|=
name|binder
operator|.
name|bindList
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|Constants
operator|.
name|SERVER_PROJECT_LOCATIONS_LIST
argument_list|)
operator|)
return|;
block|}
specifier|private
name|MapBuilder
argument_list|<
name|String
argument_list|>
name|contributeProperties
parameter_list|()
block|{
return|return
name|properties
operator|!=
literal|null
condition|?
name|properties
else|:
operator|(
name|properties
operator|=
name|binder
operator|.
name|bindMap
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|Constants
operator|.
name|PROPERTIES_MAP
argument_list|)
operator|)
return|;
block|}
specifier|private
name|ListBuilder
argument_list|<
name|DataChannelQueryFilter
argument_list|>
name|contributeQueryFilters
parameter_list|()
block|{
return|return
name|queryFilters
operator|!=
literal|null
condition|?
name|queryFilters
else|:
operator|(
name|queryFilters
operator|=
name|binder
operator|.
name|bindList
argument_list|(
name|DataChannelQueryFilter
operator|.
name|class
argument_list|)
operator|)
return|;
block|}
specifier|private
name|ListBuilder
argument_list|<
name|DataChannelSyncFilter
argument_list|>
name|contributeSyncFilters
parameter_list|()
block|{
return|return
name|syncFilters
operator|!=
literal|null
condition|?
name|syncFilters
else|:
operator|(
name|syncFilters
operator|=
name|binder
operator|.
name|bindList
argument_list|(
name|DataChannelSyncFilter
operator|.
name|class
argument_list|)
operator|)
return|;
block|}
specifier|private
name|ListBuilder
argument_list|<
name|Object
argument_list|>
name|contributeListeners
parameter_list|()
block|{
return|return
name|listeners
operator|!=
literal|null
condition|?
name|listeners
else|:
operator|(
name|listeners
operator|=
name|binder
operator|.
name|bindList
argument_list|(
name|Object
operator|.
name|class
argument_list|,
name|Constants
operator|.
name|SERVER_DOMAIN_LISTENERS_LIST
argument_list|)
operator|)
return|;
block|}
specifier|private
name|ListBuilder
argument_list|<
name|DbAdapterDetector
argument_list|>
name|contributeAdapterDetectors
parameter_list|()
block|{
return|return
name|adapterDetectors
operator|!=
literal|null
condition|?
name|adapterDetectors
else|:
operator|(
name|adapterDetectors
operator|=
name|binder
operator|.
name|bindList
argument_list|(
name|DbAdapterDetector
operator|.
name|class
argument_list|,
name|Constants
operator|.
name|SERVER_ADAPTER_DETECTORS_LIST
argument_list|)
operator|)
return|;
block|}
specifier|private
name|ListBuilder
argument_list|<
name|ExtendedType
argument_list|>
name|contributeDefaultExtendedTypes
parameter_list|()
block|{
return|return
name|defaultExtendedTypes
operator|!=
literal|null
condition|?
name|defaultExtendedTypes
else|:
operator|(
name|defaultExtendedTypes
operator|=
name|binder
operator|.
name|bindList
argument_list|(
name|ExtendedType
operator|.
name|class
argument_list|,
name|Constants
operator|.
name|SERVER_DEFAULT_TYPES_LIST
argument_list|)
operator|)
return|;
block|}
specifier|private
name|ListBuilder
argument_list|<
name|ExtendedType
argument_list|>
name|contributeUserExtendedTypes
parameter_list|()
block|{
return|return
name|userExtendedTypes
operator|!=
literal|null
condition|?
name|userExtendedTypes
else|:
operator|(
name|userExtendedTypes
operator|=
name|binder
operator|.
name|bindList
argument_list|(
name|ExtendedType
operator|.
name|class
argument_list|,
name|Constants
operator|.
name|SERVER_USER_TYPES_LIST
argument_list|)
operator|)
return|;
block|}
specifier|private
name|ListBuilder
argument_list|<
name|ExtendedTypeFactory
argument_list|>
name|contributeExtendedTypeFactories
parameter_list|()
block|{
return|return
name|extendedTypeFactories
operator|!=
literal|null
condition|?
name|extendedTypeFactories
else|:
operator|(
name|extendedTypeFactories
operator|=
name|binder
operator|.
name|bindList
argument_list|(
name|ExtendedTypeFactory
operator|.
name|class
argument_list|,
name|Constants
operator|.
name|SERVER_TYPE_FACTORIES_LIST
argument_list|)
operator|)
return|;
block|}
specifier|private
name|ListBuilder
argument_list|<
name|ValueObjectType
argument_list|>
name|contributeValueObjectTypes
parameter_list|()
block|{
return|return
name|valueObjectTypes
operator|!=
literal|null
condition|?
name|valueObjectTypes
else|:
operator|(
name|valueObjectTypes
operator|=
name|binder
operator|.
name|bindList
argument_list|(
name|ValueObjectType
operator|.
name|class
argument_list|)
operator|)
return|;
block|}
specifier|private
name|MapBuilder
argument_list|<
name|PkGenerator
argument_list|>
name|contributePkGenerators
parameter_list|()
block|{
return|return
name|pkGenerators
operator|!=
literal|null
condition|?
name|pkGenerators
else|:
operator|(
name|pkGenerators
operator|=
name|binder
operator|.
name|bindMap
argument_list|(
name|PkGenerator
operator|.
name|class
argument_list|)
operator|)
return|;
block|}
block|}
end_class

end_unit

