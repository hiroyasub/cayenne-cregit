begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|MissingResourceException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ResourceBundle
import|;
end_import

begin_comment
comment|/**  * Provides access to various modeler resources (mainly strings) obtained via a  * ResourceBundle.  */
end_comment

begin_class
specifier|public
class|class
name|LocalizedStringsHandler
block|{
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT_MESSAGE_BUNDLE
init|=
literal|"org.apache.cayenne.cayenne-strings"
decl_stmt|;
specifier|protected
specifier|static
name|ResourceBundle
name|bundle
decl_stmt|;
static|static
block|{
comment|// "static constructor"
name|bundle
operator|=
name|getBundle
argument_list|()
expr_stmt|;
block|}
comment|/**      * Returns localized string for the given key.      */
specifier|public
specifier|static
name|String
name|getString
parameter_list|(
name|String
name|key
parameter_list|)
block|{
if|if
condition|(
name|bundle
operator|==
literal|null
condition|)
block|{
return|return
literal|""
return|;
block|}
try|try
block|{
return|return
name|bundle
operator|.
name|getString
argument_list|(
name|key
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
return|return
literal|""
return|;
block|}
block|}
specifier|protected
specifier|synchronized
specifier|static
name|ResourceBundle
name|getBundle
parameter_list|()
block|{
if|if
condition|(
name|bundle
operator|==
literal|null
condition|)
block|{
try|try
block|{
name|bundle
operator|=
name|ResourceBundle
operator|.
name|getBundle
argument_list|(
name|DEFAULT_MESSAGE_BUNDLE
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|MissingResourceException
name|e
parameter_list|)
block|{
comment|// do not throw Cayenne exceptions, as they rely on
comment|// LocalizedStringsHandler, and we can get into infinite loop
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Can't load properties: "
operator|+
name|DEFAULT_MESSAGE_BUNDLE
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
return|return
name|bundle
return|;
block|}
block|}
end_class

end_unit

