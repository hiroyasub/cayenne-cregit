begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|conn
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|SQLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|SQLFeatureNotSupportedException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|logging
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|sql
operator|.
name|ConnectionPoolDataSource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|sql
operator|.
name|DataSource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|sql
operator|.
name|PooledConnection
import|;
end_import

begin_comment
comment|/**  * A {@link ConnectionPoolDataSource} implementation.  *<p>  * It is implemented as a wrapper around a non-pooled data source object.  * Delegates all method calls except for "getPooledConnection" to the underlying  * DataSource.  *   * @since 4.0  */
end_comment

begin_class
specifier|public
class|class
name|PooledConnectionFactory
implements|implements
name|ConnectionPoolDataSource
block|{
specifier|private
name|DataSource
name|nonPooledDatasource
decl_stmt|;
specifier|public
name|PooledConnectionFactory
parameter_list|(
name|DataSource
name|nonPooledDatasource
parameter_list|)
block|{
name|this
operator|.
name|nonPooledDatasource
operator|=
name|nonPooledDatasource
expr_stmt|;
block|}
specifier|public
name|PooledConnectionFactory
parameter_list|(
name|String
name|jdbcDriver
parameter_list|,
name|String
name|connectionUrl
parameter_list|)
throws|throws
name|SQLException
block|{
name|nonPooledDatasource
operator|=
operator|new
name|DriverDataSource
argument_list|(
name|jdbcDriver
argument_list|,
name|connectionUrl
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|getLoginTimeout
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|nonPooledDatasource
operator|.
name|getLoginTimeout
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setLoginTimeout
parameter_list|(
name|int
name|seconds
parameter_list|)
throws|throws
name|SQLException
block|{
name|nonPooledDatasource
operator|.
name|setLoginTimeout
argument_list|(
name|seconds
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|PrintWriter
name|getLogWriter
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
name|nonPooledDatasource
operator|.
name|getLogWriter
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setLogWriter
parameter_list|(
name|PrintWriter
name|out
parameter_list|)
throws|throws
name|SQLException
block|{
name|nonPooledDatasource
operator|.
name|setLogWriter
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|PooledConnection
name|getPooledConnection
parameter_list|()
throws|throws
name|SQLException
block|{
return|return
operator|new
name|PooledConnectionImpl
argument_list|(
name|nonPooledDatasource
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|PooledConnection
name|getPooledConnection
parameter_list|(
name|String
name|user
parameter_list|,
name|String
name|password
parameter_list|)
throws|throws
name|SQLException
block|{
return|return
operator|new
name|PooledConnectionImpl
argument_list|(
name|nonPooledDatasource
argument_list|,
name|user
argument_list|,
name|password
argument_list|)
return|;
block|}
comment|/** 	 * @since 3.1 	 * 	 *        JDBC 4.1 compatibility under Java 1.7 	 */
specifier|public
name|Logger
name|getParentLogger
parameter_list|()
throws|throws
name|SQLFeatureNotSupportedException
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|()
throw|;
block|}
block|}
end_class

end_unit

