begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/* Generated By:JJTree&JavaCC: Do not edit this line. ExpressionParserTokenManager.java */
end_comment

begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|exp
operator|.
name|parser
package|;
end_package

begin_import
import|import
name|java
operator|.
name|math
operator|.
name|BigDecimal
import|;
end_import

begin_import
import|import
name|java
operator|.
name|math
operator|.
name|BigInteger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|exp
operator|.
name|Expression
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|exp
operator|.
name|parser
operator|.
name|ExpressionUtils
import|;
end_import

begin_comment
comment|/** Token Manager. */
end_comment

begin_class
specifier|public
class|class
name|ExpressionParserTokenManager
implements|implements
name|ExpressionParserConstants
block|{
comment|/** Holds the last value computed by a constant token. */
name|Object
name|literalValue
decl_stmt|;
comment|/** Holds the last string literal parsed. */
specifier|private
name|StringBuffer
name|stringBuffer
decl_stmt|;
comment|/** Converts an escape sequence into a character value. */
specifier|private
name|char
name|escapeChar
parameter_list|()
block|{
name|int
name|ofs
init|=
name|image
operator|.
name|length
argument_list|()
operator|-
literal|1
decl_stmt|;
switch|switch
condition|(
name|image
operator|.
name|charAt
argument_list|(
name|ofs
argument_list|)
condition|)
block|{
case|case
literal|'n'
case|:
return|return
literal|'\u005cn'
return|;
case|case
literal|'r'
case|:
return|return
literal|'\u005cr'
return|;
case|case
literal|'t'
case|:
return|return
literal|'\u005ct'
return|;
case|case
literal|'b'
case|:
return|return
literal|'\u005cb'
return|;
case|case
literal|'f'
case|:
return|return
literal|'\u005cf'
return|;
case|case
literal|'\u005c\u005c'
case|:
return|return
literal|'\u005c\u005c'
return|;
case|case
literal|'\u005c'
literal|':  return '
operator|\
name|u005c
literal|''
empty_stmt|;
case|case
literal|'\u005c"'
case|:
return|return
literal|'\u005c"'
return|;
block|}
comment|// Otherwise, it's an octal number.  Find the backslash and convert.
while|while
condition|(
name|image
operator|.
name|charAt
argument_list|(
operator|--
name|ofs
argument_list|)
operator|!=
literal|'\u005c\u005c'
condition|)
block|{
block|}
name|int
name|value
init|=
literal|0
decl_stmt|;
while|while
condition|(
operator|++
name|ofs
operator|<
name|image
operator|.
name|length
argument_list|()
condition|)
name|value
operator|=
operator|(
name|value
operator|<<
literal|3
operator|)
operator||
operator|(
name|image
operator|.
name|charAt
argument_list|(
name|ofs
argument_list|)
operator|-
literal|'0'
operator|)
expr_stmt|;
return|return
operator|(
name|char
operator|)
name|value
return|;
block|}
specifier|private
name|Object
name|makeInt
parameter_list|()
block|{
name|Object
name|result
decl_stmt|;
name|String
name|s
init|=
name|image
operator|.
name|toString
argument_list|()
decl_stmt|;
name|int
name|base
init|=
literal|10
decl_stmt|;
if|if
condition|(
name|s
operator|.
name|charAt
argument_list|(
literal|0
argument_list|)
operator|==
literal|'0'
condition|)
name|base
operator|=
operator|(
name|s
operator|.
name|length
argument_list|()
operator|>
literal|1
operator|&&
operator|(
name|s
operator|.
name|charAt
argument_list|(
literal|1
argument_list|)
operator|==
literal|'x'
operator|||
name|s
operator|.
name|charAt
argument_list|(
literal|1
argument_list|)
operator|==
literal|'X'
operator|)
operator|)
condition|?
literal|16
else|:
literal|8
expr_stmt|;
if|if
condition|(
name|base
operator|==
literal|16
condition|)
name|s
operator|=
name|s
operator|.
name|substring
argument_list|(
literal|2
argument_list|)
expr_stmt|;
comment|// Trim the 0x off the front
switch|switch
condition|(
name|s
operator|.
name|charAt
argument_list|(
name|s
operator|.
name|length
argument_list|()
operator|-
literal|1
argument_list|)
condition|)
block|{
case|case
literal|'l'
case|:
case|case
literal|'L'
case|:
name|result
operator|=
name|Long
operator|.
name|valueOf
argument_list|(
name|s
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|s
operator|.
name|length
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|,
name|base
argument_list|)
expr_stmt|;
break|break;
case|case
literal|'h'
case|:
case|case
literal|'H'
case|:
name|result
operator|=
operator|new
name|BigInteger
argument_list|(
name|s
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|s
operator|.
name|length
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|,
name|base
argument_list|)
expr_stmt|;
break|break;
default|default:
name|result
operator|=
name|Integer
operator|.
name|valueOf
argument_list|(
name|s
argument_list|,
name|base
argument_list|)
expr_stmt|;
break|break;
block|}
return|return
name|result
return|;
block|}
specifier|private
name|Object
name|makeFloat
parameter_list|()
block|{
name|String
name|s
init|=
name|image
operator|.
name|toString
argument_list|()
decl_stmt|;
switch|switch
condition|(
name|s
operator|.
name|charAt
argument_list|(
name|s
operator|.
name|length
argument_list|()
operator|-
literal|1
argument_list|)
condition|)
block|{
case|case
literal|'f'
case|:
case|case
literal|'F'
case|:
return|return
name|Float
operator|.
name|valueOf
argument_list|(
name|s
argument_list|)
return|;
case|case
literal|'b'
case|:
case|case
literal|'B'
case|:
return|return
operator|new
name|BigDecimal
argument_list|(
name|s
operator|.
name|substring
argument_list|(
literal|0
argument_list|,
name|s
operator|.
name|length
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
return|;
case|case
literal|'d'
case|:
case|case
literal|'D'
case|:
default|default:
return|return
name|Double
operator|.
name|valueOf
argument_list|(
name|s
argument_list|)
return|;
block|}
block|}
comment|/** Debug output. */
specifier|public
name|java
operator|.
name|io
operator|.
name|PrintStream
name|debugStream
init|=
name|System
operator|.
name|out
decl_stmt|;
comment|/** Set debug output. */
specifier|public
name|void
name|setDebugStream
parameter_list|(
name|java
operator|.
name|io
operator|.
name|PrintStream
name|ds
parameter_list|)
block|{
name|debugStream
operator|=
name|ds
expr_stmt|;
block|}
specifier|private
specifier|final
name|int
name|jjStopStringLiteralDfa_0
parameter_list|(
name|int
name|pos
parameter_list|,
name|long
name|active0
parameter_list|,
name|long
name|active1
parameter_list|)
block|{
switch|switch
condition|(
name|pos
condition|)
block|{
case|case
literal|0
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0xff1fd5e00004e006L
operator|)
operator|!=
literal|0L
operator|||
operator|(
name|active1
operator|&
literal|0x3bL
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|71
expr_stmt|;
return|return
literal|83
return|;
block|}
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x600a0000000000L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|71
expr_stmt|;
return|return
literal|36
return|;
block|}
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x8L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|71
expr_stmt|;
return|return
literal|63
return|;
block|}
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x200000000000L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|71
expr_stmt|;
return|return
literal|6
return|;
block|}
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x1000000000L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|71
expr_stmt|;
return|return
literal|15
return|;
block|}
return|return
operator|-
literal|1
return|;
case|case
literal|1
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x8002L
operator|)
operator|!=
literal|0L
condition|)
return|return
literal|83
return|;
if|if
condition|(
operator|(
name|active0
operator|&
literal|0xff1fdff000046004L
operator|)
operator|!=
literal|0L
operator|||
operator|(
name|active1
operator|&
literal|0x3bL
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|71
expr_stmt|;
name|jjmatchedPos
operator|=
literal|1
expr_stmt|;
return|return
literal|83
return|;
block|}
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x200000000000L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|71
expr_stmt|;
name|jjmatchedPos
operator|=
literal|1
expr_stmt|;
return|return
literal|5
return|;
block|}
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x60000000000000L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|71
expr_stmt|;
name|jjmatchedPos
operator|=
literal|1
expr_stmt|;
return|return
literal|35
return|;
block|}
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x8L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|71
expr_stmt|;
name|jjmatchedPos
operator|=
literal|1
expr_stmt|;
return|return
literal|64
return|;
block|}
return|return
operator|-
literal|1
return|;
case|case
literal|2
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x781401e00000000cL
operator|)
operator|!=
literal|0L
operator|||
operator|(
name|active1
operator|&
literal|0x1L
operator|)
operator|!=
literal|0L
condition|)
return|return
literal|83
return|;
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x60000000000000L
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|jjmatchedPos
operator|!=
literal|2
condition|)
block|{
name|jjmatchedKind
operator|=
literal|71
expr_stmt|;
name|jjmatchedPos
operator|=
literal|2
expr_stmt|;
block|}
return|return
literal|34
return|;
block|}
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x870bfe1000046000L
operator|)
operator|!=
literal|0L
operator|||
operator|(
name|active1
operator|&
literal|0x2aL
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|jjmatchedPos
operator|!=
literal|2
condition|)
block|{
name|jjmatchedKind
operator|=
literal|71
expr_stmt|;
name|jjmatchedPos
operator|=
literal|2
expr_stmt|;
block|}
return|return
literal|83
return|;
block|}
return|return
operator|-
literal|1
return|;
case|case
literal|3
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x8508200000006000L
operator|)
operator|!=
literal|0L
condition|)
return|return
literal|83
return|;
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x6a03de1000040000L
operator|)
operator|!=
literal|0L
operator|||
operator|(
name|active1
operator|&
literal|0x23L
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|jjmatchedPos
operator|!=
literal|3
condition|)
block|{
name|jjmatchedKind
operator|=
literal|71
expr_stmt|;
name|jjmatchedPos
operator|=
literal|3
expr_stmt|;
block|}
return|return
literal|83
return|;
block|}
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x60000000000000L
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|jjmatchedPos
operator|!=
literal|3
condition|)
block|{
name|jjmatchedKind
operator|=
literal|71
expr_stmt|;
name|jjmatchedPos
operator|=
literal|3
expr_stmt|;
block|}
return|return
literal|33
return|;
block|}
return|return
operator|-
literal|1
return|;
case|case
literal|4
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x200c20000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
literal|83
return|;
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x60000000000000L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|71
expr_stmt|;
name|jjmatchedPos
operator|=
literal|4
expr_stmt|;
return|return
literal|32
return|;
block|}
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x68031c1000044000L
operator|)
operator|!=
literal|0L
operator|||
operator|(
name|active1
operator|&
literal|0x3L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|71
expr_stmt|;
name|jjmatchedPos
operator|=
literal|4
expr_stmt|;
return|return
literal|83
return|;
block|}
return|return
operator|-
literal|1
return|;
case|case
literal|5
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x60000000000000L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|71
expr_stmt|;
name|jjmatchedPos
operator|=
literal|5
expr_stmt|;
return|return
literal|31
return|;
block|}
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x3080000000000L
operator|)
operator|!=
literal|0L
operator|||
operator|(
name|active1
operator|&
literal|0x3L
operator|)
operator|!=
literal|0L
condition|)
return|return
literal|83
return|;
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x6800141000044000L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|71
expr_stmt|;
name|jjmatchedPos
operator|=
literal|5
expr_stmt|;
return|return
literal|83
return|;
block|}
return|return
operator|-
literal|1
return|;
case|case
literal|6
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x40000L
operator|)
operator|!=
literal|0L
condition|)
return|return
literal|83
return|;
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x6800141000004000L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|71
expr_stmt|;
name|jjmatchedPos
operator|=
literal|6
expr_stmt|;
return|return
literal|83
return|;
block|}
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x60000000000000L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|71
expr_stmt|;
name|jjmatchedPos
operator|=
literal|6
expr_stmt|;
return|return
literal|30
return|;
block|}
return|return
operator|-
literal|1
return|;
case|case
literal|7
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x41000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
literal|83
return|;
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x40000000000000L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|71
expr_stmt|;
name|jjmatchedPos
operator|=
literal|7
expr_stmt|;
return|return
literal|29
return|;
block|}
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x6820100000004000L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|71
expr_stmt|;
name|jjmatchedPos
operator|=
literal|7
expr_stmt|;
return|return
literal|83
return|;
block|}
return|return
operator|-
literal|1
return|;
case|case
literal|8
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x4800100000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
literal|83
return|;
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x2020000000004000L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|71
expr_stmt|;
name|jjmatchedPos
operator|=
literal|8
expr_stmt|;
return|return
literal|83
return|;
block|}
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x40000000000000L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|71
expr_stmt|;
name|jjmatchedPos
operator|=
literal|8
expr_stmt|;
return|return
literal|28
return|;
block|}
return|return
operator|-
literal|1
return|;
case|case
literal|9
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x2000000000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
literal|83
return|;
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x40000000000000L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|71
expr_stmt|;
name|jjmatchedPos
operator|=
literal|9
expr_stmt|;
return|return
literal|27
return|;
block|}
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x20000000004000L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|71
expr_stmt|;
name|jjmatchedPos
operator|=
literal|9
expr_stmt|;
return|return
literal|83
return|;
block|}
return|return
operator|-
literal|1
return|;
case|case
literal|10
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x4000L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|71
expr_stmt|;
name|jjmatchedPos
operator|=
literal|10
expr_stmt|;
return|return
literal|83
return|;
block|}
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x20000000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
literal|83
return|;
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x40000000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
literal|26
return|;
return|return
operator|-
literal|1
return|;
case|case
literal|11
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x4000L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|71
expr_stmt|;
name|jjmatchedPos
operator|=
literal|11
expr_stmt|;
return|return
literal|83
return|;
block|}
return|return
operator|-
literal|1
return|;
case|case
literal|12
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x4000L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|71
expr_stmt|;
name|jjmatchedPos
operator|=
literal|12
expr_stmt|;
return|return
literal|83
return|;
block|}
return|return
operator|-
literal|1
return|;
default|default :
return|return
operator|-
literal|1
return|;
block|}
block|}
specifier|private
specifier|final
name|int
name|jjStartNfa_0
parameter_list|(
name|int
name|pos
parameter_list|,
name|long
name|active0
parameter_list|,
name|long
name|active1
parameter_list|)
block|{
return|return
name|jjMoveNfa_0
argument_list|(
name|jjStopStringLiteralDfa_0
argument_list|(
name|pos
argument_list|,
name|active0
argument_list|,
name|active1
argument_list|)
argument_list|,
name|pos
operator|+
literal|1
argument_list|)
return|;
block|}
specifier|private
name|int
name|jjStopAtPos
parameter_list|(
name|int
name|pos
parameter_list|,
name|int
name|kind
parameter_list|)
block|{
name|jjmatchedKind
operator|=
name|kind
expr_stmt|;
name|jjmatchedPos
operator|=
name|pos
expr_stmt|;
return|return
name|pos
operator|+
literal|1
return|;
block|}
specifier|private
name|int
name|jjMoveStringLiteralDfa0_0
parameter_list|()
block|{
switch|switch
condition|(
name|curChar
condition|)
block|{
case|case
literal|33
case|:
name|jjmatchedKind
operator|=
literal|4
expr_stmt|;
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x80L
argument_list|,
literal|0x0L
argument_list|)
return|;
case|case
literal|34
case|:
return|return
name|jjStopAtPos
argument_list|(
literal|0
argument_list|,
literal|76
argument_list|)
return|;
case|case
literal|36
case|:
return|return
name|jjStopAtPos
argument_list|(
literal|0
argument_list|,
literal|66
argument_list|)
return|;
case|case
literal|38
case|:
return|return
name|jjStopAtPos
argument_list|(
literal|0
argument_list|,
literal|22
argument_list|)
return|;
case|case
literal|39
case|:
return|return
name|jjStopAtPos
argument_list|(
literal|0
argument_list|,
literal|75
argument_list|)
return|;
case|case
literal|40
case|:
return|return
name|jjStopAtPos
argument_list|(
literal|0
argument_list|,
literal|16
argument_list|)
return|;
case|case
literal|41
case|:
return|return
name|jjStopAtPos
argument_list|(
literal|0
argument_list|,
literal|17
argument_list|)
return|;
case|case
literal|42
case|:
return|return
name|jjStopAtPos
argument_list|(
literal|0
argument_list|,
literal|70
argument_list|)
return|;
case|case
literal|43
case|:
return|return
name|jjStopAtPos
argument_list|(
literal|0
argument_list|,
literal|25
argument_list|)
return|;
case|case
literal|44
case|:
return|return
name|jjStopAtPos
argument_list|(
literal|0
argument_list|,
literal|19
argument_list|)
return|;
case|case
literal|45
case|:
return|return
name|jjStopAtPos
argument_list|(
literal|0
argument_list|,
literal|26
argument_list|)
return|;
case|case
literal|47
case|:
return|return
name|jjStopAtPos
argument_list|(
literal|0
argument_list|,
literal|27
argument_list|)
return|;
case|case
literal|60
case|:
name|jjmatchedKind
operator|=
literal|10
expr_stmt|;
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x800300L
argument_list|,
literal|0x0L
argument_list|)
return|;
case|case
literal|61
case|:
name|jjmatchedKind
operator|=
literal|5
expr_stmt|;
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x40L
argument_list|,
literal|0x0L
argument_list|)
return|;
case|case
literal|62
case|:
name|jjmatchedKind
operator|=
literal|11
expr_stmt|;
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x1001000L
argument_list|,
literal|0x0L
argument_list|)
return|;
case|case
literal|94
case|:
return|return
name|jjStopAtPos
argument_list|(
literal|0
argument_list|,
literal|21
argument_list|)
return|;
case|case
literal|97
case|:
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x4002000000004L
argument_list|,
literal|0x0L
argument_list|)
return|;
case|case
literal|98
case|:
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x40000L
argument_list|,
literal|0x0L
argument_list|)
return|;
case|case
literal|99
case|:
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x600a0000000000L
argument_list|,
literal|0x0L
argument_list|)
return|;
case|case
literal|100
case|:
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x7800040000000000L
argument_list|,
literal|0x10L
argument_list|)
return|;
case|case
literal|101
case|:
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x0L
argument_list|,
literal|0x20L
argument_list|)
return|;
case|case
literal|102
case|:
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x1000000000L
argument_list|,
literal|0x0L
argument_list|)
return|;
case|case
literal|104
case|:
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x8000000000000000L
argument_list|,
literal|0x0L
argument_list|)
return|;
case|case
literal|105
case|:
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x8000L
argument_list|,
literal|0x0L
argument_list|)
return|;
case|case
literal|108
case|:
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x3400000006000L
argument_list|,
literal|0x0L
argument_list|)
return|;
case|case
literal|109
case|:
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x21000c000000000L
argument_list|,
literal|0x1L
argument_list|)
return|;
case|case
literal|110
case|:
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x8L
argument_list|,
literal|0x0L
argument_list|)
return|;
case|case
literal|111
case|:
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x2L
argument_list|,
literal|0x8L
argument_list|)
return|;
case|case
literal|115
case|:
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x8110000000000L
argument_list|,
literal|0x2L
argument_list|)
return|;
case|case
literal|116
case|:
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x200000000000L
argument_list|,
literal|0x0L
argument_list|)
return|;
case|case
literal|117
case|:
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x800000000000L
argument_list|,
literal|0x0L
argument_list|)
return|;
case|case
literal|119
case|:
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x400000000000000L
argument_list|,
literal|0x0L
argument_list|)
return|;
case|case
literal|121
case|:
return|return
name|jjMoveStringLiteralDfa1_0
argument_list|(
literal|0x100000000000000L
argument_list|,
literal|0x0L
argument_list|)
return|;
case|case
literal|124
case|:
return|return
name|jjStopAtPos
argument_list|(
literal|0
argument_list|,
literal|20
argument_list|)
return|;
case|case
literal|126
case|:
return|return
name|jjStopAtPos
argument_list|(
literal|0
argument_list|,
literal|28
argument_list|)
return|;
default|default :
return|return
name|jjMoveNfa_0
argument_list|(
literal|3
argument_list|,
literal|0
argument_list|)
return|;
block|}
block|}
specifier|private
name|int
name|jjMoveStringLiteralDfa1_0
parameter_list|(
name|long
name|active0
parameter_list|,
name|long
name|active1
parameter_list|)
block|{
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
name|jjStopStringLiteralDfa_0
argument_list|(
literal|0
argument_list|,
name|active0
argument_list|,
name|active1
argument_list|)
expr_stmt|;
return|return
literal|1
return|;
block|}
switch|switch
condition|(
name|curChar
condition|)
block|{
case|case
literal|60
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x800000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStopAtPos
argument_list|(
literal|1
argument_list|,
literal|23
argument_list|)
return|;
break|break;
case|case
literal|61
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x40L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStopAtPos
argument_list|(
literal|1
argument_list|,
literal|6
argument_list|)
return|;
if|else if
condition|(
operator|(
name|active0
operator|&
literal|0x80L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStopAtPos
argument_list|(
literal|1
argument_list|,
literal|7
argument_list|)
return|;
if|else if
condition|(
operator|(
name|active0
operator|&
literal|0x200L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStopAtPos
argument_list|(
literal|1
argument_list|,
literal|9
argument_list|)
return|;
if|else if
condition|(
operator|(
name|active0
operator|&
literal|0x1000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStopAtPos
argument_list|(
literal|1
argument_list|,
literal|12
argument_list|)
return|;
break|break;
case|case
literal|62
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x100L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStopAtPos
argument_list|(
literal|1
argument_list|,
literal|8
argument_list|)
return|;
if|else if
condition|(
operator|(
name|active0
operator|&
literal|0x1000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStopAtPos
argument_list|(
literal|1
argument_list|,
literal|24
argument_list|)
return|;
break|break;
case|case
literal|97
case|:
return|return
name|jjMoveStringLiteralDfa2_0
argument_list|(
name|active0
argument_list|,
literal|0x7800008000000000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
case|case
literal|98
case|:
return|return
name|jjMoveStringLiteralDfa2_0
argument_list|(
name|active0
argument_list|,
literal|0x4000000000000L
argument_list|,
name|active1
argument_list|,
literal|0x18L
argument_list|)
return|;
case|case
literal|101
case|:
return|return
name|jjMoveStringLiteralDfa2_0
argument_list|(
name|active0
argument_list|,
literal|0x501000000040000L
argument_list|,
name|active1
argument_list|,
literal|0x2L
argument_list|)
return|;
case|case
literal|105
case|:
return|return
name|jjMoveStringLiteralDfa2_0
argument_list|(
name|active0
argument_list|,
literal|0x44000006000L
argument_list|,
name|active1
argument_list|,
literal|0x1L
argument_list|)
return|;
case|case
literal|110
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x8000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|1
argument_list|,
literal|15
argument_list|,
literal|83
argument_list|)
return|;
return|return
name|jjMoveStringLiteralDfa2_0
argument_list|(
name|active0
argument_list|,
literal|0x4L
argument_list|,
name|active1
argument_list|,
literal|0x20L
argument_list|)
return|;
case|case
literal|111
case|:
return|return
name|jjMoveStringLiteralDfa2_0
argument_list|(
name|active0
argument_list|,
literal|0x82124a0000000008L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
case|case
literal|112
case|:
return|return
name|jjMoveStringLiteralDfa2_0
argument_list|(
name|active0
argument_list|,
literal|0x800000000000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
case|case
literal|113
case|:
return|return
name|jjMoveStringLiteralDfa2_0
argument_list|(
name|active0
argument_list|,
literal|0x8000000000000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
case|case
literal|114
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x2L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|83
argument_list|)
return|;
return|return
name|jjMoveStringLiteralDfa2_0
argument_list|(
name|active0
argument_list|,
literal|0x200000000000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
case|case
literal|117
case|:
return|return
name|jjMoveStringLiteralDfa2_0
argument_list|(
name|active0
argument_list|,
literal|0x60111000000000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
case|case
literal|118
case|:
return|return
name|jjMoveStringLiteralDfa2_0
argument_list|(
name|active0
argument_list|,
literal|0x2000000000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
default|default :
break|break;
block|}
return|return
name|jjStartNfa_0
argument_list|(
literal|0
argument_list|,
name|active0
argument_list|,
name|active1
argument_list|)
return|;
block|}
specifier|private
name|int
name|jjMoveStringLiteralDfa2_0
parameter_list|(
name|long
name|old0
parameter_list|,
name|long
name|active0
parameter_list|,
name|long
name|old1
parameter_list|,
name|long
name|active1
parameter_list|)
block|{
if|if
condition|(
operator|(
operator|(
name|active0
operator|&=
name|old0
operator|)
operator||
operator|(
name|active1
operator|&=
name|old1
operator|)
operator|)
operator|==
literal|0L
condition|)
return|return
name|jjStartNfa_0
argument_list|(
literal|0
argument_list|,
name|old0
argument_list|,
name|old1
argument_list|)
return|;
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
name|jjStopStringLiteralDfa_0
argument_list|(
literal|1
argument_list|,
name|active0
argument_list|,
name|active1
argument_list|)
expr_stmt|;
return|return
literal|2
return|;
block|}
switch|switch
condition|(
name|curChar
condition|)
block|{
case|case
literal|58
case|:
if|if
condition|(
operator|(
name|active1
operator|&
literal|0x10L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStopAtPos
argument_list|(
literal|2
argument_list|,
literal|68
argument_list|)
return|;
break|break;
case|case
literal|97
case|:
return|return
name|jjMoveStringLiteralDfa3_0
argument_list|(
name|active0
argument_list|,
literal|0x100000000000000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
case|case
literal|98
case|:
return|return
name|jjMoveStringLiteralDfa3_0
argument_list|(
name|active0
argument_list|,
literal|0x100000000000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
case|case
literal|99
case|:
return|return
name|jjMoveStringLiteralDfa3_0
argument_list|(
name|active0
argument_list|,
literal|0x2000000000000L
argument_list|,
name|active1
argument_list|,
literal|0x2L
argument_list|)
return|;
case|case
literal|100
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x4L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|83
argument_list|)
return|;
if|else if
condition|(
operator|(
name|active0
operator|&
literal|0x10000000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|2
argument_list|,
literal|52
argument_list|,
literal|83
argument_list|)
return|;
break|break;
case|case
literal|101
case|:
return|return
name|jjMoveStringLiteralDfa3_0
argument_list|(
name|active0
argument_list|,
literal|0x400000000000000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
case|case
literal|103
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x2000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|2
argument_list|,
literal|37
argument_list|,
literal|83
argument_list|)
return|;
break|break;
case|case
literal|105
case|:
return|return
name|jjMoveStringLiteralDfa3_0
argument_list|(
name|active0
argument_list|,
literal|0x200000000000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
case|case
literal|106
case|:
return|return
name|jjMoveStringLiteralDfa3_0
argument_list|(
name|active0
argument_list|,
literal|0L
argument_list|,
name|active1
argument_list|,
literal|0x8L
argument_list|)
return|;
case|case
literal|107
case|:
return|return
name|jjMoveStringLiteralDfa3_0
argument_list|(
name|active0
argument_list|,
literal|0x6000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
case|case
literal|109
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x10000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|2
argument_list|,
literal|40
argument_list|,
literal|83
argument_list|)
return|;
break|break;
case|case
literal|110
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x4000000000L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|38
expr_stmt|;
name|jjmatchedPos
operator|=
literal|2
expr_stmt|;
block|}
return|return
name|jjMoveStringLiteralDfa3_0
argument_list|(
name|active0
argument_list|,
literal|0x201081000000000L
argument_list|,
name|active1
argument_list|,
literal|0x1L
argument_list|)
return|;
case|case
literal|112
case|:
return|return
name|jjMoveStringLiteralDfa3_0
argument_list|(
name|active0
argument_list|,
literal|0x800000000000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
case|case
literal|114
case|:
return|return
name|jjMoveStringLiteralDfa3_0
argument_list|(
name|active0
argument_list|,
literal|0x68000000000000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
case|case
literal|115
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x4000000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|2
argument_list|,
literal|50
argument_list|,
literal|83
argument_list|)
return|;
return|return
name|jjMoveStringLiteralDfa3_0
argument_list|(
name|active0
argument_list|,
literal|0x40000000000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
case|case
literal|116
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x8L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|2
argument_list|,
literal|3
argument_list|,
literal|83
argument_list|)
return|;
return|return
name|jjMoveStringLiteralDfa3_0
argument_list|(
name|active0
argument_list|,
literal|0x40000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
case|case
literal|117
case|:
return|return
name|jjMoveStringLiteralDfa3_0
argument_list|(
name|active0
argument_list|,
literal|0x8000020000000000L
argument_list|,
name|active1
argument_list|,
literal|0x20L
argument_list|)
return|;
case|case
literal|119
case|:
return|return
name|jjMoveStringLiteralDfa3_0
argument_list|(
name|active0
argument_list|,
literal|0x400000000000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
case|case
literal|120
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x8000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|2
argument_list|,
literal|39
argument_list|,
literal|83
argument_list|)
return|;
break|break;
case|case
literal|121
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x1000000000000000L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|60
expr_stmt|;
name|jjmatchedPos
operator|=
literal|2
expr_stmt|;
block|}
return|return
name|jjMoveStringLiteralDfa3_0
argument_list|(
name|active0
argument_list|,
literal|0x6800000000000000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
default|default :
break|break;
block|}
return|return
name|jjStartNfa_0
argument_list|(
literal|1
argument_list|,
name|active0
argument_list|,
name|active1
argument_list|)
return|;
block|}
specifier|private
name|int
name|jjMoveStringLiteralDfa3_0
parameter_list|(
name|long
name|old0
parameter_list|,
name|long
name|active0
parameter_list|,
name|long
name|old1
parameter_list|,
name|long
name|active1
parameter_list|)
block|{
if|if
condition|(
operator|(
operator|(
name|active0
operator|&=
name|old0
operator|)
operator||
operator|(
name|active1
operator|&=
name|old1
operator|)
operator|)
operator|==
literal|0L
condition|)
return|return
name|jjStartNfa_0
argument_list|(
literal|1
argument_list|,
name|old0
argument_list|,
name|old1
argument_list|)
return|;
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
name|jjStopStringLiteralDfa_0
argument_list|(
literal|2
argument_list|,
name|active0
argument_list|,
name|active1
argument_list|)
expr_stmt|;
return|return
literal|3
return|;
block|}
switch|switch
condition|(
name|curChar
condition|)
block|{
case|case
literal|58
case|:
if|if
condition|(
operator|(
name|active1
operator|&
literal|0x8L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStopAtPos
argument_list|(
literal|3
argument_list|,
literal|67
argument_list|)
return|;
break|break;
case|case
literal|79
case|:
return|return
name|jjMoveStringLiteralDfa4_0
argument_list|(
name|active0
argument_list|,
literal|0x6800000000000000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
case|case
literal|97
case|:
return|return
name|jjMoveStringLiteralDfa4_0
argument_list|(
name|active0
argument_list|,
literal|0x2000000000000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
case|case
literal|99
case|:
return|return
name|jjMoveStringLiteralDfa4_0
argument_list|(
name|active0
argument_list|,
literal|0x81000000000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
case|case
literal|101
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x2000L
operator|)
operator|!=
literal|0L
condition|)
block|{
name|jjmatchedKind
operator|=
literal|13
expr_stmt|;
name|jjmatchedPos
operator|=
literal|3
expr_stmt|;
block|}
return|return
name|jjMoveStringLiteralDfa4_0
argument_list|(
name|active0
argument_list|,
literal|0xc00000004000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
case|case
literal|103
case|:
return|return
name|jjMoveStringLiteralDfa4_0
argument_list|(
name|active0
argument_list|,
literal|0x1000000000000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
case|case
literal|107
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x400000000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|3
argument_list|,
literal|58
argument_list|,
literal|83
argument_list|)
return|;
break|break;
case|case
literal|109
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x200000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|3
argument_list|,
literal|45
argument_list|,
literal|83
argument_list|)
return|;
return|return
name|jjMoveStringLiteralDfa4_0
argument_list|(
name|active0
argument_list|,
literal|0L
argument_list|,
name|active1
argument_list|,
literal|0x20L
argument_list|)
return|;
case|case
literal|110
case|:
return|return
name|jjMoveStringLiteralDfa4_0
argument_list|(
name|active0
argument_list|,
literal|0x20000000000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
case|case
literal|111
case|:
return|return
name|jjMoveStringLiteralDfa4_0
argument_list|(
name|active0
argument_list|,
literal|0L
argument_list|,
name|active1
argument_list|,
literal|0x2L
argument_list|)
return|;
case|case
literal|114
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x100000000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|3
argument_list|,
literal|56
argument_list|,
literal|83
argument_list|)
return|;
if|else if
condition|(
operator|(
name|active0
operator|&
literal|0x8000000000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|3
argument_list|,
literal|63
argument_list|,
literal|83
argument_list|)
return|;
return|return
name|jjMoveStringLiteralDfa4_0
argument_list|(
name|active0
argument_list|,
literal|0x60000000000000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
case|case
literal|115
case|:
return|return
name|jjMoveStringLiteralDfa4_0
argument_list|(
name|active0
argument_list|,
literal|0x100000000000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
case|case
literal|116
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x8000000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|3
argument_list|,
literal|51
argument_list|,
literal|83
argument_list|)
return|;
return|return
name|jjMoveStringLiteralDfa4_0
argument_list|(
name|active0
argument_list|,
literal|0x200040000000000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
case|case
literal|117
case|:
return|return
name|jjMoveStringLiteralDfa4_0
argument_list|(
name|active0
argument_list|,
literal|0L
argument_list|,
name|active1
argument_list|,
literal|0x1L
argument_list|)
return|;
case|case
literal|119
case|:
return|return
name|jjMoveStringLiteralDfa4_0
argument_list|(
name|active0
argument_list|,
literal|0x40000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
default|default :
break|break;
block|}
return|return
name|jjStartNfa_0
argument_list|(
literal|2
argument_list|,
name|active0
argument_list|,
name|active1
argument_list|)
return|;
block|}
specifier|private
name|int
name|jjMoveStringLiteralDfa4_0
parameter_list|(
name|long
name|old0
parameter_list|,
name|long
name|active0
parameter_list|,
name|long
name|old1
parameter_list|,
name|long
name|active1
parameter_list|)
block|{
if|if
condition|(
operator|(
operator|(
name|active0
operator|&=
name|old0
operator|)
operator||
operator|(
name|active1
operator|&=
name|old1
operator|)
operator|)
operator|==
literal|0L
condition|)
return|return
name|jjStartNfa_0
argument_list|(
literal|2
argument_list|,
name|old0
argument_list|,
name|old1
argument_list|)
return|;
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
name|jjStopStringLiteralDfa_0
argument_list|(
literal|3
argument_list|,
name|active0
argument_list|,
name|active1
argument_list|)
expr_stmt|;
return|return
literal|4
return|;
block|}
switch|switch
condition|(
name|curChar
condition|)
block|{
case|case
literal|58
case|:
if|if
condition|(
operator|(
name|active1
operator|&
literal|0x20L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStopAtPos
argument_list|(
literal|4
argument_list|,
literal|69
argument_list|)
return|;
break|break;
case|case
literal|73
case|:
return|return
name|jjMoveStringLiteralDfa5_0
argument_list|(
name|active0
argument_list|,
literal|0x4000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
case|case
literal|97
case|:
return|return
name|jjMoveStringLiteralDfa5_0
argument_list|(
name|active0
argument_list|,
literal|0x80000000000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
case|case
literal|101
case|:
return|return
name|jjMoveStringLiteralDfa5_0
argument_list|(
name|active0
argument_list|,
literal|0x60000000040000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
case|case
literal|102
case|:
return|return
name|jjMoveStringLiteralDfa5_0
argument_list|(
name|active0
argument_list|,
literal|0x6800000000000000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
case|case
literal|104
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x200000000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|4
argument_list|,
literal|57
argument_list|,
literal|83
argument_list|)
return|;
break|break;
case|case
literal|105
case|:
return|return
name|jjMoveStringLiteralDfa5_0
argument_list|(
name|active0
argument_list|,
literal|0x40000000000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
case|case
literal|110
case|:
return|return
name|jjMoveStringLiteralDfa5_0
argument_list|(
name|active0
argument_list|,
literal|0L
argument_list|,
name|active1
argument_list|,
literal|0x2L
argument_list|)
return|;
case|case
literal|114
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x400000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|4
argument_list|,
literal|46
argument_list|,
literal|83
argument_list|)
return|;
if|else if
condition|(
operator|(
name|active0
operator|&
literal|0x800000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|4
argument_list|,
literal|47
argument_list|,
literal|83
argument_list|)
return|;
break|break;
case|case
literal|116
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x20000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|4
argument_list|,
literal|41
argument_list|,
literal|83
argument_list|)
return|;
return|return
name|jjMoveStringLiteralDfa5_0
argument_list|(
name|active0
argument_list|,
literal|0x3101000000000L
argument_list|,
name|active1
argument_list|,
literal|0x1L
argument_list|)
return|;
default|default :
break|break;
block|}
return|return
name|jjStartNfa_0
argument_list|(
literal|3
argument_list|,
name|active0
argument_list|,
name|active1
argument_list|)
return|;
block|}
specifier|private
name|int
name|jjMoveStringLiteralDfa5_0
parameter_list|(
name|long
name|old0
parameter_list|,
name|long
name|active0
parameter_list|,
name|long
name|old1
parameter_list|,
name|long
name|active1
parameter_list|)
block|{
if|if
condition|(
operator|(
operator|(
name|active0
operator|&=
name|old0
operator|)
operator||
operator|(
name|active1
operator|&=
name|old1
operator|)
operator|)
operator|==
literal|0L
condition|)
return|return
name|jjStartNfa_0
argument_list|(
literal|3
argument_list|,
name|old0
argument_list|,
name|old1
argument_list|)
return|;
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
name|jjStopStringLiteralDfa_0
argument_list|(
literal|4
argument_list|,
name|active0
argument_list|,
name|active1
argument_list|)
expr_stmt|;
return|return
literal|5
return|;
block|}
switch|switch
condition|(
name|curChar
condition|)
block|{
case|case
literal|77
case|:
return|return
name|jjMoveStringLiteralDfa6_0
argument_list|(
name|active0
argument_list|,
literal|0x2000000000000000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
case|case
literal|87
case|:
return|return
name|jjMoveStringLiteralDfa6_0
argument_list|(
name|active0
argument_list|,
literal|0x4000000000000000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
case|case
literal|89
case|:
return|return
name|jjMoveStringLiteralDfa6_0
argument_list|(
name|active0
argument_list|,
literal|0x800000000000000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
case|case
literal|100
case|:
if|if
condition|(
operator|(
name|active1
operator|&
literal|0x2L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|5
argument_list|,
literal|65
argument_list|,
literal|83
argument_list|)
return|;
break|break;
case|case
literal|101
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x2000000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|5
argument_list|,
literal|49
argument_list|,
literal|83
argument_list|)
return|;
if|else if
condition|(
operator|(
name|active1
operator|&
literal|0x1L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|5
argument_list|,
literal|64
argument_list|,
literal|83
argument_list|)
return|;
return|return
name|jjMoveStringLiteralDfa6_0
argument_list|(
name|active0
argument_list|,
literal|0x40000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
case|case
literal|103
case|:
return|return
name|jjMoveStringLiteralDfa6_0
argument_list|(
name|active0
argument_list|,
literal|0x4000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
case|case
literal|104
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x1000000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|5
argument_list|,
literal|48
argument_list|,
literal|83
argument_list|)
return|;
break|break;
case|case
literal|105
case|:
return|return
name|jjMoveStringLiteralDfa6_0
argument_list|(
name|active0
argument_list|,
literal|0x1000000000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
case|case
literal|110
case|:
return|return
name|jjMoveStringLiteralDfa6_0
argument_list|(
name|active0
argument_list|,
literal|0x60040000000000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
case|case
literal|114
case|:
return|return
name|jjMoveStringLiteralDfa6_0
argument_list|(
name|active0
argument_list|,
literal|0x100000000000L
argument_list|,
name|active1
argument_list|,
literal|0L
argument_list|)
return|;
case|case
literal|116
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x80000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|5
argument_list|,
literal|43
argument_list|,
literal|83
argument_list|)
return|;
break|break;
default|default :
break|break;
block|}
return|return
name|jjStartNfa_0
argument_list|(
literal|4
argument_list|,
name|active0
argument_list|,
name|active1
argument_list|)
return|;
block|}
specifier|private
name|int
name|jjMoveStringLiteralDfa6_0
parameter_list|(
name|long
name|old0
parameter_list|,
name|long
name|active0
parameter_list|,
name|long
name|old1
parameter_list|,
name|long
name|active1
parameter_list|)
block|{
if|if
condition|(
operator|(
operator|(
name|active0
operator|&=
name|old0
operator|)
operator||
operator|(
name|active1
operator|&=
name|old1
operator|)
operator|)
operator|==
literal|0L
condition|)
return|return
name|jjStartNfa_0
argument_list|(
literal|4
argument_list|,
name|old0
argument_list|,
name|old1
argument_list|)
return|;
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
name|jjStopStringLiteralDfa_0
argument_list|(
literal|5
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
return|return
literal|6
return|;
block|}
switch|switch
condition|(
name|curChar
condition|)
block|{
case|case
literal|99
case|:
return|return
name|jjMoveStringLiteralDfa7_0
argument_list|(
name|active0
argument_list|,
literal|0x40000000000L
argument_list|)
return|;
case|case
literal|101
case|:
return|return
name|jjMoveStringLiteralDfa7_0
argument_list|(
name|active0
argument_list|,
literal|0x4800000000000000L
argument_list|)
return|;
case|case
literal|105
case|:
return|return
name|jjMoveStringLiteralDfa7_0
argument_list|(
name|active0
argument_list|,
literal|0x100000000000L
argument_list|)
return|;
case|case
literal|110
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x40000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|6
argument_list|,
literal|18
argument_list|,
literal|83
argument_list|)
return|;
return|return
name|jjMoveStringLiteralDfa7_0
argument_list|(
name|active0
argument_list|,
literal|0x4000L
argument_list|)
return|;
case|case
literal|111
case|:
return|return
name|jjMoveStringLiteralDfa7_0
argument_list|(
name|active0
argument_list|,
literal|0x2000001000000000L
argument_list|)
return|;
case|case
literal|116
case|:
return|return
name|jjMoveStringLiteralDfa7_0
argument_list|(
name|active0
argument_list|,
literal|0x60000000000000L
argument_list|)
return|;
default|default :
break|break;
block|}
return|return
name|jjStartNfa_0
argument_list|(
literal|5
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
return|;
block|}
specifier|private
name|int
name|jjMoveStringLiteralDfa7_0
parameter_list|(
name|long
name|old0
parameter_list|,
name|long
name|active0
parameter_list|)
block|{
if|if
condition|(
operator|(
operator|(
name|active0
operator|&=
name|old0
operator|)
operator|)
operator|==
literal|0L
condition|)
return|return
name|jjStartNfa_0
argument_list|(
literal|5
argument_list|,
name|old0
argument_list|,
literal|0L
argument_list|)
return|;
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
name|jjStopStringLiteralDfa_0
argument_list|(
literal|6
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
return|return
literal|7
return|;
block|}
switch|switch
condition|(
name|curChar
condition|)
block|{
case|case
literal|68
case|:
return|return
name|jjMoveStringLiteralDfa8_0
argument_list|(
name|active0
argument_list|,
literal|0x20000000000000L
argument_list|)
return|;
case|case
literal|84
case|:
return|return
name|jjMoveStringLiteralDfa8_0
argument_list|(
name|active0
argument_list|,
literal|0x40000000000000L
argument_list|)
return|;
case|case
literal|97
case|:
return|return
name|jjMoveStringLiteralDfa8_0
argument_list|(
name|active0
argument_list|,
literal|0x800000000000000L
argument_list|)
return|;
case|case
literal|101
case|:
return|return
name|jjMoveStringLiteralDfa8_0
argument_list|(
name|active0
argument_list|,
literal|0x4000000000000000L
argument_list|)
return|;
case|case
literal|110
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x1000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|7
argument_list|,
literal|36
argument_list|,
literal|83
argument_list|)
return|;
return|return
name|jjMoveStringLiteralDfa8_0
argument_list|(
name|active0
argument_list|,
literal|0x2000100000000000L
argument_list|)
return|;
case|case
literal|111
case|:
return|return
name|jjMoveStringLiteralDfa8_0
argument_list|(
name|active0
argument_list|,
literal|0x4000L
argument_list|)
return|;
case|case
literal|116
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x40000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|7
argument_list|,
literal|42
argument_list|,
literal|83
argument_list|)
return|;
break|break;
default|default :
break|break;
block|}
return|return
name|jjStartNfa_0
argument_list|(
literal|6
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
return|;
block|}
specifier|private
name|int
name|jjMoveStringLiteralDfa8_0
parameter_list|(
name|long
name|old0
parameter_list|,
name|long
name|active0
parameter_list|)
block|{
if|if
condition|(
operator|(
operator|(
name|active0
operator|&=
name|old0
operator|)
operator|)
operator|==
literal|0L
condition|)
return|return
name|jjStartNfa_0
argument_list|(
literal|6
argument_list|,
name|old0
argument_list|,
literal|0L
argument_list|)
return|;
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
name|jjStopStringLiteralDfa_0
argument_list|(
literal|7
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
return|return
literal|8
return|;
block|}
switch|switch
condition|(
name|curChar
condition|)
block|{
case|case
literal|97
case|:
return|return
name|jjMoveStringLiteralDfa9_0
argument_list|(
name|active0
argument_list|,
literal|0x20000000000000L
argument_list|)
return|;
case|case
literal|103
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x100000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|8
argument_list|,
literal|44
argument_list|,
literal|83
argument_list|)
return|;
break|break;
case|case
literal|105
case|:
return|return
name|jjMoveStringLiteralDfa9_0
argument_list|(
name|active0
argument_list|,
literal|0x40000000000000L
argument_list|)
return|;
case|case
literal|107
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x4000000000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|8
argument_list|,
literal|62
argument_list|,
literal|83
argument_list|)
return|;
break|break;
case|case
literal|114
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x800000000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|8
argument_list|,
literal|59
argument_list|,
literal|83
argument_list|)
return|;
return|return
name|jjMoveStringLiteralDfa9_0
argument_list|(
name|active0
argument_list|,
literal|0x4000L
argument_list|)
return|;
case|case
literal|116
case|:
return|return
name|jjMoveStringLiteralDfa9_0
argument_list|(
name|active0
argument_list|,
literal|0x2000000000000000L
argument_list|)
return|;
default|default :
break|break;
block|}
return|return
name|jjStartNfa_0
argument_list|(
literal|7
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
return|;
block|}
specifier|private
name|int
name|jjMoveStringLiteralDfa9_0
parameter_list|(
name|long
name|old0
parameter_list|,
name|long
name|active0
parameter_list|)
block|{
if|if
condition|(
operator|(
operator|(
name|active0
operator|&=
name|old0
operator|)
operator|)
operator|==
literal|0L
condition|)
return|return
name|jjStartNfa_0
argument_list|(
literal|7
argument_list|,
name|old0
argument_list|,
literal|0L
argument_list|)
return|;
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
name|jjStopStringLiteralDfa_0
argument_list|(
literal|8
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
return|return
literal|9
return|;
block|}
switch|switch
condition|(
name|curChar
condition|)
block|{
case|case
literal|101
case|:
return|return
name|jjMoveStringLiteralDfa10_0
argument_list|(
name|active0
argument_list|,
literal|0x4000L
argument_list|)
return|;
case|case
literal|104
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x2000000000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|9
argument_list|,
literal|61
argument_list|,
literal|83
argument_list|)
return|;
break|break;
case|case
literal|109
case|:
return|return
name|jjMoveStringLiteralDfa10_0
argument_list|(
name|active0
argument_list|,
literal|0x40000000000000L
argument_list|)
return|;
case|case
literal|116
case|:
return|return
name|jjMoveStringLiteralDfa10_0
argument_list|(
name|active0
argument_list|,
literal|0x20000000000000L
argument_list|)
return|;
default|default :
break|break;
block|}
return|return
name|jjStartNfa_0
argument_list|(
literal|8
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
return|;
block|}
specifier|private
name|int
name|jjMoveStringLiteralDfa10_0
parameter_list|(
name|long
name|old0
parameter_list|,
name|long
name|active0
parameter_list|)
block|{
if|if
condition|(
operator|(
operator|(
name|active0
operator|&=
name|old0
operator|)
operator|)
operator|==
literal|0L
condition|)
return|return
name|jjStartNfa_0
argument_list|(
literal|8
argument_list|,
name|old0
argument_list|,
literal|0L
argument_list|)
return|;
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
name|jjStopStringLiteralDfa_0
argument_list|(
literal|9
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
return|return
literal|10
return|;
block|}
switch|switch
condition|(
name|curChar
condition|)
block|{
case|case
literal|67
case|:
return|return
name|jjMoveStringLiteralDfa11_0
argument_list|(
name|active0
argument_list|,
literal|0x4000L
argument_list|)
return|;
case|case
literal|101
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x20000000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|10
argument_list|,
literal|53
argument_list|,
literal|83
argument_list|)
return|;
if|else if
condition|(
operator|(
name|active0
operator|&
literal|0x40000000000000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|10
argument_list|,
literal|54
argument_list|,
literal|26
argument_list|)
return|;
break|break;
default|default :
break|break;
block|}
return|return
name|jjStartNfa_0
argument_list|(
literal|9
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
return|;
block|}
specifier|private
name|int
name|jjMoveStringLiteralDfa11_0
parameter_list|(
name|long
name|old0
parameter_list|,
name|long
name|active0
parameter_list|)
block|{
if|if
condition|(
operator|(
operator|(
name|active0
operator|&=
name|old0
operator|)
operator|)
operator|==
literal|0L
condition|)
return|return
name|jjStartNfa_0
argument_list|(
literal|9
argument_list|,
name|old0
argument_list|,
literal|0L
argument_list|)
return|;
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
name|jjStopStringLiteralDfa_0
argument_list|(
literal|10
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
return|return
literal|11
return|;
block|}
switch|switch
condition|(
name|curChar
condition|)
block|{
case|case
literal|97
case|:
return|return
name|jjMoveStringLiteralDfa12_0
argument_list|(
name|active0
argument_list|,
literal|0x4000L
argument_list|)
return|;
default|default :
break|break;
block|}
return|return
name|jjStartNfa_0
argument_list|(
literal|10
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
return|;
block|}
specifier|private
name|int
name|jjMoveStringLiteralDfa12_0
parameter_list|(
name|long
name|old0
parameter_list|,
name|long
name|active0
parameter_list|)
block|{
if|if
condition|(
operator|(
operator|(
name|active0
operator|&=
name|old0
operator|)
operator|)
operator|==
literal|0L
condition|)
return|return
name|jjStartNfa_0
argument_list|(
literal|10
argument_list|,
name|old0
argument_list|,
literal|0L
argument_list|)
return|;
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
name|jjStopStringLiteralDfa_0
argument_list|(
literal|11
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
return|return
literal|12
return|;
block|}
switch|switch
condition|(
name|curChar
condition|)
block|{
case|case
literal|115
case|:
return|return
name|jjMoveStringLiteralDfa13_0
argument_list|(
name|active0
argument_list|,
literal|0x4000L
argument_list|)
return|;
default|default :
break|break;
block|}
return|return
name|jjStartNfa_0
argument_list|(
literal|11
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
return|;
block|}
specifier|private
name|int
name|jjMoveStringLiteralDfa13_0
parameter_list|(
name|long
name|old0
parameter_list|,
name|long
name|active0
parameter_list|)
block|{
if|if
condition|(
operator|(
operator|(
name|active0
operator|&=
name|old0
operator|)
operator|)
operator|==
literal|0L
condition|)
return|return
name|jjStartNfa_0
argument_list|(
literal|11
argument_list|,
name|old0
argument_list|,
literal|0L
argument_list|)
return|;
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
name|jjStopStringLiteralDfa_0
argument_list|(
literal|12
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
expr_stmt|;
return|return
literal|13
return|;
block|}
switch|switch
condition|(
name|curChar
condition|)
block|{
case|case
literal|101
case|:
if|if
condition|(
operator|(
name|active0
operator|&
literal|0x4000L
operator|)
operator|!=
literal|0L
condition|)
return|return
name|jjStartNfaWithStates_0
argument_list|(
literal|13
argument_list|,
literal|14
argument_list|,
literal|83
argument_list|)
return|;
break|break;
default|default :
break|break;
block|}
return|return
name|jjStartNfa_0
argument_list|(
literal|12
argument_list|,
name|active0
argument_list|,
literal|0L
argument_list|)
return|;
block|}
specifier|private
name|int
name|jjStartNfaWithStates_0
parameter_list|(
name|int
name|pos
parameter_list|,
name|int
name|kind
parameter_list|,
name|int
name|state
parameter_list|)
block|{
name|jjmatchedKind
operator|=
name|kind
expr_stmt|;
name|jjmatchedPos
operator|=
name|pos
expr_stmt|;
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
return|return
name|pos
operator|+
literal|1
return|;
block|}
return|return
name|jjMoveNfa_0
argument_list|(
name|state
argument_list|,
name|pos
operator|+
literal|1
argument_list|)
return|;
block|}
specifier|private
name|int
name|jjMoveNfa_0
parameter_list|(
name|int
name|startState
parameter_list|,
name|int
name|curPos
parameter_list|)
block|{
name|int
name|startsAt
init|=
literal|0
decl_stmt|;
name|jjnewStateCnt
operator|=
literal|83
expr_stmt|;
name|int
name|i
init|=
literal|1
decl_stmt|;
name|jjstateSet
index|[
literal|0
index|]
operator|=
name|startState
expr_stmt|;
name|int
name|kind
init|=
literal|0x7fffffff
decl_stmt|;
for|for
control|(
init|;
condition|;
control|)
block|{
if|if
condition|(
operator|++
name|jjround
operator|==
literal|0x7fffffff
condition|)
name|ReInitRounds
argument_list|()
expr_stmt|;
if|if
condition|(
name|curChar
operator|<
literal|64
condition|)
block|{
name|long
name|l
init|=
literal|1L
operator|<<
name|curChar
decl_stmt|;
do|do
block|{
switch|switch
condition|(
name|jjstateSet
index|[
operator|--
name|i
index|]
condition|)
block|{
case|case
literal|33
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|43
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|35
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|80
expr_stmt|;
if|else if
condition|(
name|curChar
operator|==
literal|46
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|73
expr_stmt|;
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|43
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAdd
argument_list|(
literal|72
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|35
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|69
expr_stmt|;
break|break;
case|case
literal|5
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|43
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|35
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|80
expr_stmt|;
if|else if
condition|(
name|curChar
operator|==
literal|46
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|73
expr_stmt|;
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|43
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAdd
argument_list|(
literal|72
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|35
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|69
expr_stmt|;
break|break;
case|case
literal|28
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|43
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|35
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|80
expr_stmt|;
if|else if
condition|(
name|curChar
operator|==
literal|46
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|73
expr_stmt|;
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|43
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAdd
argument_list|(
literal|72
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|35
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|69
expr_stmt|;
break|break;
case|case
literal|64
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|43
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|35
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|80
expr_stmt|;
if|else if
condition|(
name|curChar
operator|==
literal|46
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|73
expr_stmt|;
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|43
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAdd
argument_list|(
literal|72
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|35
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|69
expr_stmt|;
break|break;
case|case
literal|32
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|43
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|35
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|80
expr_stmt|;
if|else if
condition|(
name|curChar
operator|==
literal|46
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|73
expr_stmt|;
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|43
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAdd
argument_list|(
literal|72
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|35
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|69
expr_stmt|;
break|break;
case|case
literal|36
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|43
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|35
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|80
expr_stmt|;
if|else if
condition|(
name|curChar
operator|==
literal|46
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|73
expr_stmt|;
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|43
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAdd
argument_list|(
literal|72
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|35
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|69
expr_stmt|;
break|break;
case|case
literal|27
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|43
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|35
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|80
expr_stmt|;
if|else if
condition|(
name|curChar
operator|==
literal|46
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|73
expr_stmt|;
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|43
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAdd
argument_list|(
literal|72
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|35
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|69
expr_stmt|;
break|break;
case|case
literal|3
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
name|jjCheckNAddStates
argument_list|(
literal|7
argument_list|,
literal|12
argument_list|)
expr_stmt|;
if|else if
condition|(
name|curChar
operator|==
literal|46
condition|)
name|jjCheckNAdd
argument_list|(
literal|42
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
literal|0x3fe000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|83
condition|)
name|kind
operator|=
literal|83
expr_stmt|;
name|jjCheckNAddTwoStates
argument_list|(
literal|39
argument_list|,
literal|40
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|48
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|83
condition|)
name|kind
operator|=
literal|83
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|13
argument_list|,
literal|15
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
literal|31
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|43
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|35
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|80
expr_stmt|;
if|else if
condition|(
name|curChar
operator|==
literal|46
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|73
expr_stmt|;
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|43
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAdd
argument_list|(
literal|72
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|35
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|69
expr_stmt|;
break|break;
case|case
literal|63
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|43
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|35
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|80
expr_stmt|;
if|else if
condition|(
name|curChar
operator|==
literal|46
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|73
expr_stmt|;
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|43
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAdd
argument_list|(
literal|72
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|35
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|69
expr_stmt|;
break|break;
case|case
literal|15
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|43
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|35
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|80
expr_stmt|;
if|else if
condition|(
name|curChar
operator|==
literal|46
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|73
expr_stmt|;
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|43
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAdd
argument_list|(
literal|72
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|35
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|69
expr_stmt|;
break|break;
case|case
literal|35
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|43
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|35
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|80
expr_stmt|;
if|else if
condition|(
name|curChar
operator|==
literal|46
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|73
expr_stmt|;
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|43
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAdd
argument_list|(
literal|72
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|35
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|69
expr_stmt|;
break|break;
case|case
literal|26
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|43
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|35
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|80
expr_stmt|;
if|else if
condition|(
name|curChar
operator|==
literal|46
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|73
expr_stmt|;
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|43
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAdd
argument_list|(
literal|72
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|35
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|69
expr_stmt|;
break|break;
case|case
literal|30
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|43
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|35
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|80
expr_stmt|;
if|else if
condition|(
name|curChar
operator|==
literal|46
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|73
expr_stmt|;
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|43
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAdd
argument_list|(
literal|72
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|35
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|69
expr_stmt|;
break|break;
case|case
literal|83
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|43
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|35
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|80
expr_stmt|;
if|else if
condition|(
name|curChar
operator|==
literal|46
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|73
expr_stmt|;
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|43
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAdd
argument_list|(
literal|72
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|35
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|69
expr_stmt|;
break|break;
case|case
literal|34
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|43
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|35
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|80
expr_stmt|;
if|else if
condition|(
name|curChar
operator|==
literal|46
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|73
expr_stmt|;
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|43
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAdd
argument_list|(
literal|72
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|35
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|69
expr_stmt|;
break|break;
case|case
literal|6
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|43
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|35
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|80
expr_stmt|;
if|else if
condition|(
name|curChar
operator|==
literal|46
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|73
expr_stmt|;
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|43
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAdd
argument_list|(
literal|72
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|35
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|69
expr_stmt|;
break|break;
case|case
literal|29
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|43
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|35
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|80
expr_stmt|;
if|else if
condition|(
name|curChar
operator|==
literal|46
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|73
expr_stmt|;
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|43
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAdd
argument_list|(
literal|72
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|35
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|69
expr_stmt|;
break|break;
case|case
literal|38
case|:
if|if
condition|(
operator|(
literal|0x3fe000000000000L
operator|&
name|l
operator|)
operator|==
literal|0L
condition|)
break|break;
if|if
condition|(
name|kind
operator|>
literal|83
condition|)
name|kind
operator|=
literal|83
expr_stmt|;
name|jjCheckNAddTwoStates
argument_list|(
literal|39
argument_list|,
literal|40
argument_list|)
expr_stmt|;
break|break;
case|case
literal|39
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|==
literal|0L
condition|)
break|break;
if|if
condition|(
name|kind
operator|>
literal|83
condition|)
name|kind
operator|=
literal|83
expr_stmt|;
name|jjCheckNAddTwoStates
argument_list|(
literal|39
argument_list|,
literal|40
argument_list|)
expr_stmt|;
break|break;
case|case
literal|41
case|:
if|if
condition|(
name|curChar
operator|==
literal|46
condition|)
name|jjCheckNAdd
argument_list|(
literal|42
argument_list|)
expr_stmt|;
break|break;
case|case
literal|42
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|==
literal|0L
condition|)
break|break;
if|if
condition|(
name|kind
operator|>
literal|84
condition|)
name|kind
operator|=
literal|84
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|16
argument_list|,
literal|18
argument_list|)
expr_stmt|;
break|break;
case|case
literal|44
case|:
if|if
condition|(
operator|(
literal|0x280000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
name|jjCheckNAdd
argument_list|(
literal|45
argument_list|)
expr_stmt|;
break|break;
case|case
literal|45
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|==
literal|0L
condition|)
break|break;
if|if
condition|(
name|kind
operator|>
literal|84
condition|)
name|kind
operator|=
literal|84
expr_stmt|;
name|jjCheckNAddTwoStates
argument_list|(
literal|45
argument_list|,
literal|46
argument_list|)
expr_stmt|;
break|break;
case|case
literal|47
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
name|jjCheckNAddStates
argument_list|(
literal|7
argument_list|,
literal|12
argument_list|)
expr_stmt|;
break|break;
case|case
literal|48
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
name|jjCheckNAddTwoStates
argument_list|(
literal|48
argument_list|,
literal|49
argument_list|)
expr_stmt|;
break|break;
case|case
literal|49
case|:
if|if
condition|(
name|curChar
operator|!=
literal|46
condition|)
break|break;
if|if
condition|(
name|kind
operator|>
literal|84
condition|)
name|kind
operator|=
literal|84
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|19
argument_list|,
literal|21
argument_list|)
expr_stmt|;
break|break;
case|case
literal|50
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|==
literal|0L
condition|)
break|break;
if|if
condition|(
name|kind
operator|>
literal|84
condition|)
name|kind
operator|=
literal|84
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|19
argument_list|,
literal|21
argument_list|)
expr_stmt|;
break|break;
case|case
literal|51
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
name|jjCheckNAddTwoStates
argument_list|(
literal|51
argument_list|,
literal|52
argument_list|)
expr_stmt|;
break|break;
case|case
literal|53
case|:
if|if
condition|(
operator|(
literal|0x280000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
name|jjCheckNAdd
argument_list|(
literal|54
argument_list|)
expr_stmt|;
break|break;
case|case
literal|54
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|==
literal|0L
condition|)
break|break;
if|if
condition|(
name|kind
operator|>
literal|84
condition|)
name|kind
operator|=
literal|84
expr_stmt|;
name|jjCheckNAddTwoStates
argument_list|(
literal|54
argument_list|,
literal|46
argument_list|)
expr_stmt|;
break|break;
case|case
literal|55
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
name|jjCheckNAddTwoStates
argument_list|(
literal|55
argument_list|,
literal|46
argument_list|)
expr_stmt|;
break|break;
case|case
literal|56
case|:
if|if
condition|(
name|curChar
operator|!=
literal|48
condition|)
break|break;
if|if
condition|(
name|kind
operator|>
literal|83
condition|)
name|kind
operator|=
literal|83
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|13
argument_list|,
literal|15
argument_list|)
expr_stmt|;
break|break;
case|case
literal|57
case|:
if|if
condition|(
operator|(
literal|0xff000000000000L
operator|&
name|l
operator|)
operator|==
literal|0L
condition|)
break|break;
if|if
condition|(
name|kind
operator|>
literal|83
condition|)
name|kind
operator|=
literal|83
expr_stmt|;
name|jjCheckNAddTwoStates
argument_list|(
literal|57
argument_list|,
literal|40
argument_list|)
expr_stmt|;
break|break;
case|case
literal|59
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|==
literal|0L
condition|)
break|break;
if|if
condition|(
name|kind
operator|>
literal|83
condition|)
name|kind
operator|=
literal|83
expr_stmt|;
name|jjCheckNAddTwoStates
argument_list|(
literal|59
argument_list|,
literal|40
argument_list|)
expr_stmt|;
break|break;
case|case
literal|67
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|==
literal|0L
condition|)
break|break;
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
break|break;
case|case
literal|68
case|:
if|if
condition|(
name|curChar
operator|==
literal|35
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|69
expr_stmt|;
break|break;
case|case
literal|70
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|==
literal|0L
condition|)
break|break;
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|22
argument_list|,
literal|24
argument_list|)
expr_stmt|;
break|break;
case|case
literal|71
case|:
if|if
condition|(
name|curChar
operator|!=
literal|43
condition|)
break|break;
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAdd
argument_list|(
literal|72
argument_list|)
expr_stmt|;
break|break;
case|case
literal|72
case|:
if|if
condition|(
name|curChar
operator|==
literal|46
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|73
expr_stmt|;
break|break;
case|case
literal|74
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|==
literal|0L
condition|)
break|break;
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|25
argument_list|,
literal|28
argument_list|)
expr_stmt|;
break|break;
case|case
literal|75
case|:
if|if
condition|(
name|curChar
operator|==
literal|35
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|76
expr_stmt|;
break|break;
case|case
literal|77
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|==
literal|0L
condition|)
break|break;
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|29
argument_list|,
literal|31
argument_list|)
expr_stmt|;
break|break;
case|case
literal|78
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|==
literal|0L
condition|)
break|break;
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
break|break;
case|case
literal|79
case|:
if|if
condition|(
name|curChar
operator|==
literal|35
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|80
expr_stmt|;
break|break;
case|case
literal|81
case|:
if|if
condition|(
operator|(
literal|0x3ff000000000000L
operator|&
name|l
operator|)
operator|==
literal|0L
condition|)
break|break;
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
name|jjCheckNAddTwoStates
argument_list|(
literal|81
argument_list|,
literal|82
argument_list|)
expr_stmt|;
break|break;
case|case
literal|82
case|:
if|if
condition|(
name|curChar
operator|==
literal|43
operator|&&
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
break|break;
default|default :
break|break;
block|}
block|}
do|while
condition|(
name|i
operator|!=
name|startsAt
condition|)
do|;
block|}
if|else if
condition|(
name|curChar
operator|<
literal|128
condition|)
block|{
name|long
name|l
init|=
literal|1L
operator|<<
operator|(
name|curChar
operator|&
literal|077
operator|)
decl_stmt|;
do|do
block|{
switch|switch
condition|(
name|jjstateSet
index|[
operator|--
name|i
index|]
condition|)
block|{
case|case
literal|33
case|:
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|curChar
operator|==
literal|101
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|32
expr_stmt|;
break|break;
case|case
literal|5
case|:
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|curChar
operator|==
literal|117
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|4
expr_stmt|;
break|break;
case|case
literal|28
case|:
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|curChar
operator|==
literal|109
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|27
expr_stmt|;
break|break;
case|case
literal|64
case|:
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|curChar
operator|==
literal|119
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|55
condition|)
name|kind
operator|=
literal|55
expr_stmt|;
block|}
break|break;
case|case
literal|32
case|:
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|curChar
operator|==
literal|110
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|31
expr_stmt|;
break|break;
case|case
literal|36
case|:
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|curChar
operator|==
literal|117
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|35
expr_stmt|;
break|break;
case|case
literal|27
case|:
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|curChar
operator|==
literal|101
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|26
expr_stmt|;
break|break;
case|case
literal|3
case|:
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|32
argument_list|,
literal|38
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|curChar
operator|==
literal|110
condition|)
name|jjAddStates
argument_list|(
literal|39
argument_list|,
literal|40
argument_list|)
expr_stmt|;
if|else if
condition|(
name|curChar
operator|==
literal|99
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|36
expr_stmt|;
if|else if
condition|(
name|curChar
operator|==
literal|70
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|20
expr_stmt|;
if|else if
condition|(
name|curChar
operator|==
literal|102
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|15
expr_stmt|;
if|else if
condition|(
name|curChar
operator|==
literal|84
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|10
expr_stmt|;
if|else if
condition|(
name|curChar
operator|==
literal|116
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|6
expr_stmt|;
if|else if
condition|(
name|curChar
operator|==
literal|78
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|2
expr_stmt|;
break|break;
case|case
literal|31
case|:
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|curChar
operator|==
literal|116
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|30
expr_stmt|;
break|break;
case|case
literal|63
case|:
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|curChar
operator|==
literal|111
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|64
expr_stmt|;
if|else if
condition|(
name|curChar
operator|==
literal|117
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|62
expr_stmt|;
break|break;
case|case
literal|15
case|:
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|curChar
operator|==
literal|97
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|14
expr_stmt|;
break|break;
case|case
literal|35
case|:
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|curChar
operator|==
literal|114
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|34
expr_stmt|;
break|break;
case|case
literal|26
case|:
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|curChar
operator|==
literal|115
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|25
expr_stmt|;
break|break;
case|case
literal|30
case|:
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|curChar
operator|==
literal|84
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|29
expr_stmt|;
break|break;
case|case
literal|83
case|:
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
break|break;
case|case
literal|34
case|:
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|curChar
operator|==
literal|114
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|33
expr_stmt|;
break|break;
case|case
literal|6
case|:
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|curChar
operator|==
literal|114
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|5
expr_stmt|;
break|break;
case|case
literal|29
case|:
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|curChar
operator|==
literal|105
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|28
expr_stmt|;
break|break;
case|case
literal|0
case|:
if|if
condition|(
name|curChar
operator|==
literal|76
operator|&&
name|kind
operator|>
literal|33
condition|)
name|kind
operator|=
literal|33
expr_stmt|;
break|break;
case|case
literal|1
case|:
if|if
condition|(
name|curChar
operator|==
literal|76
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|0
expr_stmt|;
break|break;
case|case
literal|2
case|:
if|if
condition|(
name|curChar
operator|==
literal|85
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|1
expr_stmt|;
break|break;
case|case
literal|4
case|:
if|if
condition|(
name|curChar
operator|==
literal|101
operator|&&
name|kind
operator|>
literal|34
condition|)
name|kind
operator|=
literal|34
expr_stmt|;
break|break;
case|case
literal|7
case|:
if|if
condition|(
name|curChar
operator|==
literal|116
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|6
expr_stmt|;
break|break;
case|case
literal|8
case|:
if|if
condition|(
name|curChar
operator|==
literal|69
operator|&&
name|kind
operator|>
literal|34
condition|)
name|kind
operator|=
literal|34
expr_stmt|;
break|break;
case|case
literal|9
case|:
if|if
condition|(
name|curChar
operator|==
literal|85
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|8
expr_stmt|;
break|break;
case|case
literal|10
case|:
if|if
condition|(
name|curChar
operator|==
literal|82
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|9
expr_stmt|;
break|break;
case|case
literal|11
case|:
if|if
condition|(
name|curChar
operator|==
literal|84
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|10
expr_stmt|;
break|break;
case|case
literal|12
case|:
if|if
condition|(
name|curChar
operator|==
literal|101
operator|&&
name|kind
operator|>
literal|35
condition|)
name|kind
operator|=
literal|35
expr_stmt|;
break|break;
case|case
literal|13
case|:
if|if
condition|(
name|curChar
operator|==
literal|115
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|12
expr_stmt|;
break|break;
case|case
literal|14
case|:
if|if
condition|(
name|curChar
operator|==
literal|108
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|13
expr_stmt|;
break|break;
case|case
literal|16
case|:
if|if
condition|(
name|curChar
operator|==
literal|102
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|15
expr_stmt|;
break|break;
case|case
literal|17
case|:
if|if
condition|(
name|curChar
operator|==
literal|69
operator|&&
name|kind
operator|>
literal|35
condition|)
name|kind
operator|=
literal|35
expr_stmt|;
break|break;
case|case
literal|18
case|:
if|if
condition|(
name|curChar
operator|==
literal|83
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|17
expr_stmt|;
break|break;
case|case
literal|19
case|:
if|if
condition|(
name|curChar
operator|==
literal|76
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|18
expr_stmt|;
break|break;
case|case
literal|20
case|:
if|if
condition|(
name|curChar
operator|==
literal|65
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|19
expr_stmt|;
break|break;
case|case
literal|21
case|:
if|if
condition|(
name|curChar
operator|==
literal|70
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|20
expr_stmt|;
break|break;
case|case
literal|22
case|:
if|if
condition|(
name|curChar
operator|==
literal|112
operator|&&
name|kind
operator|>
literal|55
condition|)
name|kind
operator|=
literal|55
expr_stmt|;
break|break;
case|case
literal|23
case|:
if|if
condition|(
name|curChar
operator|==
literal|109
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|22
expr_stmt|;
break|break;
case|case
literal|24
case|:
if|if
condition|(
name|curChar
operator|==
literal|97
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|23
expr_stmt|;
break|break;
case|case
literal|25
case|:
if|if
condition|(
name|curChar
operator|==
literal|116
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|24
expr_stmt|;
break|break;
case|case
literal|37
case|:
if|if
condition|(
name|curChar
operator|==
literal|99
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|36
expr_stmt|;
break|break;
case|case
literal|40
case|:
if|if
condition|(
operator|(
literal|0x110000001100L
operator|&
name|l
operator|)
operator|!=
literal|0L
operator|&&
name|kind
operator|>
literal|83
condition|)
name|kind
operator|=
literal|83
expr_stmt|;
break|break;
case|case
literal|43
case|:
if|if
condition|(
operator|(
literal|0x2000000020L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
name|jjAddStates
argument_list|(
literal|41
argument_list|,
literal|42
argument_list|)
expr_stmt|;
break|break;
case|case
literal|46
case|:
if|if
condition|(
operator|(
literal|0x5400000054L
operator|&
name|l
operator|)
operator|!=
literal|0L
operator|&&
name|kind
operator|>
literal|84
condition|)
name|kind
operator|=
literal|84
expr_stmt|;
break|break;
case|case
literal|52
case|:
if|if
condition|(
operator|(
literal|0x2000000020L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
name|jjAddStates
argument_list|(
literal|43
argument_list|,
literal|44
argument_list|)
expr_stmt|;
break|break;
case|case
literal|58
case|:
if|if
condition|(
operator|(
literal|0x100000001000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
name|jjCheckNAdd
argument_list|(
literal|59
argument_list|)
expr_stmt|;
break|break;
case|case
literal|59
case|:
if|if
condition|(
operator|(
literal|0x7e0000007eL
operator|&
name|l
operator|)
operator|==
literal|0L
condition|)
break|break;
if|if
condition|(
name|kind
operator|>
literal|83
condition|)
name|kind
operator|=
literal|83
expr_stmt|;
name|jjCheckNAddTwoStates
argument_list|(
literal|59
argument_list|,
literal|40
argument_list|)
expr_stmt|;
break|break;
case|case
literal|60
case|:
if|if
condition|(
name|curChar
operator|==
literal|110
condition|)
name|jjAddStates
argument_list|(
literal|39
argument_list|,
literal|40
argument_list|)
expr_stmt|;
break|break;
case|case
literal|61
case|:
if|if
condition|(
name|curChar
operator|==
literal|108
operator|&&
name|kind
operator|>
literal|33
condition|)
name|kind
operator|=
literal|33
expr_stmt|;
break|break;
case|case
literal|62
case|:
if|if
condition|(
name|curChar
operator|==
literal|108
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|61
expr_stmt|;
break|break;
case|case
literal|65
case|:
if|if
condition|(
name|curChar
operator|==
literal|111
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|64
expr_stmt|;
break|break;
case|case
literal|66
case|:
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|==
literal|0L
condition|)
break|break;
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|32
argument_list|,
literal|38
argument_list|)
expr_stmt|;
break|break;
case|case
literal|67
case|:
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|==
literal|0L
condition|)
break|break;
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|3
argument_list|,
literal|6
argument_list|)
expr_stmt|;
break|break;
case|case
literal|69
case|:
case|case
literal|70
case|:
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|==
literal|0L
condition|)
break|break;
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|22
argument_list|,
literal|24
argument_list|)
expr_stmt|;
break|break;
case|case
literal|73
case|:
case|case
literal|74
case|:
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|==
literal|0L
condition|)
break|break;
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|25
argument_list|,
literal|28
argument_list|)
expr_stmt|;
break|break;
case|case
literal|76
case|:
case|case
literal|77
case|:
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|==
literal|0L
condition|)
break|break;
if|if
condition|(
name|kind
operator|>
literal|71
condition|)
name|kind
operator|=
literal|71
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|29
argument_list|,
literal|31
argument_list|)
expr_stmt|;
break|break;
case|case
literal|78
case|:
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|==
literal|0L
condition|)
break|break;
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
name|jjCheckNAddStates
argument_list|(
literal|0
argument_list|,
literal|2
argument_list|)
expr_stmt|;
break|break;
case|case
literal|80
case|:
case|case
literal|81
case|:
if|if
condition|(
operator|(
literal|0x7fffffe87fffffeL
operator|&
name|l
operator|)
operator|==
literal|0L
condition|)
break|break;
if|if
condition|(
name|kind
operator|>
literal|72
condition|)
name|kind
operator|=
literal|72
expr_stmt|;
name|jjCheckNAddTwoStates
argument_list|(
literal|81
argument_list|,
literal|82
argument_list|)
expr_stmt|;
break|break;
default|default :
break|break;
block|}
block|}
do|while
condition|(
name|i
operator|!=
name|startsAt
condition|)
do|;
block|}
else|else
block|{
name|int
name|hiByte
init|=
operator|(
name|int
operator|)
operator|(
name|curChar
operator|>>
literal|8
operator|)
decl_stmt|;
name|int
name|i1
init|=
name|hiByte
operator|>>
literal|6
decl_stmt|;
name|long
name|l1
init|=
literal|1L
operator|<<
operator|(
name|hiByte
operator|&
literal|077
operator|)
decl_stmt|;
name|int
name|i2
init|=
operator|(
name|curChar
operator|&
literal|0xff
operator|)
operator|>>
literal|6
decl_stmt|;
name|long
name|l2
init|=
literal|1L
operator|<<
operator|(
name|curChar
operator|&
literal|077
operator|)
decl_stmt|;
do|do
block|{
switch|switch
condition|(
name|jjstateSet
index|[
operator|--
name|i
index|]
condition|)
block|{
default|default :
break|break;
block|}
block|}
do|while
condition|(
name|i
operator|!=
name|startsAt
condition|)
do|;
block|}
if|if
condition|(
name|kind
operator|!=
literal|0x7fffffff
condition|)
block|{
name|jjmatchedKind
operator|=
name|kind
expr_stmt|;
name|jjmatchedPos
operator|=
name|curPos
expr_stmt|;
name|kind
operator|=
literal|0x7fffffff
expr_stmt|;
block|}
operator|++
name|curPos
expr_stmt|;
if|if
condition|(
operator|(
name|i
operator|=
name|jjnewStateCnt
operator|)
operator|==
operator|(
name|startsAt
operator|=
literal|83
operator|-
operator|(
name|jjnewStateCnt
operator|=
name|startsAt
operator|)
operator|)
condition|)
return|return
name|curPos
return|;
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
return|return
name|curPos
return|;
block|}
block|}
block|}
specifier|private
specifier|final
name|int
name|jjStopStringLiteralDfa_1
parameter_list|(
name|int
name|pos
parameter_list|,
name|long
name|active0
parameter_list|,
name|long
name|active1
parameter_list|)
block|{
switch|switch
condition|(
name|pos
condition|)
block|{
default|default :
return|return
operator|-
literal|1
return|;
block|}
block|}
specifier|private
specifier|final
name|int
name|jjStartNfa_1
parameter_list|(
name|int
name|pos
parameter_list|,
name|long
name|active0
parameter_list|,
name|long
name|active1
parameter_list|)
block|{
return|return
name|jjMoveNfa_1
argument_list|(
name|jjStopStringLiteralDfa_1
argument_list|(
name|pos
argument_list|,
name|active0
argument_list|,
name|active1
argument_list|)
argument_list|,
name|pos
operator|+
literal|1
argument_list|)
return|;
block|}
specifier|private
name|int
name|jjMoveStringLiteralDfa0_1
parameter_list|()
block|{
switch|switch
condition|(
name|curChar
condition|)
block|{
case|case
literal|39
case|:
return|return
name|jjStopAtPos
argument_list|(
literal|0
argument_list|,
literal|79
argument_list|)
return|;
default|default :
return|return
name|jjMoveNfa_1
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
return|;
block|}
block|}
specifier|static
specifier|final
name|long
index|[]
name|jjbitVec0
init|=
block|{
literal|0xfffffffffffffffeL
block|,
literal|0xffffffffffffffffL
block|,
literal|0xffffffffffffffffL
block|,
literal|0xffffffffffffffffL
block|}
decl_stmt|;
specifier|static
specifier|final
name|long
index|[]
name|jjbitVec2
init|=
block|{
literal|0x0L
block|,
literal|0x0L
block|,
literal|0xffffffffffffffffL
block|,
literal|0xffffffffffffffffL
block|}
decl_stmt|;
specifier|private
name|int
name|jjMoveNfa_1
parameter_list|(
name|int
name|startState
parameter_list|,
name|int
name|curPos
parameter_list|)
block|{
name|int
name|startsAt
init|=
literal|0
decl_stmt|;
name|jjnewStateCnt
operator|=
literal|6
expr_stmt|;
name|int
name|i
init|=
literal|1
decl_stmt|;
name|jjstateSet
index|[
literal|0
index|]
operator|=
name|startState
expr_stmt|;
name|int
name|kind
init|=
literal|0x7fffffff
decl_stmt|;
for|for
control|(
init|;
condition|;
control|)
block|{
if|if
condition|(
operator|++
name|jjround
operator|==
literal|0x7fffffff
condition|)
name|ReInitRounds
argument_list|()
expr_stmt|;
if|if
condition|(
name|curChar
operator|<
literal|64
condition|)
block|{
name|long
name|l
init|=
literal|1L
operator|<<
name|curChar
decl_stmt|;
do|do
block|{
switch|switch
condition|(
name|jjstateSet
index|[
operator|--
name|i
index|]
condition|)
block|{
case|case
literal|0
case|:
if|if
condition|(
operator|(
literal|0xffffff7fffffffffL
operator|&
name|l
operator|)
operator|!=
literal|0L
operator|&&
name|kind
operator|>
literal|78
condition|)
name|kind
operator|=
literal|78
expr_stmt|;
break|break;
case|case
literal|1
case|:
if|if
condition|(
operator|(
literal|0x8400000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
operator|&&
name|kind
operator|>
literal|77
condition|)
name|kind
operator|=
literal|77
expr_stmt|;
break|break;
case|case
literal|2
case|:
if|if
condition|(
operator|(
literal|0xf000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|3
expr_stmt|;
break|break;
case|case
literal|3
case|:
if|if
condition|(
operator|(
literal|0xff000000000000L
operator|&
name|l
operator|)
operator|==
literal|0L
condition|)
break|break;
if|if
condition|(
name|kind
operator|>
literal|77
condition|)
name|kind
operator|=
literal|77
expr_stmt|;
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|4
expr_stmt|;
break|break;
case|case
literal|4
case|:
if|if
condition|(
operator|(
literal|0xff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
operator|&&
name|kind
operator|>
literal|77
condition|)
name|kind
operator|=
literal|77
expr_stmt|;
break|break;
default|default :
break|break;
block|}
block|}
do|while
condition|(
name|i
operator|!=
name|startsAt
condition|)
do|;
block|}
if|else if
condition|(
name|curChar
operator|<
literal|128
condition|)
block|{
name|long
name|l
init|=
literal|1L
operator|<<
operator|(
name|curChar
operator|&
literal|077
operator|)
decl_stmt|;
do|do
block|{
switch|switch
condition|(
name|jjstateSet
index|[
operator|--
name|i
index|]
condition|)
block|{
case|case
literal|0
case|:
if|if
condition|(
operator|(
literal|0xffffffffefffffffL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|78
condition|)
name|kind
operator|=
literal|78
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|92
condition|)
name|jjAddStates
argument_list|(
literal|45
argument_list|,
literal|47
argument_list|)
expr_stmt|;
break|break;
case|case
literal|1
case|:
if|if
condition|(
operator|(
literal|0x14404510000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
operator|&&
name|kind
operator|>
literal|77
condition|)
name|kind
operator|=
literal|77
expr_stmt|;
break|break;
case|case
literal|5
case|:
if|if
condition|(
operator|(
literal|0xffffffffefffffffL
operator|&
name|l
operator|)
operator|!=
literal|0L
operator|&&
name|kind
operator|>
literal|78
condition|)
name|kind
operator|=
literal|78
expr_stmt|;
break|break;
default|default :
break|break;
block|}
block|}
do|while
condition|(
name|i
operator|!=
name|startsAt
condition|)
do|;
block|}
else|else
block|{
name|int
name|hiByte
init|=
operator|(
name|int
operator|)
operator|(
name|curChar
operator|>>
literal|8
operator|)
decl_stmt|;
name|int
name|i1
init|=
name|hiByte
operator|>>
literal|6
decl_stmt|;
name|long
name|l1
init|=
literal|1L
operator|<<
operator|(
name|hiByte
operator|&
literal|077
operator|)
decl_stmt|;
name|int
name|i2
init|=
operator|(
name|curChar
operator|&
literal|0xff
operator|)
operator|>>
literal|6
decl_stmt|;
name|long
name|l2
init|=
literal|1L
operator|<<
operator|(
name|curChar
operator|&
literal|077
operator|)
decl_stmt|;
do|do
block|{
switch|switch
condition|(
name|jjstateSet
index|[
operator|--
name|i
index|]
condition|)
block|{
case|case
literal|0
case|:
if|if
condition|(
name|jjCanMove_0
argument_list|(
name|hiByte
argument_list|,
name|i1
argument_list|,
name|i2
argument_list|,
name|l1
argument_list|,
name|l2
argument_list|)
operator|&&
name|kind
operator|>
literal|78
condition|)
name|kind
operator|=
literal|78
expr_stmt|;
break|break;
default|default :
break|break;
block|}
block|}
do|while
condition|(
name|i
operator|!=
name|startsAt
condition|)
do|;
block|}
if|if
condition|(
name|kind
operator|!=
literal|0x7fffffff
condition|)
block|{
name|jjmatchedKind
operator|=
name|kind
expr_stmt|;
name|jjmatchedPos
operator|=
name|curPos
expr_stmt|;
name|kind
operator|=
literal|0x7fffffff
expr_stmt|;
block|}
operator|++
name|curPos
expr_stmt|;
if|if
condition|(
operator|(
name|i
operator|=
name|jjnewStateCnt
operator|)
operator|==
operator|(
name|startsAt
operator|=
literal|6
operator|-
operator|(
name|jjnewStateCnt
operator|=
name|startsAt
operator|)
operator|)
condition|)
return|return
name|curPos
return|;
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
return|return
name|curPos
return|;
block|}
block|}
block|}
specifier|private
specifier|final
name|int
name|jjStopStringLiteralDfa_2
parameter_list|(
name|int
name|pos
parameter_list|,
name|long
name|active0
parameter_list|,
name|long
name|active1
parameter_list|)
block|{
switch|switch
condition|(
name|pos
condition|)
block|{
default|default :
return|return
operator|-
literal|1
return|;
block|}
block|}
specifier|private
specifier|final
name|int
name|jjStartNfa_2
parameter_list|(
name|int
name|pos
parameter_list|,
name|long
name|active0
parameter_list|,
name|long
name|active1
parameter_list|)
block|{
return|return
name|jjMoveNfa_2
argument_list|(
name|jjStopStringLiteralDfa_2
argument_list|(
name|pos
argument_list|,
name|active0
argument_list|,
name|active1
argument_list|)
argument_list|,
name|pos
operator|+
literal|1
argument_list|)
return|;
block|}
specifier|private
name|int
name|jjMoveStringLiteralDfa0_2
parameter_list|()
block|{
switch|switch
condition|(
name|curChar
condition|)
block|{
case|case
literal|34
case|:
return|return
name|jjStopAtPos
argument_list|(
literal|0
argument_list|,
literal|82
argument_list|)
return|;
default|default :
return|return
name|jjMoveNfa_2
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|)
return|;
block|}
block|}
specifier|private
name|int
name|jjMoveNfa_2
parameter_list|(
name|int
name|startState
parameter_list|,
name|int
name|curPos
parameter_list|)
block|{
name|int
name|startsAt
init|=
literal|0
decl_stmt|;
name|jjnewStateCnt
operator|=
literal|6
expr_stmt|;
name|int
name|i
init|=
literal|1
decl_stmt|;
name|jjstateSet
index|[
literal|0
index|]
operator|=
name|startState
expr_stmt|;
name|int
name|kind
init|=
literal|0x7fffffff
decl_stmt|;
for|for
control|(
init|;
condition|;
control|)
block|{
if|if
condition|(
operator|++
name|jjround
operator|==
literal|0x7fffffff
condition|)
name|ReInitRounds
argument_list|()
expr_stmt|;
if|if
condition|(
name|curChar
operator|<
literal|64
condition|)
block|{
name|long
name|l
init|=
literal|1L
operator|<<
name|curChar
decl_stmt|;
do|do
block|{
switch|switch
condition|(
name|jjstateSet
index|[
operator|--
name|i
index|]
condition|)
block|{
case|case
literal|0
case|:
if|if
condition|(
operator|(
literal|0xfffffffbffffffffL
operator|&
name|l
operator|)
operator|!=
literal|0L
operator|&&
name|kind
operator|>
literal|81
condition|)
name|kind
operator|=
literal|81
expr_stmt|;
break|break;
case|case
literal|1
case|:
if|if
condition|(
operator|(
literal|0x8400000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
operator|&&
name|kind
operator|>
literal|80
condition|)
name|kind
operator|=
literal|80
expr_stmt|;
break|break;
case|case
literal|2
case|:
if|if
condition|(
operator|(
literal|0xf000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|3
expr_stmt|;
break|break;
case|case
literal|3
case|:
if|if
condition|(
operator|(
literal|0xff000000000000L
operator|&
name|l
operator|)
operator|==
literal|0L
condition|)
break|break;
if|if
condition|(
name|kind
operator|>
literal|80
condition|)
name|kind
operator|=
literal|80
expr_stmt|;
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
literal|4
expr_stmt|;
break|break;
case|case
literal|4
case|:
if|if
condition|(
operator|(
literal|0xff000000000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
operator|&&
name|kind
operator|>
literal|80
condition|)
name|kind
operator|=
literal|80
expr_stmt|;
break|break;
default|default :
break|break;
block|}
block|}
do|while
condition|(
name|i
operator|!=
name|startsAt
condition|)
do|;
block|}
if|else if
condition|(
name|curChar
operator|<
literal|128
condition|)
block|{
name|long
name|l
init|=
literal|1L
operator|<<
operator|(
name|curChar
operator|&
literal|077
operator|)
decl_stmt|;
do|do
block|{
switch|switch
condition|(
name|jjstateSet
index|[
operator|--
name|i
index|]
condition|)
block|{
case|case
literal|0
case|:
if|if
condition|(
operator|(
literal|0xffffffffefffffffL
operator|&
name|l
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|kind
operator|>
literal|81
condition|)
name|kind
operator|=
literal|81
expr_stmt|;
block|}
if|else if
condition|(
name|curChar
operator|==
literal|92
condition|)
name|jjAddStates
argument_list|(
literal|45
argument_list|,
literal|47
argument_list|)
expr_stmt|;
break|break;
case|case
literal|1
case|:
if|if
condition|(
operator|(
literal|0x14404510000000L
operator|&
name|l
operator|)
operator|!=
literal|0L
operator|&&
name|kind
operator|>
literal|80
condition|)
name|kind
operator|=
literal|80
expr_stmt|;
break|break;
case|case
literal|5
case|:
if|if
condition|(
operator|(
literal|0xffffffffefffffffL
operator|&
name|l
operator|)
operator|!=
literal|0L
operator|&&
name|kind
operator|>
literal|81
condition|)
name|kind
operator|=
literal|81
expr_stmt|;
break|break;
default|default :
break|break;
block|}
block|}
do|while
condition|(
name|i
operator|!=
name|startsAt
condition|)
do|;
block|}
else|else
block|{
name|int
name|hiByte
init|=
operator|(
name|int
operator|)
operator|(
name|curChar
operator|>>
literal|8
operator|)
decl_stmt|;
name|int
name|i1
init|=
name|hiByte
operator|>>
literal|6
decl_stmt|;
name|long
name|l1
init|=
literal|1L
operator|<<
operator|(
name|hiByte
operator|&
literal|077
operator|)
decl_stmt|;
name|int
name|i2
init|=
operator|(
name|curChar
operator|&
literal|0xff
operator|)
operator|>>
literal|6
decl_stmt|;
name|long
name|l2
init|=
literal|1L
operator|<<
operator|(
name|curChar
operator|&
literal|077
operator|)
decl_stmt|;
do|do
block|{
switch|switch
condition|(
name|jjstateSet
index|[
operator|--
name|i
index|]
condition|)
block|{
case|case
literal|0
case|:
if|if
condition|(
name|jjCanMove_0
argument_list|(
name|hiByte
argument_list|,
name|i1
argument_list|,
name|i2
argument_list|,
name|l1
argument_list|,
name|l2
argument_list|)
operator|&&
name|kind
operator|>
literal|81
condition|)
name|kind
operator|=
literal|81
expr_stmt|;
break|break;
default|default :
break|break;
block|}
block|}
do|while
condition|(
name|i
operator|!=
name|startsAt
condition|)
do|;
block|}
if|if
condition|(
name|kind
operator|!=
literal|0x7fffffff
condition|)
block|{
name|jjmatchedKind
operator|=
name|kind
expr_stmt|;
name|jjmatchedPos
operator|=
name|curPos
expr_stmt|;
name|kind
operator|=
literal|0x7fffffff
expr_stmt|;
block|}
operator|++
name|curPos
expr_stmt|;
if|if
condition|(
operator|(
name|i
operator|=
name|jjnewStateCnt
operator|)
operator|==
operator|(
name|startsAt
operator|=
literal|6
operator|-
operator|(
name|jjnewStateCnt
operator|=
name|startsAt
operator|)
operator|)
condition|)
return|return
name|curPos
return|;
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
return|return
name|curPos
return|;
block|}
block|}
block|}
specifier|static
specifier|final
name|int
index|[]
name|jjnextStates
init|=
block|{
literal|78
block|,
literal|79
block|,
literal|82
block|,
literal|67
block|,
literal|68
block|,
literal|71
block|,
literal|72
block|,
literal|48
block|,
literal|49
block|,
literal|51
block|,
literal|52
block|,
literal|55
block|,
literal|46
block|,
literal|57
block|,
literal|58
block|,
literal|40
block|,
literal|42
block|,
literal|43
block|,
literal|46
block|,
literal|50
block|,
literal|43
block|,
literal|46
block|,
literal|70
block|,
literal|71
block|,
literal|72
block|,
literal|72
block|,
literal|74
block|,
literal|75
block|,
literal|71
block|,
literal|72
block|,
literal|77
block|,
literal|71
block|,
literal|67
block|,
literal|68
block|,
literal|71
block|,
literal|72
block|,
literal|78
block|,
literal|79
block|,
literal|82
block|,
literal|63
block|,
literal|65
block|,
literal|44
block|,
literal|45
block|,
literal|53
block|,
literal|54
block|,
literal|1
block|,
literal|2
block|,
literal|3
block|,  }
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|boolean
name|jjCanMove_0
parameter_list|(
name|int
name|hiByte
parameter_list|,
name|int
name|i1
parameter_list|,
name|int
name|i2
parameter_list|,
name|long
name|l1
parameter_list|,
name|long
name|l2
parameter_list|)
block|{
switch|switch
condition|(
name|hiByte
condition|)
block|{
case|case
literal|0
case|:
return|return
operator|(
operator|(
name|jjbitVec2
index|[
name|i2
index|]
operator|&
name|l2
operator|)
operator|!=
literal|0L
operator|)
return|;
default|default :
if|if
condition|(
operator|(
name|jjbitVec0
index|[
name|i1
index|]
operator|&
name|l1
operator|)
operator|!=
literal|0L
condition|)
return|return
literal|true
return|;
return|return
literal|false
return|;
block|}
block|}
comment|/** Token literal values. */
specifier|public
specifier|static
specifier|final
name|String
index|[]
name|jjstrLiteralImages
init|=
block|{
literal|""
block|,
literal|"\157\162"
block|,
literal|"\141\156\144"
block|,
literal|"\156\157\164"
block|,
literal|"\41"
block|,
literal|"\75"
block|,
literal|"\75\75"
block|,
literal|"\41\75"
block|,
literal|"\74\76"
block|,
literal|"\74\75"
block|,
literal|"\74"
block|,
literal|"\76"
block|,
literal|"\76\75"
block|,
literal|"\154\151\153\145"
block|,
literal|"\154\151\153\145\111\147\156\157\162\145\103\141\163\145"
block|,
literal|"\151\156"
block|,
literal|"\50"
block|,
literal|"\51"
block|,
literal|"\142\145\164\167\145\145\156"
block|,
literal|"\54"
block|,
literal|"\174"
block|,
literal|"\136"
block|,
literal|"\46"
block|,
literal|"\74\74"
block|,
literal|"\76\76"
block|,
literal|"\53"
block|,
literal|"\55"
block|,
literal|"\57"
block|,
literal|"\176"
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|"\146\165\156\143\164\151\157\156"
block|,
literal|"\141\166\147"
block|,
literal|"\155\151\156"
block|,
literal|"\155\141\170"
block|,
literal|"\163\165\155"
block|,
literal|"\143\157\165\156\164"
block|,
literal|"\144\151\163\164\151\156\143\164"
block|,
literal|"\143\157\156\143\141\164"
block|,
literal|"\163\165\142\163\164\162\151\156\147"
block|,
literal|"\164\162\151\155"
block|,
literal|"\154\157\167\145\162"
block|,
literal|"\165\160\160\145\162"
block|,
literal|"\154\145\156\147\164\150"
block|,
literal|"\154\157\143\141\164\145"
block|,
literal|"\141\142\163"
block|,
literal|"\163\161\162\164"
block|,
literal|"\155\157\144"
block|,
literal|"\143\165\162\162\145\156\164\104\141\164\145"
block|,
literal|"\143\165\162\162\145\156\164\124\151\155\145"
block|,
literal|null
block|,
literal|"\171\145\141\162"
block|,
literal|"\155\157\156\164\150"
block|,
literal|"\167\145\145\153"
block|,
literal|"\144\141\171\117\146\131\145\141\162"
block|,
literal|"\144\141\171"
block|,
literal|"\144\141\171\117\146\115\157\156\164\150"
block|,
literal|"\144\141\171\117\146\127\145\145\153"
block|,
literal|"\150\157\165\162"
block|,
literal|"\155\151\156\165\164\145"
block|,
literal|"\163\145\143\157\156\144"
block|,
literal|"\44"
block|,
literal|"\157\142\152\72"
block|,
literal|"\144\142\72"
block|,
literal|"\145\156\165\155\72"
block|,
literal|"\52"
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|,
literal|null
block|, }
decl_stmt|;
comment|/** Lexer state names. */
specifier|public
specifier|static
specifier|final
name|String
index|[]
name|lexStateNames
init|=
block|{
literal|"DEFAULT"
block|,
literal|"WithinSingleQuoteLiteral"
block|,
literal|"WithinDoubleQuoteLiteral"
block|, }
decl_stmt|;
comment|/** Lex State array. */
specifier|public
specifier|static
specifier|final
name|int
index|[]
name|jjnewLexState
init|=
block|{
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|1
block|,
literal|2
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|0
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
literal|0
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,
operator|-
literal|1
block|,  }
decl_stmt|;
specifier|static
specifier|final
name|long
index|[]
name|jjtoToken
init|=
block|{
literal|0xfffffffe1fffffffL
block|,
literal|0x1c81ffL
block|,  }
decl_stmt|;
specifier|static
specifier|final
name|long
index|[]
name|jjtoSkip
init|=
block|{
literal|0x1e0000000L
block|,
literal|0x0L
block|,  }
decl_stmt|;
specifier|static
specifier|final
name|long
index|[]
name|jjtoMore
init|=
block|{
literal|0x0L
block|,
literal|0x37800L
block|,  }
decl_stmt|;
specifier|protected
name|JavaCharStream
name|input_stream
decl_stmt|;
specifier|private
specifier|final
name|int
index|[]
name|jjrounds
init|=
operator|new
name|int
index|[
literal|83
index|]
decl_stmt|;
specifier|private
specifier|final
name|int
index|[]
name|jjstateSet
init|=
operator|new
name|int
index|[
literal|166
index|]
decl_stmt|;
specifier|private
specifier|final
name|StringBuilder
name|jjimage
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
specifier|private
name|StringBuilder
name|image
init|=
name|jjimage
decl_stmt|;
specifier|private
name|int
name|jjimageLen
decl_stmt|;
specifier|private
name|int
name|lengthOfMatch
decl_stmt|;
specifier|protected
name|char
name|curChar
decl_stmt|;
comment|/** Constructor. */
specifier|public
name|ExpressionParserTokenManager
parameter_list|(
name|JavaCharStream
name|stream
parameter_list|)
block|{
if|if
condition|(
name|JavaCharStream
operator|.
name|staticFlag
condition|)
throw|throw
operator|new
name|Error
argument_list|(
literal|"ERROR: Cannot use a static CharStream class with a non-static lexical analyzer."
argument_list|)
throw|;
name|input_stream
operator|=
name|stream
expr_stmt|;
block|}
comment|/** Constructor. */
specifier|public
name|ExpressionParserTokenManager
parameter_list|(
name|JavaCharStream
name|stream
parameter_list|,
name|int
name|lexState
parameter_list|)
block|{
name|this
argument_list|(
name|stream
argument_list|)
expr_stmt|;
name|SwitchTo
argument_list|(
name|lexState
argument_list|)
expr_stmt|;
block|}
comment|/** Reinitialise parser. */
specifier|public
name|void
name|ReInit
parameter_list|(
name|JavaCharStream
name|stream
parameter_list|)
block|{
name|jjmatchedPos
operator|=
name|jjnewStateCnt
operator|=
literal|0
expr_stmt|;
name|curLexState
operator|=
name|defaultLexState
expr_stmt|;
name|input_stream
operator|=
name|stream
expr_stmt|;
name|ReInitRounds
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|ReInitRounds
parameter_list|()
block|{
name|int
name|i
decl_stmt|;
name|jjround
operator|=
literal|0x80000001
expr_stmt|;
for|for
control|(
name|i
operator|=
literal|83
init|;
name|i
operator|--
operator|>
literal|0
condition|;
control|)
name|jjrounds
index|[
name|i
index|]
operator|=
literal|0x80000000
expr_stmt|;
block|}
comment|/** Reinitialise parser. */
specifier|public
name|void
name|ReInit
parameter_list|(
name|JavaCharStream
name|stream
parameter_list|,
name|int
name|lexState
parameter_list|)
block|{
name|ReInit
argument_list|(
name|stream
argument_list|)
expr_stmt|;
name|SwitchTo
argument_list|(
name|lexState
argument_list|)
expr_stmt|;
block|}
comment|/** Switch to specified lex state. */
specifier|public
name|void
name|SwitchTo
parameter_list|(
name|int
name|lexState
parameter_list|)
block|{
if|if
condition|(
name|lexState
operator|>=
literal|3
operator|||
name|lexState
operator|<
literal|0
condition|)
throw|throw
operator|new
name|TokenMgrError
argument_list|(
literal|"Error: Ignoring invalid lexical state : "
operator|+
name|lexState
operator|+
literal|". State unchanged."
argument_list|,
name|TokenMgrError
operator|.
name|INVALID_LEXICAL_STATE
argument_list|)
throw|;
else|else
name|curLexState
operator|=
name|lexState
expr_stmt|;
block|}
specifier|protected
name|Token
name|jjFillToken
parameter_list|()
block|{
specifier|final
name|Token
name|t
decl_stmt|;
specifier|final
name|String
name|curTokenImage
decl_stmt|;
specifier|final
name|int
name|beginLine
decl_stmt|;
specifier|final
name|int
name|endLine
decl_stmt|;
specifier|final
name|int
name|beginColumn
decl_stmt|;
specifier|final
name|int
name|endColumn
decl_stmt|;
name|String
name|im
init|=
name|jjstrLiteralImages
index|[
name|jjmatchedKind
index|]
decl_stmt|;
name|curTokenImage
operator|=
operator|(
name|im
operator|==
literal|null
operator|)
condition|?
name|input_stream
operator|.
name|GetImage
argument_list|()
else|:
name|im
expr_stmt|;
name|beginLine
operator|=
name|input_stream
operator|.
name|getBeginLine
argument_list|()
expr_stmt|;
name|beginColumn
operator|=
name|input_stream
operator|.
name|getBeginColumn
argument_list|()
expr_stmt|;
name|endLine
operator|=
name|input_stream
operator|.
name|getEndLine
argument_list|()
expr_stmt|;
name|endColumn
operator|=
name|input_stream
operator|.
name|getEndColumn
argument_list|()
expr_stmt|;
name|t
operator|=
name|Token
operator|.
name|newToken
argument_list|(
name|jjmatchedKind
argument_list|,
name|curTokenImage
argument_list|)
expr_stmt|;
name|t
operator|.
name|beginLine
operator|=
name|beginLine
expr_stmt|;
name|t
operator|.
name|endLine
operator|=
name|endLine
expr_stmt|;
name|t
operator|.
name|beginColumn
operator|=
name|beginColumn
expr_stmt|;
name|t
operator|.
name|endColumn
operator|=
name|endColumn
expr_stmt|;
return|return
name|t
return|;
block|}
name|int
name|curLexState
init|=
literal|0
decl_stmt|;
name|int
name|defaultLexState
init|=
literal|0
decl_stmt|;
name|int
name|jjnewStateCnt
decl_stmt|;
name|int
name|jjround
decl_stmt|;
name|int
name|jjmatchedPos
decl_stmt|;
name|int
name|jjmatchedKind
decl_stmt|;
comment|/** Get the next Token. */
specifier|public
name|Token
name|getNextToken
parameter_list|()
block|{
name|Token
name|matchedToken
decl_stmt|;
name|int
name|curPos
init|=
literal|0
decl_stmt|;
name|EOFLoop
label|:
for|for
control|(
init|;
condition|;
control|)
block|{
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|BeginToken
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e
parameter_list|)
block|{
name|jjmatchedKind
operator|=
literal|0
expr_stmt|;
name|matchedToken
operator|=
name|jjFillToken
argument_list|()
expr_stmt|;
return|return
name|matchedToken
return|;
block|}
name|image
operator|=
name|jjimage
expr_stmt|;
name|image
operator|.
name|setLength
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|jjimageLen
operator|=
literal|0
expr_stmt|;
for|for
control|(
init|;
condition|;
control|)
block|{
switch|switch
condition|(
name|curLexState
condition|)
block|{
case|case
literal|0
case|:
try|try
block|{
name|input_stream
operator|.
name|backup
argument_list|(
literal|0
argument_list|)
expr_stmt|;
while|while
condition|(
name|curChar
operator|<=
literal|32
operator|&&
operator|(
literal|0x100002600L
operator|&
operator|(
literal|1L
operator|<<
name|curChar
operator|)
operator|)
operator|!=
literal|0L
condition|)
name|curChar
operator|=
name|input_stream
operator|.
name|BeginToken
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e1
parameter_list|)
block|{
continue|continue
name|EOFLoop
continue|;
block|}
name|jjmatchedKind
operator|=
literal|0x7fffffff
expr_stmt|;
name|jjmatchedPos
operator|=
literal|0
expr_stmt|;
name|curPos
operator|=
name|jjMoveStringLiteralDfa0_0
argument_list|()
expr_stmt|;
break|break;
case|case
literal|1
case|:
name|jjmatchedKind
operator|=
literal|0x7fffffff
expr_stmt|;
name|jjmatchedPos
operator|=
literal|0
expr_stmt|;
name|curPos
operator|=
name|jjMoveStringLiteralDfa0_1
argument_list|()
expr_stmt|;
break|break;
case|case
literal|2
case|:
name|jjmatchedKind
operator|=
literal|0x7fffffff
expr_stmt|;
name|jjmatchedPos
operator|=
literal|0
expr_stmt|;
name|curPos
operator|=
name|jjMoveStringLiteralDfa0_2
argument_list|()
expr_stmt|;
break|break;
block|}
if|if
condition|(
name|jjmatchedKind
operator|!=
literal|0x7fffffff
condition|)
block|{
if|if
condition|(
name|jjmatchedPos
operator|+
literal|1
operator|<
name|curPos
condition|)
name|input_stream
operator|.
name|backup
argument_list|(
name|curPos
operator|-
name|jjmatchedPos
operator|-
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
name|jjtoToken
index|[
name|jjmatchedKind
operator|>>
literal|6
index|]
operator|&
operator|(
literal|1L
operator|<<
operator|(
name|jjmatchedKind
operator|&
literal|077
operator|)
operator|)
operator|)
operator|!=
literal|0L
condition|)
block|{
name|matchedToken
operator|=
name|jjFillToken
argument_list|()
expr_stmt|;
name|TokenLexicalActions
argument_list|(
name|matchedToken
argument_list|)
expr_stmt|;
if|if
condition|(
name|jjnewLexState
index|[
name|jjmatchedKind
index|]
operator|!=
operator|-
literal|1
condition|)
name|curLexState
operator|=
name|jjnewLexState
index|[
name|jjmatchedKind
index|]
expr_stmt|;
return|return
name|matchedToken
return|;
block|}
if|else if
condition|(
operator|(
name|jjtoSkip
index|[
name|jjmatchedKind
operator|>>
literal|6
index|]
operator|&
operator|(
literal|1L
operator|<<
operator|(
name|jjmatchedKind
operator|&
literal|077
operator|)
operator|)
operator|)
operator|!=
literal|0L
condition|)
block|{
if|if
condition|(
name|jjnewLexState
index|[
name|jjmatchedKind
index|]
operator|!=
operator|-
literal|1
condition|)
name|curLexState
operator|=
name|jjnewLexState
index|[
name|jjmatchedKind
index|]
expr_stmt|;
continue|continue
name|EOFLoop
continue|;
block|}
name|MoreLexicalActions
argument_list|()
expr_stmt|;
if|if
condition|(
name|jjnewLexState
index|[
name|jjmatchedKind
index|]
operator|!=
operator|-
literal|1
condition|)
name|curLexState
operator|=
name|jjnewLexState
index|[
name|jjmatchedKind
index|]
expr_stmt|;
name|curPos
operator|=
literal|0
expr_stmt|;
name|jjmatchedKind
operator|=
literal|0x7fffffff
expr_stmt|;
try|try
block|{
name|curChar
operator|=
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
continue|continue;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e1
parameter_list|)
block|{
block|}
block|}
name|int
name|error_line
init|=
name|input_stream
operator|.
name|getEndLine
argument_list|()
decl_stmt|;
name|int
name|error_column
init|=
name|input_stream
operator|.
name|getEndColumn
argument_list|()
decl_stmt|;
name|String
name|error_after
init|=
literal|null
decl_stmt|;
name|boolean
name|EOFSeen
init|=
literal|false
decl_stmt|;
try|try
block|{
name|input_stream
operator|.
name|readChar
argument_list|()
expr_stmt|;
name|input_stream
operator|.
name|backup
argument_list|(
literal|1
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|java
operator|.
name|io
operator|.
name|IOException
name|e1
parameter_list|)
block|{
name|EOFSeen
operator|=
literal|true
expr_stmt|;
name|error_after
operator|=
name|curPos
operator|<=
literal|1
condition|?
literal|""
else|:
name|input_stream
operator|.
name|GetImage
argument_list|()
expr_stmt|;
if|if
condition|(
name|curChar
operator|==
literal|'\n'
operator|||
name|curChar
operator|==
literal|'\r'
condition|)
block|{
name|error_line
operator|++
expr_stmt|;
name|error_column
operator|=
literal|0
expr_stmt|;
block|}
else|else
name|error_column
operator|++
expr_stmt|;
block|}
if|if
condition|(
operator|!
name|EOFSeen
condition|)
block|{
name|input_stream
operator|.
name|backup
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|error_after
operator|=
name|curPos
operator|<=
literal|1
condition|?
literal|""
else|:
name|input_stream
operator|.
name|GetImage
argument_list|()
expr_stmt|;
block|}
throw|throw
operator|new
name|TokenMgrError
argument_list|(
name|EOFSeen
argument_list|,
name|curLexState
argument_list|,
name|error_line
argument_list|,
name|error_column
argument_list|,
name|error_after
argument_list|,
name|curChar
argument_list|,
name|TokenMgrError
operator|.
name|LEXICAL_ERROR
argument_list|)
throw|;
block|}
block|}
block|}
name|void
name|MoreLexicalActions
parameter_list|()
block|{
name|jjimageLen
operator|+=
operator|(
name|lengthOfMatch
operator|=
name|jjmatchedPos
operator|+
literal|1
operator|)
expr_stmt|;
switch|switch
condition|(
name|jjmatchedKind
condition|)
block|{
case|case
literal|75
case|:
name|image
operator|.
name|append
argument_list|(
name|input_stream
operator|.
name|GetSuffix
argument_list|(
name|jjimageLen
argument_list|)
argument_list|)
expr_stmt|;
name|jjimageLen
operator|=
literal|0
expr_stmt|;
name|stringBuffer
operator|=
operator|new
name|StringBuffer
argument_list|()
expr_stmt|;
break|break;
case|case
literal|76
case|:
name|image
operator|.
name|append
argument_list|(
name|input_stream
operator|.
name|GetSuffix
argument_list|(
name|jjimageLen
argument_list|)
argument_list|)
expr_stmt|;
name|jjimageLen
operator|=
literal|0
expr_stmt|;
name|stringBuffer
operator|=
operator|new
name|StringBuffer
argument_list|()
expr_stmt|;
break|break;
case|case
literal|77
case|:
name|image
operator|.
name|append
argument_list|(
name|input_stream
operator|.
name|GetSuffix
argument_list|(
name|jjimageLen
argument_list|)
argument_list|)
expr_stmt|;
name|jjimageLen
operator|=
literal|0
expr_stmt|;
name|stringBuffer
operator|.
name|append
argument_list|(
name|escapeChar
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
literal|78
case|:
name|image
operator|.
name|append
argument_list|(
name|input_stream
operator|.
name|GetSuffix
argument_list|(
name|jjimageLen
argument_list|)
argument_list|)
expr_stmt|;
name|jjimageLen
operator|=
literal|0
expr_stmt|;
name|stringBuffer
operator|.
name|append
argument_list|(
name|image
operator|.
name|charAt
argument_list|(
name|image
operator|.
name|length
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
break|break;
case|case
literal|80
case|:
name|image
operator|.
name|append
argument_list|(
name|input_stream
operator|.
name|GetSuffix
argument_list|(
name|jjimageLen
argument_list|)
argument_list|)
expr_stmt|;
name|jjimageLen
operator|=
literal|0
expr_stmt|;
name|stringBuffer
operator|.
name|append
argument_list|(
name|escapeChar
argument_list|()
argument_list|)
expr_stmt|;
break|break;
case|case
literal|81
case|:
name|image
operator|.
name|append
argument_list|(
name|input_stream
operator|.
name|GetSuffix
argument_list|(
name|jjimageLen
argument_list|)
argument_list|)
expr_stmt|;
name|jjimageLen
operator|=
literal|0
expr_stmt|;
name|stringBuffer
operator|.
name|append
argument_list|(
name|image
operator|.
name|charAt
argument_list|(
name|image
operator|.
name|length
argument_list|()
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
break|break;
default|default :
break|break;
block|}
block|}
name|void
name|TokenLexicalActions
parameter_list|(
name|Token
name|matchedToken
parameter_list|)
block|{
switch|switch
condition|(
name|jjmatchedKind
condition|)
block|{
case|case
literal|79
case|:
name|image
operator|.
name|append
argument_list|(
name|input_stream
operator|.
name|GetSuffix
argument_list|(
name|jjimageLen
operator|+
operator|(
name|lengthOfMatch
operator|=
name|jjmatchedPos
operator|+
literal|1
operator|)
argument_list|)
argument_list|)
expr_stmt|;
name|literalValue
operator|=
name|stringBuffer
operator|.
name|toString
argument_list|()
expr_stmt|;
break|break;
case|case
literal|82
case|:
name|image
operator|.
name|append
argument_list|(
name|input_stream
operator|.
name|GetSuffix
argument_list|(
name|jjimageLen
operator|+
operator|(
name|lengthOfMatch
operator|=
name|jjmatchedPos
operator|+
literal|1
operator|)
argument_list|)
argument_list|)
expr_stmt|;
name|literalValue
operator|=
name|stringBuffer
operator|.
name|toString
argument_list|()
expr_stmt|;
break|break;
case|case
literal|83
case|:
name|image
operator|.
name|append
argument_list|(
name|input_stream
operator|.
name|GetSuffix
argument_list|(
name|jjimageLen
operator|+
operator|(
name|lengthOfMatch
operator|=
name|jjmatchedPos
operator|+
literal|1
operator|)
argument_list|)
argument_list|)
expr_stmt|;
name|literalValue
operator|=
name|makeInt
argument_list|()
expr_stmt|;
break|break;
case|case
literal|84
case|:
name|image
operator|.
name|append
argument_list|(
name|input_stream
operator|.
name|GetSuffix
argument_list|(
name|jjimageLen
operator|+
operator|(
name|lengthOfMatch
operator|=
name|jjmatchedPos
operator|+
literal|1
operator|)
argument_list|)
argument_list|)
expr_stmt|;
name|literalValue
operator|=
name|makeFloat
argument_list|()
expr_stmt|;
break|break;
default|default :
break|break;
block|}
block|}
specifier|private
name|void
name|jjCheckNAdd
parameter_list|(
name|int
name|state
parameter_list|)
block|{
if|if
condition|(
name|jjrounds
index|[
name|state
index|]
operator|!=
name|jjround
condition|)
block|{
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
name|state
expr_stmt|;
name|jjrounds
index|[
name|state
index|]
operator|=
name|jjround
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|jjAddStates
parameter_list|(
name|int
name|start
parameter_list|,
name|int
name|end
parameter_list|)
block|{
do|do
block|{
name|jjstateSet
index|[
name|jjnewStateCnt
operator|++
index|]
operator|=
name|jjnextStates
index|[
name|start
index|]
expr_stmt|;
block|}
do|while
condition|(
name|start
operator|++
operator|!=
name|end
condition|)
do|;
block|}
specifier|private
name|void
name|jjCheckNAddTwoStates
parameter_list|(
name|int
name|state1
parameter_list|,
name|int
name|state2
parameter_list|)
block|{
name|jjCheckNAdd
argument_list|(
name|state1
argument_list|)
expr_stmt|;
name|jjCheckNAdd
argument_list|(
name|state2
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|jjCheckNAddStates
parameter_list|(
name|int
name|start
parameter_list|,
name|int
name|end
parameter_list|)
block|{
do|do
block|{
name|jjCheckNAdd
argument_list|(
name|jjnextStates
index|[
name|start
index|]
argument_list|)
expr_stmt|;
block|}
do|while
condition|(
name|start
operator|++
operator|!=
name|end
condition|)
do|;
block|}
block|}
end_class

end_unit

