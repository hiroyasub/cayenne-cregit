begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|event
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|EventObject
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * Common superclass for events passed from the EventManager to Listeners; encapsulates  * optional event information.  *   */
end_comment

begin_class
specifier|public
class|class
name|CayenneEvent
extends|extends
name|EventObject
block|{
specifier|protected
name|Map
name|info
decl_stmt|;
specifier|protected
specifier|transient
name|Object
name|postedBy
decl_stmt|;
specifier|protected
name|EventSubject
name|subject
decl_stmt|;
specifier|public
name|CayenneEvent
parameter_list|(
name|Object
name|source
parameter_list|)
block|{
name|this
argument_list|(
name|source
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|CayenneEvent
parameter_list|(
name|Object
name|source
parameter_list|,
name|Map
name|info
parameter_list|)
block|{
name|this
argument_list|(
name|source
argument_list|,
name|source
argument_list|,
name|info
argument_list|)
expr_stmt|;
block|}
comment|/**      * Creates CayenneEvent with possibly different event source and poster. This may be      * the case when an event is resent by listener.      *       * @since 1.1      */
specifier|public
name|CayenneEvent
parameter_list|(
name|Object
name|source
parameter_list|,
name|Object
name|postedBy
parameter_list|,
name|Map
name|info
parameter_list|)
block|{
name|super
argument_list|(
name|source
argument_list|)
expr_stmt|;
name|this
operator|.
name|postedBy
operator|=
name|postedBy
expr_stmt|;
name|this
operator|.
name|info
operator|=
name|info
expr_stmt|;
block|}
specifier|public
name|Map
name|getInfo
parameter_list|()
block|{
return|return
name|info
operator|!=
literal|null
condition|?
name|info
else|:
name|Collections
operator|.
name|EMPTY_MAP
return|;
block|}
comment|/**      * @since 1.2      */
specifier|public
name|EventSubject
name|getSubject
parameter_list|()
block|{
return|return
name|subject
return|;
block|}
comment|/**      * @since 1.2      */
specifier|public
name|void
name|setSubject
parameter_list|(
name|EventSubject
name|subject
parameter_list|)
block|{
name|this
operator|.
name|subject
operator|=
name|subject
expr_stmt|;
block|}
comment|/**      * Used when deserializing remote events.      */
name|void
name|setSource
parameter_list|(
name|Object
name|source
parameter_list|)
block|{
name|super
operator|.
name|source
operator|=
name|source
expr_stmt|;
block|}
comment|/**      * Returns an object that posted this event. It may be different from event source, if      * event is reposted multiple times.      */
specifier|public
name|Object
name|getPostedBy
parameter_list|()
block|{
return|return
name|postedBy
return|;
block|}
specifier|public
name|void
name|setPostedBy
parameter_list|(
name|Object
name|postedBy
parameter_list|)
block|{
name|this
operator|.
name|postedBy
operator|=
name|postedBy
expr_stmt|;
block|}
block|}
end_class

end_unit

