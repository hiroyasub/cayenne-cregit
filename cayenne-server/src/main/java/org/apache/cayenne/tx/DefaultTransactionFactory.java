begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|tx
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|RuntimeProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|log
operator|.
name|JdbcEventLogger
import|;
end_import

begin_comment
comment|/**  * @since 4.0  */
end_comment

begin_class
specifier|public
class|class
name|DefaultTransactionFactory
implements|implements
name|TransactionFactory
block|{
specifier|protected
name|boolean
name|externalTransactions
decl_stmt|;
specifier|protected
name|JdbcEventLogger
name|jdbcEventLogger
decl_stmt|;
specifier|public
name|DefaultTransactionFactory
parameter_list|(
annotation|@
name|Inject
name|RuntimeProperties
name|properties
parameter_list|,
annotation|@
name|Inject
name|JdbcEventLogger
name|jdbcEventLogger
parameter_list|)
block|{
name|this
operator|.
name|externalTransactions
operator|=
name|properties
operator|.
name|getBoolean
argument_list|(
name|Constants
operator|.
name|SERVER_EXTERNAL_TX_PROPERTY
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|this
operator|.
name|jdbcEventLogger
operator|=
name|jdbcEventLogger
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Transaction
name|createTransaction
parameter_list|()
block|{
return|return
name|externalTransactions
condition|?
operator|new
name|ExternalTransaction
argument_list|(
name|jdbcEventLogger
argument_list|)
else|:
operator|new
name|CayenneTransaction
argument_list|(
name|jdbcEventLogger
argument_list|)
return|;
block|}
block|}
end_class

end_unit

