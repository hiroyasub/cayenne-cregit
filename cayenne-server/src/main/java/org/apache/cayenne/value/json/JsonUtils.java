begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  *    or more contributor license agreements.  See the NOTICE file  *    distributed with this work for additional information  *    regarding copyright ownership.  The ASF licenses this file  *    to you under the Apache License, Version 2.0 (the  *    "License"); you may not use this file except in compliance  *    with the License.  You may obtain a copy of the License at  *  *      https://www.apache.org/licenses/LICENSE-2.0  *  *    Unless required by applicable law or agreed to in writing,  *    software distributed under the License is distributed on an  *    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *    KIND, either express or implied.  See the License for the  *    specific language governing permissions and limitations  *    under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|value
operator|.
name|json
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_comment
comment|/**  * Simple utils to process JSON.  *  * @since 4.2  * @see org.apache.cayenne.value.Json  */
end_comment

begin_class
specifier|public
specifier|final
class|class
name|JsonUtils
block|{
comment|/**      * Cleanup and reformat any valid JSON string.      * Generally this methods just removes unnecessary whitespaces in the document.      *      * @param json valid JSON document      * @return normalized JSON      */
specifier|public
specifier|static
name|String
name|normalize
parameter_list|(
name|String
name|json
parameter_list|)
block|{
return|return
operator|new
name|JsonFormatter
argument_list|(
name|json
argument_list|)
operator|.
name|process
argument_list|()
return|;
block|}
comment|/**      *<p>      * Method that compares two JSON documents.      *<br>      * This methods will parse documents so it will ignores object keys ordering and whitespaces.      *</p>      *<b>NOTE</b> this method doesn't parse numbers so same numbers in different format will be different.      *      * @param json1 first value      * @param json2 second value      * @return true if documents are equal      */
specifier|public
specifier|static
name|boolean
name|compare
parameter_list|(
name|String
name|json1
parameter_list|,
name|String
name|json2
parameter_list|)
block|{
name|Object
name|object1
init|=
operator|new
name|JsonReader
argument_list|(
name|json1
argument_list|)
operator|.
name|process
argument_list|()
decl_stmt|;
name|Object
name|object2
init|=
operator|new
name|JsonReader
argument_list|(
name|json2
argument_list|)
operator|.
name|process
argument_list|()
decl_stmt|;
return|return
name|Objects
operator|.
name|equals
argument_list|(
name|object1
argument_list|,
name|object2
argument_list|)
return|;
block|}
specifier|private
name|JsonUtils
parameter_list|()
block|{
block|}
block|}
end_class

end_unit

