begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|reflect
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|Persistent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|Embeddable
import|;
end_import

begin_comment
comment|/**  * A default POJO embeddable descriptor.  *   * @since 3.0  */
end_comment

begin_class
specifier|public
class|class
name|FieldEmbeddableDescriptor
implements|implements
name|EmbeddableDescriptor
block|{
specifier|protected
name|Class
argument_list|<
name|?
argument_list|>
name|embeddableClass
decl_stmt|;
specifier|protected
name|Embeddable
name|embeddable
decl_stmt|;
specifier|protected
name|Accessor
name|ownerAccessor
decl_stmt|;
specifier|protected
name|Accessor
name|embeddedPropertyAccessor
decl_stmt|;
specifier|public
name|FieldEmbeddableDescriptor
parameter_list|(
name|Embeddable
name|embeddable
parameter_list|,
name|String
name|ownerProperty
parameter_list|,
name|String
name|embeddedPropertyProperty
parameter_list|)
block|{
name|this
operator|.
name|embeddable
operator|=
name|embeddable
expr_stmt|;
try|try
block|{
name|this
operator|.
name|embeddableClass
operator|=
name|Class
operator|.
name|forName
argument_list|(
name|embeddable
operator|.
name|getClassName
argument_list|()
argument_list|,
literal|true
argument_list|,
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|getContextClassLoader
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ClassNotFoundException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|PropertyException
argument_list|(
literal|"Class not found"
argument_list|,
name|e
argument_list|)
throw|;
block|}
name|this
operator|.
name|ownerAccessor
operator|=
operator|new
name|FieldAccessor
argument_list|(
name|embeddableClass
argument_list|,
name|ownerProperty
argument_list|,
name|Persistent
operator|.
name|class
argument_list|)
expr_stmt|;
name|this
operator|.
name|embeddedPropertyAccessor
operator|=
operator|new
name|FieldAccessor
argument_list|(
name|embeddableClass
argument_list|,
name|embeddedPropertyProperty
argument_list|,
name|String
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Object
name|createObject
parameter_list|(
name|Object
name|owner
parameter_list|,
name|String
name|embeddedProperty
parameter_list|)
block|{
name|Object
name|embeddable
decl_stmt|;
try|try
block|{
name|embeddable
operator|=
name|embeddableClass
operator|.
name|getDeclaredConstructor
argument_list|()
operator|.
name|newInstance
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|PropertyException
argument_list|(
literal|"Error creating embeddable object of class '"
operator|+
name|embeddableClass
operator|.
name|getName
argument_list|()
operator|+
literal|"'"
argument_list|,
name|e
argument_list|)
throw|;
block|}
name|ownerAccessor
operator|.
name|setValue
argument_list|(
name|embeddable
argument_list|,
name|owner
argument_list|)
expr_stmt|;
name|embeddedPropertyAccessor
operator|.
name|setValue
argument_list|(
name|embeddable
argument_list|,
name|embeddedProperty
argument_list|)
expr_stmt|;
return|return
name|embeddable
return|;
block|}
specifier|public
name|Embeddable
name|getEmbeddable
parameter_list|()
block|{
return|return
name|embeddable
return|;
block|}
specifier|public
name|Class
argument_list|<
name|?
argument_list|>
name|getObjectClass
parameter_list|()
block|{
return|return
name|embeddableClass
return|;
block|}
block|}
end_class

end_unit

