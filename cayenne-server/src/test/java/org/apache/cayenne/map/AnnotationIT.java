begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ObjectContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|ObjectSelect
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|reflect
operator|.
name|LifecycleCallbackRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|annotation
operator|.
name|ArtistAnnotation
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|server
operator|.
name|CayenneProjects
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|server
operator|.
name|ServerCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|server
operator|.
name|UseServerRuntime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * @since 4.2  */
end_comment

begin_class
annotation|@
name|UseServerRuntime
argument_list|(
name|CayenneProjects
operator|.
name|ANNOTATION
argument_list|)
specifier|public
class|class
name|AnnotationIT
extends|extends
name|ServerCase
block|{
annotation|@
name|Inject
specifier|private
name|ObjectContext
name|objectContext
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|testAvailableCallback
parameter_list|()
block|{
name|LifecycleCallbackRegistry
name|lifecycleCallbackRegistry
init|=
name|objectContext
operator|.
name|getEntityResolver
argument_list|()
operator|.
name|getCallbackRegistry
argument_list|()
decl_stmt|;
name|assertFalse
argument_list|(
name|lifecycleCallbackRegistry
operator|.
name|isEmpty
argument_list|(
name|LifecycleEvent
operator|.
name|POST_ADD
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|lifecycleCallbackRegistry
operator|.
name|isEmpty
argument_list|(
name|LifecycleEvent
operator|.
name|PRE_PERSIST
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|lifecycleCallbackRegistry
operator|.
name|isEmpty
argument_list|(
name|LifecycleEvent
operator|.
name|POST_PERSIST
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|lifecycleCallbackRegistry
operator|.
name|isEmpty
argument_list|(
name|LifecycleEvent
operator|.
name|POST_LOAD
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|lifecycleCallbackRegistry
operator|.
name|isEmpty
argument_list|(
name|LifecycleEvent
operator|.
name|PRE_UPDATE
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|lifecycleCallbackRegistry
operator|.
name|isEmpty
argument_list|(
name|LifecycleEvent
operator|.
name|POST_UPDATE
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|lifecycleCallbackRegistry
operator|.
name|isEmpty
argument_list|(
name|LifecycleEvent
operator|.
name|PRE_REMOVE
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|lifecycleCallbackRegistry
operator|.
name|isEmpty
argument_list|(
name|LifecycleEvent
operator|.
name|POST_REMOVE
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testWorkCallback
parameter_list|()
block|{
name|ArtistAnnotation
name|artist
init|=
name|objectContext
operator|.
name|newObject
argument_list|(
name|ArtistAnnotation
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|artist
operator|.
name|getPostCallback
argument_list|()
argument_list|,
literal|"testPostAdd"
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|artist
operator|.
name|getPreCallback
argument_list|()
argument_list|)
expr_stmt|;
name|objectContext
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|artist
operator|.
name|getPostCallback
argument_list|()
argument_list|,
literal|"testPostPersist"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|artist
operator|.
name|getPreCallback
argument_list|()
argument_list|,
literal|"testPrePersist"
argument_list|)
expr_stmt|;
name|artist
operator|=
name|ObjectSelect
operator|.
name|query
argument_list|(
name|ArtistAnnotation
operator|.
name|class
argument_list|)
operator|.
name|selectFirst
argument_list|(
name|objectContext
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|artist
operator|.
name|getPostCallback
argument_list|()
argument_list|,
literal|"testPostLoad"
argument_list|)
expr_stmt|;
name|artist
operator|.
name|setPostCallback
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|objectContext
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|artist
operator|.
name|getPostCallback
argument_list|()
argument_list|,
literal|"testPostUpdate"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|artist
operator|.
name|getPreCallback
argument_list|()
argument_list|,
literal|"testPreUpdate"
argument_list|)
expr_stmt|;
name|objectContext
operator|.
name|deleteObject
argument_list|(
name|artist
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|artist
operator|.
name|getPreCallback
argument_list|()
argument_list|,
literal|"testPreRemove"
argument_list|)
expr_stmt|;
name|objectContext
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|artist
operator|.
name|getPostCallback
argument_list|()
argument_list|,
literal|"testPostRemove"
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

