begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|loader
operator|.
name|filters
package|;
end_package

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|SortedSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Pattern
import|;
end_import

begin_class
specifier|public
class|class
name|FiltersConfigTest
extends|extends
name|TestCase
block|{
specifier|public
name|void
name|testToString_01
parameter_list|()
block|{
name|FiltersConfig
name|config
init|=
name|FiltersConfig
operator|.
name|create
argument_list|(
literal|null
argument_list|,
literal|null
argument_list|,
name|TableFilter
operator|.
name|everything
argument_list|()
argument_list|,
name|PatternFilter
operator|.
name|INCLUDE_EVERYTHING
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Catalog: null\n"
operator|+
literal|"  Schema: null\n"
operator|+
literal|"    Tables: \n"
operator|+
literal|"      Include: null Columns: ALL\n"
operator|+
literal|"    Procedures: ALL\n"
argument_list|,
name|config
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testToString_02
parameter_list|()
block|{
name|FiltersConfig
name|config
init|=
operator|new
name|FiltersConfig
argument_list|(
operator|new
name|CatalogFilter
argument_list|(
literal|"catalog_01"
argument_list|,
operator|new
name|SchemaFilter
argument_list|(
literal|"schema_11"
argument_list|,
name|TableFilter
operator|.
name|everything
argument_list|()
argument_list|,
name|PatternFilter
operator|.
name|INCLUDE_EVERYTHING
argument_list|)
argument_list|)
argument_list|,
operator|new
name|CatalogFilter
argument_list|(
literal|"catalog_02"
argument_list|,
operator|new
name|SchemaFilter
argument_list|(
literal|"schema_21"
argument_list|,
name|TableFilter
operator|.
name|everything
argument_list|()
argument_list|,
name|PatternFilter
operator|.
name|INCLUDE_NOTHING
argument_list|)
argument_list|,
operator|new
name|SchemaFilter
argument_list|(
literal|"schema_22"
argument_list|,
operator|new
name|TableFilter
argument_list|(
name|includes
argument_list|(
operator|new
name|IncludeTableFilter
argument_list|(
literal|null
argument_list|,
name|PatternFilter
operator|.
name|INCLUDE_NOTHING
argument_list|)
argument_list|)
argument_list|,
name|excludes
argument_list|(
literal|"aaa"
argument_list|)
argument_list|)
argument_list|,
name|PatternFilter
operator|.
name|INCLUDE_NOTHING
argument_list|)
argument_list|,
operator|new
name|SchemaFilter
argument_list|(
literal|"schema_23"
argument_list|,
name|TableFilter
operator|.
name|include
argument_list|(
literal|"include"
argument_list|)
argument_list|,
name|PatternFilter
operator|.
name|INCLUDE_NOTHING
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Catalog: catalog_01\n"
operator|+
literal|"  Schema: schema_11\n"
operator|+
literal|"    Tables: \n"
operator|+
literal|"      Include: null Columns: ALL\n"
operator|+
literal|"    Procedures: ALL\n"
operator|+
literal|"Catalog: catalog_02\n"
operator|+
literal|"  Schema: schema_21\n"
operator|+
literal|"    Tables: \n"
operator|+
literal|"      Include: null Columns: ALL\n"
operator|+
literal|"    Procedures: NONE\n"
operator|+
literal|"  Schema: schema_22\n"
operator|+
literal|"    Tables: \n"
operator|+
literal|"      Include: null Columns: NONE\n"
operator|+
literal|"      aaa\n"
operator|+
literal|"    Procedures: NONE\n"
operator|+
literal|"  Schema: schema_23\n"
operator|+
literal|"    Tables: \n"
operator|+
literal|"      Include: include Columns: ALL\n"
operator|+
literal|"    Procedures: NONE\n"
argument_list|,
name|config
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|SortedSet
argument_list|<
name|Pattern
argument_list|>
name|excludes
parameter_list|(
name|String
modifier|...
name|p
parameter_list|)
block|{
name|SortedSet
argument_list|<
name|Pattern
argument_list|>
name|patterns
init|=
operator|new
name|TreeSet
argument_list|<
name|Pattern
argument_list|>
argument_list|(
name|PatternFilter
operator|.
name|PATTERN_COMPARATOR
argument_list|)
decl_stmt|;
for|for
control|(
name|String
name|pattern
range|:
name|p
control|)
block|{
name|patterns
operator|.
name|add
argument_list|(
name|PatternFilter
operator|.
name|pattern
argument_list|(
name|pattern
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|patterns
return|;
block|}
specifier|protected
name|SortedSet
argument_list|<
name|IncludeTableFilter
argument_list|>
name|includes
parameter_list|(
name|IncludeTableFilter
modifier|...
name|filters
parameter_list|)
block|{
name|SortedSet
argument_list|<
name|IncludeTableFilter
argument_list|>
name|includeTableFilters
init|=
operator|new
name|TreeSet
argument_list|<
name|IncludeTableFilter
argument_list|>
argument_list|()
decl_stmt|;
name|Collections
operator|.
name|addAll
argument_list|(
name|includeTableFilters
argument_list|,
name|filters
argument_list|)
expr_stmt|;
return|return
name|includeTableFilters
return|;
block|}
block|}
end_class

end_unit

