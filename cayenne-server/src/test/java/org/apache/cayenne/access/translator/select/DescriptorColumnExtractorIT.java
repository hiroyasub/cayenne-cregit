begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|translator
operator|.
name|select
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ObjectContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|DbAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|EntityResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|ObjectSelect
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|reflect
operator|.
name|ClassDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|testmap
operator|.
name|CompoundPaintingLongNames
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|server
operator|.
name|CayenneProjects
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|server
operator|.
name|ServerCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|server
operator|.
name|UseServerRuntime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|mockito
operator|.
name|Mockito
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_class
annotation|@
name|UseServerRuntime
argument_list|(
name|CayenneProjects
operator|.
name|TESTMAP_PROJECT
argument_list|)
specifier|public
class|class
name|DescriptorColumnExtractorIT
extends|extends
name|ServerCase
block|{
annotation|@
name|Inject
specifier|private
name|ObjectContext
name|context
decl_stmt|;
specifier|private
specifier|final
name|List
argument_list|<
name|String
argument_list|>
name|expectedFlattenedDbFields
init|=
name|List
operator|.
name|of
argument_list|(
literal|"toArtist.ARTIST_ID"
argument_list|,
literal|"toArtist.ARTIST_NAME"
argument_list|,
literal|"toGallery.GALLERY_ID"
argument_list|,
literal|"toGallery.GALLERY_NAME"
argument_list|,
literal|"toPaintingInfo.PAINTING_ID"
argument_list|,
literal|"toPaintingInfo.TEXT_REVIEW"
argument_list|)
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|testEntityResultAddDbFieldsForFlattenedAttributes
parameter_list|()
block|{
name|EntityResolver
name|resolver
init|=
name|context
operator|.
name|getEntityResolver
argument_list|()
decl_stmt|;
name|ClassDescriptor
name|classDescriptor
init|=
name|resolver
operator|.
name|getClassDescriptor
argument_list|(
literal|"CompoundPaintingLongNames"
argument_list|)
decl_stmt|;
name|TranslatorContext
name|translatorContext
init|=
operator|new
name|TranslatorContext
argument_list|(
operator|new
name|FluentSelectWrapper
argument_list|(
name|ObjectSelect
operator|.
name|query
argument_list|(
name|CompoundPaintingLongNames
operator|.
name|class
argument_list|)
operator|.
name|column
argument_list|(
name|CompoundPaintingLongNames
operator|.
name|SELF
argument_list|)
argument_list|)
argument_list|,
name|Mockito
operator|.
name|mock
argument_list|(
name|DbAdapter
operator|.
name|class
argument_list|)
argument_list|,
name|resolver
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|DescriptorColumnExtractor
name|descriptor
init|=
operator|new
name|DescriptorColumnExtractor
argument_list|(
name|translatorContext
argument_list|,
name|classDescriptor
argument_list|)
decl_stmt|;
name|descriptor
operator|.
name|extract
argument_list|()
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|actualFlattenedDbFields
init|=
name|translatorContext
operator|.
name|getRootEntityResult
argument_list|()
operator|.
name|getDbFields
argument_list|(
name|resolver
argument_list|)
operator|.
name|keySet
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|filter
argument_list|(
name|key
lambda|->
name|key
operator|.
name|startsWith
argument_list|(
literal|"to"
argument_list|)
argument_list|)
operator|.
name|sorted
argument_list|()
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|expectedFlattenedDbFields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|,
name|actualFlattenedDbFields
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedFlattenedDbFields
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|,
name|actualFlattenedDbFields
operator|.
name|get
argument_list|(
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedFlattenedDbFields
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|,
name|actualFlattenedDbFields
operator|.
name|get
argument_list|(
literal|2
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedFlattenedDbFields
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|,
name|actualFlattenedDbFields
operator|.
name|get
argument_list|(
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedFlattenedDbFields
operator|.
name|get
argument_list|(
literal|4
argument_list|)
argument_list|,
name|actualFlattenedDbFields
operator|.
name|get
argument_list|(
literal|4
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expectedFlattenedDbFields
operator|.
name|get
argument_list|(
literal|5
argument_list|)
argument_list|,
name|actualFlattenedDbFields
operator|.
name|get
argument_list|(
literal|5
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

