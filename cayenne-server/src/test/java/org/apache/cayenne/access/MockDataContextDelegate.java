begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|DataObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|DataRow
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|Query
import|;
end_import

begin_comment
comment|/**  * Default implementation of DataContextDelegate that serves as a superclass for mockup  * test delegates.  *   */
end_comment

begin_class
specifier|public
class|class
name|MockDataContextDelegate
implements|implements
name|DataContextDelegate
block|{
specifier|public
name|Query
name|willPerformGenericQuery
parameter_list|(
name|DataContext
name|context
parameter_list|,
name|Query
name|query
parameter_list|)
block|{
return|return
name|query
return|;
block|}
specifier|public
name|Query
name|willPerformQuery
parameter_list|(
name|DataContext
name|context
parameter_list|,
name|Query
name|query
parameter_list|)
block|{
return|return
name|query
return|;
block|}
specifier|public
name|boolean
name|shouldMergeChanges
parameter_list|(
name|DataObject
name|object
parameter_list|,
name|DataRow
name|snapshotInStore
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|boolean
name|shouldProcessDelete
parameter_list|(
name|DataObject
name|object
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|void
name|finishedMergeChanges
parameter_list|(
name|DataObject
name|object
parameter_list|)
block|{
block|}
specifier|public
name|void
name|finishedProcessDelete
parameter_list|(
name|DataObject
name|object
parameter_list|)
block|{
block|}
block|}
end_class

end_unit

