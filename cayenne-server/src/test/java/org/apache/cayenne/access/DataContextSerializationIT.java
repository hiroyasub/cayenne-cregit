begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|Cayenne
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ObjectContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|PersistenceState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|Persistent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|CayenneRuntime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|server
operator|.
name|ServerRuntime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|log
operator|.
name|JdbcEventLogger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|test
operator|.
name|jdbc
operator|.
name|DBHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|test
operator|.
name|jdbc
operator|.
name|TableHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|testmap
operator|.
name|Artist
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|server
operator|.
name|CayenneProjects
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|server
operator|.
name|ServerCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|server
operator|.
name|UseServerRuntime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|util
operator|.
name|Util
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|After
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotSame
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertSame
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
annotation|@
name|UseServerRuntime
argument_list|(
name|CayenneProjects
operator|.
name|TESTMAP_PROJECT
argument_list|)
specifier|public
class|class
name|DataContextSerializationIT
extends|extends
name|ServerCase
block|{
annotation|@
name|Inject
specifier|protected
name|DataContext
name|context
decl_stmt|;
annotation|@
name|Inject
specifier|protected
name|ServerRuntime
name|runtime
decl_stmt|;
annotation|@
name|Inject
specifier|protected
name|DBHelper
name|dbHelper
decl_stmt|;
annotation|@
name|Inject
specifier|protected
name|JdbcEventLogger
name|logger
decl_stmt|;
specifier|protected
name|TableHelper
name|tArtist
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|testSetUp
parameter_list|()
throws|throws
name|Exception
block|{
name|CayenneRuntime
operator|.
name|bindThreadInjector
argument_list|(
name|runtime
operator|.
name|getInjector
argument_list|()
argument_list|)
expr_stmt|;
name|tArtist
operator|=
operator|new
name|TableHelper
argument_list|(
name|dbHelper
argument_list|,
literal|"ARTIST"
argument_list|)
expr_stmt|;
name|tArtist
operator|.
name|setColumns
argument_list|(
literal|"ARTIST_ID"
argument_list|,
literal|"ARTIST_NAME"
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|createSingleArtistDataSet
parameter_list|()
throws|throws
name|Exception
block|{
name|tArtist
operator|.
name|insert
argument_list|(
literal|33001
argument_list|,
literal|"aaa"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|After
specifier|public
name|void
name|testTearDown
parameter_list|()
throws|throws
name|Exception
block|{
name|CayenneRuntime
operator|.
name|bindThreadInjector
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSerializeResolver
parameter_list|()
throws|throws
name|Exception
block|{
name|DataContext
name|deserializedContext
init|=
name|Util
operator|.
name|cloneViaSerialization
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|deserializedContext
operator|.
name|getEntityResolver
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|context
operator|.
name|getEntityResolver
argument_list|()
argument_list|,
name|deserializedContext
operator|.
name|getEntityResolver
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSerializeChannel
parameter_list|()
throws|throws
name|Exception
block|{
name|DataContext
name|deserializedContext
init|=
name|Util
operator|.
name|cloneViaSerialization
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|deserializedContext
operator|.
name|getChannel
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|context
operator|.
name|getChannel
argument_list|()
argument_list|,
name|deserializedContext
operator|.
name|getChannel
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSerializeNestedChannel
parameter_list|()
throws|throws
name|Exception
block|{
name|ObjectContext
name|child
init|=
name|runtime
operator|.
name|newContext
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|ObjectContext
name|deserializedContext
init|=
name|Util
operator|.
name|cloneViaSerialization
argument_list|(
name|child
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|deserializedContext
operator|.
name|getChannel
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|deserializedContext
operator|.
name|getEntityResolver
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSerializeWithSharedCache
parameter_list|()
throws|throws
name|Exception
block|{
name|createSingleArtistDataSet
argument_list|()
expr_stmt|;
name|DataContext
name|deserializedContext
init|=
name|Util
operator|.
name|cloneViaSerialization
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|assertNotSame
argument_list|(
name|context
argument_list|,
name|deserializedContext
argument_list|)
expr_stmt|;
name|assertNotSame
argument_list|(
name|context
operator|.
name|getObjectStore
argument_list|()
argument_list|,
name|deserializedContext
operator|.
name|getObjectStore
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|context
operator|.
name|getParentDataDomain
argument_list|()
argument_list|,
name|deserializedContext
operator|.
name|getParentDataDomain
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|context
operator|.
name|getObjectStore
argument_list|()
operator|.
name|getDataRowCache
argument_list|()
argument_list|,
name|deserializedContext
operator|.
name|getObjectStore
argument_list|()
operator|.
name|getDataRowCache
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|deserializedContext
operator|.
name|getParentDataDomain
argument_list|()
operator|.
name|getSharedSnapshotCache
argument_list|()
argument_list|,
name|deserializedContext
operator|.
name|getObjectStore
argument_list|()
operator|.
name|getDataRowCache
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|deserializedContext
operator|.
name|getEntityResolver
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|context
operator|.
name|getEntityResolver
argument_list|()
argument_list|,
name|deserializedContext
operator|.
name|getEntityResolver
argument_list|()
argument_list|)
expr_stmt|;
name|Artist
name|a
init|=
name|Cayenne
operator|.
name|objectForPK
argument_list|(
name|deserializedContext
argument_list|,
name|Artist
operator|.
name|class
argument_list|,
literal|33001
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|a
argument_list|)
expr_stmt|;
name|a
operator|.
name|setArtistName
argument_list|(
name|a
operator|.
name|getArtistName
argument_list|()
operator|+
literal|"___"
argument_list|)
expr_stmt|;
name|deserializedContext
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSerializeWithLocalCache
parameter_list|()
throws|throws
name|Exception
block|{
name|createSingleArtistDataSet
argument_list|()
expr_stmt|;
comment|// manually assemble a DataContext with local cache....
name|DataDomain
name|domain
init|=
name|context
operator|.
name|getParentDataDomain
argument_list|()
decl_stmt|;
name|DataRowStore
name|snapshotCache
init|=
operator|new
name|DataRowStore
argument_list|(
name|domain
operator|.
name|getName
argument_list|()
argument_list|,
name|domain
operator|.
name|getProperties
argument_list|()
argument_list|,
name|domain
operator|.
name|getEventManager
argument_list|()
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|Object
argument_list|,
name|Persistent
argument_list|>
name|map
init|=
operator|new
name|HashMap
argument_list|<
name|Object
argument_list|,
name|Persistent
argument_list|>
argument_list|()
decl_stmt|;
name|DataContext
name|localCacheContext
init|=
operator|new
name|DataContext
argument_list|(
name|domain
argument_list|,
operator|new
name|ObjectStore
argument_list|(
name|snapshotCache
argument_list|,
name|map
argument_list|)
argument_list|)
decl_stmt|;
name|localCacheContext
operator|.
name|setValidatingObjectsOnCommit
argument_list|(
name|domain
operator|.
name|isValidatingObjectsOnCommit
argument_list|()
argument_list|)
expr_stmt|;
name|localCacheContext
operator|.
name|setUsingSharedSnapshotCache
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|assertNotSame
argument_list|(
name|domain
operator|.
name|getSharedSnapshotCache
argument_list|()
argument_list|,
name|localCacheContext
operator|.
name|getObjectStore
argument_list|()
operator|.
name|getDataRowCache
argument_list|()
argument_list|)
expr_stmt|;
name|DataContext
name|deserializedContext
init|=
name|Util
operator|.
name|cloneViaSerialization
argument_list|(
name|localCacheContext
argument_list|)
decl_stmt|;
name|assertNotSame
argument_list|(
name|localCacheContext
argument_list|,
name|deserializedContext
argument_list|)
expr_stmt|;
name|assertNotSame
argument_list|(
name|localCacheContext
operator|.
name|getObjectStore
argument_list|()
argument_list|,
name|deserializedContext
operator|.
name|getObjectStore
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|localCacheContext
operator|.
name|getParentDataDomain
argument_list|()
argument_list|,
name|deserializedContext
operator|.
name|getParentDataDomain
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotSame
argument_list|(
name|localCacheContext
operator|.
name|getObjectStore
argument_list|()
operator|.
name|getDataRowCache
argument_list|()
argument_list|,
name|deserializedContext
operator|.
name|getObjectStore
argument_list|()
operator|.
name|getDataRowCache
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotSame
argument_list|(
name|deserializedContext
operator|.
name|getParentDataDomain
argument_list|()
operator|.
name|getSharedSnapshotCache
argument_list|()
argument_list|,
name|deserializedContext
operator|.
name|getObjectStore
argument_list|()
operator|.
name|getDataRowCache
argument_list|()
argument_list|)
expr_stmt|;
name|Artist
name|a
init|=
name|Cayenne
operator|.
name|objectForPK
argument_list|(
name|deserializedContext
argument_list|,
name|Artist
operator|.
name|class
argument_list|,
literal|33001
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|a
argument_list|)
expr_stmt|;
name|a
operator|.
name|setArtistName
argument_list|(
name|a
operator|.
name|getArtistName
argument_list|()
operator|+
literal|"___"
argument_list|)
expr_stmt|;
comment|// this blows per CAY-796
name|deserializedContext
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSerializeNew
parameter_list|()
throws|throws
name|Exception
block|{
name|Artist
name|artist
init|=
operator|(
name|Artist
operator|)
name|context
operator|.
name|newObject
argument_list|(
literal|"Artist"
argument_list|)
decl_stmt|;
name|artist
operator|.
name|setArtistName
argument_list|(
literal|"artist1"
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|artist
operator|.
name|getObjectId
argument_list|()
argument_list|)
expr_stmt|;
name|DataContext
name|deserializedContext
init|=
name|Util
operator|.
name|cloneViaSerialization
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|context
operator|.
name|getParentDataDomain
argument_list|()
argument_list|,
name|deserializedContext
operator|.
name|getParentDataDomain
argument_list|()
argument_list|)
expr_stmt|;
comment|// there should be only one object registered
name|Artist
name|deserializedArtist
init|=
operator|(
name|Artist
operator|)
name|deserializedContext
operator|.
name|getObjectStore
argument_list|()
operator|.
name|getObjectIterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|deserializedArtist
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|NEW
argument_list|,
name|deserializedArtist
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|deserializedArtist
operator|.
name|getObjectId
argument_list|()
operator|.
name|isTemporary
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"artist1"
argument_list|,
name|deserializedArtist
operator|.
name|getArtistName
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|deserializedContext
argument_list|,
name|deserializedArtist
operator|.
name|getObjectContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSerializeCommitted
parameter_list|()
throws|throws
name|Exception
block|{
name|Artist
name|artist
init|=
operator|(
name|Artist
operator|)
name|context
operator|.
name|newObject
argument_list|(
literal|"Artist"
argument_list|)
decl_stmt|;
name|artist
operator|.
name|setArtistName
argument_list|(
literal|"artist1"
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|artist
operator|.
name|getObjectId
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|DataContext
name|deserializedContext
init|=
name|Util
operator|.
name|cloneViaSerialization
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|context
operator|.
name|getParentDataDomain
argument_list|()
argument_list|,
name|deserializedContext
operator|.
name|getParentDataDomain
argument_list|()
argument_list|)
expr_stmt|;
comment|// there should be only one object registered
name|Artist
name|deserializedArtist
init|=
operator|(
name|Artist
operator|)
name|deserializedContext
operator|.
name|getObjectStore
argument_list|()
operator|.
name|getObjectIterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|deserializedArtist
argument_list|)
expr_stmt|;
comment|// deserialized as hollow...
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|HOLLOW
argument_list|,
name|deserializedArtist
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|deserializedArtist
operator|.
name|getObjectId
argument_list|()
operator|.
name|isTemporary
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"artist1"
argument_list|,
name|deserializedArtist
operator|.
name|getArtistName
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|deserializedContext
argument_list|,
name|deserializedArtist
operator|.
name|getObjectContext
argument_list|()
argument_list|)
expr_stmt|;
comment|// test that to-many relationships are initialized
name|List
argument_list|<
name|?
argument_list|>
name|paintings
init|=
name|deserializedArtist
operator|.
name|getPaintingArray
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|paintings
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|paintings
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSerializeModified
parameter_list|()
throws|throws
name|Exception
block|{
name|Artist
name|artist
init|=
operator|(
name|Artist
operator|)
name|context
operator|.
name|newObject
argument_list|(
literal|"Artist"
argument_list|)
decl_stmt|;
name|artist
operator|.
name|setArtistName
argument_list|(
literal|"artist1"
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|artist
operator|.
name|getObjectId
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|artist
operator|.
name|setArtistName
argument_list|(
literal|"artist2"
argument_list|)
expr_stmt|;
name|DataContext
name|deserializedContext
init|=
name|Util
operator|.
name|cloneViaSerialization
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|context
operator|.
name|getParentDataDomain
argument_list|()
argument_list|,
name|deserializedContext
operator|.
name|getParentDataDomain
argument_list|()
argument_list|)
expr_stmt|;
comment|// there should be only one object registered
name|Artist
name|deserializedArtist
init|=
operator|(
name|Artist
operator|)
name|deserializedContext
operator|.
name|getObjectStore
argument_list|()
operator|.
name|getObjectIterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|deserializedArtist
argument_list|)
expr_stmt|;
comment|// deserialized as hollow...
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|MODIFIED
argument_list|,
name|deserializedArtist
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|deserializedArtist
operator|.
name|getObjectId
argument_list|()
operator|.
name|isTemporary
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"artist2"
argument_list|,
name|deserializedArtist
operator|.
name|getArtistName
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|deserializedContext
argument_list|,
name|deserializedArtist
operator|.
name|getObjectContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

