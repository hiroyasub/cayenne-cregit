begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|exp
operator|.
name|ExpressionFactory
operator|.
name|matchExp
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|Cayenne
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ObjectContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|PersistenceState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ValueHolder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|server
operator|.
name|ServerRuntime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|PrefetchTreeNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|SelectQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|test
operator|.
name|jdbc
operator|.
name|DBHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|test
operator|.
name|jdbc
operator|.
name|TableHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|testmap
operator|.
name|Bag
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|testmap
operator|.
name|Ball
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|testmap
operator|.
name|Box
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|testmap
operator|.
name|BoxInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|testmap
operator|.
name|Thing
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|DataChannelInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|UnitTestClosure
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|server
operator|.
name|ServerCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|server
operator|.
name|UseServerRuntime
import|;
end_import

begin_class
annotation|@
name|UseServerRuntime
argument_list|(
name|ServerCase
operator|.
name|TESTMAP_PROJECT
argument_list|)
specifier|public
class|class
name|DataContextDisjointByIdPrefetch_ExtrasTest
extends|extends
name|ServerCase
block|{
annotation|@
name|Inject
specifier|protected
name|DataContext
name|context
decl_stmt|;
annotation|@
name|Inject
specifier|private
name|ServerRuntime
name|runtime
decl_stmt|;
annotation|@
name|Inject
specifier|protected
name|DBHelper
name|dbHelper
decl_stmt|;
annotation|@
name|Inject
specifier|protected
name|DataChannelInterceptor
name|queryInterceptor
decl_stmt|;
specifier|protected
name|TableHelper
name|tBag
decl_stmt|;
specifier|protected
name|TableHelper
name|tBox
decl_stmt|;
specifier|protected
name|TableHelper
name|tBoxInfo
decl_stmt|;
specifier|protected
name|TableHelper
name|tBall
decl_stmt|;
specifier|protected
name|TableHelper
name|tThing
decl_stmt|;
specifier|protected
name|TableHelper
name|tBoxThing
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|void
name|setUpAfterInjection
parameter_list|()
throws|throws
name|Exception
block|{
name|dbHelper
operator|.
name|deleteAll
argument_list|(
literal|"BALL"
argument_list|)
expr_stmt|;
name|dbHelper
operator|.
name|deleteAll
argument_list|(
literal|"BOX_THING"
argument_list|)
expr_stmt|;
name|dbHelper
operator|.
name|deleteAll
argument_list|(
literal|"THING"
argument_list|)
expr_stmt|;
name|dbHelper
operator|.
name|deleteAll
argument_list|(
literal|"BOX_INFO"
argument_list|)
expr_stmt|;
name|dbHelper
operator|.
name|deleteAll
argument_list|(
literal|"BOX"
argument_list|)
expr_stmt|;
name|dbHelper
operator|.
name|deleteAll
argument_list|(
literal|"BAG"
argument_list|)
expr_stmt|;
name|tBoxThing
operator|=
operator|new
name|TableHelper
argument_list|(
name|dbHelper
argument_list|,
literal|"BOX_THING"
argument_list|)
expr_stmt|;
name|tBoxThing
operator|.
name|setColumns
argument_list|(
literal|"BOX_ID"
argument_list|,
literal|"THING_WEIGHT"
argument_list|,
literal|"THING_VOLUME"
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|createBagWithTwoBoxesAndPlentyOfBallsDataSet
parameter_list|()
throws|throws
name|Exception
block|{
comment|// because of SQLServer need to enable identity inserts per transaction,
comment|// inserting these objects via Cayenne, and then flushing the cache
comment|// http://technet.microsoft.com/en-us/library/ms188059.aspx
name|Collection
argument_list|<
name|Object
argument_list|>
name|invalidate
init|=
operator|new
name|ArrayList
argument_list|<
name|Object
argument_list|>
argument_list|()
decl_stmt|;
name|ObjectContext
name|context
init|=
name|runtime
operator|.
name|newContext
argument_list|()
decl_stmt|;
name|Bag
name|b1
init|=
name|context
operator|.
name|newObject
argument_list|(
name|Bag
operator|.
name|class
argument_list|)
decl_stmt|;
name|invalidate
operator|.
name|add
argument_list|(
name|b1
argument_list|)
expr_stmt|;
name|b1
operator|.
name|setName
argument_list|(
literal|"b1"
argument_list|)
expr_stmt|;
name|Box
name|bx1
init|=
name|context
operator|.
name|newObject
argument_list|(
name|Box
operator|.
name|class
argument_list|)
decl_stmt|;
name|invalidate
operator|.
name|add
argument_list|(
name|bx1
argument_list|)
expr_stmt|;
name|bx1
operator|.
name|setName
argument_list|(
literal|"big"
argument_list|)
expr_stmt|;
name|bx1
operator|.
name|setBag
argument_list|(
name|b1
argument_list|)
expr_stmt|;
name|BoxInfo
name|bi1
init|=
name|context
operator|.
name|newObject
argument_list|(
name|BoxInfo
operator|.
name|class
argument_list|)
decl_stmt|;
name|invalidate
operator|.
name|add
argument_list|(
name|bi1
argument_list|)
expr_stmt|;
name|bi1
operator|.
name|setColor
argument_list|(
literal|"red"
argument_list|)
expr_stmt|;
name|bi1
operator|.
name|setBox
argument_list|(
name|bx1
argument_list|)
expr_stmt|;
name|Box
name|bx2
init|=
name|context
operator|.
name|newObject
argument_list|(
name|Box
operator|.
name|class
argument_list|)
decl_stmt|;
name|invalidate
operator|.
name|add
argument_list|(
name|bx2
argument_list|)
expr_stmt|;
name|bx2
operator|.
name|setName
argument_list|(
literal|"small"
argument_list|)
expr_stmt|;
name|bx2
operator|.
name|setBag
argument_list|(
name|b1
argument_list|)
expr_stmt|;
name|BoxInfo
name|bi2
init|=
name|context
operator|.
name|newObject
argument_list|(
name|BoxInfo
operator|.
name|class
argument_list|)
decl_stmt|;
name|invalidate
operator|.
name|add
argument_list|(
name|bi2
argument_list|)
expr_stmt|;
name|bi2
operator|.
name|setColor
argument_list|(
literal|"green"
argument_list|)
expr_stmt|;
name|bi2
operator|.
name|setBox
argument_list|(
name|bx2
argument_list|)
expr_stmt|;
name|Thing
name|t1
init|=
name|context
operator|.
name|newObject
argument_list|(
name|Thing
operator|.
name|class
argument_list|)
decl_stmt|;
name|invalidate
operator|.
name|add
argument_list|(
name|t1
argument_list|)
expr_stmt|;
name|t1
operator|.
name|setVolume
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|t1
operator|.
name|setWeight
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|Ball
name|bl1
init|=
name|context
operator|.
name|newObject
argument_list|(
name|Ball
operator|.
name|class
argument_list|)
decl_stmt|;
name|invalidate
operator|.
name|add
argument_list|(
name|bl1
argument_list|)
expr_stmt|;
name|bl1
operator|.
name|setBox
argument_list|(
name|bx1
argument_list|)
expr_stmt|;
name|bl1
operator|.
name|setThingVolume
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|bl1
operator|.
name|setThingWeight
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|Thing
name|t2
init|=
name|context
operator|.
name|newObject
argument_list|(
name|Thing
operator|.
name|class
argument_list|)
decl_stmt|;
name|invalidate
operator|.
name|add
argument_list|(
name|t2
argument_list|)
expr_stmt|;
name|t2
operator|.
name|setVolume
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|t2
operator|.
name|setWeight
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|Ball
name|bl2
init|=
name|context
operator|.
name|newObject
argument_list|(
name|Ball
operator|.
name|class
argument_list|)
decl_stmt|;
name|invalidate
operator|.
name|add
argument_list|(
name|bl2
argument_list|)
expr_stmt|;
name|bl2
operator|.
name|setBox
argument_list|(
name|bx1
argument_list|)
expr_stmt|;
name|bl2
operator|.
name|setThingVolume
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|bl2
operator|.
name|setThingWeight
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|Thing
name|t3
init|=
name|context
operator|.
name|newObject
argument_list|(
name|Thing
operator|.
name|class
argument_list|)
decl_stmt|;
name|invalidate
operator|.
name|add
argument_list|(
name|t3
argument_list|)
expr_stmt|;
name|t3
operator|.
name|setVolume
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|t3
operator|.
name|setWeight
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|Ball
name|bl3
init|=
name|context
operator|.
name|newObject
argument_list|(
name|Ball
operator|.
name|class
argument_list|)
decl_stmt|;
name|invalidate
operator|.
name|add
argument_list|(
name|bl3
argument_list|)
expr_stmt|;
name|bl3
operator|.
name|setBox
argument_list|(
name|bx2
argument_list|)
expr_stmt|;
name|bl3
operator|.
name|setThingVolume
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|bl3
operator|.
name|setThingWeight
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|Thing
name|t4
init|=
name|context
operator|.
name|newObject
argument_list|(
name|Thing
operator|.
name|class
argument_list|)
decl_stmt|;
name|invalidate
operator|.
name|add
argument_list|(
name|t4
argument_list|)
expr_stmt|;
name|t4
operator|.
name|setVolume
argument_list|(
literal|40
argument_list|)
expr_stmt|;
name|t4
operator|.
name|setWeight
argument_list|(
literal|40
argument_list|)
expr_stmt|;
name|Ball
name|bl4
init|=
name|context
operator|.
name|newObject
argument_list|(
name|Ball
operator|.
name|class
argument_list|)
decl_stmt|;
name|invalidate
operator|.
name|add
argument_list|(
name|bl4
argument_list|)
expr_stmt|;
name|bl4
operator|.
name|setBox
argument_list|(
name|bx2
argument_list|)
expr_stmt|;
name|bl4
operator|.
name|setThingVolume
argument_list|(
literal|40
argument_list|)
expr_stmt|;
name|bl4
operator|.
name|setThingWeight
argument_list|(
literal|40
argument_list|)
expr_stmt|;
name|Thing
name|t5
init|=
name|context
operator|.
name|newObject
argument_list|(
name|Thing
operator|.
name|class
argument_list|)
decl_stmt|;
name|invalidate
operator|.
name|add
argument_list|(
name|t5
argument_list|)
expr_stmt|;
name|t5
operator|.
name|setVolume
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|t5
operator|.
name|setWeight
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|Ball
name|bl5
init|=
name|context
operator|.
name|newObject
argument_list|(
name|Ball
operator|.
name|class
argument_list|)
decl_stmt|;
name|invalidate
operator|.
name|add
argument_list|(
name|bl5
argument_list|)
expr_stmt|;
name|bl5
operator|.
name|setBox
argument_list|(
name|bx2
argument_list|)
expr_stmt|;
name|bl5
operator|.
name|setThingVolume
argument_list|(
literal|20
argument_list|)
expr_stmt|;
name|bl5
operator|.
name|setThingWeight
argument_list|(
literal|10
argument_list|)
expr_stmt|;
name|Thing
name|t6
init|=
name|context
operator|.
name|newObject
argument_list|(
name|Thing
operator|.
name|class
argument_list|)
decl_stmt|;
name|invalidate
operator|.
name|add
argument_list|(
name|t6
argument_list|)
expr_stmt|;
name|t6
operator|.
name|setVolume
argument_list|(
literal|40
argument_list|)
expr_stmt|;
name|t6
operator|.
name|setWeight
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|Ball
name|bl6
init|=
name|context
operator|.
name|newObject
argument_list|(
name|Ball
operator|.
name|class
argument_list|)
decl_stmt|;
name|invalidate
operator|.
name|add
argument_list|(
name|bl6
argument_list|)
expr_stmt|;
name|bl6
operator|.
name|setBox
argument_list|(
name|bx2
argument_list|)
expr_stmt|;
name|bl6
operator|.
name|setThingVolume
argument_list|(
literal|40
argument_list|)
expr_stmt|;
name|bl6
operator|.
name|setThingWeight
argument_list|(
literal|30
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|tBoxThing
operator|.
name|insert
argument_list|(
name|Cayenne
operator|.
name|intPKForObject
argument_list|(
name|bx1
argument_list|)
argument_list|,
name|t1
operator|.
name|getWeight
argument_list|()
argument_list|,
name|t1
operator|.
name|getVolume
argument_list|()
argument_list|)
expr_stmt|;
name|tBoxThing
operator|.
name|insert
argument_list|(
name|Cayenne
operator|.
name|intPKForObject
argument_list|(
name|bx1
argument_list|)
argument_list|,
name|t2
operator|.
name|getWeight
argument_list|()
argument_list|,
name|t2
operator|.
name|getVolume
argument_list|()
argument_list|)
expr_stmt|;
name|tBoxThing
operator|.
name|insert
argument_list|(
name|Cayenne
operator|.
name|intPKForObject
argument_list|(
name|bx2
argument_list|)
argument_list|,
name|t3
operator|.
name|getWeight
argument_list|()
argument_list|,
name|t3
operator|.
name|getVolume
argument_list|()
argument_list|)
expr_stmt|;
name|tBoxThing
operator|.
name|insert
argument_list|(
name|Cayenne
operator|.
name|intPKForObject
argument_list|(
name|bx1
argument_list|)
argument_list|,
name|t4
operator|.
name|getWeight
argument_list|()
argument_list|,
name|t4
operator|.
name|getVolume
argument_list|()
argument_list|)
expr_stmt|;
name|tBoxThing
operator|.
name|insert
argument_list|(
name|Cayenne
operator|.
name|intPKForObject
argument_list|(
name|bx1
argument_list|)
argument_list|,
name|t5
operator|.
name|getWeight
argument_list|()
argument_list|,
name|t5
operator|.
name|getVolume
argument_list|()
argument_list|)
expr_stmt|;
name|tBoxThing
operator|.
name|insert
argument_list|(
name|Cayenne
operator|.
name|intPKForObject
argument_list|(
name|bx1
argument_list|)
argument_list|,
name|t6
operator|.
name|getWeight
argument_list|()
argument_list|,
name|t6
operator|.
name|getVolume
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|invalidateObjects
argument_list|(
name|invalidate
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testFlattenedRelationship
parameter_list|()
throws|throws
name|Exception
block|{
name|createBagWithTwoBoxesAndPlentyOfBallsDataSet
argument_list|()
expr_stmt|;
name|SelectQuery
name|query
init|=
operator|new
name|SelectQuery
argument_list|(
name|Bag
operator|.
name|class
argument_list|)
decl_stmt|;
name|query
operator|.
name|addPrefetch
argument_list|(
name|Bag
operator|.
name|BALLS_PROPERTY
argument_list|)
operator|.
name|setSemantics
argument_list|(
name|PrefetchTreeNode
operator|.
name|DISJOINT_BY_ID_PREFETCH_SEMANTICS
argument_list|)
expr_stmt|;
specifier|final
name|List
argument_list|<
name|Bag
argument_list|>
name|result
init|=
name|context
operator|.
name|performQuery
argument_list|(
name|query
argument_list|)
decl_stmt|;
name|queryInterceptor
operator|.
name|runWithQueriesBlocked
argument_list|(
operator|new
name|UnitTestClosure
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|assertFalse
argument_list|(
name|result
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|Bag
name|b1
init|=
name|result
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Ball
argument_list|>
name|balls
init|=
operator|(
name|List
argument_list|<
name|Ball
argument_list|>
operator|)
name|b1
operator|.
name|readPropertyDirectly
argument_list|(
name|Bag
operator|.
name|BALLS_PROPERTY
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|balls
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|(
operator|(
name|ValueHolder
operator|)
name|balls
operator|)
operator|.
name|isFault
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|balls
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Integer
argument_list|>
name|volumes
init|=
operator|new
name|ArrayList
argument_list|<
name|Integer
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Ball
name|b
range|:
name|balls
control|)
block|{
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|b
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|volumes
operator|.
name|add
argument_list|(
name|b
operator|.
name|getThingVolume
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|volumes
operator|.
name|containsAll
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|,
literal|20
argument_list|,
literal|40
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testFlattenedMultiColumnRelationship
parameter_list|()
throws|throws
name|Exception
block|{
name|createBagWithTwoBoxesAndPlentyOfBallsDataSet
argument_list|()
expr_stmt|;
name|SelectQuery
name|query
init|=
operator|new
name|SelectQuery
argument_list|(
name|Box
operator|.
name|class
argument_list|)
decl_stmt|;
name|query
operator|.
name|addPrefetch
argument_list|(
name|Box
operator|.
name|THINGS_PROPERTY
argument_list|)
operator|.
name|setSemantics
argument_list|(
name|PrefetchTreeNode
operator|.
name|DISJOINT_BY_ID_PREFETCH_SEMANTICS
argument_list|)
expr_stmt|;
specifier|final
name|List
argument_list|<
name|Box
argument_list|>
name|result
init|=
name|context
operator|.
name|performQuery
argument_list|(
name|query
argument_list|)
decl_stmt|;
name|queryInterceptor
operator|.
name|runWithQueriesBlocked
argument_list|(
operator|new
name|UnitTestClosure
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|assertFalse
argument_list|(
name|result
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Integer
argument_list|>
name|volumes
init|=
operator|new
name|ArrayList
argument_list|<
name|Integer
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Box
name|box
range|:
name|result
control|)
block|{
name|List
argument_list|<
name|Thing
argument_list|>
name|things
init|=
operator|(
name|List
argument_list|<
name|Thing
argument_list|>
operator|)
name|box
operator|.
name|readPropertyDirectly
argument_list|(
name|Box
operator|.
name|THINGS_PROPERTY
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|things
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|(
operator|(
name|ValueHolder
operator|)
name|things
operator|)
operator|.
name|isFault
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Thing
name|t
range|:
name|things
control|)
block|{
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|t
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|volumes
operator|.
name|add
argument_list|(
name|t
operator|.
name|getVolume
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|volumes
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|volumes
operator|.
name|containsAll
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testLongFlattenedRelationship
parameter_list|()
throws|throws
name|Exception
block|{
name|createBagWithTwoBoxesAndPlentyOfBallsDataSet
argument_list|()
expr_stmt|;
name|SelectQuery
name|query
init|=
operator|new
name|SelectQuery
argument_list|(
name|Bag
operator|.
name|class
argument_list|)
decl_stmt|;
name|query
operator|.
name|addPrefetch
argument_list|(
name|Bag
operator|.
name|THINGS_PROPERTY
argument_list|)
operator|.
name|setSemantics
argument_list|(
name|PrefetchTreeNode
operator|.
name|DISJOINT_BY_ID_PREFETCH_SEMANTICS
argument_list|)
expr_stmt|;
specifier|final
name|List
argument_list|<
name|Bag
argument_list|>
name|result
init|=
name|context
operator|.
name|performQuery
argument_list|(
name|query
argument_list|)
decl_stmt|;
name|queryInterceptor
operator|.
name|runWithQueriesBlocked
argument_list|(
operator|new
name|UnitTestClosure
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|assertFalse
argument_list|(
name|result
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|Bag
name|b1
init|=
name|result
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Thing
argument_list|>
name|things
init|=
operator|(
name|List
argument_list|<
name|Thing
argument_list|>
operator|)
name|b1
operator|.
name|readPropertyDirectly
argument_list|(
name|Bag
operator|.
name|THINGS_PROPERTY
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|things
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|(
operator|(
name|ValueHolder
operator|)
name|things
operator|)
operator|.
name|isFault
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|things
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Integer
argument_list|>
name|volumes
init|=
operator|new
name|ArrayList
argument_list|<
name|Integer
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Thing
name|t
range|:
name|things
control|)
block|{
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|t
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|volumes
operator|.
name|add
argument_list|(
name|t
operator|.
name|getVolume
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|volumes
operator|.
name|containsAll
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|,
literal|20
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|,
literal|40
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testMultiColumnRelationship
parameter_list|()
throws|throws
name|Exception
block|{
name|createBagWithTwoBoxesAndPlentyOfBallsDataSet
argument_list|()
expr_stmt|;
name|SelectQuery
name|query
init|=
operator|new
name|SelectQuery
argument_list|(
name|Ball
operator|.
name|class
argument_list|)
decl_stmt|;
name|query
operator|.
name|orQualifier
argument_list|(
name|matchExp
argument_list|(
name|Ball
operator|.
name|THING_VOLUME_PROPERTY
argument_list|,
literal|40
argument_list|)
operator|.
name|andExp
argument_list|(
name|matchExp
argument_list|(
name|Ball
operator|.
name|THING_WEIGHT_PROPERTY
argument_list|,
literal|30
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|query
operator|.
name|orQualifier
argument_list|(
name|matchExp
argument_list|(
name|Ball
operator|.
name|THING_VOLUME_PROPERTY
argument_list|,
literal|20
argument_list|)
operator|.
name|andExp
argument_list|(
name|matchExp
argument_list|(
name|Ball
operator|.
name|THING_WEIGHT_PROPERTY
argument_list|,
literal|10
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|query
operator|.
name|addPrefetch
argument_list|(
name|Ball
operator|.
name|THING_PROPERTY
argument_list|)
operator|.
name|setSemantics
argument_list|(
name|PrefetchTreeNode
operator|.
name|DISJOINT_BY_ID_PREFETCH_SEMANTICS
argument_list|)
expr_stmt|;
specifier|final
name|List
argument_list|<
name|Ball
argument_list|>
name|balls
init|=
name|context
operator|.
name|performQuery
argument_list|(
name|query
argument_list|)
decl_stmt|;
name|queryInterceptor
operator|.
name|runWithQueriesBlocked
argument_list|(
operator|new
name|UnitTestClosure
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|balls
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|balls
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getThing
argument_list|()
operator|.
name|getVolume
argument_list|()
expr_stmt|;
name|balls
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getThing
argument_list|()
operator|.
name|getVolume
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testJointPrefetchInParent
parameter_list|()
throws|throws
name|Exception
block|{
name|createBagWithTwoBoxesAndPlentyOfBallsDataSet
argument_list|()
expr_stmt|;
name|SelectQuery
name|query
init|=
operator|new
name|SelectQuery
argument_list|(
name|Box
operator|.
name|class
argument_list|)
decl_stmt|;
name|query
operator|.
name|addPrefetch
argument_list|(
name|Box
operator|.
name|BALLS_PROPERTY
argument_list|)
operator|.
name|setSemantics
argument_list|(
name|PrefetchTreeNode
operator|.
name|JOINT_PREFETCH_SEMANTICS
argument_list|)
expr_stmt|;
name|query
operator|.
name|addPrefetch
argument_list|(
name|Box
operator|.
name|BALLS_PROPERTY
operator|+
literal|"."
operator|+
name|Ball
operator|.
name|THING_PROPERTY
argument_list|)
operator|.
name|setSemantics
argument_list|(
name|PrefetchTreeNode
operator|.
name|DISJOINT_BY_ID_PREFETCH_SEMANTICS
argument_list|)
expr_stmt|;
specifier|final
name|List
argument_list|<
name|Box
argument_list|>
name|result
init|=
name|context
operator|.
name|performQuery
argument_list|(
name|query
argument_list|)
decl_stmt|;
name|queryInterceptor
operator|.
name|runWithQueriesBlocked
argument_list|(
operator|new
name|UnitTestClosure
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|assertFalse
argument_list|(
name|result
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Integer
argument_list|>
name|volumes
init|=
operator|new
name|ArrayList
argument_list|<
name|Integer
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Box
name|box
range|:
name|result
control|)
block|{
name|List
argument_list|<
name|Ball
argument_list|>
name|balls
init|=
operator|(
name|List
argument_list|<
name|Ball
argument_list|>
operator|)
name|box
operator|.
name|readPropertyDirectly
argument_list|(
name|Box
operator|.
name|BALLS_PROPERTY
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|balls
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|(
operator|(
name|ValueHolder
operator|)
name|balls
operator|)
operator|.
name|isFault
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Ball
name|ball
range|:
name|balls
control|)
block|{
name|Thing
name|thing
init|=
operator|(
name|Thing
operator|)
name|ball
operator|.
name|readPropertyDirectly
argument_list|(
name|Ball
operator|.
name|THING_PROPERTY
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|thing
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|thing
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|volumes
operator|.
name|add
argument_list|(
name|thing
operator|.
name|getVolume
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|volumes
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|volumes
operator|.
name|containsAll
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|,
literal|30
argument_list|,
literal|40
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testJointPrefetchInChild
parameter_list|()
throws|throws
name|Exception
block|{
name|createBagWithTwoBoxesAndPlentyOfBallsDataSet
argument_list|()
expr_stmt|;
name|SelectQuery
argument_list|<
name|Bag
argument_list|>
name|query
init|=
operator|new
name|SelectQuery
argument_list|<
name|Bag
argument_list|>
argument_list|(
name|Bag
operator|.
name|class
argument_list|)
decl_stmt|;
name|query
operator|.
name|addPrefetch
argument_list|(
name|Bag
operator|.
name|BOXES
operator|.
name|disjointById
argument_list|()
argument_list|)
expr_stmt|;
name|query
operator|.
name|addPrefetch
argument_list|(
name|Bag
operator|.
name|BOXES
operator|.
name|dot
argument_list|(
name|Box
operator|.
name|BALLS
argument_list|)
operator|.
name|joint
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|List
argument_list|<
name|Bag
argument_list|>
name|result
init|=
name|context
operator|.
name|select
argument_list|(
name|query
argument_list|)
decl_stmt|;
name|queryInterceptor
operator|.
name|runWithQueriesBlocked
argument_list|(
operator|new
name|UnitTestClosure
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|assertFalse
argument_list|(
name|result
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|Bag
name|bag
init|=
name|result
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|Box
argument_list|>
name|boxes
init|=
operator|(
name|List
argument_list|<
name|Box
argument_list|>
operator|)
name|bag
operator|.
name|readPropertyDirectly
argument_list|(
name|Bag
operator|.
name|BOXES_PROPERTY
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|boxes
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|(
operator|(
name|ValueHolder
operator|)
name|boxes
operator|)
operator|.
name|isFault
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|boxes
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Box
name|big
init|=
literal|null
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|names
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Box
name|box
range|:
name|boxes
control|)
block|{
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|box
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|names
operator|.
name|add
argument_list|(
name|box
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|box
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
literal|"big"
argument_list|)
condition|)
block|{
name|big
operator|=
name|box
expr_stmt|;
block|}
block|}
name|assertTrue
argument_list|(
name|names
operator|.
name|contains
argument_list|(
literal|"big"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|names
operator|.
name|contains
argument_list|(
literal|"small"
argument_list|)
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Ball
argument_list|>
name|balls
init|=
operator|(
name|List
argument_list|<
name|Ball
argument_list|>
operator|)
name|big
operator|.
name|readPropertyDirectly
argument_list|(
name|Box
operator|.
name|BALLS_PROPERTY
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|balls
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|(
operator|(
name|ValueHolder
operator|)
name|balls
operator|)
operator|.
name|isFault
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|balls
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Integer
argument_list|>
name|volumes
init|=
operator|new
name|ArrayList
argument_list|<
name|Integer
argument_list|>
argument_list|()
decl_stmt|;
for|for
control|(
name|Ball
name|ball
range|:
name|balls
control|)
block|{
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|ball
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|volumes
operator|.
name|add
argument_list|(
name|ball
operator|.
name|getThingVolume
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertTrue
argument_list|(
name|volumes
operator|.
name|containsAll
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
literal|10
argument_list|,
literal|20
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

