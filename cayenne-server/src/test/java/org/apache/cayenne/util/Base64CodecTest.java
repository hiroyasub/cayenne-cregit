begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|util
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Random
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_comment
comment|/**  *<i>Just like Base64 codec, this test case is borrowed from Apache.</i>  *   */
end_comment

begin_class
specifier|public
class|class
name|Base64CodecTest
block|{
specifier|private
name|Random
name|_random
init|=
operator|new
name|Random
argument_list|()
decl_stmt|;
comment|/**      * Test the Base64 implementation      */
annotation|@
name|Test
specifier|public
name|void
name|testBase64
parameter_list|()
block|{
name|String
name|content
init|=
literal|"Hello World"
decl_stmt|;
name|String
name|encodedContent
decl_stmt|;
name|encodedContent
operator|=
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
name|content
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"encoding hello world"
argument_list|,
name|encodedContent
operator|.
name|equals
argument_list|(
literal|"SGVsbG8gV29ybGQ="
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Tests conditional true branch for "marker0" test.      */
annotation|@
name|Test
specifier|public
name|void
name|testDecodePadMarkerIndex2
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"A"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|decodeBase64
argument_list|(
literal|"QQ=="
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Tests conditional branches for "marker1" test.      */
annotation|@
name|Test
specifier|public
name|void
name|testDecodePadMarkerIndex3
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"AA"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|decodeBase64
argument_list|(
literal|"QUE="
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAA"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|decodeBase64
argument_list|(
literal|"QUFB"
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDecodePadOnly
parameter_list|()
block|{
name|assertTrue
argument_list|(
name|Base64Codec
operator|.
name|decodeBase64
argument_list|(
literal|"===="
operator|.
name|getBytes
argument_list|()
argument_list|)
operator|.
name|length
operator|==
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|decodeBase64
argument_list|(
literal|"===="
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDecodePadOnlyChunked
parameter_list|()
block|{
name|assertTrue
argument_list|(
name|Base64Codec
operator|.
name|decodeBase64
argument_list|(
literal|"====\n"
operator|.
name|getBytes
argument_list|()
argument_list|)
operator|.
name|length
operator|==
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|""
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|decodeBase64
argument_list|(
literal|"====\n"
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// encode/decode random arrays from size 0 to size 11
annotation|@
name|Test
specifier|public
name|void
name|testEncodeDecodeSmall
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|12
condition|;
name|i
operator|++
control|)
block|{
name|byte
index|[]
name|data
init|=
operator|new
name|byte
index|[
name|i
index|]
decl_stmt|;
name|this
operator|.
name|getRandom
argument_list|()
operator|.
name|nextBytes
argument_list|(
name|data
argument_list|)
expr_stmt|;
name|byte
index|[]
name|enc
init|=
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
name|data
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"\""
operator|+
operator|(
operator|new
name|String
argument_list|(
name|enc
argument_list|)
operator|)
operator|+
literal|"\" is Base64 data."
argument_list|,
name|Base64Codec
operator|.
name|isArrayByteBase64
argument_list|(
name|enc
argument_list|)
argument_list|)
expr_stmt|;
name|byte
index|[]
name|data2
init|=
name|Base64Codec
operator|.
name|decodeBase64
argument_list|(
name|enc
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|toString
argument_list|(
name|data
argument_list|)
operator|+
literal|" equals "
operator|+
name|toString
argument_list|(
name|data2
argument_list|)
argument_list|,
name|Arrays
operator|.
name|equals
argument_list|(
name|data
argument_list|,
name|data2
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
comment|// encode/decode a large random array
annotation|@
name|Test
specifier|public
name|void
name|testEncodeDecodeRandom
parameter_list|()
block|{
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<
literal|5
condition|;
name|i
operator|++
control|)
block|{
name|byte
index|[]
name|data
init|=
operator|new
name|byte
index|[
name|this
operator|.
name|getRandom
argument_list|()
operator|.
name|nextInt
argument_list|(
literal|10000
argument_list|)
operator|+
literal|1
index|]
decl_stmt|;
name|this
operator|.
name|getRandom
argument_list|()
operator|.
name|nextBytes
argument_list|(
name|data
argument_list|)
expr_stmt|;
name|byte
index|[]
name|enc
init|=
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
name|data
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|Base64Codec
operator|.
name|isArrayByteBase64
argument_list|(
name|enc
argument_list|)
argument_list|)
expr_stmt|;
name|byte
index|[]
name|data2
init|=
name|Base64Codec
operator|.
name|decodeBase64
argument_list|(
name|enc
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|Arrays
operator|.
name|equals
argument_list|(
name|data
argument_list|,
name|data2
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * Tests RFC 2045 section 2.1 CRLF definition.      */
annotation|@
name|Test
specifier|public
name|void
name|testRfc2045Section2Dot1CrLfDefinition
parameter_list|()
block|{
name|assertTrue
argument_list|(
name|Arrays
operator|.
name|equals
argument_list|(
operator|new
name|byte
index|[]
block|{
literal|13
block|,
literal|10
block|}
argument_list|,
name|Base64Codec
operator|.
name|CHUNK_SEPARATOR
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Tests RFC 2045 section 6.8 chuck size definition.      */
annotation|@
name|Test
specifier|public
name|void
name|testRfc2045Section6Dot8ChunkSizeDefinition
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|76
argument_list|,
name|Base64Codec
operator|.
name|CHUNK_SIZE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSingletons
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"AA=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AQ=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|1
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Ag=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|2
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Aw=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|3
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"BA=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|4
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"BQ=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|5
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Bg=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|6
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Bw=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|7
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CA=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|8
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CQ=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|9
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Cg=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|10
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Cw=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|11
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"DA=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|12
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"DQ=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|13
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Dg=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|14
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Dw=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|15
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"EA=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|16
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"EQ=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|17
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Eg=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|18
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Ew=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|19
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"FA=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|20
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"FQ=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|21
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Fg=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|22
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Fw=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|23
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"GA=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|24
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"GQ=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|25
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Gg=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|26
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Gw=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|27
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"HA=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|28
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"HQ=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|29
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Hg=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|30
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Hw=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|31
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"IA=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|32
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"IQ=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|33
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Ig=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|34
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Iw=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|35
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"JA=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|36
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"JQ=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|37
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Jg=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|38
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Jw=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|39
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"KA=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|40
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"KQ=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|41
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Kg=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|42
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Kw=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|43
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"LA=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|44
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"LQ=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|45
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Lg=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|46
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Lw=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|47
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"MA=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|48
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"MQ=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|49
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Mg=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|50
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Mw=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|51
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"NA=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|52
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"NQ=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|53
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Ng=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|54
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Nw=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|55
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"OA=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|56
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"OQ=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|57
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Og=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|58
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Ow=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|59
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"PA=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|60
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"PQ=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|61
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Pg=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|62
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Pw=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|63
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"QA=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|64
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"QQ=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|65
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Qg=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|66
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Qw=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|67
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"RA=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|68
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"RQ=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|69
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Rg=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|70
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Rw=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|71
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"SA=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|72
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"SQ=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|73
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Sg=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|74
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Sw=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|75
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"TA=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|76
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"TQ=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|77
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Tg=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|78
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Tw=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|79
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"UA=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|80
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"UQ=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|81
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Ug=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|82
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Uw=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|83
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"VA=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|84
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"VQ=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|85
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Vg=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|86
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Vw=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|87
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"WA=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|88
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"WQ=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|89
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Wg=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|90
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Ww=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|91
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"XA=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|92
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"XQ=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|93
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Xg=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|94
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Xw=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|95
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"YA=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|96
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"YQ=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|97
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Yg=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|98
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Yw=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|99
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ZA=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|100
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ZQ=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|101
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Zg=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|102
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Zw=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|103
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"aA=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|104
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSingletonsChunked
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"AA==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AQ==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|1
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Ag==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|2
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Aw==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|3
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"BA==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|4
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"BQ==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|5
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Bg==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|6
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Bw==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|7
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CA==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|8
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CQ==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|9
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Cg==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|10
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Cw==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|11
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"DA==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|12
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"DQ==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|13
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Dg==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|14
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Dw==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|15
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"EA==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|16
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"EQ==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|17
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Eg==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|18
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Ew==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|19
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"FA==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|20
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"FQ==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|21
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Fg==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|22
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Fw==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|23
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"GA==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|24
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"GQ==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|25
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Gg==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|26
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Gw==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|27
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"HA==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|28
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"HQ==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|29
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Hg==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|30
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Hw==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|31
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"IA==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|32
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"IQ==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|33
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Ig==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|34
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Iw==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|35
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"JA==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|36
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"JQ==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|37
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Jg==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|38
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Jw==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|39
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"KA==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|40
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"KQ==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|41
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Kg==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|42
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Kw==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|43
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"LA==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|44
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"LQ==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|45
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Lg==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|46
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Lw==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|47
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"MA==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|48
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"MQ==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|49
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Mg==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|50
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Mw==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|51
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"NA==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|52
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"NQ==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|53
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Ng==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|54
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Nw==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|55
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"OA==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|56
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"OQ==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|57
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Og==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|58
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Ow==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|59
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"PA==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|60
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"PQ==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|61
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Pg==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|62
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Pw==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|63
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"QA==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|64
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"QQ==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|65
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Qg==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|66
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Qw==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|67
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"RA==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|68
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"RQ==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|69
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Rg==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|70
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Rw==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|71
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"SA==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|72
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"SQ==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|73
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Sg==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|74
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Sw==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|75
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"TA==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|76
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"TQ==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|77
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Tg==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|78
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Tw==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|79
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"UA==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|80
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"UQ==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|81
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Ug==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|82
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Uw==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|83
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"VA==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|84
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"VQ==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|85
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Vg==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|86
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Vw==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|87
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"WA==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|88
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"WQ==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|89
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Wg==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|90
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Ww==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|91
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"XA==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|92
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"XQ==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|93
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Xg==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|94
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Xw==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|95
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"YA==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|96
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"YQ==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|97
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Yg==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|98
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Yw==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|99
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ZA==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|100
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ZQ==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|101
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Zg==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|102
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Zw==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|103
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"aA==\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|104
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTriplets
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"AAAA"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAB"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|1
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAC"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|2
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAD"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|3
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAE"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|4
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAF"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|5
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAG"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|6
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAH"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|7
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAI"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|8
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAJ"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|9
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAK"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|10
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAL"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|11
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAM"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|12
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAN"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|13
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAO"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|14
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAP"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|15
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAQ"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|16
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAR"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|17
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAS"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|18
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAT"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|19
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAU"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|20
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAV"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|21
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAW"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|22
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAX"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|23
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAY"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|24
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAZ"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|25
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAa"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|26
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAb"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|27
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAc"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|28
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAd"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|29
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAe"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|30
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAf"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|31
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAg"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|32
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAh"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|33
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAi"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|34
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAj"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|35
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAk"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|36
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAl"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|37
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAm"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|38
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAn"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|39
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAo"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|40
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAp"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|41
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAq"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|42
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAr"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|43
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAs"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|44
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAt"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|45
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAu"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|46
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAv"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|47
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAw"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|48
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAx"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|49
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAy"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|50
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAz"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|51
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAA0"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|52
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAA1"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|53
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAA2"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|54
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAA3"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|55
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAA4"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|56
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAA5"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|57
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAA6"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|58
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAA7"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|59
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAA8"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|60
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAA9"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|61
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAA+"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|62
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAA/"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|63
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testTripletsChunked
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"AAAA\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAB\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|1
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAC\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|2
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAD\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|3
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAE\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|4
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAF\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|5
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAG\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|6
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAH\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|7
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAI\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|8
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAJ\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|9
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAK\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|10
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAL\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|11
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAM\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|12
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAN\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|13
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAO\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|14
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAP\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|15
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAQ\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|16
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAR\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|17
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAS\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|18
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAT\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|19
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAU\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|20
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAV\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|21
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAW\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|22
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAX\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|23
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAY\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|24
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAZ\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|25
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAa\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|26
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAb\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|27
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAc\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|28
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAd\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|29
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAe\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|30
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAf\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|31
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAg\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|32
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAh\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|33
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAi\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|34
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAj\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|35
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAk\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|36
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAl\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|37
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAm\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|38
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAn\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|39
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAo\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|40
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAp\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|41
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAq\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|42
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAr\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|43
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAs\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|44
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAt\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|45
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAu\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|46
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAv\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|47
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAw\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|48
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAx\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|49
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAy\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|50
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAAz\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|51
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAA0\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|52
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAA1\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|53
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAA2\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|54
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAA3\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|55
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAA4\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|56
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAA5\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|57
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAA6\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|58
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAA7\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|59
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAA8\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|60
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAA9\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|61
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAA+\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|62
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AAA/\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
operator|new
name|byte
index|[]
block|{
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|0
block|,
operator|(
name|byte
operator|)
literal|63
block|}
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testKnownEncodings
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"VGhlIHF1aWNrIGJyb3duIGZveCBqdW1wZWQgb3ZlciB0aGUgbGF6eSBkb2dzLg=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
literal|"The quick brown fox jumped over the lazy dogs."
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"YmxhaCBibGFoIGJsYWggYmxhaCBibGFoIGJsYWggYmxhaCBibGFoIGJsYWggYmxhaCBibGFoIGJs\r\nYWggYmxhaCBibGFoIGJsYWggYmxhaCBibGFoIGJsYWggYmxhaCBibGFoIGJsYWggYmxhaCBibGFo\r\nIGJsYWggYmxhaCBibGFoIGJsYWggYmxhaCBibGFoIGJsYWggYmxhaCBibGFoIGJsYWggYmxhaCBi\r\nbGFoIGJsYWg=\r\n"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64Chunked
argument_list|(
literal|"blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah"
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"SXQgd2FzIHRoZSBiZXN0IG9mIHRpbWVzLCBpdCB3YXMgdGhlIHdvcnN0IG9mIHRpbWVzLg=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
literal|"It was the best of times, it was the worst of times."
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"aHR0cDovL2pha2FydGEuYXBhY2hlLm9yZy9jb21tbW9ucw=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
literal|"http://jakarta.apache.org/commmons"
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"QWFCYkNjRGRFZUZmR2dIaElpSmpLa0xsTW1Obk9vUHBRcVJyU3NUdFV1VnZXd1h4WXlaeg=="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
literal|"AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz"
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"eyAwLCAxLCAyLCAzLCA0LCA1LCA2LCA3LCA4LCA5IH0="
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
literal|"{ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }"
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"eHl6enkh"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
literal|"xyzzy!"
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testKnownDecodings
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|"The quick brown fox jumped over the lazy dogs."
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|decodeBase64
argument_list|(
literal|"VGhlIHF1aWNrIGJyb3duIGZveCBqdW1wZWQgb3ZlciB0aGUgbGF6eSBkb2dzLg=="
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"It was the best of times, it was the worst of times."
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|decodeBase64
argument_list|(
literal|"SXQgd2FzIHRoZSBiZXN0IG9mIHRpbWVzLCBpdCB3YXMgdGhlIHdvcnN0IG9mIHRpbWVzLg=="
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"http://jakarta.apache.org/commmons"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|decodeBase64
argument_list|(
literal|"aHR0cDovL2pha2FydGEuYXBhY2hlLm9yZy9jb21tbW9ucw=="
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|decodeBase64
argument_list|(
literal|"QWFCYkNjRGRFZUZmR2dIaElpSmpLa0xsTW1Obk9vUHBRcVJyU3NUdFV1VnZXd1h4WXlaeg=="
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"{ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|decodeBase64
argument_list|(
literal|"eyAwLCAxLCAyLCAzLCA0LCA1LCA2LCA3LCA4LCA5IH0="
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"xyzzy!"
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|decodeBase64
argument_list|(
literal|"eHl6enkh"
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testIgnoringNonBase64InDecode
parameter_list|()
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
literal|"The quick brown fox jumped over the lazy dogs."
argument_list|,
operator|new
name|String
argument_list|(
name|Base64Codec
operator|.
name|decodeBase64
argument_list|(
literal|"VGhlIH@$#$@%F1aWN@#@#@@rIGJyb3duIGZve\n\r\t%#%#%#%CBqd##$#$W1wZWQgb3ZlciB0aGUgbGF6eSBkb2dzLg=="
operator|.
name|getBytes
argument_list|()
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDecodeWithWhitespace
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|orig
init|=
literal|"I am a late night coder."
decl_stmt|;
name|byte
index|[]
name|encodedArray
init|=
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
name|orig
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|StringBuffer
name|intermediate
init|=
operator|new
name|StringBuffer
argument_list|(
operator|new
name|String
argument_list|(
name|encodedArray
argument_list|)
argument_list|)
decl_stmt|;
name|intermediate
operator|.
name|insert
argument_list|(
literal|2
argument_list|,
literal|' '
argument_list|)
expr_stmt|;
name|intermediate
operator|.
name|insert
argument_list|(
literal|5
argument_list|,
literal|'\t'
argument_list|)
expr_stmt|;
name|intermediate
operator|.
name|insert
argument_list|(
literal|10
argument_list|,
literal|'\r'
argument_list|)
expr_stmt|;
name|intermediate
operator|.
name|insert
argument_list|(
literal|15
argument_list|,
literal|'\n'
argument_list|)
expr_stmt|;
name|byte
index|[]
name|encodedWithWS
init|=
name|intermediate
operator|.
name|toString
argument_list|()
operator|.
name|getBytes
argument_list|()
decl_stmt|;
name|byte
index|[]
name|decodedWithWS
init|=
name|Base64Codec
operator|.
name|decodeBase64
argument_list|(
name|encodedWithWS
argument_list|)
decl_stmt|;
name|String
name|dest
init|=
operator|new
name|String
argument_list|(
name|decodedWithWS
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Dest string doesn't equals the original"
argument_list|,
name|dest
operator|.
name|equals
argument_list|(
name|orig
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testDiscardWhitespace
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|orig
init|=
literal|"I am a late night coder."
decl_stmt|;
name|byte
index|[]
name|encodedArray
init|=
name|Base64Codec
operator|.
name|encodeBase64
argument_list|(
name|orig
operator|.
name|getBytes
argument_list|()
argument_list|)
decl_stmt|;
name|StringBuffer
name|intermediate
init|=
operator|new
name|StringBuffer
argument_list|(
operator|new
name|String
argument_list|(
name|encodedArray
argument_list|)
argument_list|)
decl_stmt|;
name|intermediate
operator|.
name|insert
argument_list|(
literal|2
argument_list|,
literal|' '
argument_list|)
expr_stmt|;
name|intermediate
operator|.
name|insert
argument_list|(
literal|5
argument_list|,
literal|'\t'
argument_list|)
expr_stmt|;
name|intermediate
operator|.
name|insert
argument_list|(
literal|10
argument_list|,
literal|'\r'
argument_list|)
expr_stmt|;
name|intermediate
operator|.
name|insert
argument_list|(
literal|15
argument_list|,
literal|'\n'
argument_list|)
expr_stmt|;
name|byte
index|[]
name|encodedWithWS
init|=
name|intermediate
operator|.
name|toString
argument_list|()
operator|.
name|getBytes
argument_list|()
decl_stmt|;
name|byte
index|[]
name|encodedNoWS
init|=
name|Base64Codec
operator|.
name|discardWhitespace
argument_list|(
name|encodedWithWS
argument_list|)
decl_stmt|;
name|byte
index|[]
name|decodedWithWS
init|=
name|Base64Codec
operator|.
name|decodeBase64
argument_list|(
name|encodedWithWS
argument_list|)
decl_stmt|;
name|byte
index|[]
name|decodedNoWS
init|=
name|Base64Codec
operator|.
name|decodeBase64
argument_list|(
name|encodedNoWS
argument_list|)
decl_stmt|;
name|String
name|destFromWS
init|=
operator|new
name|String
argument_list|(
name|decodedWithWS
argument_list|)
decl_stmt|;
name|String
name|destFromNoWS
init|=
operator|new
name|String
argument_list|(
name|decodedNoWS
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
literal|"Dest string doesn't eausl original"
argument_list|,
name|destFromWS
operator|.
name|equals
argument_list|(
name|orig
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Dest string doesn't eausl original"
argument_list|,
name|destFromNoWS
operator|.
name|equals
argument_list|(
name|orig
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|String
name|toString
parameter_list|(
name|byte
index|[]
name|data
parameter_list|)
block|{
name|StringBuffer
name|buf
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|data
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|buf
operator|.
name|append
argument_list|(
name|data
index|[
name|i
index|]
argument_list|)
expr_stmt|;
if|if
condition|(
name|i
operator|!=
name|data
operator|.
name|length
operator|-
literal|1
condition|)
block|{
name|buf
operator|.
name|append
argument_list|(
literal|","
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|buf
operator|.
name|toString
argument_list|()
return|;
block|}
comment|/**      * @return Returns the _random.      */
specifier|public
name|Random
name|getRandom
parameter_list|()
block|{
return|return
name|this
operator|.
name|_random
return|;
block|}
block|}
end_class

end_unit

