begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_comment
comment|/**  * A non-persistent Java Bean. Useful for testing Cayenne operations that rely on  * introspection.  */
end_comment

begin_class
specifier|public
class|class
name|TstBean
block|{
specifier|protected
name|Integer
name|integer
decl_stmt|;
specifier|protected
name|String
name|string
decl_stmt|;
specifier|protected
name|String
name|property1
decl_stmt|;
specifier|protected
name|int
name|property2
decl_stmt|;
specifier|protected
name|Date
name|dateProperty
decl_stmt|;
specifier|protected
name|Collection
argument_list|<
name|?
argument_list|>
name|collection
decl_stmt|;
specifier|protected
name|TstBean
name|relatedBean
decl_stmt|;
specifier|public
specifier|static
name|TstBean
name|testFixtureWithCollection
parameter_list|(
name|String
name|rootBaseName
parameter_list|,
name|String
name|childBaseName
parameter_list|)
block|{
name|TstBean
name|root
init|=
operator|new
name|TstBean
argument_list|(
name|rootBaseName
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|Collection
argument_list|<
name|TstBean
argument_list|>
name|collection
init|=
operator|new
name|ArrayList
argument_list|<
name|TstBean
argument_list|>
argument_list|(
literal|10
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
block|{
name|collection
operator|.
name|add
argument_list|(
operator|new
name|TstBean
argument_list|(
name|childBaseName
operator|+
name|i
argument_list|,
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|root
operator|.
name|setCollection
argument_list|(
name|collection
argument_list|)
expr_stmt|;
return|return
name|root
return|;
block|}
specifier|public
name|TstBean
parameter_list|()
block|{
block|}
specifier|public
name|TstBean
parameter_list|(
name|String
name|string
parameter_list|,
name|int
name|intValue
parameter_list|)
block|{
name|this
operator|.
name|string
operator|=
name|string
expr_stmt|;
name|this
operator|.
name|integer
operator|=
name|intValue
expr_stmt|;
block|}
specifier|public
name|TstBean
parameter_list|(
name|int
name|intValue
parameter_list|)
block|{
name|integer
operator|=
name|intValue
expr_stmt|;
block|}
specifier|public
name|Integer
name|getInteger
parameter_list|()
block|{
return|return
name|integer
return|;
block|}
specifier|public
name|void
name|setInteger
parameter_list|(
name|Integer
name|integer
parameter_list|)
block|{
name|this
operator|.
name|integer
operator|=
name|integer
expr_stmt|;
block|}
specifier|public
name|String
name|getString
parameter_list|()
block|{
return|return
name|string
return|;
block|}
specifier|public
name|void
name|setString
parameter_list|(
name|String
name|string
parameter_list|)
block|{
name|this
operator|.
name|string
operator|=
name|string
expr_stmt|;
block|}
specifier|public
name|String
name|getProperty1
parameter_list|()
block|{
return|return
name|property1
return|;
block|}
specifier|public
name|void
name|setProperty1
parameter_list|(
name|String
name|property1
parameter_list|)
block|{
name|this
operator|.
name|property1
operator|=
name|property1
expr_stmt|;
block|}
specifier|public
name|int
name|getProperty2
parameter_list|()
block|{
return|return
name|property2
return|;
block|}
specifier|public
name|void
name|setProperty2
parameter_list|(
name|int
name|property2
parameter_list|)
block|{
name|this
operator|.
name|property2
operator|=
name|property2
expr_stmt|;
block|}
specifier|public
name|Collection
argument_list|<
name|?
argument_list|>
name|getCollection
parameter_list|()
block|{
return|return
name|collection
return|;
block|}
specifier|public
name|void
name|setCollection
parameter_list|(
name|Collection
argument_list|<
name|?
argument_list|>
name|collection
parameter_list|)
block|{
name|this
operator|.
name|collection
operator|=
name|collection
expr_stmt|;
block|}
specifier|public
name|Date
name|getDateProperty
parameter_list|()
block|{
return|return
name|dateProperty
return|;
block|}
specifier|public
name|void
name|setDateProperty
parameter_list|(
name|Date
name|dateProperty
parameter_list|)
block|{
name|this
operator|.
name|dateProperty
operator|=
name|dateProperty
expr_stmt|;
block|}
specifier|public
name|TstBean
name|getRelatedBean
parameter_list|()
block|{
return|return
name|relatedBean
return|;
block|}
specifier|public
name|void
name|setRelatedBean
parameter_list|(
name|TstBean
name|relatedBean
parameter_list|)
block|{
name|this
operator|.
name|relatedBean
operator|=
name|relatedBean
expr_stmt|;
block|}
block|}
end_class

end_unit

