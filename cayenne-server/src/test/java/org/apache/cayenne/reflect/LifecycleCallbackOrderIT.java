begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|reflect
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ObjectContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|annotation
operator|.
name|PostPersist
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|annotation
operator|.
name|PostRemove
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|annotation
operator|.
name|PostUpdate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|annotation
operator|.
name|PrePersist
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|annotation
operator|.
name|PreRemove
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|annotation
operator|.
name|PreUpdate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|lifecycle_callbacks_order
operator|.
name|Lifecycle
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|server
operator|.
name|CayenneProjects
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|server
operator|.
name|ServerCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|server
operator|.
name|UseServerRuntime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_class
annotation|@
name|UseServerRuntime
argument_list|(
name|CayenneProjects
operator|.
name|LIFECYCLE_CALLBACKS_ORDER_PROJECT
argument_list|)
specifier|public
class|class
name|LifecycleCallbackOrderIT
extends|extends
name|ServerCase
block|{
annotation|@
name|Inject
specifier|private
name|ObjectContext
name|context
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|testLifecycleCallbackOrder
parameter_list|()
block|{
name|LifecycleCallbackRegistry
name|registry
init|=
operator|new
name|LifecycleCallbackRegistry
argument_list|(
name|context
operator|.
name|getEntityResolver
argument_list|()
argument_list|)
decl_stmt|;
name|context
operator|.
name|getEntityResolver
argument_list|()
operator|.
name|setCallbackRegistry
argument_list|(
name|registry
argument_list|)
expr_stmt|;
name|LifecycleEventListener
name|eventListener
init|=
operator|new
name|LifecycleEventListener
argument_list|()
decl_stmt|;
name|registry
operator|.
name|addListener
argument_list|(
name|eventListener
argument_list|)
expr_stmt|;
name|Lifecycle
name|lifecycle
init|=
name|context
operator|.
name|newObject
argument_list|(
name|Lifecycle
operator|.
name|class
argument_list|)
decl_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"validateForInsert;PrePersist;PostPersist;"
argument_list|,
name|lifecycle
operator|.
name|getCallbackBufferValueAndReset
argument_list|()
argument_list|)
expr_stmt|;
name|lifecycle
operator|.
name|setName
argument_list|(
literal|"CallbackOrderTest"
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"validateForUpdate;PreUpdate;PostUpdate;"
argument_list|,
name|lifecycle
operator|.
name|getCallbackBufferValueAndReset
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|deleteObject
argument_list|(
name|lifecycle
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"PreRemove;"
argument_list|,
name|lifecycle
operator|.
name|getCallbackBuffer
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"PreRemove;validateForDelete;PostRemove;"
argument_list|,
name|lifecycle
operator|.
name|getCallbackBufferValueAndReset
argument_list|()
argument_list|)
expr_stmt|;
block|}
class|class
name|LifecycleEventListener
block|{
annotation|@
name|PrePersist
argument_list|(
name|Lifecycle
operator|.
name|class
argument_list|)
name|void
name|prePersist
parameter_list|(
name|Lifecycle
name|lifecycle
parameter_list|)
block|{
name|lifecycle
operator|.
name|getCallbackBuffer
argument_list|()
operator|.
name|append
argument_list|(
literal|"PrePersist;"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|PostPersist
argument_list|(
name|Lifecycle
operator|.
name|class
argument_list|)
name|void
name|postPersist
parameter_list|(
name|Lifecycle
name|lifecycle
parameter_list|)
block|{
name|lifecycle
operator|.
name|getCallbackBuffer
argument_list|()
operator|.
name|append
argument_list|(
literal|"PostPersist;"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|PreUpdate
argument_list|(
name|Lifecycle
operator|.
name|class
argument_list|)
name|void
name|preUpdate
parameter_list|(
name|Lifecycle
name|lifecycle
parameter_list|)
block|{
name|lifecycle
operator|.
name|getCallbackBuffer
argument_list|()
operator|.
name|append
argument_list|(
literal|"PreUpdate;"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|PostUpdate
argument_list|(
name|Lifecycle
operator|.
name|class
argument_list|)
name|void
name|postUpdate
parameter_list|(
name|Lifecycle
name|lifecycle
parameter_list|)
block|{
name|lifecycle
operator|.
name|getCallbackBuffer
argument_list|()
operator|.
name|append
argument_list|(
literal|"PostUpdate;"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|PreRemove
argument_list|(
name|Lifecycle
operator|.
name|class
argument_list|)
name|void
name|preRemove
parameter_list|(
name|Lifecycle
name|lifecycle
parameter_list|)
block|{
name|lifecycle
operator|.
name|getCallbackBuffer
argument_list|()
operator|.
name|append
argument_list|(
literal|"PreRemove;"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|PostRemove
argument_list|(
name|Lifecycle
operator|.
name|class
argument_list|)
name|void
name|postRemove
parameter_list|(
name|Lifecycle
name|lifecycle
parameter_list|)
block|{
name|lifecycle
operator|.
name|getCallbackBuffer
argument_list|()
operator|.
name|append
argument_list|(
literal|"PostRemove;"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

