begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|postgres
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|AdhocObjectFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|server
operator|.
name|ServerCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|server
operator|.
name|UseServerRuntime
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Types
import|;
end_import

begin_class
annotation|@
name|UseServerRuntime
argument_list|(
name|ServerCase
operator|.
name|TESTMAP_PROJECT
argument_list|)
specifier|public
class|class
name|PostgresAdapterIT
extends|extends
name|ServerCase
block|{
annotation|@
name|Inject
specifier|private
name|AdhocObjectFactory
name|objectFactory
decl_stmt|;
specifier|public
name|void
name|testCreateTableWithFloatAttributeWithScale
parameter_list|()
block|{
name|PostgresAdapter
name|adapter
init|=
name|objectFactory
operator|.
name|newInstance
argument_list|(
name|PostgresAdapter
operator|.
name|class
argument_list|,
name|PostgresAdapter
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|DbEntity
name|e
init|=
operator|new
name|DbEntity
argument_list|(
literal|"Test"
argument_list|)
decl_stmt|;
name|DbAttribute
name|dblPrec
init|=
operator|new
name|DbAttribute
argument_list|(
literal|"dbl1"
argument_list|)
decl_stmt|;
name|dblPrec
operator|.
name|setType
argument_list|(
name|Types
operator|.
name|FLOAT
argument_list|)
expr_stmt|;
name|dblPrec
operator|.
name|setMaxLength
argument_list|(
literal|22
argument_list|)
expr_stmt|;
name|dblPrec
operator|.
name|setScale
argument_list|(
literal|12
argument_list|)
expr_stmt|;
name|e
operator|.
name|addAttribute
argument_list|(
name|dblPrec
argument_list|)
expr_stmt|;
name|String
name|sql
init|=
name|adapter
operator|.
name|createTable
argument_list|(
name|e
argument_list|)
decl_stmt|;
comment|// CAY-1363.
comment|// Postgress don't support notations float(a, b)
name|assertTrue
argument_list|(
name|sql
operator|.
name|indexOf
argument_list|(
literal|"float(22)"
argument_list|)
operator|>
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|1
argument_list|,
name|sql
operator|.
name|indexOf
argument_list|(
literal|"float(22, 12)"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CREATE TABLE Test (dbl1 float(22) NULL)"
argument_list|,
name|sql
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

