begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|things
operator|.
name|auto
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|CayenneDataObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|exp
operator|.
name|Property
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|things
operator|.
name|Ball
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|things
operator|.
name|Box
import|;
end_import

begin_comment
comment|/**  * Class _Thing was generated by Cayenne.  * It is probably a good idea to avoid changing this class manually,  * since it may be overwritten next time code is regenerated.  * If you need to make any customizations, please use subclass.  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|_Thing
extends|extends
name|CayenneDataObject
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|ID_PK_COLUMN
init|=
literal|"ID"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Property
argument_list|<
name|Integer
argument_list|>
name|VOLUME
init|=
name|Property
operator|.
name|create
argument_list|(
literal|"volume"
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Property
argument_list|<
name|Integer
argument_list|>
name|WEIGHT
init|=
name|Property
operator|.
name|create
argument_list|(
literal|"weight"
argument_list|,
name|Integer
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Property
argument_list|<
name|Ball
argument_list|>
name|BALL
init|=
name|Property
operator|.
name|create
argument_list|(
literal|"ball"
argument_list|,
name|Ball
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Property
argument_list|<
name|List
argument_list|<
name|Box
argument_list|>
argument_list|>
name|BOX
init|=
name|Property
operator|.
name|create
argument_list|(
literal|"box"
argument_list|,
name|List
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
name|void
name|setVolume
parameter_list|(
name|Integer
name|volume
parameter_list|)
block|{
name|writeProperty
argument_list|(
literal|"volume"
argument_list|,
name|volume
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Integer
name|getVolume
parameter_list|()
block|{
return|return
operator|(
name|Integer
operator|)
name|readProperty
argument_list|(
literal|"volume"
argument_list|)
return|;
block|}
specifier|public
name|void
name|setWeight
parameter_list|(
name|Integer
name|weight
parameter_list|)
block|{
name|writeProperty
argument_list|(
literal|"weight"
argument_list|,
name|weight
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Integer
name|getWeight
parameter_list|()
block|{
return|return
operator|(
name|Integer
operator|)
name|readProperty
argument_list|(
literal|"weight"
argument_list|)
return|;
block|}
specifier|public
name|void
name|setBall
parameter_list|(
name|Ball
name|ball
parameter_list|)
block|{
name|setToOneTarget
argument_list|(
literal|"ball"
argument_list|,
name|ball
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Ball
name|getBall
parameter_list|()
block|{
return|return
operator|(
name|Ball
operator|)
name|readProperty
argument_list|(
literal|"ball"
argument_list|)
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|public
name|List
argument_list|<
name|Box
argument_list|>
name|getBox
parameter_list|()
block|{
return|return
operator|(
name|List
argument_list|<
name|Box
argument_list|>
operator|)
name|readProperty
argument_list|(
literal|"box"
argument_list|)
return|;
block|}
block|}
end_class

end_unit

