begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *  * http://www.apache.org/licenses/LICENSE-2.0  *  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  */
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|lob
operator|.
name|auto
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|CayenneDataObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|exp
operator|.
name|Property
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|lob
operator|.
name|ClobTestRelation
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Class _NClobTestEntity was generated by Cayenne.  * It is probably a good idea to avoid changing this class manually,  * since it may be overwritten next time code is regenerated.  * If you need to make any customizations, please use subclass.  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|_NClobTestEntity
extends|extends
name|CayenneDataObject
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
annotation|@
name|Deprecated
specifier|public
specifier|static
specifier|final
name|String
name|NCLOB_COL_PROPERTY
init|=
literal|"nclobCol"
decl_stmt|;
annotation|@
name|Deprecated
specifier|public
specifier|static
specifier|final
name|String
name|NCLOB_VALUE_PROPERTY
init|=
literal|"nclobValue"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|NCLOB_TEST_ID_PK_COLUMN
init|=
literal|"NCLOB_TEST_ID"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Property
argument_list|<
name|String
argument_list|>
name|NCLOB_COL
init|=
operator|new
name|Property
argument_list|<
name|String
argument_list|>
argument_list|(
literal|"nclobCol"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Property
argument_list|<
name|List
argument_list|<
name|ClobTestRelation
argument_list|>
argument_list|>
name|NCLOB_VALUE
init|=
operator|new
name|Property
argument_list|<
name|List
argument_list|<
name|ClobTestRelation
argument_list|>
argument_list|>
argument_list|(
literal|"nclobValue"
argument_list|)
decl_stmt|;
specifier|public
name|void
name|setNclobCol
parameter_list|(
name|String
name|nclobCol
parameter_list|)
block|{
name|writeProperty
argument_list|(
literal|"nclobCol"
argument_list|,
name|nclobCol
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getNclobCol
parameter_list|()
block|{
return|return
operator|(
name|String
operator|)
name|readProperty
argument_list|(
literal|"nclobCol"
argument_list|)
return|;
block|}
block|}
end_class

end_unit

