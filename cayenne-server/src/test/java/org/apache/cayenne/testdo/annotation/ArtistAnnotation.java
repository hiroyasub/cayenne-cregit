begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|annotation
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|annotation
operator|.
name|*
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|annotation
operator|.
name|auto
operator|.
name|_ArtistAnnotation
import|;
end_import

begin_class
specifier|public
class|class
name|ArtistAnnotation
extends|extends
name|_ArtistAnnotation
block|{
specifier|private
specifier|static
specifier|final
name|long
name|serialVersionUID
init|=
literal|1L
decl_stmt|;
annotation|@
name|PostAdd
specifier|protected
name|void
name|testPostAdd
parameter_list|()
block|{
name|postCallback
operator|=
literal|"testPostAdd"
expr_stmt|;
block|}
annotation|@
name|PostPersist
specifier|protected
name|void
name|testPostPersist
parameter_list|()
block|{
name|postCallback
operator|=
literal|"testPostPersist"
expr_stmt|;
block|}
annotation|@
name|PrePersist
specifier|protected
name|void
name|testPrePersist
parameter_list|()
block|{
name|preCallback
operator|=
literal|"testPrePersist"
expr_stmt|;
block|}
annotation|@
name|PostUpdate
specifier|protected
name|void
name|testPostUpdate
parameter_list|()
block|{
name|postCallback
operator|=
literal|"testPostUpdate"
expr_stmt|;
block|}
annotation|@
name|PreUpdate
specifier|protected
name|void
name|testPreUpdate
parameter_list|()
block|{
name|preCallback
operator|=
literal|"testPreUpdate"
expr_stmt|;
block|}
annotation|@
name|PostLoad
specifier|protected
name|void
name|testPostLoad
parameter_list|()
block|{
name|postCallback
operator|=
literal|"testPostLoad"
expr_stmt|;
block|}
annotation|@
name|PostRemove
specifier|protected
name|void
name|testPostRemove
parameter_list|()
block|{
name|postCallback
operator|=
literal|"testPostRemove"
expr_stmt|;
block|}
annotation|@
name|PreRemove
specifier|protected
name|void
name|testPreRemove
parameter_list|()
block|{
name|preCallback
operator|=
literal|"testPreRemove"
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|onPostAdd
parameter_list|()
block|{
block|}
block|}
end_class

end_unit

