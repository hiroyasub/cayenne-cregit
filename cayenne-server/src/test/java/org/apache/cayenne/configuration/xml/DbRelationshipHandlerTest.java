begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|xml
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DataMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbRelationship
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  * @since 4.1  */
end_comment

begin_class
specifier|public
class|class
name|DbRelationshipHandlerTest
extends|extends
name|BaseHandlerTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testParsing
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|DataMap
name|map
init|=
operator|new
name|DataMap
argument_list|()
decl_stmt|;
name|DbEntity
name|entity
init|=
operator|new
name|DbEntity
argument_list|(
literal|"ARTIST"
argument_list|)
decl_stmt|;
name|map
operator|.
name|addDbEntity
argument_list|(
name|entity
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|entity
operator|.
name|getRelationships
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|parse
argument_list|(
literal|"db-relationship"
argument_list|,
operator|new
name|HandlerFactory
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|NamespaceAwareNestedTagHandler
name|createHandler
parameter_list|(
name|NamespaceAwareNestedTagHandler
name|parent
parameter_list|)
block|{
return|return
operator|new
name|DbRelationshipHandler
argument_list|(
name|parent
argument_list|,
name|map
argument_list|)
return|;
block|}
block|}
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|entity
operator|.
name|getRelationships
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|DbRelationship
name|relationship
init|=
name|entity
operator|.
name|getRelationship
argument_list|(
literal|"artistPaintings"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|relationship
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"PAINTING"
argument_list|,
name|relationship
operator|.
name|getTargetEntityName
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|relationship
operator|.
name|isToDependentPK
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|relationship
operator|.
name|isToMany
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ID"
argument_list|,
name|relationship
operator|.
name|getJoins
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getSourceName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ARTIST_ID"
argument_list|,
name|relationship
operator|.
name|getJoins
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getTargetName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

