begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|art
operator|.
name|Artist
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|art
operator|.
name|Gallery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|art
operator|.
name|Painting
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|art
operator|.
name|ROPainting
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|exp
operator|.
name|Expression
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|exp
operator|.
name|ExpressionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|SelectQuery
import|;
end_import

begin_class
specifier|public
class|class
name|CDOMany2OneTest
extends|extends
name|CayenneDOTestBase
block|{
specifier|public
name|void
name|testReadRO1
parameter_list|()
throws|throws
name|Exception
block|{
comment|// setup test
name|Artist
name|a1
init|=
name|newArtist
argument_list|()
decl_stmt|;
name|Painting
name|p1
init|=
name|newPainting
argument_list|()
decl_stmt|;
name|a1
operator|.
name|addToPaintingArray
argument_list|(
name|p1
argument_list|)
expr_stmt|;
name|ctxt
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
comment|// do select
name|Expression
name|e
init|=
name|ExpressionFactory
operator|.
name|matchExp
argument_list|(
literal|"toArtist"
argument_list|,
name|a1
argument_list|)
decl_stmt|;
name|SelectQuery
name|q
init|=
operator|new
name|SelectQuery
argument_list|(
literal|"ROPainting"
argument_list|,
name|e
argument_list|)
decl_stmt|;
comment|// *** TESTING THIS ***
name|List
name|paints
init|=
name|ctxt
operator|.
name|performQuery
argument_list|(
name|q
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|paints
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|ROPainting
name|rop1
init|=
operator|(
name|ROPainting
operator|)
name|paints
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|a1
argument_list|,
name|rop1
operator|.
name|getToArtist
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testReadRO2
parameter_list|()
throws|throws
name|Exception
block|{
comment|// setup test
name|Artist
name|a1
init|=
name|newArtist
argument_list|()
decl_stmt|;
name|Painting
name|p1
init|=
name|newPainting
argument_list|()
decl_stmt|;
name|a1
operator|.
name|addToPaintingArray
argument_list|(
name|p1
argument_list|)
expr_stmt|;
name|ctxt
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|ctxt
operator|=
name|createDataContext
argument_list|()
expr_stmt|;
comment|// do select
name|Expression
name|e
init|=
name|ExpressionFactory
operator|.
name|matchExp
argument_list|(
literal|"toArtist"
argument_list|,
name|a1
argument_list|)
decl_stmt|;
name|SelectQuery
name|q
init|=
operator|new
name|SelectQuery
argument_list|(
literal|"ROPainting"
argument_list|,
name|e
argument_list|)
decl_stmt|;
comment|// *** TESTING THIS ***
name|List
name|paints
init|=
name|ctxt
operator|.
name|performQuery
argument_list|(
name|q
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|paints
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|ROPainting
name|rop1
init|=
operator|(
name|ROPainting
operator|)
name|paints
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|rop1
operator|.
name|getToArtist
argument_list|()
argument_list|)
expr_stmt|;
comment|// trigger fetch
name|rop1
operator|.
name|getToArtist
argument_list|()
operator|.
name|getArtistName
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|rop1
operator|.
name|getToArtist
argument_list|()
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSelectViaRelationship
parameter_list|()
throws|throws
name|Exception
block|{
comment|// setup test
name|Artist
name|a1
init|=
name|newArtist
argument_list|()
decl_stmt|;
name|Painting
name|p1
init|=
name|newPainting
argument_list|()
decl_stmt|;
name|a1
operator|.
name|addToPaintingArray
argument_list|(
name|p1
argument_list|)
expr_stmt|;
name|ctxt
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
comment|// do select
name|Expression
name|e
init|=
name|ExpressionFactory
operator|.
name|matchExp
argument_list|(
literal|"toArtist"
argument_list|,
name|a1
argument_list|)
decl_stmt|;
name|SelectQuery
name|q
init|=
operator|new
name|SelectQuery
argument_list|(
literal|"Painting"
argument_list|,
name|e
argument_list|)
decl_stmt|;
comment|// *** TESTING THIS ***
name|List
name|paints
init|=
name|ctxt
operator|.
name|performQuery
argument_list|(
name|q
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|paints
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|p1
argument_list|,
name|paints
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSelectViaMultiRelationship
parameter_list|()
throws|throws
name|Exception
block|{
comment|// setup test
name|Artist
name|a1
init|=
name|newArtist
argument_list|()
decl_stmt|;
name|Painting
name|p1
init|=
name|newPainting
argument_list|()
decl_stmt|;
name|Painting
name|p2
init|=
name|newPainting
argument_list|()
decl_stmt|;
name|Gallery
name|g1
init|=
name|newGallery
argument_list|()
decl_stmt|;
name|a1
operator|.
name|addToPaintingArray
argument_list|(
name|p1
argument_list|)
expr_stmt|;
name|a1
operator|.
name|addToPaintingArray
argument_list|(
name|p2
argument_list|)
expr_stmt|;
name|p1
operator|.
name|setToGallery
argument_list|(
name|g1
argument_list|)
expr_stmt|;
name|p2
operator|.
name|setToGallery
argument_list|(
name|g1
argument_list|)
expr_stmt|;
name|ctxt
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
comment|// do select
name|Expression
name|e
init|=
name|ExpressionFactory
operator|.
name|matchExp
argument_list|(
literal|"paintingArray.toGallery"
argument_list|,
name|g1
argument_list|)
decl_stmt|;
name|SelectQuery
name|q
init|=
operator|new
name|SelectQuery
argument_list|(
literal|"Artist"
argument_list|,
name|e
argument_list|)
decl_stmt|;
comment|// *** TESTING THIS ***
name|List
name|artists
init|=
name|ctxt
operator|.
name|performQuery
argument_list|(
name|q
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|artists
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|a1
argument_list|,
name|artists
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testNewAdd
parameter_list|()
throws|throws
name|Exception
block|{
name|Artist
name|a1
init|=
name|newArtist
argument_list|()
decl_stmt|;
name|Painting
name|p1
init|=
name|newPainting
argument_list|()
decl_stmt|;
comment|// *** TESTING THIS ***
name|p1
operator|.
name|setToArtist
argument_list|(
name|a1
argument_list|)
expr_stmt|;
comment|// test before save
name|assertSame
argument_list|(
name|a1
argument_list|,
name|p1
operator|.
name|getToArtist
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|a1
operator|.
name|getPaintingArray
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|p1
argument_list|,
name|a1
operator|.
name|getPaintingArray
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// do save
name|ctxt
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|ctxt
operator|=
name|createDataContext
argument_list|()
expr_stmt|;
comment|// test database data
name|Painting
name|p2
init|=
name|fetchPainting
argument_list|()
decl_stmt|;
name|Artist
name|a2
init|=
name|p2
operator|.
name|getToArtist
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|a2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|artistName
argument_list|,
name|a2
operator|.
name|getArtistName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testRemove
parameter_list|()
throws|throws
name|Exception
block|{
name|Painting
name|p1
init|=
name|newPainting
argument_list|()
decl_stmt|;
name|Gallery
name|g1
init|=
name|newGallery
argument_list|()
decl_stmt|;
name|p1
operator|.
name|setToGallery
argument_list|(
name|g1
argument_list|)
expr_stmt|;
comment|// do save
name|ctxt
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|ctxt
operator|=
name|createDataContext
argument_list|()
expr_stmt|;
comment|// test database data
name|Painting
name|p2
init|=
name|fetchPainting
argument_list|()
decl_stmt|;
name|Gallery
name|g2
init|=
name|p2
operator|.
name|getToGallery
argument_list|()
decl_stmt|;
comment|// *** TESTING THIS ***
name|p2
operator|.
name|setToGallery
argument_list|(
literal|null
argument_list|)
expr_stmt|;
comment|// test before save
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|g2
operator|.
name|getPaintingArray
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|p2
operator|.
name|getToGallery
argument_list|()
argument_list|)
expr_stmt|;
comment|// do save II
name|ctxt
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|ctxt
operator|=
name|createDataContext
argument_list|()
expr_stmt|;
name|Painting
name|p3
init|=
name|fetchPainting
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|p3
operator|.
name|getToGallery
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testReplace
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|altGalleryName
init|=
literal|"alt gallery"
decl_stmt|;
name|Painting
name|p1
init|=
name|newPainting
argument_list|()
decl_stmt|;
name|Gallery
name|g1
init|=
name|newGallery
argument_list|()
decl_stmt|;
name|g1
operator|.
name|setGalleryName
argument_list|(
name|altGalleryName
argument_list|)
expr_stmt|;
name|p1
operator|.
name|setToGallery
argument_list|(
name|g1
argument_list|)
expr_stmt|;
comment|// do save
name|ctxt
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|ctxt
operator|=
name|createDataContext
argument_list|()
expr_stmt|;
comment|// test database data
name|Painting
name|p2
init|=
name|fetchPainting
argument_list|()
decl_stmt|;
name|Gallery
name|g21
init|=
name|p2
operator|.
name|getToGallery
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|g21
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|altGalleryName
argument_list|,
name|g21
operator|.
name|getGalleryName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|g21
operator|.
name|getPaintingArray
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|p2
argument_list|,
name|g21
operator|.
name|getPaintingArray
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
name|Gallery
name|g22
init|=
name|newGallery
argument_list|()
decl_stmt|;
comment|// *** TESTING THIS ***
name|p2
operator|.
name|setToGallery
argument_list|(
name|g22
argument_list|)
expr_stmt|;
comment|// test before save
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|g21
operator|.
name|getPaintingArray
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|g22
operator|.
name|getPaintingArray
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|p2
argument_list|,
name|g22
operator|.
name|getPaintingArray
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// do save II
name|ctxt
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|ctxt
operator|=
name|createDataContext
argument_list|()
expr_stmt|;
name|Painting
name|p3
init|=
name|fetchPainting
argument_list|()
decl_stmt|;
name|Gallery
name|g3
init|=
name|p3
operator|.
name|getToGallery
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|g3
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|galleryName
argument_list|,
name|g3
operator|.
name|getGalleryName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|g3
operator|.
name|getPaintingArray
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|p3
argument_list|,
name|g3
operator|.
name|getPaintingArray
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSavedAdd
parameter_list|()
throws|throws
name|Exception
block|{
name|Painting
name|p1
init|=
name|newPainting
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|p1
operator|.
name|getObjectId
argument_list|()
argument_list|,
name|ctxt
operator|.
name|localObject
argument_list|(
name|p1
operator|.
name|getObjectId
argument_list|()
argument_list|,
literal|null
argument_list|)
operator|.
name|getObjectId
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|ctxt
operator|.
name|hasChanges
argument_list|()
argument_list|)
expr_stmt|;
comment|// do save
name|ctxt
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|ctxt
operator|=
name|createDataContext
argument_list|()
expr_stmt|;
comment|// test database data
name|Painting
name|p2
init|=
name|fetchPainting
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|p2
operator|.
name|getToGallery
argument_list|()
argument_list|)
expr_stmt|;
name|Gallery
name|g2
init|=
name|newGallery
argument_list|()
decl_stmt|;
comment|// *** TESTING THIS ***
name|p2
operator|.
name|setToGallery
argument_list|(
name|g2
argument_list|)
expr_stmt|;
comment|// test before save
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|g2
operator|.
name|getPaintingArray
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|p2
argument_list|,
name|g2
operator|.
name|getPaintingArray
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
comment|// do save II
name|ctxt
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|ctxt
operator|=
name|createDataContext
argument_list|()
expr_stmt|;
name|Painting
name|p3
init|=
name|fetchPainting
argument_list|()
decl_stmt|;
name|Gallery
name|g3
init|=
name|p3
operator|.
name|getToGallery
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|g3
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|galleryName
argument_list|,
name|g3
operator|.
name|getGalleryName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|g3
operator|.
name|getPaintingArray
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|p3
argument_list|,
name|g3
operator|.
name|getPaintingArray
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

