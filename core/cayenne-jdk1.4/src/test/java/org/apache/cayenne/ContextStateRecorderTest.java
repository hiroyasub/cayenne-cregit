begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
package|;
end_package

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|graph
operator|.
name|GraphManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|graph
operator|.
name|MockGraphManager
import|;
end_import

begin_comment
comment|/**  * @author Andrus Adamchik  */
end_comment

begin_class
specifier|public
class|class
name|ContextStateRecorderTest
extends|extends
name|TestCase
block|{
specifier|public
name|void
name|testDirtyNodesInState
parameter_list|()
block|{
name|GraphManager
name|map
init|=
operator|new
name|MockGraphManager
argument_list|()
decl_stmt|;
name|ObjectContextStateLog
name|recorder
init|=
operator|new
name|ObjectContextStateLog
argument_list|(
name|map
argument_list|)
decl_stmt|;
comment|// check for null collections
name|assertNotNull
argument_list|(
name|recorder
operator|.
name|dirtyNodes
argument_list|(
name|PersistenceState
operator|.
name|MODIFIED
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|recorder
operator|.
name|dirtyNodes
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|recorder
operator|.
name|dirtyNodes
argument_list|(
name|PersistenceState
operator|.
name|DELETED
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|recorder
operator|.
name|dirtyNodes
argument_list|(
name|PersistenceState
operator|.
name|NEW
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|recorder
operator|.
name|dirtyNodes
argument_list|(
name|PersistenceState
operator|.
name|TRANSIENT
argument_list|)
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|recorder
operator|.
name|dirtyNodes
argument_list|(
name|PersistenceState
operator|.
name|HOLLOW
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|recorder
operator|.
name|dirtyNodes
argument_list|(
name|PersistenceState
operator|.
name|MODIFIED
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|recorder
operator|.
name|dirtyNodes
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|recorder
operator|.
name|dirtyNodes
argument_list|(
name|PersistenceState
operator|.
name|DELETED
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|recorder
operator|.
name|dirtyNodes
argument_list|(
name|PersistenceState
operator|.
name|NEW
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|recorder
operator|.
name|dirtyNodes
argument_list|(
name|PersistenceState
operator|.
name|TRANSIENT
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|recorder
operator|.
name|dirtyNodes
argument_list|(
name|PersistenceState
operator|.
name|HOLLOW
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|MockPersistentObject
name|modified
init|=
operator|new
name|MockPersistentObject
argument_list|()
decl_stmt|;
name|modified
operator|.
name|setObjectId
argument_list|(
operator|new
name|ObjectId
argument_list|(
literal|"MockPersistentObject"
argument_list|,
literal|"key"
argument_list|,
literal|"value1"
argument_list|)
argument_list|)
expr_stmt|;
name|modified
operator|.
name|setPersistenceState
argument_list|(
name|PersistenceState
operator|.
name|MODIFIED
argument_list|)
expr_stmt|;
name|map
operator|.
name|registerNode
argument_list|(
name|modified
operator|.
name|getObjectId
argument_list|()
argument_list|,
name|modified
argument_list|)
expr_stmt|;
name|recorder
operator|.
name|nodePropertyChanged
argument_list|(
name|modified
operator|.
name|getObjectId
argument_list|()
argument_list|,
literal|"a"
argument_list|,
literal|"b"
argument_list|,
literal|"c"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|recorder
operator|.
name|dirtyNodes
argument_list|(
name|PersistenceState
operator|.
name|MODIFIED
argument_list|)
operator|.
name|contains
argument_list|(
name|modified
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|recorder
operator|.
name|dirtyNodes
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|recorder
operator|.
name|dirtyNodes
argument_list|(
name|PersistenceState
operator|.
name|DELETED
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|recorder
operator|.
name|dirtyNodes
argument_list|(
name|PersistenceState
operator|.
name|NEW
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|recorder
operator|.
name|dirtyNodes
argument_list|(
name|PersistenceState
operator|.
name|TRANSIENT
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|recorder
operator|.
name|dirtyNodes
argument_list|(
name|PersistenceState
operator|.
name|HOLLOW
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|MockPersistentObject
name|deleted
init|=
operator|new
name|MockPersistentObject
argument_list|()
decl_stmt|;
name|deleted
operator|.
name|setObjectId
argument_list|(
operator|new
name|ObjectId
argument_list|(
literal|"MockPersistentObject"
argument_list|,
literal|"key"
argument_list|,
literal|"value2"
argument_list|)
argument_list|)
expr_stmt|;
name|deleted
operator|.
name|setPersistenceState
argument_list|(
name|PersistenceState
operator|.
name|DELETED
argument_list|)
expr_stmt|;
name|map
operator|.
name|registerNode
argument_list|(
name|deleted
operator|.
name|getObjectId
argument_list|()
argument_list|,
name|deleted
argument_list|)
expr_stmt|;
name|recorder
operator|.
name|nodeRemoved
argument_list|(
name|deleted
operator|.
name|getObjectId
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|recorder
operator|.
name|dirtyNodes
argument_list|(
name|PersistenceState
operator|.
name|MODIFIED
argument_list|)
operator|.
name|contains
argument_list|(
name|modified
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|recorder
operator|.
name|dirtyNodes
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|recorder
operator|.
name|dirtyNodes
argument_list|(
name|PersistenceState
operator|.
name|DELETED
argument_list|)
operator|.
name|contains
argument_list|(
name|deleted
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|recorder
operator|.
name|dirtyNodes
argument_list|(
name|PersistenceState
operator|.
name|NEW
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|recorder
operator|.
name|dirtyNodes
argument_list|(
name|PersistenceState
operator|.
name|TRANSIENT
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|recorder
operator|.
name|dirtyNodes
argument_list|(
name|PersistenceState
operator|.
name|HOLLOW
argument_list|)
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testDirtyNodes
parameter_list|()
block|{
name|GraphManager
name|map
init|=
operator|new
name|MockGraphManager
argument_list|()
decl_stmt|;
name|ObjectContextStateLog
name|recorder
init|=
operator|new
name|ObjectContextStateLog
argument_list|(
name|map
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|recorder
operator|.
name|dirtyNodes
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|recorder
operator|.
name|dirtyNodes
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
comment|// introduce a fake dirty object
name|MockPersistentObject
name|object
init|=
operator|new
name|MockPersistentObject
argument_list|()
decl_stmt|;
name|object
operator|.
name|setObjectId
argument_list|(
operator|new
name|ObjectId
argument_list|(
literal|"MockPersistentObject"
argument_list|,
literal|"key"
argument_list|,
literal|"value"
argument_list|)
argument_list|)
expr_stmt|;
name|object
operator|.
name|setPersistenceState
argument_list|(
name|PersistenceState
operator|.
name|MODIFIED
argument_list|)
expr_stmt|;
name|map
operator|.
name|registerNode
argument_list|(
name|object
operator|.
name|getObjectId
argument_list|()
argument_list|,
name|object
argument_list|)
expr_stmt|;
name|recorder
operator|.
name|nodePropertyChanged
argument_list|(
name|object
operator|.
name|getObjectId
argument_list|()
argument_list|,
literal|"a"
argument_list|,
literal|"b"
argument_list|,
literal|"c"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|recorder
operator|.
name|dirtyNodes
argument_list|()
operator|.
name|contains
argument_list|(
name|object
argument_list|)
argument_list|)
expr_stmt|;
comment|// must go away on clear...
name|recorder
operator|.
name|clear
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|recorder
operator|.
name|dirtyNodes
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|recorder
operator|.
name|dirtyNodes
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testHasChanges
parameter_list|()
block|{
name|ObjectContextStateLog
name|recorder
init|=
operator|new
name|ObjectContextStateLog
argument_list|(
operator|new
name|MockGraphManager
argument_list|()
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|recorder
operator|.
name|hasChanges
argument_list|()
argument_list|)
expr_stmt|;
comment|// introduce a fake dirty object
name|MockPersistentObject
name|object
init|=
operator|new
name|MockPersistentObject
argument_list|()
decl_stmt|;
name|object
operator|.
name|setObjectId
argument_list|(
operator|new
name|ObjectId
argument_list|(
literal|"MockPersistentObject"
argument_list|,
literal|"key"
argument_list|,
literal|"value"
argument_list|)
argument_list|)
expr_stmt|;
name|object
operator|.
name|setPersistenceState
argument_list|(
name|PersistenceState
operator|.
name|MODIFIED
argument_list|)
expr_stmt|;
name|recorder
operator|.
name|nodePropertyChanged
argument_list|(
name|object
operator|.
name|getObjectId
argument_list|()
argument_list|,
literal|"xyz"
argument_list|,
literal|"a"
argument_list|,
literal|"b"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|recorder
operator|.
name|hasChanges
argument_list|()
argument_list|)
expr_stmt|;
comment|// must go away on clear...
name|recorder
operator|.
name|clear
argument_list|()
expr_stmt|;
name|assertFalse
argument_list|(
name|recorder
operator|.
name|hasChanges
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

