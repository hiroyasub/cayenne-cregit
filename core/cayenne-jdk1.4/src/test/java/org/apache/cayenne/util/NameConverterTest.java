begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|util
package|;
end_package

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_class
specifier|public
class|class
name|NameConverterTest
extends|extends
name|TestCase
block|{
specifier|public
name|void
name|testUnderscoredToJava1
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|expected
init|=
literal|"ClassNameIdentifier"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|NameConverter
operator|.
name|underscoredToJava
argument_list|(
literal|"_CLASS_NAME_IDENTIFIER_"
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testUnderscoredToJava2
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|expected
init|=
literal|"propNameIdentifier123"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|NameConverter
operator|.
name|underscoredToJava
argument_list|(
literal|"_prop_name_Identifier_123"
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testUnderscoredToJava3
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|expected
init|=
literal|"lastName"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|NameConverter
operator|.
name|underscoredToJava
argument_list|(
literal|"lastName"
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testUnderscoredToJava4
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|expected
init|=
literal|"lastName"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|NameConverter
operator|.
name|underscoredToJava
argument_list|(
literal|"LastName"
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testUnderscoredToJava5
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|expected
init|=
literal|"LastName"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|NameConverter
operator|.
name|underscoredToJava
argument_list|(
literal|"LastName"
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testJavaToUnderscored1
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|expected
init|=
literal|"LAST_NAME"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|NameConverter
operator|.
name|javaToUnderscored
argument_list|(
literal|"LastName"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testJavaToUnderscored2
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|expected
init|=
literal|"A_CLASS"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|NameConverter
operator|.
name|javaToUnderscored
argument_list|(
literal|"aClass"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testJavaToUnderscored3
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|expected
init|=
literal|"VAR_A"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|NameConverter
operator|.
name|javaToUnderscored
argument_list|(
literal|"varA"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testJavaToUnderscored4
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|expected
init|=
literal|"LAST_NAME"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|NameConverter
operator|.
name|javaToUnderscored
argument_list|(
literal|"LAST_NAME"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testJavaToUnderscored5
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|expected
init|=
literal|"ABC_A"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|NameConverter
operator|.
name|javaToUnderscored
argument_list|(
literal|"abc_A"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testJavaToUnderscored6
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|expected
init|=
literal|"A123"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|NameConverter
operator|.
name|javaToUnderscored
argument_list|(
literal|"a123"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testJavaToUnderscored7
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|expected
init|=
literal|"AB_CDEF"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|NameConverter
operator|.
name|javaToUnderscored
argument_list|(
literal|"abCDEF"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testJavaToUnderscored8
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|expected
init|=
literal|"AB_CE"
decl_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|NameConverter
operator|.
name|javaToUnderscored
argument_list|(
literal|"abCe"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

