begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DataMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|MultiNodeCase
import|;
end_import

begin_class
specifier|public
class|class
name|DbGeneratorCrossDBTest
extends|extends
name|MultiNodeCase
block|{
specifier|public
name|void
name|testCreateFkConstraintsQueries
parameter_list|()
block|{
comment|// can't test this if adapter doesn't support constraints
if|if
condition|(
operator|!
name|getNode2
argument_list|()
operator|.
name|getAdapter
argument_list|()
operator|.
name|supportsFkConstraints
argument_list|()
condition|)
block|{
return|return;
block|}
name|DataMap
name|m2
init|=
name|getDomain
argument_list|()
operator|.
name|getMap
argument_list|(
literal|"map-db2"
argument_list|)
decl_stmt|;
name|DbEntity
name|m2e2
init|=
name|m2
operator|.
name|getDbEntity
argument_list|(
literal|"CROSSDB_M2E2"
argument_list|)
decl_stmt|;
name|DbGenerator
name|g2
init|=
operator|new
name|DbGenerator
argument_list|(
name|getNode2
argument_list|()
operator|.
name|getAdapter
argument_list|()
argument_list|,
name|m2
argument_list|,
literal|null
argument_list|,
name|getDomain
argument_list|()
argument_list|)
decl_stmt|;
name|List
name|fk
init|=
name|g2
operator|.
name|createFkConstraintsQueries
argument_list|(
name|m2e2
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|fk
argument_list|)
expr_stmt|;
comment|// same-db FK should be included
comment|// cross-db FK should not be included
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|fk
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

