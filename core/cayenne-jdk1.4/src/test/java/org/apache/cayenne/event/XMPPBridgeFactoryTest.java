begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|event
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_class
specifier|public
class|class
name|XMPPBridgeFactoryTest
extends|extends
name|TestCase
block|{
specifier|public
name|void
name|testCreateEventBridge
parameter_list|()
block|{
name|XMPPBridgeFactory
name|factory
init|=
operator|new
name|XMPPBridgeFactory
argument_list|()
decl_stmt|;
name|Collection
name|subjects
init|=
name|Collections
operator|.
name|singleton
argument_list|(
name|EventSubject
operator|.
name|getSubject
argument_list|(
name|getClass
argument_list|()
argument_list|,
literal|"test"
argument_list|)
argument_list|)
decl_stmt|;
name|Map
name|properties
init|=
operator|new
name|HashMap
argument_list|()
decl_stmt|;
name|properties
operator|.
name|put
argument_list|(
name|XMPPBridgeFactory
operator|.
name|XMPP_HOST_PROPERTY
argument_list|,
literal|"somehost.com"
argument_list|)
expr_stmt|;
name|properties
operator|.
name|put
argument_list|(
name|XMPPBridgeFactory
operator|.
name|XMPP_PORT_PROPERTY
argument_list|,
literal|"12345"
argument_list|)
expr_stmt|;
name|EventBridge
name|bridge
init|=
name|factory
operator|.
name|createEventBridge
argument_list|(
name|subjects
argument_list|,
literal|"remote-subject"
argument_list|,
name|properties
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|bridge
operator|instanceof
name|XMPPBridge
argument_list|)
expr_stmt|;
name|XMPPBridge
name|xmppBridge
init|=
operator|(
name|XMPPBridge
operator|)
name|bridge
decl_stmt|;
name|assertEquals
argument_list|(
name|subjects
argument_list|,
name|xmppBridge
operator|.
name|getLocalSubjects
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"remote-subject"
argument_list|,
name|xmppBridge
operator|.
name|getExternalSubject
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"somehost.com"
argument_list|,
name|xmppBridge
operator|.
name|getXmppHost
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|12345
argument_list|,
name|xmppBridge
operator|.
name|getXmppPort
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

