begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|remote
operator|.
name|hessian
operator|.
name|service
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpSession
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|DataDomain
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|event
operator|.
name|MockEventBridgeFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|remote
operator|.
name|hessian
operator|.
name|service
operator|.
name|HessianService
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mockrunner
operator|.
name|mock
operator|.
name|web
operator|.
name|MockHttpSession
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mockrunner
operator|.
name|mock
operator|.
name|web
operator|.
name|MockServletConfig
import|;
end_import

begin_class
specifier|public
class|class
name|HessianServiceTest
extends|extends
name|TestCase
block|{
specifier|public
name|void
name|testInit
parameter_list|()
throws|throws
name|Exception
block|{
name|MockServletConfig
name|config
init|=
operator|new
name|MockServletConfig
argument_list|()
decl_stmt|;
name|config
operator|.
name|setInitParameter
argument_list|(
name|HessianService
operator|.
name|EVENT_BRIDGE_FACTORY_PROPERTY
argument_list|,
name|MockEventBridgeFactory
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|HessianService
name|handler
init|=
operator|new
name|HessianService
argument_list|()
block|{
specifier|protected
name|void
name|initCayenneStack
parameter_list|(
name|Map
name|properties
parameter_list|)
block|{
name|this
operator|.
name|domain
operator|=
operator|new
name|DataDomain
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|HttpSession
name|getSession
parameter_list|(
name|boolean
name|create
parameter_list|)
block|{
return|return
operator|new
name|MockHttpSession
argument_list|()
return|;
block|}
block|}
decl_stmt|;
name|handler
operator|.
name|init
argument_list|(
name|config
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MockEventBridgeFactory
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|handler
operator|.
name|getEventBridgeFactoryName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

