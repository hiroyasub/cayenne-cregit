begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|project
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DataMap
import|;
end_import

begin_comment
comment|/**  * DataMapFile is a ProjectFile abstraction of the   * DataMap file in a Cayenne project.   *   * @author Andrus Adamchik  */
end_comment

begin_class
specifier|public
class|class
name|DataMapFile
extends|extends
name|ProjectFile
block|{
specifier|public
specifier|static
specifier|final
name|String
name|LOCATION_SUFFIX
init|=
literal|".map.xml"
decl_stmt|;
specifier|protected
name|DataMap
name|map
decl_stmt|;
specifier|public
name|DataMapFile
parameter_list|()
block|{
block|}
comment|/**      * Constructor for DataMapFile.      */
specifier|public
name|DataMapFile
parameter_list|(
name|Project
name|project
parameter_list|,
name|DataMap
name|map
parameter_list|)
block|{
name|super
argument_list|(
name|project
argument_list|,
name|map
operator|.
name|getLocation
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|map
operator|=
name|map
expr_stmt|;
block|}
comment|/**      * Returns DataMap associated with this project.      */
specifier|public
name|Object
name|getObject
parameter_list|()
block|{
return|return
name|map
return|;
block|}
comment|/**      * @see org.apache.cayenne.project.ProjectFile#getObjectName()      */
specifier|public
name|String
name|getObjectName
parameter_list|()
block|{
return|return
name|map
operator|.
name|getName
argument_list|()
return|;
block|}
specifier|public
name|void
name|save
parameter_list|(
name|PrintWriter
name|out
parameter_list|)
throws|throws
name|Exception
block|{
name|map
operator|.
name|encodeAsXML
argument_list|(
name|out
argument_list|)
expr_stmt|;
block|}
comment|/**      * @see org.apache.cayenne.project.ProjectFile#canHandle(Object)      */
specifier|public
name|boolean
name|canHandle
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
return|return
name|obj
operator|instanceof
name|DataMap
return|;
block|}
comment|/**      * Updates map location to match the name before save.      */
specifier|public
name|void
name|willSave
parameter_list|()
block|{
name|super
operator|.
name|willSave
argument_list|()
expr_stmt|;
if|if
condition|(
name|map
operator|!=
literal|null
condition|)
block|{
name|map
operator|.
name|setLocation
argument_list|(
name|getLocation
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * Returns ".map.xml" that should be used as a file suffix for DataMaps.      */
specifier|public
name|String
name|getLocationSuffix
parameter_list|()
block|{
return|return
name|LOCATION_SUFFIX
return|;
block|}
block|}
end_class

end_unit

