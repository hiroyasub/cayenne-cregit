begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dataview
package|;
end_package

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|DecimalFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|Format
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|SimpleDateFormat
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|ComboBoxModel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|DefaultComboBoxModel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JCheckBox
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JComboBox
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JComponent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JFormattedTextField
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTextField
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|ListCellRenderer
import|;
end_import

begin_class
specifier|public
class|class
name|FieldComponentFactory
block|{
specifier|public
name|FieldComponentFactory
parameter_list|()
block|{
block|}
specifier|public
name|JComponent
name|createFieldEditComponent
parameter_list|(
name|ObjEntityViewField
name|field
parameter_list|)
block|{
name|CellRenderers
name|cellRenderers
init|=
operator|new
name|CellRenderers
argument_list|()
decl_stmt|;
name|JComponent
name|editor
init|=
literal|null
decl_stmt|;
name|Format
name|format
init|=
name|field
operator|.
name|getEditFormat
argument_list|()
decl_stmt|;
name|int
name|dataType
init|=
name|field
operator|.
name|getDataType
argument_list|()
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|boolean
name|lookup
init|=
name|field
operator|.
name|isLookup
argument_list|()
decl_stmt|;
name|int
name|alignment
decl_stmt|;
switch|switch
condition|(
name|dataType
condition|)
block|{
case|case
name|DataTypeEnum
operator|.
name|INTEGER_TYPE_VALUE
case|:
case|case
name|DataTypeEnum
operator|.
name|DOUBLE_TYPE_VALUE
case|:
case|case
name|DataTypeEnum
operator|.
name|MONEY_TYPE_VALUE
case|:
case|case
name|DataTypeEnum
operator|.
name|PERCENT_TYPE_VALUE
case|:
name|alignment
operator|=
name|JTextField
operator|.
name|RIGHT
expr_stmt|;
break|break;
default|default:
name|alignment
operator|=
name|JTextField
operator|.
name|LEFT
expr_stmt|;
break|break;
block|}
if|if
condition|(
name|lookup
condition|)
block|{
name|ComboBoxModel
name|comboData
init|=
operator|new
name|DefaultComboBoxModel
argument_list|(
name|field
operator|.
name|getLookupValues
argument_list|()
argument_list|)
decl_stmt|;
name|ListCellRenderer
name|comboRenderer
init|=
name|cellRenderers
operator|.
name|createListCellRenderer
argument_list|(
name|field
argument_list|)
decl_stmt|;
name|JComboBox
name|comboBox
init|=
operator|new
name|JComboBox
argument_list|(
name|comboData
argument_list|)
decl_stmt|;
name|comboBox
operator|.
name|setRenderer
argument_list|(
name|comboRenderer
argument_list|)
expr_stmt|;
name|editor
operator|=
name|comboBox
expr_stmt|;
block|}
if|else if
condition|(
name|format
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|format
operator|instanceof
name|MapFormat
condition|)
block|{
name|MapFormat
name|mapFormat
init|=
operator|(
name|MapFormat
operator|)
name|format
decl_stmt|;
name|ComboBoxModel
name|comboData
init|=
operator|new
name|DefaultComboBoxModel
argument_list|(
operator|(
name|mapFormat
operator|)
operator|.
name|getValues
argument_list|()
argument_list|)
decl_stmt|;
name|ListCellRenderer
name|comboRenderer
init|=
name|cellRenderers
operator|.
name|createFormatListCellRenderer
argument_list|(
name|mapFormat
argument_list|,
name|mapFormat
operator|.
name|getNullFormat
argument_list|()
argument_list|,
literal|null
argument_list|,
operator|-
literal|1
argument_list|)
decl_stmt|;
name|JComboBox
name|comboBox
init|=
operator|new
name|JComboBox
argument_list|(
name|comboData
argument_list|)
decl_stmt|;
name|comboBox
operator|.
name|setRenderer
argument_list|(
name|comboRenderer
argument_list|)
expr_stmt|;
name|editor
operator|=
name|comboBox
expr_stmt|;
block|}
else|else
block|{
name|JFormattedTextField
name|textField
init|=
operator|new
name|JFormattedTextField
argument_list|(
name|format
argument_list|)
decl_stmt|;
if|if
condition|(
name|alignment
operator|>=
literal|0
condition|)
name|textField
operator|.
name|setHorizontalAlignment
argument_list|(
name|alignment
argument_list|)
expr_stmt|;
if|if
condition|(
name|format
operator|instanceof
name|DecimalFormat
condition|)
name|textField
operator|.
name|setToolTipText
argument_list|(
operator|(
operator|(
name|DecimalFormat
operator|)
name|format
operator|)
operator|.
name|toPattern
argument_list|()
argument_list|)
expr_stmt|;
if|else if
condition|(
name|format
operator|instanceof
name|SimpleDateFormat
condition|)
name|textField
operator|.
name|setToolTipText
argument_list|(
operator|(
operator|(
name|SimpleDateFormat
operator|)
name|format
operator|)
operator|.
name|toPattern
argument_list|()
argument_list|)
expr_stmt|;
name|editor
operator|=
name|textField
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
name|dataType
operator|==
name|DataTypeEnum
operator|.
name|BOOLEAN_TYPE_VALUE
condition|)
block|{
name|JCheckBox
name|checkBox
init|=
operator|new
name|JCheckBox
argument_list|()
decl_stmt|;
name|editor
operator|=
name|checkBox
expr_stmt|;
block|}
else|else
block|{
name|JTextField
name|textField
init|=
operator|new
name|JTextField
argument_list|()
decl_stmt|;
if|if
condition|(
name|alignment
operator|>=
literal|0
condition|)
name|textField
operator|.
name|setHorizontalAlignment
argument_list|(
name|alignment
argument_list|)
expr_stmt|;
name|editor
operator|=
name|textField
expr_stmt|;
block|}
block|}
return|return
name|editor
return|;
block|}
block|}
end_class

end_unit

