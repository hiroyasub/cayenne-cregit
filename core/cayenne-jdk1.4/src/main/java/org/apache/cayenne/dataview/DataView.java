begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dataview
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Reader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|Format
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Locale
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|BooleanUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|StringUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|Validate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|lang
operator|.
name|math
operator|.
name|NumberUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jdom
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jdom
operator|.
name|Element
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jdom
operator|.
name|JDOMException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|jdom
operator|.
name|input
operator|.
name|SAXBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|DataObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|EntityResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjRelationship
import|;
end_import

begin_comment
comment|/**  * A root of the view configuration hierarchy. Contains a number of ObjEntityViews.  *   * @since 1.1  * @author Andriy Shapochka  */
end_comment

begin_class
specifier|public
class|class
name|DataView
block|{
specifier|private
name|Locale
name|locale
init|=
name|Locale
operator|.
name|US
decl_stmt|;
comment|//Data type definitions
specifier|private
name|DataTypeSpec
name|dataTypeSpec
init|=
operator|new
name|DataTypeSpec
argument_list|()
decl_stmt|;
comment|//Format definitions
specifier|private
name|FormatFactory
name|formatFactory
init|=
operator|new
name|FormatFactory
argument_list|()
decl_stmt|;
comment|//ObjEntity lookup
specifier|private
name|EntityResolver
name|entityResolver
decl_stmt|;
specifier|private
name|Map
name|objEntityViews
init|=
operator|new
name|TreeMap
argument_list|()
decl_stmt|;
specifier|private
name|Set
name|lookupEntityViewFields
decl_stmt|;
specifier|private
name|LookupCache
name|lookupCache
init|=
operator|new
name|LookupCache
argument_list|()
decl_stmt|;
specifier|private
name|EventDispatcher
name|fieldValueChangeDispatcher
decl_stmt|;
comment|//used internally to resolve field lookup dependencies
specifier|private
name|Map
name|lookupReferenceTable
decl_stmt|;
specifier|public
name|DataView
parameter_list|()
block|{
block|}
specifier|public
name|EntityResolver
name|getEntityResolver
parameter_list|()
block|{
return|return
name|entityResolver
return|;
block|}
specifier|public
name|void
name|setEntityResolver
parameter_list|(
name|EntityResolver
name|entityResolver
parameter_list|)
block|{
name|Validate
operator|.
name|notNull
argument_list|(
name|entityResolver
argument_list|)
expr_stmt|;
name|this
operator|.
name|entityResolver
operator|=
name|entityResolver
expr_stmt|;
block|}
specifier|public
name|void
name|load
parameter_list|(
name|File
index|[]
name|xmlSources
parameter_list|)
throws|throws
name|IOException
block|{
name|Validate
operator|.
name|noNullElements
argument_list|(
name|xmlSources
argument_list|)
expr_stmt|;
name|SAXBuilder
name|builder
init|=
operator|new
name|SAXBuilder
argument_list|()
decl_stmt|;
name|Document
index|[]
name|documents
init|=
operator|new
name|Document
index|[
name|xmlSources
operator|.
name|length
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|xmlSources
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
try|try
block|{
name|documents
index|[
name|i
index|]
operator|=
name|builder
operator|.
name|build
argument_list|(
name|xmlSources
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JDOMException
name|ex
parameter_list|)
block|{
name|ex
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
name|load
argument_list|(
name|documents
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|load
parameter_list|(
name|URL
index|[]
name|xmlSources
parameter_list|)
throws|throws
name|IOException
block|{
name|Validate
operator|.
name|noNullElements
argument_list|(
name|xmlSources
argument_list|)
expr_stmt|;
name|SAXBuilder
name|builder
init|=
operator|new
name|SAXBuilder
argument_list|()
decl_stmt|;
name|Document
index|[]
name|documents
init|=
operator|new
name|Document
index|[
name|xmlSources
operator|.
name|length
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|xmlSources
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
try|try
block|{
name|documents
index|[
name|i
index|]
operator|=
name|builder
operator|.
name|build
argument_list|(
name|xmlSources
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JDOMException
name|ex
parameter_list|)
block|{
name|ex
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
name|load
argument_list|(
name|documents
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|load
parameter_list|(
name|Reader
index|[]
name|xmlSources
parameter_list|)
throws|throws
name|IOException
block|{
name|Validate
operator|.
name|noNullElements
argument_list|(
name|xmlSources
argument_list|)
expr_stmt|;
name|SAXBuilder
name|builder
init|=
operator|new
name|SAXBuilder
argument_list|()
decl_stmt|;
name|Document
index|[]
name|documents
init|=
operator|new
name|Document
index|[
name|xmlSources
operator|.
name|length
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|xmlSources
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
try|try
block|{
name|documents
index|[
name|i
index|]
operator|=
name|builder
operator|.
name|build
argument_list|(
name|xmlSources
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JDOMException
name|ex
parameter_list|)
block|{
name|ex
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
name|load
argument_list|(
name|documents
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|load
parameter_list|(
name|InputStream
index|[]
name|xmlSources
parameter_list|)
throws|throws
name|IOException
block|{
name|Validate
operator|.
name|noNullElements
argument_list|(
name|xmlSources
argument_list|)
expr_stmt|;
name|SAXBuilder
name|builder
init|=
operator|new
name|SAXBuilder
argument_list|()
decl_stmt|;
name|Document
index|[]
name|documents
init|=
operator|new
name|Document
index|[
name|xmlSources
operator|.
name|length
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|xmlSources
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
try|try
block|{
name|documents
index|[
name|i
index|]
operator|=
name|builder
operator|.
name|build
argument_list|(
name|xmlSources
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|JDOMException
name|ex
parameter_list|)
block|{
name|ex
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
name|load
argument_list|(
name|documents
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|load
parameter_list|(
name|Document
index|[]
name|views
parameter_list|)
block|{
name|Validate
operator|.
name|noNullElements
argument_list|(
name|views
argument_list|)
expr_stmt|;
name|lookupReferenceTable
operator|=
operator|new
name|HashMap
argument_list|()
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|views
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|Element
name|root
init|=
name|views
index|[
name|i
index|]
operator|.
name|getRootElement
argument_list|()
decl_stmt|;
name|List
name|entityViews
init|=
name|root
operator|.
name|getChildren
argument_list|(
literal|"obj-entity-view"
argument_list|)
decl_stmt|;
for|for
control|(
name|Iterator
name|j
init|=
name|entityViews
operator|.
name|iterator
argument_list|()
init|;
name|j
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Element
name|entityViewElement
init|=
operator|(
name|Element
operator|)
name|j
operator|.
name|next
argument_list|()
decl_stmt|;
name|loadEntityView
argument_list|(
name|entityViewElement
argument_list|)
expr_stmt|;
block|}
block|}
name|resolveLookupReferences
argument_list|()
expr_stmt|;
name|lookupReferenceTable
operator|=
literal|null
expr_stmt|;
block|}
specifier|private
name|void
name|resolveLookupReferences
parameter_list|()
block|{
name|lookupEntityViewFields
operator|=
operator|new
name|HashSet
argument_list|()
expr_stmt|;
for|for
control|(
name|Iterator
name|i
init|=
name|lookupReferenceTable
operator|.
name|entrySet
argument_list|()
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Map
operator|.
name|Entry
name|entry
init|=
operator|(
name|Map
operator|.
name|Entry
operator|)
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
name|ObjEntityViewField
name|field
init|=
operator|(
name|ObjEntityViewField
operator|)
name|entry
operator|.
name|getKey
argument_list|()
decl_stmt|;
name|String
index|[]
name|lookupDescriptor
init|=
operator|(
name|String
index|[]
operator|)
name|entry
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|ObjEntityView
name|lookupEntityView
init|=
name|getObjEntityView
argument_list|(
name|lookupDescriptor
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|ObjEntityViewField
name|lookupField
init|=
name|lookupEntityView
operator|.
name|getField
argument_list|(
name|lookupDescriptor
index|[
literal|1
index|]
argument_list|)
decl_stmt|;
name|field
operator|.
name|setLookupField
argument_list|(
name|lookupField
argument_list|)
expr_stmt|;
name|lookupEntityViewFields
operator|.
name|add
argument_list|(
name|lookupField
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|loadEntityView
parameter_list|(
name|Element
name|element
parameter_list|)
block|{
name|String
name|name
init|=
name|element
operator|.
name|getAttributeValue
argument_list|(
literal|"name"
argument_list|)
decl_stmt|;
name|Validate
operator|.
name|isTrue
argument_list|(
name|name
operator|!=
literal|null
operator|&&
operator|!
name|objEntityViews
operator|.
name|containsKey
argument_list|(
name|name
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|objEntityName
init|=
name|element
operator|.
name|getAttributeValue
argument_list|(
literal|"obj-entity-name"
argument_list|)
decl_stmt|;
name|Validate
operator|.
name|notNull
argument_list|(
name|objEntityName
argument_list|)
expr_stmt|;
name|ObjEntity
name|objEntity
init|=
name|entityResolver
operator|.
name|getObjEntity
argument_list|(
name|objEntityName
argument_list|)
decl_stmt|;
name|ObjEntityView
name|entityView
init|=
operator|new
name|ObjEntityView
argument_list|()
decl_stmt|;
name|entityView
operator|.
name|setName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|entityView
operator|.
name|setObjEntity
argument_list|(
name|objEntity
argument_list|)
expr_stmt|;
name|objEntityViews
operator|.
name|put
argument_list|(
name|name
argument_list|,
name|entityView
argument_list|)
expr_stmt|;
name|entityView
operator|.
name|setOwner
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|List
name|fields
init|=
name|element
operator|.
name|getChildren
argument_list|(
literal|"field"
argument_list|)
decl_stmt|;
for|for
control|(
name|Iterator
name|i
init|=
name|fields
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Element
name|fieldElement
init|=
operator|(
name|Element
operator|)
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
name|loadField
argument_list|(
name|entityView
argument_list|,
name|fieldElement
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|loadField
parameter_list|(
name|ObjEntityView
name|entityView
parameter_list|,
name|Element
name|element
parameter_list|)
block|{
name|String
name|name
init|=
name|element
operator|.
name|getAttributeValue
argument_list|(
literal|"name"
argument_list|)
decl_stmt|;
name|ObjEntityViewField
name|field
init|=
operator|new
name|ObjEntityViewField
argument_list|()
decl_stmt|;
name|field
operator|.
name|setName
argument_list|(
name|name
argument_list|)
expr_stmt|;
name|String
name|prefIndex
init|=
name|element
operator|.
name|getAttributeValue
argument_list|(
literal|"pref-index"
argument_list|)
decl_stmt|;
name|field
operator|.
name|setPreferredIndex
argument_list|(
name|NumberUtils
operator|.
name|toInt
argument_list|(
name|prefIndex
argument_list|,
operator|-
literal|1
argument_list|)
argument_list|)
expr_stmt|;
name|entityView
operator|.
name|insertField
argument_list|(
name|field
argument_list|)
expr_stmt|;
name|String
name|calcType
init|=
name|element
operator|.
name|getAttributeValue
argument_list|(
literal|"calc-type"
argument_list|)
decl_stmt|;
name|Validate
operator|.
name|notNull
argument_list|(
name|calcType
argument_list|)
expr_stmt|;
name|CalcTypeEnum
name|fieldCalcType
init|=
name|CalcTypeEnum
operator|.
name|getEnum
argument_list|(
name|calcType
argument_list|)
decl_stmt|;
name|Validate
operator|.
name|isTrue
argument_list|(
name|CalcTypeEnum
operator|.
name|NO_CALC_TYPE
operator|.
name|equals
argument_list|(
name|fieldCalcType
argument_list|)
operator|||
name|CalcTypeEnum
operator|.
name|LOOKUP_TYPE
operator|.
name|equals
argument_list|(
name|fieldCalcType
argument_list|)
argument_list|,
literal|"Calc Type not supported yet: "
argument_list|,
name|fieldCalcType
argument_list|)
expr_stmt|;
name|field
operator|.
name|setCalcType
argument_list|(
name|fieldCalcType
argument_list|)
expr_stmt|;
name|ObjEntity
name|objEntity
init|=
name|entityView
operator|.
name|getObjEntity
argument_list|()
decl_stmt|;
if|if
condition|(
name|CalcTypeEnum
operator|.
name|NO_CALC_TYPE
operator|.
name|equals
argument_list|(
name|fieldCalcType
argument_list|)
condition|)
block|{
name|String
name|objAttributeName
init|=
name|element
operator|.
name|getAttributeValue
argument_list|(
literal|"obj-attribute-name"
argument_list|)
decl_stmt|;
name|Validate
operator|.
name|notNull
argument_list|(
name|objAttributeName
argument_list|)
expr_stmt|;
name|ObjAttribute
name|objAttribute
init|=
operator|(
name|ObjAttribute
operator|)
name|objEntity
operator|.
name|getAttribute
argument_list|(
name|objAttributeName
argument_list|)
decl_stmt|;
name|field
operator|.
name|setObjAttribute
argument_list|(
name|objAttribute
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|CalcTypeEnum
operator|.
name|LOOKUP_TYPE
operator|.
name|equals
argument_list|(
name|fieldCalcType
argument_list|)
condition|)
block|{
name|String
name|objRelationshipName
init|=
name|element
operator|.
name|getAttributeValue
argument_list|(
literal|"obj-relationship-name"
argument_list|)
decl_stmt|;
name|Validate
operator|.
name|notNull
argument_list|(
name|objRelationshipName
argument_list|)
expr_stmt|;
name|ObjRelationship
name|objRelationship
init|=
operator|(
name|ObjRelationship
operator|)
name|objEntity
operator|.
name|getRelationship
argument_list|(
name|objRelationshipName
argument_list|)
decl_stmt|;
name|field
operator|.
name|setObjRelationship
argument_list|(
name|objRelationship
argument_list|)
expr_stmt|;
name|Element
name|lookupElement
init|=
name|element
operator|.
name|getChild
argument_list|(
literal|"lookup"
argument_list|)
decl_stmt|;
name|Validate
operator|.
name|notNull
argument_list|(
name|lookupElement
argument_list|)
expr_stmt|;
name|String
name|lookupEntityView
init|=
name|lookupElement
operator|.
name|getAttributeValue
argument_list|(
literal|"obj-entity-view-name"
argument_list|)
decl_stmt|;
name|Validate
operator|.
name|notNull
argument_list|(
name|lookupEntityView
argument_list|)
expr_stmt|;
name|String
name|lookupEntityField
init|=
name|lookupElement
operator|.
name|getAttributeValue
argument_list|(
literal|"field-name"
argument_list|)
decl_stmt|;
name|Validate
operator|.
name|notNull
argument_list|(
name|lookupEntityField
argument_list|)
expr_stmt|;
name|String
index|[]
name|lookupDescriptor
init|=
operator|new
name|String
index|[]
block|{
name|lookupEntityView
block|,
name|lookupEntityField
block|}
decl_stmt|;
name|lookupReferenceTable
operator|.
name|put
argument_list|(
name|field
argument_list|,
name|lookupDescriptor
argument_list|)
expr_stmt|;
block|}
name|String
name|dataType
init|=
name|element
operator|.
name|getAttributeValue
argument_list|(
literal|"data-type"
argument_list|)
decl_stmt|;
name|Validate
operator|.
name|notNull
argument_list|(
name|dataType
argument_list|)
expr_stmt|;
name|field
operator|.
name|setDataType
argument_list|(
name|dataTypeSpec
operator|.
name|getDataType
argument_list|(
name|dataType
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|editable
init|=
name|element
operator|.
name|getAttributeValue
argument_list|(
literal|"editable"
argument_list|)
decl_stmt|;
name|field
operator|.
name|setEditable
argument_list|(
name|BooleanUtils
operator|.
name|toBoolean
argument_list|(
name|editable
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|visible
init|=
name|element
operator|.
name|getAttributeValue
argument_list|(
literal|"visible"
argument_list|)
decl_stmt|;
name|field
operator|.
name|setVisible
argument_list|(
name|BooleanUtils
operator|.
name|toBoolean
argument_list|(
name|visible
argument_list|)
argument_list|)
expr_stmt|;
name|Element
name|captionElement
init|=
name|element
operator|.
name|getChild
argument_list|(
literal|"caption"
argument_list|)
decl_stmt|;
if|if
condition|(
name|captionElement
operator|!=
literal|null
condition|)
name|field
operator|.
name|setCaption
argument_list|(
name|StringUtils
operator|.
name|stripToEmpty
argument_list|(
name|captionElement
operator|.
name|getText
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|Element
name|editFormatElement
init|=
name|element
operator|.
name|getChild
argument_list|(
literal|"edit-format"
argument_list|)
decl_stmt|;
if|if
condition|(
name|editFormatElement
operator|!=
literal|null
condition|)
block|{
name|String
name|formatClassName
init|=
name|editFormatElement
operator|.
name|getAttributeValue
argument_list|(
literal|"class"
argument_list|)
decl_stmt|;
name|Validate
operator|.
name|notNull
argument_list|(
name|formatClassName
argument_list|)
expr_stmt|;
name|Class
name|formatClass
decl_stmt|;
try|try
block|{
name|formatClass
operator|=
name|Class
operator|.
name|forName
argument_list|(
name|formatClassName
argument_list|)
expr_stmt|;
name|Map
name|parameters
init|=
name|DataView
operator|.
name|childrenToMap
argument_list|(
name|editFormatElement
argument_list|)
decl_stmt|;
name|Format
name|format
init|=
name|formatFactory
operator|.
name|createFormat
argument_list|(
name|formatClass
argument_list|,
name|locale
argument_list|,
name|parameters
argument_list|)
decl_stmt|;
name|field
operator|.
name|setEditFormat
argument_list|(
name|format
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ClassNotFoundException
name|ex
parameter_list|)
block|{
block|}
block|}
name|Element
name|displayFormatElement
init|=
name|element
operator|.
name|getChild
argument_list|(
literal|"display-format"
argument_list|)
decl_stmt|;
if|if
condition|(
name|displayFormatElement
operator|!=
literal|null
condition|)
block|{
name|String
name|formatClassName
init|=
name|displayFormatElement
operator|.
name|getAttributeValue
argument_list|(
literal|"class"
argument_list|)
decl_stmt|;
name|Validate
operator|.
name|notNull
argument_list|(
name|formatClassName
argument_list|)
expr_stmt|;
name|Class
name|formatClass
decl_stmt|;
try|try
block|{
name|formatClass
operator|=
name|Class
operator|.
name|forName
argument_list|(
name|formatClassName
argument_list|)
expr_stmt|;
name|Map
name|parameters
init|=
name|DataView
operator|.
name|childrenToMap
argument_list|(
name|displayFormatElement
argument_list|)
decl_stmt|;
name|Format
name|format
init|=
name|formatFactory
operator|.
name|createFormat
argument_list|(
name|formatClass
argument_list|,
name|locale
argument_list|,
name|parameters
argument_list|)
decl_stmt|;
name|field
operator|.
name|setDisplayFormat
argument_list|(
name|format
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ClassNotFoundException
name|ex
parameter_list|)
block|{
block|}
block|}
name|Element
name|defaultValueElement
init|=
name|element
operator|.
name|getChild
argument_list|(
literal|"default-value"
argument_list|)
decl_stmt|;
if|if
condition|(
name|defaultValueElement
operator|!=
literal|null
condition|)
block|{
name|String
name|defaultValueStr
init|=
name|StringUtils
operator|.
name|stripToEmpty
argument_list|(
name|defaultValueElement
operator|.
name|getText
argument_list|()
argument_list|)
decl_stmt|;
name|Object
name|defaultValue
init|=
name|dataTypeSpec
operator|.
name|create
argument_list|(
name|field
operator|.
name|getDataType
argument_list|()
argument_list|,
name|defaultValueStr
argument_list|)
decl_stmt|;
name|field
operator|.
name|setDefaultValue
argument_list|(
name|defaultValue
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|Set
name|getObjEntityViewNames
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|unmodifiableSet
argument_list|(
name|objEntityViews
operator|.
name|keySet
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|Collection
name|getObjEntityViews
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|unmodifiableCollection
argument_list|(
name|objEntityViews
operator|.
name|values
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|ObjEntityView
name|getObjEntityView
parameter_list|(
name|String
name|viewName
parameter_list|)
block|{
return|return
operator|(
name|ObjEntityView
operator|)
name|objEntityViews
operator|.
name|get
argument_list|(
name|viewName
argument_list|)
return|;
block|}
specifier|public
name|LookupCache
name|getLookupCache
parameter_list|()
block|{
return|return
name|lookupCache
return|;
block|}
specifier|public
name|void
name|setLookupCache
parameter_list|(
name|LookupCache
name|lookupCache
parameter_list|)
block|{
name|Validate
operator|.
name|notNull
argument_list|(
name|lookupCache
argument_list|)
expr_stmt|;
name|this
operator|.
name|lookupCache
operator|=
name|lookupCache
expr_stmt|;
block|}
specifier|public
name|Set
name|getLookupObjEntityViewFields
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|unmodifiableSet
argument_list|(
name|lookupEntityViewFields
argument_list|)
return|;
block|}
specifier|public
name|Locale
name|getLocale
parameter_list|()
block|{
return|return
name|locale
return|;
block|}
specifier|public
name|void
name|setLocale
parameter_list|(
name|Locale
name|locale
parameter_list|)
block|{
name|this
operator|.
name|locale
operator|=
name|locale
expr_stmt|;
block|}
specifier|public
name|DataTypeSpec
name|getDataTypeSpec
parameter_list|()
block|{
return|return
name|dataTypeSpec
return|;
block|}
specifier|public
name|void
name|setDataTypeSpec
parameter_list|(
name|DataTypeSpec
name|dataTypeSpec
parameter_list|)
block|{
name|this
operator|.
name|dataTypeSpec
operator|=
name|dataTypeSpec
expr_stmt|;
block|}
specifier|public
name|FormatFactory
name|getFormatFactory
parameter_list|()
block|{
return|return
name|formatFactory
return|;
block|}
specifier|public
name|void
name|setFormatFactory
parameter_list|(
name|FormatFactory
name|formatFactory
parameter_list|)
block|{
name|this
operator|.
name|formatFactory
operator|=
name|formatFactory
expr_stmt|;
block|}
specifier|private
specifier|static
name|Map
name|childrenToMap
parameter_list|(
name|Element
name|element
parameter_list|)
block|{
name|List
name|children
init|=
name|element
operator|.
name|getChildren
argument_list|()
decl_stmt|;
if|if
condition|(
name|children
operator|.
name|isEmpty
argument_list|()
condition|)
return|return
name|Collections
operator|.
name|EMPTY_MAP
return|;
else|else
block|{
name|Map
name|map
init|=
operator|new
name|HashMap
argument_list|(
name|children
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|Iterator
name|i
init|=
name|children
operator|.
name|iterator
argument_list|()
init|;
name|i
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Element
name|child
init|=
operator|(
name|Element
operator|)
name|i
operator|.
name|next
argument_list|()
decl_stmt|;
name|map
operator|.
name|put
argument_list|(
name|child
operator|.
name|getName
argument_list|()
argument_list|,
name|StringUtils
operator|.
name|stripToNull
argument_list|(
name|child
operator|.
name|getText
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
return|return
name|map
return|;
block|}
block|}
specifier|public
name|void
name|addFieldValueChangeListener
parameter_list|(
name|FieldValueChangeListener
name|listener
parameter_list|)
block|{
name|fieldValueChangeDispatcher
operator|=
name|EventDispatcher
operator|.
name|add
argument_list|(
name|fieldValueChangeDispatcher
argument_list|,
name|listener
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|removeFieldValueChangeListener
parameter_list|(
name|FieldValueChangeListener
name|listener
parameter_list|)
block|{
name|fieldValueChangeDispatcher
operator|=
name|EventDispatcher
operator|.
name|remove
argument_list|(
name|fieldValueChangeDispatcher
argument_list|,
name|listener
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|clearFieldValueChangeListeners
parameter_list|()
block|{
if|if
condition|(
name|fieldValueChangeDispatcher
operator|!=
literal|null
condition|)
block|{
name|fieldValueChangeDispatcher
operator|.
name|clear
argument_list|()
expr_stmt|;
name|fieldValueChangeDispatcher
operator|=
literal|null
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|fireFieldValueChangeEvent
parameter_list|(
name|ObjEntityViewField
name|source
parameter_list|,
name|DataObject
name|modifiedObject
parameter_list|,
name|Object
name|oldValue
parameter_list|,
name|Object
name|newValue
parameter_list|)
block|{
if|if
condition|(
name|fieldValueChangeDispatcher
operator|!=
literal|null
operator|&&
name|source
operator|.
name|getRootOwner
argument_list|()
operator|==
name|this
condition|)
block|{
name|fieldValueChangeDispatcher
operator|.
name|dispatch
argument_list|(
operator|new
name|FieldValueChangeEvent
argument_list|(
name|source
argument_list|,
name|modifiedObject
argument_list|,
name|oldValue
argument_list|,
name|newValue
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

