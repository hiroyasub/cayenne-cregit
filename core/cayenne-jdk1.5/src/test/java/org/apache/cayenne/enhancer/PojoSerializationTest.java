begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|enhancer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ObjectInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ObjectOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|PersistenceState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|Persistent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DataMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|EntityResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|reflect
operator|.
name|PropertyUtils
import|;
end_import

begin_class
specifier|public
class|class
name|PojoSerializationTest
extends|extends
name|TestCase
block|{
specifier|protected
name|ClassLoader
name|loader
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|Collection
argument_list|<
name|String
argument_list|>
name|managedClasses
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|managedClasses
operator|.
name|add
argument_list|(
name|MockSerializablePojo1
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|managedClasses
operator|.
name|add
argument_list|(
name|MockSerializablePojo2
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|Collection
argument_list|<
name|String
argument_list|>
argument_list|>
name|enhancedPropertyMap
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Collection
argument_list|<
name|String
argument_list|>
argument_list|>
argument_list|()
decl_stmt|;
name|Collection
argument_list|<
name|String
argument_list|>
name|c1
init|=
operator|new
name|HashSet
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|c1
operator|.
name|add
argument_list|(
literal|"attribute1"
argument_list|)
expr_stmt|;
name|enhancedPropertyMap
operator|.
name|put
argument_list|(
name|MockSerializablePojo1
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|c1
argument_list|)
expr_stmt|;
name|ObjAttribute
name|a1
init|=
operator|new
name|ObjAttribute
argument_list|(
literal|"attribute1"
argument_list|)
decl_stmt|;
name|ObjEntity
name|e
init|=
operator|new
name|ObjEntity
argument_list|(
literal|"E1"
argument_list|)
decl_stmt|;
name|e
operator|.
name|addAttribute
argument_list|(
name|a1
argument_list|)
expr_stmt|;
name|e
operator|.
name|setClassName
argument_list|(
name|MockSerializablePojo1
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|ObjAttribute
name|a2
init|=
operator|new
name|ObjAttribute
argument_list|(
literal|"attribute1"
argument_list|)
decl_stmt|;
name|ObjEntity
name|e2
init|=
operator|new
name|ObjEntity
argument_list|(
literal|"E2"
argument_list|)
decl_stmt|;
name|e2
operator|.
name|addAttribute
argument_list|(
name|a2
argument_list|)
expr_stmt|;
name|e2
operator|.
name|setClassName
argument_list|(
name|MockSerializablePojo2
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|DataMap
name|map
init|=
operator|new
name|DataMap
argument_list|(
literal|"x"
argument_list|)
decl_stmt|;
name|map
operator|.
name|addObjEntity
argument_list|(
name|e
argument_list|)
expr_stmt|;
name|map
operator|.
name|addObjEntity
argument_list|(
name|e2
argument_list|)
expr_stmt|;
name|EnhancerVisitorFactory
name|factory
init|=
operator|new
name|CayenneEnhancerVisitorFactory
argument_list|(
operator|new
name|EntityResolver
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|map
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|loader
operator|=
operator|new
name|EnhancingClassLoader
argument_list|(
operator|new
name|Enhancer
argument_list|(
name|factory
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testEnhancedToRegular
parameter_list|()
throws|throws
name|Exception
block|{
name|Class
name|enhanced
init|=
name|Class
operator|.
name|forName
argument_list|(
name|MockSerializablePojo1
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
literal|true
argument_list|,
name|loader
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|Persistent
operator|.
name|class
operator|.
name|isAssignableFrom
argument_list|(
name|enhanced
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|enhanced
operator|.
name|getDeclaredField
argument_list|(
literal|"$cay_persistenceState"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchFieldException
name|e
parameter_list|)
block|{
name|fail
argument_list|(
literal|"Enhancer fields are not present"
argument_list|)
expr_stmt|;
block|}
name|Class
name|unenhanced
init|=
name|Class
operator|.
name|forName
argument_list|(
name|CayenneEnhancerVisitorFactoryTest
operator|.
name|C1
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|Persistent
operator|.
name|class
operator|.
name|isAssignableFrom
argument_list|(
name|unenhanced
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|unenhanced
operator|.
name|getDeclaredField
argument_list|(
literal|"$cay_persistenceState"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Enhancer fields are present"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchFieldException
name|e
parameter_list|)
block|{
comment|// expected
block|}
name|Object
name|eo
init|=
name|enhanced
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|PropertyUtils
operator|.
name|setProperty
argument_list|(
name|eo
argument_list|,
literal|"attribute1"
argument_list|,
literal|"XXX"
argument_list|)
expr_stmt|;
name|PropertyUtils
operator|.
name|setProperty
argument_list|(
name|eo
argument_list|,
literal|"persistenceState"
argument_list|,
operator|new
name|Integer
argument_list|(
name|PersistenceState
operator|.
name|MODIFIED
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|eo
operator|instanceof
name|Persistent
argument_list|)
expr_stmt|;
name|ByteArrayOutputStream
name|out
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|ObjectOutputStream
name|oout
init|=
operator|new
name|ObjectOutputStream
argument_list|(
name|out
argument_list|)
decl_stmt|;
name|oout
operator|.
name|writeObject
argument_list|(
name|eo
argument_list|)
expr_stmt|;
name|oout
operator|.
name|close
argument_list|()
expr_stmt|;
name|ByteArrayInputStream
name|in
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|out
operator|.
name|toByteArray
argument_list|()
argument_list|)
decl_stmt|;
name|ObjectInputStream
name|oin
init|=
operator|new
name|ObjectInputStream
argument_list|(
name|in
argument_list|)
decl_stmt|;
name|Object
name|ueo
init|=
name|oin
operator|.
name|readObject
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|ueo
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|ueo
operator|instanceof
name|Persistent
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"XXX"
argument_list|,
name|PropertyUtils
operator|.
name|getProperty
argument_list|(
name|ueo
argument_list|,
literal|"attribute1"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testEnhancedToRegularNoSerialVersionId
parameter_list|()
throws|throws
name|Exception
block|{
name|Class
name|enhanced
init|=
name|Class
operator|.
name|forName
argument_list|(
name|MockSerializablePojo2
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
literal|true
argument_list|,
name|loader
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|Persistent
operator|.
name|class
operator|.
name|isAssignableFrom
argument_list|(
name|enhanced
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|enhanced
operator|.
name|getDeclaredField
argument_list|(
literal|"$cay_persistenceState"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchFieldException
name|e
parameter_list|)
block|{
name|fail
argument_list|(
literal|"Enhancer fields are not present"
argument_list|)
expr_stmt|;
block|}
name|Class
name|unenhanced
init|=
name|Class
operator|.
name|forName
argument_list|(
name|CayenneEnhancerVisitorFactoryTest
operator|.
name|C1
argument_list|)
decl_stmt|;
name|assertFalse
argument_list|(
name|Persistent
operator|.
name|class
operator|.
name|isAssignableFrom
argument_list|(
name|unenhanced
argument_list|)
argument_list|)
expr_stmt|;
try|try
block|{
name|unenhanced
operator|.
name|getDeclaredField
argument_list|(
literal|"$cay_persistenceState"
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Enhancer fields are present"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchFieldException
name|e
parameter_list|)
block|{
comment|// expected
block|}
name|Object
name|eo
init|=
name|enhanced
operator|.
name|newInstance
argument_list|()
decl_stmt|;
name|PropertyUtils
operator|.
name|setProperty
argument_list|(
name|eo
argument_list|,
literal|"attribute1"
argument_list|,
literal|"XXX"
argument_list|)
expr_stmt|;
name|PropertyUtils
operator|.
name|setProperty
argument_list|(
name|eo
argument_list|,
literal|"persistenceState"
argument_list|,
operator|new
name|Integer
argument_list|(
name|PersistenceState
operator|.
name|MODIFIED
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|eo
operator|instanceof
name|Persistent
argument_list|)
expr_stmt|;
name|ByteArrayOutputStream
name|out
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|ObjectOutputStream
name|oout
init|=
operator|new
name|ObjectOutputStream
argument_list|(
name|out
argument_list|)
decl_stmt|;
name|oout
operator|.
name|writeObject
argument_list|(
name|eo
argument_list|)
expr_stmt|;
name|oout
operator|.
name|close
argument_list|()
expr_stmt|;
name|ByteArrayInputStream
name|in
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|out
operator|.
name|toByteArray
argument_list|()
argument_list|)
decl_stmt|;
name|ObjectInputStream
name|oin
init|=
operator|new
name|ObjectInputStream
argument_list|(
name|in
argument_list|)
decl_stmt|;
name|Object
name|ueo
init|=
name|oin
operator|.
name|readObject
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|ueo
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|ueo
operator|instanceof
name|Persistent
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"XXX"
argument_list|,
name|PropertyUtils
operator|.
name|getProperty
argument_list|(
name|ueo
argument_list|,
literal|"attribute1"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

