begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedHashSet
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|CascadeType
import|;
end_import

begin_class
specifier|public
class|class
name|JpaCascade
block|{
specifier|protected
name|Collection
argument_list|<
name|CascadeType
argument_list|>
name|cascades
decl_stmt|;
specifier|public
name|Collection
argument_list|<
name|CascadeType
argument_list|>
name|getCascades
parameter_list|()
block|{
if|if
condition|(
name|cascades
operator|==
literal|null
condition|)
block|{
name|cascades
operator|=
operator|new
name|LinkedHashSet
argument_list|<
name|CascadeType
argument_list|>
argument_list|(
literal|5
argument_list|)
expr_stmt|;
block|}
return|return
name|cascades
return|;
block|}
specifier|public
name|void
name|setCascadeAll
parameter_list|(
name|Object
name|value
parameter_list|)
block|{
name|getCascades
argument_list|()
operator|.
name|add
argument_list|(
name|CascadeType
operator|.
name|ALL
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setCascadeMerge
parameter_list|(
name|Object
name|value
parameter_list|)
block|{
name|getCascades
argument_list|()
operator|.
name|add
argument_list|(
name|CascadeType
operator|.
name|MERGE
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setCascadePersist
parameter_list|(
name|Object
name|value
parameter_list|)
block|{
name|getCascades
argument_list|()
operator|.
name|add
argument_list|(
name|CascadeType
operator|.
name|PERSIST
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setCascadeRefresh
parameter_list|(
name|Object
name|value
parameter_list|)
block|{
name|getCascades
argument_list|()
operator|.
name|add
argument_list|(
name|CascadeType
operator|.
name|REFRESH
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setCascadeRemove
parameter_list|(
name|Object
name|value
parameter_list|)
block|{
name|getCascades
argument_list|()
operator|.
name|add
argument_list|(
name|CascadeType
operator|.
name|REMOVE
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

