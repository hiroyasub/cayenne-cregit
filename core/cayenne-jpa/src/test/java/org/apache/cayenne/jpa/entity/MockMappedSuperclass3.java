begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|entity
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Basic
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|CascadeType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Column
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Embedded
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|EnumType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Enumerated
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|FetchType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|JoinColumn
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|JoinTable
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Lob
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|ManyToMany
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|ManyToOne
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|MapKey
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|MappedSuperclass
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|OneToMany
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|OneToOne
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|OrderBy
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Temporal
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|TemporalType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Transient
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|UniqueConstraint
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Version
import|;
end_import

begin_class
annotation|@
name|MappedSuperclass
specifier|public
class|class
name|MockMappedSuperclass3
block|{
annotation|@
name|Basic
specifier|protected
name|String
name|attribute1
decl_stmt|;
annotation|@
name|Version
specifier|protected
name|int
name|attribute2
decl_stmt|;
annotation|@
name|OneToOne
argument_list|(
name|targetEntity
operator|=
name|MockTargetEntity1
operator|.
name|class
argument_list|,
name|fetch
operator|=
name|FetchType
operator|.
name|LAZY
argument_list|,
name|optional
operator|=
literal|true
argument_list|,
name|mappedBy
operator|=
literal|"mb1"
argument_list|,
name|cascade
operator|=
block|{
name|CascadeType
operator|.
name|REMOVE
block|,
name|CascadeType
operator|.
name|REFRESH
block|}
argument_list|)
specifier|protected
name|int
name|attribute3
decl_stmt|;
annotation|@
name|OneToMany
argument_list|(
name|targetEntity
operator|=
name|MockTargetEntity2
operator|.
name|class
argument_list|,
name|fetch
operator|=
name|FetchType
operator|.
name|LAZY
argument_list|,
name|mappedBy
operator|=
literal|"mb2"
argument_list|,
name|cascade
operator|=
block|{
name|CascadeType
operator|.
name|PERSIST
block|,
name|CascadeType
operator|.
name|MERGE
block|}
argument_list|)
specifier|protected
name|int
name|attribute4
decl_stmt|;
annotation|@
name|ManyToOne
argument_list|(
name|targetEntity
operator|=
name|MockTargetEntity1
operator|.
name|class
argument_list|,
name|fetch
operator|=
name|FetchType
operator|.
name|LAZY
argument_list|,
name|optional
operator|=
literal|true
argument_list|,
name|cascade
operator|=
block|{
name|CascadeType
operator|.
name|PERSIST
block|,
name|CascadeType
operator|.
name|MERGE
block|}
argument_list|)
specifier|protected
name|int
name|attribute5
decl_stmt|;
annotation|@
name|ManyToMany
argument_list|(
name|targetEntity
operator|=
name|MockTargetEntity1
operator|.
name|class
argument_list|,
name|fetch
operator|=
name|FetchType
operator|.
name|LAZY
argument_list|,
name|mappedBy
operator|=
literal|"mb4"
argument_list|,
name|cascade
operator|=
block|{
name|CascadeType
operator|.
name|PERSIST
block|,
name|CascadeType
operator|.
name|MERGE
block|}
argument_list|)
specifier|protected
name|int
name|attribute6
decl_stmt|;
annotation|@
name|Embedded
specifier|protected
name|int
name|attribute7
decl_stmt|;
annotation|@
name|Transient
specifier|protected
name|int
name|attribute8
decl_stmt|;
annotation|@
name|Column
argument_list|(
name|name
operator|=
literal|"column9"
argument_list|)
specifier|protected
name|int
name|attribute9
decl_stmt|;
annotation|@
name|OneToMany
annotation|@
name|JoinColumn
argument_list|(
name|name
operator|=
literal|"join-column-10"
argument_list|,
name|referencedColumnName
operator|=
literal|"x-ref"
argument_list|,
name|unique
operator|=
literal|true
argument_list|,
name|nullable
operator|=
literal|true
argument_list|,
name|insertable
operator|=
literal|true
argument_list|,
name|updatable
operator|=
literal|true
argument_list|,
name|columnDefinition
operator|=
literal|"x-def"
argument_list|,
name|table
operator|=
literal|"jt1"
argument_list|)
specifier|protected
name|int
name|attribute10
decl_stmt|;
annotation|@
name|JoinTable
argument_list|(
name|name
operator|=
literal|"jtable1"
argument_list|,
name|catalog
operator|=
literal|"catalog1"
argument_list|,
name|schema
operator|=
literal|"schema1"
argument_list|,
name|joinColumns
operator|=
block|{
annotation|@
name|JoinColumn
argument_list|(
name|name
operator|=
literal|"join-column1"
argument_list|)
block|,
annotation|@
name|JoinColumn
argument_list|(
name|name
operator|=
literal|"join-column2"
argument_list|)
block|}
argument_list|,
name|inverseJoinColumns
operator|=
block|{
annotation|@
name|JoinColumn
argument_list|(
name|name
operator|=
literal|"ijoin-column1"
argument_list|)
block|,
annotation|@
name|JoinColumn
argument_list|(
name|name
operator|=
literal|"ijoin-column2"
argument_list|)
block|}
argument_list|,
name|uniqueConstraints
operator|=
block|{
annotation|@
name|UniqueConstraint
argument_list|(
name|columnNames
operator|=
block|{
literal|"pk1"
block|}
argument_list|)
block|}
argument_list|)
annotation|@
name|OneToMany
specifier|protected
name|int
name|attribute11
decl_stmt|;
annotation|@
name|Lob
specifier|protected
name|int
name|attribute12
decl_stmt|;
annotation|@
name|Temporal
argument_list|(
name|TemporalType
operator|.
name|DATE
argument_list|)
specifier|protected
name|int
name|attribute13
decl_stmt|;
annotation|@
name|Enumerated
argument_list|(
name|value
operator|=
name|EnumType
operator|.
name|ORDINAL
argument_list|)
specifier|protected
name|int
name|attribute14
decl_stmt|;
annotation|@
name|ManyToMany
annotation|@
name|MapKey
argument_list|(
name|name
operator|=
literal|"mk"
argument_list|)
specifier|protected
name|int
name|attribute15
decl_stmt|;
annotation|@
name|OrderBy
argument_list|(
name|value
operator|=
literal|"x ASC"
argument_list|)
annotation|@
name|ManyToMany
specifier|protected
name|int
name|attribute16
decl_stmt|;
block|}
end_class

end_unit

