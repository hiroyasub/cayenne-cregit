begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|entity
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Column
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|ColumnResult
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Entity
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|EntityListeners
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|EntityResult
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|ExcludeDefaultListeners
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|ExcludeSuperclassListeners
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|FieldResult
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|GeneratedValue
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|GenerationType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Id
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|IdClass
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|NamedNativeQueries
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|NamedNativeQuery
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|NamedQueries
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|NamedQuery
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|PostLoad
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|PostPersist
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|PostRemove
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|PostUpdate
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|PrePersist
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|PreRemove
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|PreUpdate
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|PrimaryKeyJoinColumn
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|QueryHint
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|SecondaryTable
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|SecondaryTables
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|SequenceGenerator
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|SqlResultSetMapping
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|TableGenerator
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Temporal
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|TemporalType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|UniqueConstraint
import|;
end_import

begin_class
annotation|@
name|IdClass
argument_list|(
name|MockIdClass
operator|.
name|class
argument_list|)
annotation|@
name|TableGenerator
argument_list|(
name|name
operator|=
literal|"table-generator"
argument_list|,
name|table
operator|=
literal|"auto_pk_table"
argument_list|,
name|catalog
operator|=
literal|"catalog1"
argument_list|,
name|schema
operator|=
literal|"schema1"
argument_list|,
name|pkColumnName
operator|=
literal|"next_id"
argument_list|,
name|valueColumnName
operator|=
literal|"x"
argument_list|,
name|pkColumnValue
operator|=
literal|"y"
argument_list|,
name|initialValue
operator|=
literal|4
argument_list|,
name|allocationSize
operator|=
literal|20
argument_list|,
name|uniqueConstraints
operator|=
block|{
annotation|@
name|UniqueConstraint
argument_list|(
name|columnNames
operator|=
block|{
literal|"pk1"
block|}
argument_list|)
block|}
argument_list|)
annotation|@
name|Entity
argument_list|(
name|name
operator|=
literal|"MockEntity1"
argument_list|)
annotation|@
name|Table
argument_list|(
name|name
operator|=
literal|"mock_persistent_1"
argument_list|,
name|catalog
operator|=
literal|"catalog1"
argument_list|,
name|schema
operator|=
literal|"schema1"
argument_list|,
name|uniqueConstraints
operator|=
block|{
annotation|@
name|UniqueConstraint
argument_list|(
name|columnNames
operator|=
block|{
literal|"column1"
block|,
literal|"column2"
block|}
argument_list|)
block|,
annotation|@
name|UniqueConstraint
argument_list|(
name|columnNames
operator|=
block|{
literal|"column3"
block|}
argument_list|)
block|}
argument_list|)
annotation|@
name|SecondaryTables
argument_list|(
name|value
operator|=
block|{
annotation|@
name|SecondaryTable
argument_list|(
name|name
operator|=
literal|"secondary1"
argument_list|,
name|catalog
operator|=
literal|"catalog1"
argument_list|,
name|schema
operator|=
literal|"schema1"
argument_list|,
name|pkJoinColumns
operator|=
block|{
annotation|@
name|PrimaryKeyJoinColumn
argument_list|(
name|name
operator|=
literal|"secondary_column1"
argument_list|,
name|referencedColumnName
operator|=
literal|"column1"
argument_list|,
name|columnDefinition
operator|=
literal|"count(1)"
argument_list|)
block|,
annotation|@
name|PrimaryKeyJoinColumn
argument_list|(
name|name
operator|=
literal|"secondary_column2"
argument_list|,
name|referencedColumnName
operator|=
literal|"column2"
argument_list|)
block|}
argument_list|,
name|uniqueConstraints
operator|=
block|{
annotation|@
name|UniqueConstraint
argument_list|(
name|columnNames
operator|=
block|{
literal|"column1"
block|,
literal|"column2"
block|}
argument_list|)
block|}
argument_list|)
block|,
annotation|@
name|SecondaryTable
argument_list|(
name|name
operator|=
literal|"secondary2"
argument_list|)
block|}
argument_list|)
annotation|@
name|SequenceGenerator
argument_list|(
name|name
operator|=
literal|"sg-name"
argument_list|,
name|sequenceName
operator|=
literal|"seq-name"
argument_list|,
name|initialValue
operator|=
literal|5
argument_list|,
name|allocationSize
operator|=
literal|10
argument_list|)
annotation|@
name|NamedQueries
argument_list|(
block|{
annotation|@
name|NamedQuery
argument_list|(
name|name
operator|=
literal|"query1"
argument_list|,
name|query
operator|=
literal|"select x"
argument_list|,
name|hints
operator|=
block|{
annotation|@
name|QueryHint
argument_list|(
name|name
operator|=
literal|"hint1"
argument_list|,
name|value
operator|=
literal|"value1"
argument_list|)
block|,
annotation|@
name|QueryHint
argument_list|(
name|name
operator|=
literal|"hint2"
argument_list|,
name|value
operator|=
literal|"value2"
argument_list|)
block|}
argument_list|)
block|,
annotation|@
name|NamedQuery
argument_list|(
name|name
operator|=
literal|"query2"
argument_list|,
name|query
operator|=
literal|"select y"
argument_list|)
block|}
argument_list|)
annotation|@
name|NamedNativeQueries
argument_list|(
block|{
annotation|@
name|NamedNativeQuery
argument_list|(
name|name
operator|=
literal|"query3"
argument_list|,
name|query
operator|=
literal|"select z"
argument_list|,
name|resultClass
operator|=
name|MockResultClass
operator|.
name|class
argument_list|,
name|resultSetMapping
operator|=
literal|"rs-mapping1"
argument_list|,
name|hints
operator|=
block|{
annotation|@
name|QueryHint
argument_list|(
name|name
operator|=
literal|"hint3"
argument_list|,
name|value
operator|=
literal|"value3"
argument_list|)
block|,
annotation|@
name|QueryHint
argument_list|(
name|name
operator|=
literal|"hint4"
argument_list|,
name|value
operator|=
literal|"value4"
argument_list|)
block|}
argument_list|)
block|,
annotation|@
name|NamedNativeQuery
argument_list|(
name|name
operator|=
literal|"query4"
argument_list|,
name|query
operator|=
literal|"select a"
argument_list|)
block|}
argument_list|)
annotation|@
name|SqlResultSetMapping
argument_list|(
name|name
operator|=
literal|"result-map1"
argument_list|,
name|entities
operator|=
block|{
annotation|@
name|EntityResult
argument_list|(
name|entityClass
operator|=
name|MockEntityX
operator|.
name|class
argument_list|,
name|discriminatorColumn
operator|=
literal|"column1"
argument_list|,
name|fields
operator|=
block|{
annotation|@
name|FieldResult
argument_list|(
name|name
operator|=
literal|"field1"
argument_list|,
name|column
operator|=
literal|"column1"
argument_list|)
block|,
annotation|@
name|FieldResult
argument_list|(
name|name
operator|=
literal|"field2"
argument_list|,
name|column
operator|=
literal|"column2"
argument_list|)
block|}
argument_list|)
block|,
annotation|@
name|EntityResult
argument_list|(
name|entityClass
operator|=
name|MockEntityY
operator|.
name|class
argument_list|,
name|discriminatorColumn
operator|=
literal|"column2"
argument_list|,
name|fields
operator|=
block|{
annotation|@
name|FieldResult
argument_list|(
name|name
operator|=
literal|"field3"
argument_list|,
name|column
operator|=
literal|"column3"
argument_list|)
block|,
annotation|@
name|FieldResult
argument_list|(
name|name
operator|=
literal|"field4"
argument_list|,
name|column
operator|=
literal|"column4"
argument_list|)
block|}
argument_list|)
block|}
argument_list|,
name|columns
operator|=
block|{
annotation|@
name|ColumnResult
argument_list|(
name|name
operator|=
literal|"column-result1"
argument_list|)
block|,
annotation|@
name|ColumnResult
argument_list|(
name|name
operator|=
literal|"column-result2"
argument_list|)
block|}
argument_list|)
annotation|@
name|ExcludeDefaultListeners
annotation|@
name|ExcludeSuperclassListeners
annotation|@
name|EntityListeners
argument_list|(
name|value
operator|=
block|{
name|MockEntityListener1
operator|.
name|class
block|,
name|MockEntityListener2
operator|.
name|class
block|}
argument_list|)
specifier|public
class|class
name|MockEntity1
block|{
annotation|@
name|Id
annotation|@
name|Temporal
argument_list|(
name|TemporalType
operator|.
name|TIME
argument_list|)
annotation|@
name|Column
argument_list|(
name|name
operator|=
literal|"id_column"
argument_list|,
name|unique
operator|=
literal|true
argument_list|,
name|nullable
operator|=
literal|true
argument_list|,
name|insertable
operator|=
literal|true
argument_list|,
name|updatable
operator|=
literal|true
argument_list|,
name|table
operator|=
literal|"id_table"
argument_list|,
name|length
operator|=
literal|3
argument_list|,
name|precision
operator|=
literal|4
argument_list|,
name|scale
operator|=
literal|5
argument_list|)
annotation|@
name|GeneratedValue
argument_list|(
name|strategy
operator|=
name|GenerationType
operator|.
name|SEQUENCE
argument_list|,
name|generator
operator|=
literal|"id-generator"
argument_list|)
specifier|protected
name|int
name|id1
decl_stmt|;
annotation|@
name|PrePersist
specifier|protected
name|void
name|eprePersist
parameter_list|()
block|{
block|}
annotation|@
name|PostPersist
specifier|protected
name|void
name|epostPersist
parameter_list|()
block|{
block|}
annotation|@
name|PreRemove
specifier|protected
name|void
name|epreRemove
parameter_list|()
block|{
block|}
annotation|@
name|PostRemove
specifier|protected
name|void
name|epostRemove
parameter_list|()
block|{
block|}
annotation|@
name|PreUpdate
specifier|protected
name|void
name|epreUpdate
parameter_list|()
block|{
block|}
annotation|@
name|PostUpdate
specifier|protected
name|void
name|epostUpdate
parameter_list|()
block|{
block|}
annotation|@
name|PostLoad
specifier|protected
name|void
name|epostLoad
parameter_list|()
block|{
block|}
block|}
end_class

end_unit

