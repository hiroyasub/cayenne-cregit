begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|cache
operator|.
name|invalidation
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|Persistent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Binder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|ListBuilder
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|Function
import|;
end_import

begin_comment
comment|/**  * @since 4.0  */
end_comment

begin_class
specifier|public
class|class
name|CacheInvalidationModuleExtender
block|{
specifier|private
specifier|final
name|Binder
name|binder
decl_stmt|;
specifier|private
name|ListBuilder
argument_list|<
name|InvalidationHandler
argument_list|>
name|invalidationHandlers
decl_stmt|;
specifier|protected
name|CacheInvalidationModuleExtender
parameter_list|(
name|Binder
name|binder
parameter_list|)
block|{
name|this
operator|.
name|binder
operator|=
name|binder
expr_stmt|;
block|}
specifier|protected
name|CacheInvalidationModuleExtender
name|initAllExtensions
parameter_list|()
block|{
name|contributeInvalidationHandlers
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Disable the default {@link CacheGroupsHandler} that is tied to {@link CacheGroups} and {@link CacheGroup}      * annotations.      */
specifier|public
name|CacheInvalidationModuleExtender
name|noCacheGroupsHandler
parameter_list|()
block|{
comment|// replace CacheGroupsHandler with a dummy no op handler
name|binder
operator|.
name|bind
argument_list|(
name|CacheGroupsHandler
operator|.
name|class
argument_list|)
operator|.
name|toInstance
argument_list|(
operator|new
name|CacheGroupsHandler
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Function
argument_list|<
name|Persistent
argument_list|,
name|Collection
argument_list|<
name|CacheGroupDescriptor
argument_list|>
argument_list|>
name|canHandle
parameter_list|(
name|Class
argument_list|<
name|?
extends|extends
name|Persistent
argument_list|>
name|type
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
block|}
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|CacheInvalidationModuleExtender
name|addHandler
parameter_list|(
name|Class
argument_list|<
name|?
extends|extends
name|InvalidationHandler
argument_list|>
name|handlerType
parameter_list|)
block|{
name|contributeInvalidationHandlers
argument_list|()
operator|.
name|add
argument_list|(
name|handlerType
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|CacheInvalidationModuleExtender
name|addHandler
parameter_list|(
name|InvalidationHandler
name|handlerInstance
parameter_list|)
block|{
name|contributeInvalidationHandlers
argument_list|()
operator|.
name|add
argument_list|(
name|handlerInstance
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|ListBuilder
argument_list|<
name|InvalidationHandler
argument_list|>
name|contributeInvalidationHandlers
parameter_list|()
block|{
if|if
condition|(
name|invalidationHandlers
operator|==
literal|null
condition|)
block|{
name|invalidationHandlers
operator|=
name|binder
operator|.
name|bindList
argument_list|(
name|InvalidationHandler
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
return|return
name|invalidationHandlers
return|;
block|}
block|}
end_class

end_unit

