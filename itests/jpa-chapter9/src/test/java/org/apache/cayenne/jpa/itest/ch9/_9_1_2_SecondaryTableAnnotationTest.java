begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|itest
operator|.
name|ch9
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|itest
operator|.
name|jpa
operator|.
name|EntityManagerCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|itest
operator|.
name|ch9
operator|.
name|entity
operator|.
name|SecondaryTableEntity
import|;
end_import

begin_class
specifier|public
class|class
name|_9_1_2_SecondaryTableAnnotationTest
extends|extends
name|EntityManagerCase
block|{
specifier|public
name|void
name|testPersist
parameter_list|()
throws|throws
name|Exception
block|{
name|getDbHelper
argument_list|()
operator|.
name|deleteAll
argument_list|(
literal|"SecondaryTable"
argument_list|)
expr_stmt|;
name|getDbHelper
argument_list|()
operator|.
name|deleteAll
argument_list|(
literal|"PrimaryTable"
argument_list|)
expr_stmt|;
name|SecondaryTableEntity
name|o1
init|=
operator|new
name|SecondaryTableEntity
argument_list|()
decl_stmt|;
name|o1
operator|.
name|setPrimaryTableProperty
argument_list|(
literal|"p1"
argument_list|)
expr_stmt|;
name|o1
operator|.
name|setSecondaryTableProperty
argument_list|(
literal|"s1"
argument_list|)
expr_stmt|;
name|getEntityManager
argument_list|()
operator|.
name|persist
argument_list|(
name|o1
argument_list|)
expr_stmt|;
name|getEntityManager
argument_list|()
operator|.
name|getTransaction
argument_list|()
operator|.
name|commit
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|o1
operator|.
name|getId
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"p1"
argument_list|,
name|getDbHelper
argument_list|()
operator|.
name|getObject
argument_list|(
literal|"PrimaryTable"
argument_list|,
literal|"primaryTableProperty"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"s1"
argument_list|,
name|getDbHelper
argument_list|()
operator|.
name|getObject
argument_list|(
literal|"SecondaryTable"
argument_list|,
literal|"secondaryTableProperty"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|o1
operator|.
name|getId
argument_list|()
argument_list|,
name|getDbHelper
argument_list|()
operator|.
name|getObject
argument_list|(
literal|"SecondaryTable"
argument_list|,
literal|"id"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

