begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|itest
operator|.
name|cpa
operator|.
name|defaults
operator|.
name|client
operator|.
name|auto
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|PersistentObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ValueHolder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|itest
operator|.
name|cpa
operator|.
name|defaults
operator|.
name|client
operator|.
name|DefaultsTable1
import|;
end_import

begin_comment
comment|/**  * A generated persistent class mapped as "DefaultsTable2" Cayenne entity. It is a good idea to  * avoid changing this class manually, since it will be overwritten next time code is  * regenerated. If you need to make any customizations, put them in a subclass.  */
end_comment

begin_class
specifier|public
class|class
name|_DefaultsTable2
extends|extends
name|PersistentObject
block|{
specifier|public
specifier|static
specifier|final
name|String
name|TO_TABLE1_PROPERTY
init|=
literal|"toTable1"
decl_stmt|;
specifier|protected
name|ValueHolder
name|toTable1
decl_stmt|;
specifier|public
name|DefaultsTable1
name|getToTable1
parameter_list|()
block|{
if|if
condition|(
name|objectContext
operator|!=
literal|null
condition|)
block|{
name|objectContext
operator|.
name|prepareForAccess
argument_list|(
name|this
argument_list|,
literal|"toTable1"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
return|return
operator|(
name|DefaultsTable1
operator|)
name|toTable1
operator|.
name|getValue
argument_list|()
return|;
block|}
specifier|public
name|void
name|setToTable1
parameter_list|(
name|DefaultsTable1
name|toTable1
parameter_list|)
block|{
if|if
condition|(
name|objectContext
operator|!=
literal|null
condition|)
block|{
name|objectContext
operator|.
name|prepareForAccess
argument_list|(
name|this
argument_list|,
literal|"toTable1"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|toTable1
operator|.
name|setValue
argument_list|(
name|toTable1
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

