begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|itest
operator|.
name|jpa
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Properties
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|EntityManager
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|EntityManagerFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Persistence
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|sql
operator|.
name|DataSource
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|transaction
operator|.
name|TransactionSynchronizationRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|itest
operator|.
name|ItestDBUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|itest
operator|.
name|OpenEJBContainer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|openejb
operator|.
name|persistence
operator|.
name|JtaEntityManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|openejb
operator|.
name|persistence
operator|.
name|JtaEntityManagerRegistry
import|;
end_import

begin_class
specifier|public
class|class
name|ItestSetup
block|{
specifier|public
specifier|static
specifier|final
name|String
name|SCHEMA_SCRIPT_URL
init|=
literal|"itest.schema.script"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT_SCHEMA_SCRIPT
init|=
literal|"schema-hsqldb.sql"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|JPA_UNIT_NAME
init|=
literal|"itest.jpa.unit"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|DEFAULT_UNIT_NAME
init|=
literal|"itest"
decl_stmt|;
specifier|private
specifier|static
name|Map
argument_list|<
name|String
argument_list|,
name|ItestSetup
argument_list|>
name|testManagers
decl_stmt|;
specifier|protected
name|EntityManagerFactory
name|sharedFactory
decl_stmt|;
specifier|protected
name|ItestDataSourceManager
name|dataSourceManager
decl_stmt|;
specifier|protected
name|String
name|jpaUnit
decl_stmt|;
specifier|protected
name|ItestDBUtils
name|dbHelper
decl_stmt|;
specifier|protected
name|JtaEntityManagerRegistry
name|openEJBEMRegistry
decl_stmt|;
specifier|private
specifier|static
name|ItestSetup
name|createInstance
parameter_list|(
name|Properties
name|properties
parameter_list|)
block|{
name|String
name|schemaScript
init|=
name|properties
operator|.
name|getProperty
argument_list|(
name|SCHEMA_SCRIPT_URL
argument_list|)
decl_stmt|;
if|if
condition|(
name|schemaScript
operator|==
literal|null
condition|)
block|{
name|schemaScript
operator|=
name|DEFAULT_SCHEMA_SCRIPT
expr_stmt|;
block|}
name|String
name|jpaUnit
init|=
name|properties
operator|.
name|getProperty
argument_list|(
name|JPA_UNIT_NAME
argument_list|)
decl_stmt|;
if|if
condition|(
name|jpaUnit
operator|==
literal|null
condition|)
block|{
name|jpaUnit
operator|=
name|DEFAULT_UNIT_NAME
expr_stmt|;
block|}
return|return
operator|new
name|ItestSetup
argument_list|(
name|schemaScript
argument_list|,
name|jpaUnit
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|ItestSetup
name|getInstance
parameter_list|(
name|String
name|unitName
parameter_list|)
block|{
if|if
condition|(
name|testManagers
operator|==
literal|null
condition|)
block|{
name|testManagers
operator|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|ItestSetup
argument_list|>
argument_list|()
expr_stmt|;
block|}
name|ItestSetup
name|instance
init|=
name|testManagers
operator|.
name|get
argument_list|(
name|unitName
argument_list|)
decl_stmt|;
if|if
condition|(
name|instance
operator|==
literal|null
condition|)
block|{
name|Properties
name|props
init|=
operator|new
name|Properties
argument_list|()
decl_stmt|;
name|props
operator|.
name|put
argument_list|(
name|JPA_UNIT_NAME
argument_list|,
name|unitName
argument_list|)
expr_stmt|;
name|instance
operator|=
name|createInstance
argument_list|(
name|props
argument_list|)
expr_stmt|;
name|testManagers
operator|.
name|put
argument_list|(
name|unitName
argument_list|,
name|instance
argument_list|)
expr_stmt|;
block|}
return|return
name|instance
return|;
block|}
comment|/**      * Returns a shared instance for the default test JPA unit called "itest".      */
specifier|public
specifier|static
name|ItestSetup
name|getInstance
parameter_list|()
block|{
return|return
name|getInstance
argument_list|(
name|DEFAULT_UNIT_NAME
argument_list|)
return|;
block|}
specifier|protected
name|ItestSetup
parameter_list|(
name|String
name|schemaScriptUrl
parameter_list|,
name|String
name|jpaUnit
parameter_list|)
block|{
name|this
operator|.
name|jpaUnit
operator|=
name|jpaUnit
expr_stmt|;
name|this
operator|.
name|dataSourceManager
operator|=
operator|new
name|ItestDataSourceManager
argument_list|(
name|schemaScriptUrl
argument_list|)
expr_stmt|;
name|this
operator|.
name|dbHelper
operator|=
operator|new
name|ItestDBUtils
argument_list|(
name|dataSourceManager
operator|.
name|getDataSource
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|JtaEntityManagerRegistry
name|getOpenEJBEMRegistry
parameter_list|()
block|{
if|if
condition|(
name|openEJBEMRegistry
operator|==
literal|null
condition|)
block|{
name|TransactionSynchronizationRegistry
name|txRegistry
init|=
name|OpenEJBContainer
operator|.
name|getContainer
argument_list|()
operator|.
name|getTxSyncRegistry
argument_list|()
decl_stmt|;
name|openEJBEMRegistry
operator|=
operator|new
name|JtaEntityManagerRegistry
argument_list|(
name|txRegistry
argument_list|)
expr_stmt|;
block|}
return|return
name|openEJBEMRegistry
return|;
block|}
specifier|protected
name|EntityManagerFactory
name|getSharedFactory
parameter_list|()
block|{
if|if
condition|(
name|sharedFactory
operator|==
literal|null
condition|)
block|{
name|sharedFactory
operator|=
name|createEntityManagerFactory
argument_list|()
expr_stmt|;
block|}
return|return
name|sharedFactory
return|;
block|}
specifier|public
name|DataSource
name|getDataSource
parameter_list|()
block|{
return|return
name|dataSourceManager
operator|.
name|getDataSource
argument_list|()
return|;
block|}
specifier|public
name|EntityManager
name|createEntityManager
parameter_list|()
block|{
return|return
name|getSharedFactory
argument_list|()
operator|.
name|createEntityManager
argument_list|()
return|;
block|}
specifier|public
name|EntityManager
name|createContainerManagedEntityManager
parameter_list|()
block|{
return|return
operator|new
name|JtaEntityManager
argument_list|(
name|getOpenEJBEMRegistry
argument_list|()
argument_list|,
name|getSharedFactory
argument_list|()
argument_list|,
operator|new
name|Properties
argument_list|()
argument_list|,
literal|false
argument_list|)
return|;
block|}
specifier|public
name|EntityManagerFactory
name|createEntityManagerFactory
parameter_list|()
block|{
name|Map
name|properties
init|=
operator|new
name|HashMap
argument_list|()
decl_stmt|;
name|properties
operator|.
name|put
argument_list|(
literal|"org.apache.cayenne.jpa.jpaDataSourceFactory"
argument_list|,
name|ItestJpaDataSourceFactory
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|Persistence
operator|.
name|createEntityManagerFactory
argument_list|(
name|jpaUnit
argument_list|,
name|properties
argument_list|)
return|;
block|}
specifier|public
name|ItestDBUtils
name|getDbHelper
parameter_list|()
block|{
return|return
name|dbHelper
return|;
block|}
block|}
end_class

end_unit

