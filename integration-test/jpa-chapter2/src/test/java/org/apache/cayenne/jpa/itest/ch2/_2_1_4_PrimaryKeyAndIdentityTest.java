begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|itest
operator|.
name|ch2
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|PersistenceException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|itest
operator|.
name|jpa
operator|.
name|EntityManagerCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|itest
operator|.
name|ch2
operator|.
name|entity
operator|.
name|EmbeddedIdEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|itest
operator|.
name|ch2
operator|.
name|entity
operator|.
name|FieldPersistenceEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|itest
operator|.
name|ch2
operator|.
name|entity
operator|.
name|IdClassEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|itest
operator|.
name|ch2
operator|.
name|entity
operator|.
name|NoPkEntity
import|;
end_import

begin_class
specifier|public
class|class
name|_2_1_4_PrimaryKeyAndIdentityTest
extends|extends
name|EntityManagerCase
block|{
specifier|public
name|void
name|testNoPkEntity
parameter_list|()
block|{
name|NoPkEntity
name|o1
init|=
operator|new
name|NoPkEntity
argument_list|()
decl_stmt|;
try|try
block|{
name|getEntityManager
argument_list|()
operator|.
name|persist
argument_list|(
name|o1
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|e
parameter_list|)
block|{
return|return;
block|}
try|try
block|{
name|getEntityManager
argument_list|()
operator|.
name|getTransaction
argument_list|()
operator|.
name|commit
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|PersistenceException
name|e
parameter_list|)
block|{
return|return;
block|}
name|fail
argument_list|(
literal|"Must have thrown on an attempt to persist or flush "
operator|+
literal|"an entity without defined id"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSimplePk
parameter_list|()
throws|throws
name|Exception
block|{
name|getDbHelper
argument_list|()
operator|.
name|deleteAll
argument_list|(
literal|"FieldPersistenceEntity"
argument_list|)
expr_stmt|;
name|FieldPersistenceEntity
name|o1
init|=
operator|new
name|FieldPersistenceEntity
argument_list|()
decl_stmt|;
name|getEntityManager
argument_list|()
operator|.
name|persist
argument_list|(
name|o1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|o1
operator|.
name|idField
argument_list|()
argument_list|)
expr_stmt|;
name|getEntityManager
argument_list|()
operator|.
name|getTransaction
argument_list|()
operator|.
name|commit
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|o1
operator|.
name|idField
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|o1
operator|.
name|idField
argument_list|()
argument_list|,
name|getDbHelper
argument_list|()
operator|.
name|getInt
argument_list|(
literal|"FieldPersistenceEntity"
argument_list|,
literal|"id"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// TODO: andrus 8/10/2006 - fails
specifier|public
name|void
name|_testIdClassPk
parameter_list|()
throws|throws
name|Exception
block|{
name|IdClassEntity
name|o1
init|=
operator|new
name|IdClassEntity
argument_list|()
decl_stmt|;
name|o1
operator|.
name|setProperty1
argument_list|(
literal|"p1"
argument_list|)
expr_stmt|;
name|getEntityManager
argument_list|()
operator|.
name|persist
argument_list|(
name|o1
argument_list|)
expr_stmt|;
name|getEntityManager
argument_list|()
operator|.
name|getTransaction
argument_list|()
operator|.
name|commit
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"p1"
argument_list|,
name|getDbHelper
argument_list|()
operator|.
name|getObject
argument_list|(
literal|"IdClassEntity"
argument_list|,
literal|"property1"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|// TODO: andrus 8/10/2006 - fails
specifier|public
name|void
name|_testEmbeddedIdPk
parameter_list|()
throws|throws
name|Exception
block|{
name|EmbeddedIdEntity
name|o1
init|=
operator|new
name|EmbeddedIdEntity
argument_list|()
decl_stmt|;
name|o1
operator|.
name|setProperty1
argument_list|(
literal|"p1"
argument_list|)
expr_stmt|;
name|getEntityManager
argument_list|()
operator|.
name|persist
argument_list|(
name|o1
argument_list|)
expr_stmt|;
name|getEntityManager
argument_list|()
operator|.
name|getTransaction
argument_list|()
operator|.
name|commit
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"p1"
argument_list|,
name|getDbHelper
argument_list|()
operator|.
name|getObject
argument_list|(
literal|"EmbeddedIdEntity"
argument_list|,
literal|"property1"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

