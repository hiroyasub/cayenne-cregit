begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|maven
operator|.
name|plugin
operator|.
name|confluence
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|plugin
operator|.
name|AbstractMojo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|plugin
operator|.
name|MojoExecutionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|plugin
operator|.
name|MojoFailureException
import|;
end_import

begin_comment
comment|/**  * A goal to export Confluence documentation.  *   * @author<a href="mailto:bdudney@apache.org">Bill Dudney</a>  *   * @goal confluence-export  */
end_comment

begin_class
specifier|public
class|class
name|ConfluenceExportMojo
extends|extends
name|AbstractMojo
block|{
comment|/** 	 * The directory to put the exported documentation into 	 *  	 * @parameter expression="${project.build.directory}/${confluence.spaceName}" 	 */
specifier|private
name|String
name|outputDirectory
decl_stmt|;
comment|/** 	 * The velocity template to use - defaults to loading 	 * 'doctemplates/default.vm' from the classpath 	 *  	 * @parameter 	 */
specifier|private
name|String
name|velocityTemplate
decl_stmt|;
comment|/** 	 * The root url to the Confluence instance For example in Cayenne: 	 * http://cwiki.apache.org/confluence/ is the base URL. 	 *  	 * @parameter expression="${confluence.baseUrl}" 	 * @required 	 */
specifier|private
name|URL
name|baseUrl
decl_stmt|;
comment|/** 	 * The name of the confluence space to export 	 *  	 * @parameter expression="${confluence.spaceName}" 	 * @required 	 */
specifier|private
name|String
name|spaceName
decl_stmt|;
comment|/** 	 * The page in the space to start with 	 *  	 * @parameter expression="${confluence.startPage}" 	 * @required 	 */
specifier|private
name|String
name|startPage
decl_stmt|;
comment|/** 	 * The username to log in as - define it on the commandline via the 	 * -Dconfluence.userName=user_name option or set the userName and password 	 * in your ~/.m2/settings.xml file like this; 	 *  	 *<pre> 	 *&lt;profiles&gt; 	 *&lt;profile&gt; 	 *&lt;properties&gt; 	 *&lt;property&gt; 	 *&lt;name&gt;confluence.userName&lt;/name&gt; 	 *&lt;value&gt;user name&lt;/value&gt; 	 *&lt;/property&gt; 	 *&lt;property&gt; 	 *&lt;name&gt;confluence.password&lt;/name&gt; 	 *&lt;value&gt;password&lt;/value&gt; 	 *&lt;/property&gt; 	 *&lt;/properties&gt; 	 *&lt;id&gt;confluence&lt;/id&gt; 	 *&lt;/profile&gt; 	 *&lt;/profiles&gt; 	 *</pre> 	 *  	 * @parameter expression="${confluence.userName}" 	 * @required 	 */
specifier|private
name|String
name|userName
decl_stmt|;
comment|/** 	 * The username to log in as - define it on the commandline via the 	 * -Dconfluence.password=password option 	 *  	 * @parameter expression="${confluence.password}" 	 * @required 	 */
specifier|private
name|String
name|password
decl_stmt|;
comment|/** 	 * Worker method. 	 */
specifier|public
name|void
name|execute
parameter_list|()
throws|throws
name|MojoExecutionException
throws|,
name|MojoFailureException
block|{
name|getLog
argument_list|()
operator|.
name|info
argument_list|(
literal|"Exporting space '"
operator|+
name|spaceName
operator|+
literal|"' to "
operator|+
name|outputDirectory
argument_list|)
expr_stmt|;
try|try
block|{
name|DocGenerator
name|generator
init|=
operator|new
name|DocGenerator
argument_list|(
name|baseUrl
operator|.
name|toString
argument_list|()
argument_list|,
name|spaceName
argument_list|,
name|outputDirectory
argument_list|,
name|startPage
argument_list|,
name|userName
argument_list|,
name|password
argument_list|,
name|velocityTemplate
argument_list|)
decl_stmt|;
name|getLog
argument_list|()
operator|.
name|info
argument_list|(
literal|"Confluence base URL '"
operator|+
name|generator
operator|.
name|getBaseUrl
argument_list|()
operator|+
literal|"'"
argument_list|)
expr_stmt|;
name|generator
operator|.
name|generateDocs
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
throw|throw
operator|new
name|MojoExecutionException
argument_list|(
literal|"Failed to export: "
operator|+
name|spaceName
operator|+
literal|" from: "
operator|+
name|baseUrl
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
specifier|public
name|String
name|getOutputDirectory
parameter_list|()
block|{
return|return
name|outputDirectory
return|;
block|}
specifier|public
name|void
name|setOutputDirectory
parameter_list|(
name|String
name|outputDirectory
parameter_list|)
block|{
name|this
operator|.
name|outputDirectory
operator|=
name|outputDirectory
expr_stmt|;
block|}
specifier|public
name|String
name|getVelocityTemplate
parameter_list|()
block|{
return|return
name|velocityTemplate
return|;
block|}
specifier|public
name|void
name|setVelocityTemplate
parameter_list|(
name|String
name|velocityTemplate
parameter_list|)
block|{
name|this
operator|.
name|velocityTemplate
operator|=
name|velocityTemplate
expr_stmt|;
block|}
specifier|public
name|String
name|getPassword
parameter_list|()
block|{
return|return
name|password
return|;
block|}
specifier|public
name|void
name|setPassword
parameter_list|(
name|String
name|password
parameter_list|)
block|{
name|this
operator|.
name|password
operator|=
name|password
expr_stmt|;
block|}
specifier|public
name|URL
name|getBaseUrl
parameter_list|()
block|{
return|return
name|baseUrl
return|;
block|}
specifier|public
name|void
name|setBaseUrl
parameter_list|(
name|URL
name|rootURL
parameter_list|)
block|{
name|this
operator|.
name|baseUrl
operator|=
name|rootURL
expr_stmt|;
block|}
specifier|public
name|String
name|getSpaceName
parameter_list|()
block|{
return|return
name|spaceName
return|;
block|}
specifier|public
name|void
name|setSpaceName
parameter_list|(
name|String
name|spaceName
parameter_list|)
block|{
name|this
operator|.
name|spaceName
operator|=
name|spaceName
expr_stmt|;
block|}
specifier|public
name|String
name|getStartPage
parameter_list|()
block|{
return|return
name|startPage
return|;
block|}
specifier|public
name|void
name|setStartPage
parameter_list|(
name|String
name|startPage
parameter_list|)
block|{
name|this
operator|.
name|startPage
operator|=
name|startPage
expr_stmt|;
block|}
specifier|public
name|String
name|getUserName
parameter_list|()
block|{
return|return
name|userName
return|;
block|}
specifier|public
name|void
name|setUserName
parameter_list|(
name|String
name|userName
parameter_list|)
block|{
name|this
operator|.
name|userName
operator|=
name|userName
expr_stmt|;
block|}
block|}
end_class

end_unit

