begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|maven
operator|.
name|plugin
operator|.
name|date
package|;
end_package

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|Format
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|SimpleDateFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|plugin
operator|.
name|AbstractMojo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|plugin
operator|.
name|MojoExecutionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|plugin
operator|.
name|MojoFailureException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|maven
operator|.
name|project
operator|.
name|MavenProject
import|;
end_import

begin_comment
comment|/**  * Exports the "project.build.date" and "project.build.time" properties to the  * environment.  *   * @goal date  * @phase initialize  * @requiresProject  */
end_comment

begin_class
specifier|public
class|class
name|DateMojo
extends|extends
name|AbstractMojo
block|{
specifier|static
specifier|final
name|String
name|BUILD_DATE_PROPERTY
init|=
literal|"project.build.date"
decl_stmt|;
specifier|static
specifier|final
name|String
name|BUILD_TIME_PROPERTY
init|=
literal|"project.build.time"
decl_stmt|;
specifier|static
specifier|final
name|String
name|BUILD_YEAR_PROPERTY
init|=
literal|"project.build.year"
decl_stmt|;
specifier|static
specifier|final
name|String
name|BUILD_DATE_FORMAT
init|=
literal|"MMM dd yyyy"
decl_stmt|;
specifier|static
specifier|final
name|String
name|BUILD_TIME_FORMAT
init|=
literal|"HH:mm:ss"
decl_stmt|;
comment|/**      * POM      *       * @parameter expression="${project}"      * @readonly      * @required      */
specifier|protected
name|MavenProject
name|project
decl_stmt|;
specifier|public
name|void
name|execute
parameter_list|()
throws|throws
name|MojoExecutionException
throws|,
name|MojoFailureException
block|{
name|Format
name|dateFormat
init|=
operator|new
name|SimpleDateFormat
argument_list|(
name|BUILD_DATE_FORMAT
argument_list|)
decl_stmt|;
name|Format
name|timeFormat
init|=
operator|new
name|SimpleDateFormat
argument_list|(
name|BUILD_TIME_FORMAT
argument_list|)
decl_stmt|;
comment|// convert to GMT
name|Calendar
name|calendar
init|=
name|Calendar
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|int
name|offset
init|=
name|calendar
operator|.
name|get
argument_list|(
name|Calendar
operator|.
name|ZONE_OFFSET
argument_list|)
decl_stmt|;
name|calendar
operator|.
name|add
argument_list|(
name|Calendar
operator|.
name|MILLISECOND
argument_list|,
operator|-
name|offset
argument_list|)
expr_stmt|;
name|Date
name|gmtTime
init|=
name|calendar
operator|.
name|getTime
argument_list|()
decl_stmt|;
name|project
operator|.
name|getProperties
argument_list|()
operator|.
name|put
argument_list|(
name|BUILD_DATE_PROPERTY
argument_list|,
name|dateFormat
operator|.
name|format
argument_list|(
name|gmtTime
argument_list|)
argument_list|)
expr_stmt|;
name|project
operator|.
name|getProperties
argument_list|()
operator|.
name|put
argument_list|(
name|BUILD_TIME_PROPERTY
argument_list|,
name|timeFormat
operator|.
name|format
argument_list|(
name|gmtTime
argument_list|)
argument_list|)
expr_stmt|;
name|project
operator|.
name|getProperties
argument_list|()
operator|.
name|put
argument_list|(
name|BUILD_YEAR_PROPERTY
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|calendar
operator|.
name|get
argument_list|(
name|Calendar
operator|.
name|YEAR
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

