begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * https://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|tutorial
package|;
end_package

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|http2
operator|.
name|HTTP2Cipher
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|http2
operator|.
name|server
operator|.
name|HTTP2ServerConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|security
operator|.
name|ConstraintMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|security
operator|.
name|ConstraintSecurityHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|security
operator|.
name|HashLoginService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|security
operator|.
name|SecurityHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|security
operator|.
name|UserStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|security
operator|.
name|authentication
operator|.
name|BasicAuthenticator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|HttpConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|SecureRequestCustomizer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|Server
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|ServerConnector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|server
operator|.
name|SslConnectionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|servlet
operator|.
name|ServletContextHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|servlet
operator|.
name|ServletHolder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|util
operator|.
name|security
operator|.
name|Constraint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|util
operator|.
name|security
operator|.
name|Credential
import|;
end_import

begin_import
import|import
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|util
operator|.
name|ssl
operator|.
name|SslContextFactory
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|eclipse
operator|.
name|jetty
operator|.
name|util
operator|.
name|resource
operator|.
name|Resource
operator|.
name|newClassPathResource
import|;
end_import

begin_comment
comment|/**  * Based on the example org.eclipse.jetty.embedded.Http2Server included in the jetty-project distribution.  *<p>  * This server works without ALPN and could handle only HTTP/2 protocol.  */
end_comment

begin_class
specifier|public
class|class
name|Http2Server
block|{
specifier|public
specifier|static
name|void
name|main
parameter_list|(
name|String
modifier|...
name|args
parameter_list|)
throws|throws
name|Exception
block|{
comment|// Setting Protostuff properties
name|System
operator|.
name|setProperty
argument_list|(
literal|"protostuff.runtime.collection_schema_on_repeated_fields"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"protostuff.runtime.morph_collection_interfaces"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"protostuff.runtime.morph_map_interfaces"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"protostuff.runtime.pojo_schema_on_collection_fields"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|System
operator|.
name|setProperty
argument_list|(
literal|"protostuff.runtime.pojo_schema_on_map_fields"
argument_list|,
literal|"true"
argument_list|)
expr_stmt|;
name|Server
name|server
init|=
operator|new
name|Server
argument_list|()
decl_stmt|;
name|ServletContextHandler
name|context
init|=
operator|new
name|ServletContextHandler
argument_list|(
name|server
argument_list|,
literal|"/"
argument_list|,
name|ServletContextHandler
operator|.
name|SESSIONS
argument_list|)
decl_stmt|;
name|context
operator|.
name|addServlet
argument_list|(
operator|new
name|ServletHolder
argument_list|(
literal|"cayenne-project"
argument_list|,
operator|new
name|Http2ROPServlet
argument_list|()
argument_list|)
argument_list|,
literal|"/"
argument_list|)
expr_stmt|;
name|context
operator|.
name|setSecurityHandler
argument_list|(
name|basicAuth
argument_list|(
literal|"cayenne-user"
argument_list|,
literal|"secret"
argument_list|,
literal|"Cayenne Realm"
argument_list|)
argument_list|)
expr_stmt|;
name|server
operator|.
name|setHandler
argument_list|(
name|context
argument_list|)
expr_stmt|;
comment|// HTTPS Configuration
name|HttpConfiguration
name|httpsConfig
init|=
operator|new
name|HttpConfiguration
argument_list|()
decl_stmt|;
name|httpsConfig
operator|.
name|setSecureScheme
argument_list|(
literal|"https"
argument_list|)
expr_stmt|;
name|httpsConfig
operator|.
name|setSecurePort
argument_list|(
literal|8443
argument_list|)
expr_stmt|;
name|httpsConfig
operator|.
name|addCustomizer
argument_list|(
operator|new
name|SecureRequestCustomizer
argument_list|()
argument_list|)
expr_stmt|;
comment|// SSL Context Factory for HTTPS and HTTP/2
name|SslContextFactory
name|sslContextFactory
init|=
operator|new
name|SslContextFactory
argument_list|()
decl_stmt|;
name|sslContextFactory
operator|.
name|setKeyStoreResource
argument_list|(
name|newClassPathResource
argument_list|(
literal|"keystore"
argument_list|)
argument_list|)
expr_stmt|;
name|sslContextFactory
operator|.
name|setKeyStorePassword
argument_list|(
literal|"OBF:1vny1zlo1x8e1vnw1vn61x8g1zlu1vn4"
argument_list|)
expr_stmt|;
name|sslContextFactory
operator|.
name|setKeyManagerPassword
argument_list|(
literal|"OBF:1u2u1wml1z7s1z7a1wnl1u2g"
argument_list|)
expr_stmt|;
name|sslContextFactory
operator|.
name|setCipherComparator
argument_list|(
name|HTTP2Cipher
operator|.
name|COMPARATOR
argument_list|)
expr_stmt|;
comment|// SSL Connection Factory
name|SslConnectionFactory
name|ssl
init|=
operator|new
name|SslConnectionFactory
argument_list|(
name|sslContextFactory
argument_list|,
literal|"h2"
argument_list|)
decl_stmt|;
comment|// HTTP/2 Connector
name|ServerConnector
name|http2Connector
init|=
operator|new
name|ServerConnector
argument_list|(
name|server
argument_list|,
name|ssl
argument_list|,
operator|new
name|HTTP2ServerConnectionFactory
argument_list|(
name|httpsConfig
argument_list|)
argument_list|)
decl_stmt|;
name|http2Connector
operator|.
name|setPort
argument_list|(
literal|8443
argument_list|)
expr_stmt|;
name|server
operator|.
name|addConnector
argument_list|(
name|http2Connector
argument_list|)
expr_stmt|;
name|server
operator|.
name|start
argument_list|()
expr_stmt|;
name|server
operator|.
name|join
argument_list|()
expr_stmt|;
block|}
specifier|private
specifier|static
name|SecurityHandler
name|basicAuth
parameter_list|(
name|String
name|username
parameter_list|,
name|String
name|password
parameter_list|,
name|String
name|realm
parameter_list|)
block|{
name|HashLoginService
name|loginService
init|=
operator|new
name|HashLoginService
argument_list|()
decl_stmt|;
name|UserStore
name|userStore
init|=
operator|new
name|UserStore
argument_list|()
decl_stmt|;
name|userStore
operator|.
name|addUser
argument_list|(
name|username
argument_list|,
name|Credential
operator|.
name|getCredential
argument_list|(
name|password
argument_list|)
argument_list|,
operator|new
name|String
index|[]
block|{
literal|"cayenne-service-user"
block|}
argument_list|)
expr_stmt|;
name|loginService
operator|.
name|setUserStore
argument_list|(
name|userStore
argument_list|)
expr_stmt|;
name|loginService
operator|.
name|setName
argument_list|(
name|realm
argument_list|)
expr_stmt|;
name|Constraint
name|constraint
init|=
operator|new
name|Constraint
argument_list|()
decl_stmt|;
name|constraint
operator|.
name|setName
argument_list|(
name|Constraint
operator|.
name|__BASIC_AUTH
argument_list|)
expr_stmt|;
name|constraint
operator|.
name|setRoles
argument_list|(
operator|new
name|String
index|[]
block|{
literal|"cayenne-service-user"
block|}
argument_list|)
expr_stmt|;
name|constraint
operator|.
name|setAuthenticate
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|ConstraintMapping
name|constraintMapping
init|=
operator|new
name|ConstraintMapping
argument_list|()
decl_stmt|;
name|constraintMapping
operator|.
name|setConstraint
argument_list|(
name|constraint
argument_list|)
expr_stmt|;
name|constraintMapping
operator|.
name|setPathSpec
argument_list|(
literal|"/*"
argument_list|)
expr_stmt|;
name|ConstraintSecurityHandler
name|constraintSecurityHandler
init|=
operator|new
name|ConstraintSecurityHandler
argument_list|()
decl_stmt|;
name|constraintSecurityHandler
operator|.
name|setAuthenticator
argument_list|(
operator|new
name|BasicAuthenticator
argument_list|()
argument_list|)
expr_stmt|;
name|constraintSecurityHandler
operator|.
name|setRealmName
argument_list|(
name|realm
argument_list|)
expr_stmt|;
name|constraintSecurityHandler
operator|.
name|addConstraintMapping
argument_list|(
name|constraintMapping
argument_list|)
expr_stmt|;
name|constraintSecurityHandler
operator|.
name|setLoginService
argument_list|(
name|loginService
argument_list|)
expr_stmt|;
return|return
name|constraintSecurityHandler
return|;
block|}
block|}
end_class

end_unit

