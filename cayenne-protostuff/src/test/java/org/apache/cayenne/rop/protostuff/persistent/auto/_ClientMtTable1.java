begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|rop
operator|.
name|protostuff
operator|.
name|persistent
operator|.
name|auto
package|;
end_package

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|LocalDate
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|LocalDateTime
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|LocalTime
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|PersistentObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|exp
operator|.
name|Property
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|rop
operator|.
name|protostuff
operator|.
name|persistent
operator|.
name|ClientMtTable2
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|util
operator|.
name|PersistentObjectList
import|;
end_import

begin_comment
comment|/**  * A generated persistent class mapped as "MtTable1" Cayenne entity. It is a good idea to  * avoid changing this class manually, since it will be overwritten next time code is  * regenerated. If you need to make any customizations, put them in a subclass.  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|_ClientMtTable1
extends|extends
name|PersistentObject
block|{
specifier|public
specifier|static
specifier|final
name|Property
argument_list|<
name|LocalDate
argument_list|>
name|DATE_ATTRIBUTE
init|=
operator|new
name|Property
argument_list|<
name|LocalDate
argument_list|>
argument_list|(
literal|"dateAttribute"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Property
argument_list|<
name|String
argument_list|>
name|GLOBAL_ATTRIBUTE
init|=
operator|new
name|Property
argument_list|<
name|String
argument_list|>
argument_list|(
literal|"globalAttribute"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Property
argument_list|<
name|Date
argument_list|>
name|OLD_DATE_ATTRIBUTE
init|=
operator|new
name|Property
argument_list|<
name|Date
argument_list|>
argument_list|(
literal|"oldDateAttribute"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Property
argument_list|<
name|String
argument_list|>
name|SERVER_ATTRIBUTE
init|=
operator|new
name|Property
argument_list|<
name|String
argument_list|>
argument_list|(
literal|"serverAttribute"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Property
argument_list|<
name|LocalTime
argument_list|>
name|TIME_ATTRIBUTE
init|=
operator|new
name|Property
argument_list|<
name|LocalTime
argument_list|>
argument_list|(
literal|"timeAttribute"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Property
argument_list|<
name|LocalDateTime
argument_list|>
name|TIMESTAMP_ATTRIBUTE
init|=
operator|new
name|Property
argument_list|<
name|LocalDateTime
argument_list|>
argument_list|(
literal|"timestampAttribute"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Property
argument_list|<
name|List
argument_list|<
name|ClientMtTable2
argument_list|>
argument_list|>
name|TABLE2ARRAY
init|=
operator|new
name|Property
argument_list|<
name|List
argument_list|<
name|ClientMtTable2
argument_list|>
argument_list|>
argument_list|(
literal|"table2Array"
argument_list|)
decl_stmt|;
specifier|protected
name|LocalDate
name|dateAttribute
decl_stmt|;
specifier|protected
name|String
name|globalAttribute
decl_stmt|;
specifier|protected
name|Date
name|oldDateAttribute
decl_stmt|;
specifier|protected
name|String
name|serverAttribute
decl_stmt|;
specifier|protected
name|LocalTime
name|timeAttribute
decl_stmt|;
specifier|protected
name|LocalDateTime
name|timestampAttribute
decl_stmt|;
specifier|protected
name|List
argument_list|<
name|ClientMtTable2
argument_list|>
name|table2Array
decl_stmt|;
specifier|public
name|LocalDate
name|getDateAttribute
parameter_list|()
block|{
if|if
condition|(
name|objectContext
operator|!=
literal|null
condition|)
block|{
name|objectContext
operator|.
name|prepareForAccess
argument_list|(
name|this
argument_list|,
literal|"dateAttribute"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
return|return
name|dateAttribute
return|;
block|}
specifier|public
name|void
name|setDateAttribute
parameter_list|(
name|LocalDate
name|dateAttribute
parameter_list|)
block|{
if|if
condition|(
name|objectContext
operator|!=
literal|null
condition|)
block|{
name|objectContext
operator|.
name|prepareForAccess
argument_list|(
name|this
argument_list|,
literal|"dateAttribute"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
name|Object
name|oldValue
init|=
name|this
operator|.
name|dateAttribute
decl_stmt|;
comment|// notify objectContext about simple property change
if|if
condition|(
name|objectContext
operator|!=
literal|null
condition|)
block|{
name|objectContext
operator|.
name|propertyChanged
argument_list|(
name|this
argument_list|,
literal|"dateAttribute"
argument_list|,
name|oldValue
argument_list|,
name|dateAttribute
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|dateAttribute
operator|=
name|dateAttribute
expr_stmt|;
block|}
specifier|public
name|String
name|getGlobalAttribute
parameter_list|()
block|{
if|if
condition|(
name|objectContext
operator|!=
literal|null
condition|)
block|{
name|objectContext
operator|.
name|prepareForAccess
argument_list|(
name|this
argument_list|,
literal|"globalAttribute"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
return|return
name|globalAttribute
return|;
block|}
specifier|public
name|void
name|setGlobalAttribute
parameter_list|(
name|String
name|globalAttribute
parameter_list|)
block|{
if|if
condition|(
name|objectContext
operator|!=
literal|null
condition|)
block|{
name|objectContext
operator|.
name|prepareForAccess
argument_list|(
name|this
argument_list|,
literal|"globalAttribute"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
name|Object
name|oldValue
init|=
name|this
operator|.
name|globalAttribute
decl_stmt|;
comment|// notify objectContext about simple property change
if|if
condition|(
name|objectContext
operator|!=
literal|null
condition|)
block|{
name|objectContext
operator|.
name|propertyChanged
argument_list|(
name|this
argument_list|,
literal|"globalAttribute"
argument_list|,
name|oldValue
argument_list|,
name|globalAttribute
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|globalAttribute
operator|=
name|globalAttribute
expr_stmt|;
block|}
specifier|public
name|Date
name|getOldDateAttribute
parameter_list|()
block|{
if|if
condition|(
name|objectContext
operator|!=
literal|null
condition|)
block|{
name|objectContext
operator|.
name|prepareForAccess
argument_list|(
name|this
argument_list|,
literal|"oldDateAttribute"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
return|return
name|oldDateAttribute
return|;
block|}
specifier|public
name|void
name|setOldDateAttribute
parameter_list|(
name|Date
name|oldDateAttribute
parameter_list|)
block|{
if|if
condition|(
name|objectContext
operator|!=
literal|null
condition|)
block|{
name|objectContext
operator|.
name|prepareForAccess
argument_list|(
name|this
argument_list|,
literal|"oldDateAttribute"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
name|Object
name|oldValue
init|=
name|this
operator|.
name|oldDateAttribute
decl_stmt|;
comment|// notify objectContext about simple property change
if|if
condition|(
name|objectContext
operator|!=
literal|null
condition|)
block|{
name|objectContext
operator|.
name|propertyChanged
argument_list|(
name|this
argument_list|,
literal|"oldDateAttribute"
argument_list|,
name|oldValue
argument_list|,
name|oldDateAttribute
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|oldDateAttribute
operator|=
name|oldDateAttribute
expr_stmt|;
block|}
specifier|public
name|String
name|getServerAttribute
parameter_list|()
block|{
if|if
condition|(
name|objectContext
operator|!=
literal|null
condition|)
block|{
name|objectContext
operator|.
name|prepareForAccess
argument_list|(
name|this
argument_list|,
literal|"serverAttribute"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
return|return
name|serverAttribute
return|;
block|}
specifier|public
name|void
name|setServerAttribute
parameter_list|(
name|String
name|serverAttribute
parameter_list|)
block|{
if|if
condition|(
name|objectContext
operator|!=
literal|null
condition|)
block|{
name|objectContext
operator|.
name|prepareForAccess
argument_list|(
name|this
argument_list|,
literal|"serverAttribute"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
name|Object
name|oldValue
init|=
name|this
operator|.
name|serverAttribute
decl_stmt|;
comment|// notify objectContext about simple property change
if|if
condition|(
name|objectContext
operator|!=
literal|null
condition|)
block|{
name|objectContext
operator|.
name|propertyChanged
argument_list|(
name|this
argument_list|,
literal|"serverAttribute"
argument_list|,
name|oldValue
argument_list|,
name|serverAttribute
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|serverAttribute
operator|=
name|serverAttribute
expr_stmt|;
block|}
specifier|public
name|LocalTime
name|getTimeAttribute
parameter_list|()
block|{
if|if
condition|(
name|objectContext
operator|!=
literal|null
condition|)
block|{
name|objectContext
operator|.
name|prepareForAccess
argument_list|(
name|this
argument_list|,
literal|"timeAttribute"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
return|return
name|timeAttribute
return|;
block|}
specifier|public
name|void
name|setTimeAttribute
parameter_list|(
name|LocalTime
name|timeAttribute
parameter_list|)
block|{
if|if
condition|(
name|objectContext
operator|!=
literal|null
condition|)
block|{
name|objectContext
operator|.
name|prepareForAccess
argument_list|(
name|this
argument_list|,
literal|"timeAttribute"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
name|Object
name|oldValue
init|=
name|this
operator|.
name|timeAttribute
decl_stmt|;
comment|// notify objectContext about simple property change
if|if
condition|(
name|objectContext
operator|!=
literal|null
condition|)
block|{
name|objectContext
operator|.
name|propertyChanged
argument_list|(
name|this
argument_list|,
literal|"timeAttribute"
argument_list|,
name|oldValue
argument_list|,
name|timeAttribute
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|timeAttribute
operator|=
name|timeAttribute
expr_stmt|;
block|}
specifier|public
name|LocalDateTime
name|getTimestampAttribute
parameter_list|()
block|{
if|if
condition|(
name|objectContext
operator|!=
literal|null
condition|)
block|{
name|objectContext
operator|.
name|prepareForAccess
argument_list|(
name|this
argument_list|,
literal|"timestampAttribute"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
return|return
name|timestampAttribute
return|;
block|}
specifier|public
name|void
name|setTimestampAttribute
parameter_list|(
name|LocalDateTime
name|timestampAttribute
parameter_list|)
block|{
if|if
condition|(
name|objectContext
operator|!=
literal|null
condition|)
block|{
name|objectContext
operator|.
name|prepareForAccess
argument_list|(
name|this
argument_list|,
literal|"timestampAttribute"
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
name|Object
name|oldValue
init|=
name|this
operator|.
name|timestampAttribute
decl_stmt|;
comment|// notify objectContext about simple property change
if|if
condition|(
name|objectContext
operator|!=
literal|null
condition|)
block|{
name|objectContext
operator|.
name|propertyChanged
argument_list|(
name|this
argument_list|,
literal|"timestampAttribute"
argument_list|,
name|oldValue
argument_list|,
name|timestampAttribute
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|timestampAttribute
operator|=
name|timestampAttribute
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|ClientMtTable2
argument_list|>
name|getTable2Array
parameter_list|()
block|{
if|if
condition|(
name|objectContext
operator|!=
literal|null
condition|)
block|{
name|objectContext
operator|.
name|prepareForAccess
argument_list|(
name|this
argument_list|,
literal|"table2Array"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|this
operator|.
name|table2Array
operator|==
literal|null
condition|)
block|{
name|this
operator|.
name|table2Array
operator|=
operator|new
name|PersistentObjectList
argument_list|(
name|this
argument_list|,
literal|"table2Array"
argument_list|)
expr_stmt|;
block|}
return|return
name|table2Array
return|;
block|}
specifier|public
name|void
name|addToTable2Array
parameter_list|(
name|ClientMtTable2
name|object
parameter_list|)
block|{
if|if
condition|(
name|objectContext
operator|!=
literal|null
condition|)
block|{
name|objectContext
operator|.
name|prepareForAccess
argument_list|(
name|this
argument_list|,
literal|"table2Array"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|this
operator|.
name|table2Array
operator|==
literal|null
condition|)
block|{
name|this
operator|.
name|table2Array
operator|=
operator|new
name|PersistentObjectList
argument_list|(
name|this
argument_list|,
literal|"table2Array"
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|table2Array
operator|.
name|add
argument_list|(
name|object
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|removeFromTable2Array
parameter_list|(
name|ClientMtTable2
name|object
parameter_list|)
block|{
if|if
condition|(
name|objectContext
operator|!=
literal|null
condition|)
block|{
name|objectContext
operator|.
name|prepareForAccess
argument_list|(
name|this
argument_list|,
literal|"table2Array"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|this
operator|.
name|table2Array
operator|==
literal|null
condition|)
block|{
name|this
operator|.
name|table2Array
operator|=
operator|new
name|PersistentObjectList
argument_list|(
name|this
argument_list|,
literal|"table2Array"
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|table2Array
operator|.
name|remove
argument_list|(
name|object
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

