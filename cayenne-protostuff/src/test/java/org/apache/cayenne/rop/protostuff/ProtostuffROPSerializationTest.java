begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  * Licensed to the Apache Software Foundation (ASF) under one  * or more contributor license agreements.  See the NOTICE file  * distributed with this work for additional information  * regarding copyright ownership.  The ASF licenses this file  * to you under the Apache License, Version 2.0 (the  * "License"); you may not use this file except in compliance  * with the License.  You may obtain a copy of the License at  *<p>  * https://www.apache.org/licenses/LICENSE-2.0  *<p>  * Unless required by applicable law or agreed to in writing,  * software distributed under the License is distributed on an  * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  * KIND, either express or implied.  See the License for the  * specific language governing permissions and limitations  * under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|rop
operator|.
name|protostuff
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|rop
operator|.
name|ROPSerializationService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|rop
operator|.
name|protostuff
operator|.
name|persistent
operator|.
name|ClientMtTable1
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|rop
operator|.
name|protostuff
operator|.
name|persistent
operator|.
name|ClientMtTable2
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|ByteArrayOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|LocalDate
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|LocalDateTime
import|;
end_import

begin_import
import|import
name|java
operator|.
name|time
operator|.
name|LocalTime
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_class
specifier|public
class|class
name|ProtostuffROPSerializationTest
extends|extends
name|ProtostuffProperties
block|{
specifier|private
specifier|static
specifier|final
name|String
name|GLOBAL_ATTRIBUTE1
init|=
literal|"Test table1"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|GLOBAL_ATTRIBUTE2
init|=
literal|"Test table2"
decl_stmt|;
specifier|private
name|ClientMtTable1
name|table1
decl_stmt|;
specifier|private
name|ClientMtTable2
name|table2
decl_stmt|;
specifier|private
name|Date
name|oldDate
decl_stmt|;
specifier|private
name|LocalDate
name|localDate
decl_stmt|;
specifier|private
name|LocalTime
name|localTime
decl_stmt|;
specifier|private
name|LocalDateTime
name|localDateTime
decl_stmt|;
specifier|private
name|ROPSerializationService
name|clientService
decl_stmt|;
specifier|private
name|ROPSerializationService
name|serverService
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUpData
parameter_list|()
throws|throws
name|Exception
block|{
name|oldDate
operator|=
operator|new
name|Date
argument_list|()
expr_stmt|;
name|localDate
operator|=
name|LocalDate
operator|.
name|now
argument_list|()
expr_stmt|;
name|localTime
operator|=
name|LocalTime
operator|.
name|now
argument_list|()
expr_stmt|;
name|localDateTime
operator|=
name|LocalDateTime
operator|.
name|now
argument_list|()
expr_stmt|;
name|table1
operator|=
operator|new
name|ClientMtTable1
argument_list|()
expr_stmt|;
name|table1
operator|.
name|setGlobalAttribute
argument_list|(
name|GLOBAL_ATTRIBUTE1
argument_list|)
expr_stmt|;
name|table1
operator|.
name|setOldDateAttribute
argument_list|(
name|oldDate
argument_list|)
expr_stmt|;
name|table1
operator|.
name|setDateAttribute
argument_list|(
name|localDate
argument_list|)
expr_stmt|;
name|table1
operator|.
name|setTimeAttribute
argument_list|(
name|localTime
argument_list|)
expr_stmt|;
name|table1
operator|.
name|setTimestampAttribute
argument_list|(
name|localDateTime
argument_list|)
expr_stmt|;
name|table2
operator|=
operator|new
name|ClientMtTable2
argument_list|()
expr_stmt|;
name|table2
operator|.
name|setTable1
argument_list|(
name|table1
argument_list|)
expr_stmt|;
name|table2
operator|.
name|setGlobalAttribute
argument_list|(
name|GLOBAL_ATTRIBUTE2
argument_list|)
expr_stmt|;
name|clientService
operator|=
operator|new
name|ProtostuffROPSerializationService
argument_list|()
expr_stmt|;
name|serverService
operator|=
operator|new
name|ProtostuffROPSerializationService
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testByteArraySerialization
parameter_list|()
throws|throws
name|Exception
block|{
comment|// test client to server serialization
name|byte
index|[]
name|data
init|=
name|clientService
operator|.
name|serialize
argument_list|(
name|table2
argument_list|)
decl_stmt|;
name|ClientMtTable2
name|serverTable2
init|=
name|serverService
operator|.
name|deserialize
argument_list|(
name|data
argument_list|,
name|ClientMtTable2
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertCorrectness
argument_list|(
name|serverTable2
argument_list|)
expr_stmt|;
comment|// test server to client serialization
name|data
operator|=
name|serverService
operator|.
name|serialize
argument_list|(
name|table2
argument_list|)
expr_stmt|;
name|ClientMtTable2
name|clientTable2
init|=
name|clientService
operator|.
name|deserialize
argument_list|(
name|data
argument_list|,
name|ClientMtTable2
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertCorrectness
argument_list|(
name|clientTable2
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testStreamSerialization
parameter_list|()
throws|throws
name|Exception
block|{
comment|// test client to server serialization
name|ByteArrayOutputStream
name|out
init|=
operator|new
name|ByteArrayOutputStream
argument_list|()
decl_stmt|;
name|clientService
operator|.
name|serialize
argument_list|(
name|table2
argument_list|,
name|out
argument_list|)
expr_stmt|;
name|out
operator|.
name|flush
argument_list|()
expr_stmt|;
name|ByteArrayInputStream
name|in
init|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|out
operator|.
name|toByteArray
argument_list|()
argument_list|)
decl_stmt|;
name|ClientMtTable2
name|serverTable2
init|=
name|serverService
operator|.
name|deserialize
argument_list|(
name|in
argument_list|,
name|ClientMtTable2
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertCorrectness
argument_list|(
name|serverTable2
argument_list|)
expr_stmt|;
comment|// test server to client serialization
name|out
operator|=
operator|new
name|ByteArrayOutputStream
argument_list|()
expr_stmt|;
name|serverService
operator|.
name|serialize
argument_list|(
name|table2
argument_list|,
name|out
argument_list|)
expr_stmt|;
name|out
operator|.
name|flush
argument_list|()
expr_stmt|;
name|in
operator|=
operator|new
name|ByteArrayInputStream
argument_list|(
name|out
operator|.
name|toByteArray
argument_list|()
argument_list|)
expr_stmt|;
name|ClientMtTable2
name|clientTable2
init|=
name|clientService
operator|.
name|deserialize
argument_list|(
name|in
argument_list|,
name|ClientMtTable2
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertCorrectness
argument_list|(
name|clientTable2
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|assertCorrectness
parameter_list|(
name|ClientMtTable2
name|table2
parameter_list|)
block|{
name|ClientMtTable1
name|table1
init|=
name|table2
operator|.
name|getTable1
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|GLOBAL_ATTRIBUTE2
argument_list|,
name|table2
operator|.
name|getGlobalAttribute
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|GLOBAL_ATTRIBUTE1
argument_list|,
name|table1
operator|.
name|getGlobalAttribute
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|oldDate
argument_list|,
name|table1
operator|.
name|getOldDateAttribute
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|localDate
argument_list|,
name|table1
operator|.
name|getDateAttribute
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|localTime
argument_list|,
name|table1
operator|.
name|getTimeAttribute
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|localDateTime
argument_list|,
name|table1
operator|.
name|getTimestampAttribute
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

