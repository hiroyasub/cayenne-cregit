begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|generic
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Color
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Dimension
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Graphics
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|MouseAdapter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|MouseEvent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|AbstractButton
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|BorderFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JComponent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|border
operator|.
name|Border
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|plaf
operator|.
name|ComponentUI
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|CayenneAction
import|;
end_import

begin_comment
comment|/**  * @since 4.0  */
end_comment

begin_class
specifier|public
class|class
name|GenericButtonUI
extends|extends
name|com
operator|.
name|jgoodies
operator|.
name|looks
operator|.
name|plastic
operator|.
name|PlasticButtonUI
block|{
specifier|private
specifier|static
specifier|final
name|GenericButtonUI
name|INSTANCE
init|=
operator|new
name|GenericButtonUI
argument_list|()
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Border
name|BORDER
init|=
name|BorderFactory
operator|.
name|createCompoundBorder
argument_list|(
name|BorderFactory
operator|.
name|createEmptyBorder
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|BorderFactory
operator|.
name|createCompoundBorder
argument_list|(
name|BorderFactory
operator|.
name|createLineBorder
argument_list|(
name|Color
operator|.
name|GRAY
argument_list|)
argument_list|,
name|BorderFactory
operator|.
name|createEmptyBorder
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
literal|4
argument_list|,
literal|4
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Border
name|DISABLED_BORDER
init|=
name|BorderFactory
operator|.
name|createCompoundBorder
argument_list|(
name|BorderFactory
operator|.
name|createEmptyBorder
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|BorderFactory
operator|.
name|createCompoundBorder
argument_list|(
name|BorderFactory
operator|.
name|createLineBorder
argument_list|(
name|Color
operator|.
name|LIGHT_GRAY
argument_list|)
argument_list|,
name|BorderFactory
operator|.
name|createEmptyBorder
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
literal|4
argument_list|,
literal|4
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Border
name|ACTIVE_BORDER
init|=
name|BorderFactory
operator|.
name|createCompoundBorder
argument_list|(
name|BorderFactory
operator|.
name|createEmptyBorder
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|,
literal|1
argument_list|)
argument_list|,
name|BorderFactory
operator|.
name|createCompoundBorder
argument_list|(
name|BorderFactory
operator|.
name|createLineBorder
argument_list|(
operator|new
name|Color
argument_list|(
literal|0x333333
argument_list|)
argument_list|)
argument_list|,
name|BorderFactory
operator|.
name|createEmptyBorder
argument_list|(
literal|4
argument_list|,
literal|4
argument_list|,
literal|4
argument_list|,
literal|4
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
specifier|public
name|GenericButtonUI
parameter_list|()
block|{
block|}
specifier|public
specifier|static
name|ComponentUI
name|createUI
parameter_list|(
name|JComponent
name|b
parameter_list|)
block|{
return|return
name|INSTANCE
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|installDefaults
parameter_list|(
specifier|final
name|AbstractButton
name|b
parameter_list|)
block|{
name|super
operator|.
name|installDefaults
argument_list|(
name|b
argument_list|)
expr_stmt|;
name|b
operator|.
name|putClientProperty
argument_list|(
literal|"Plastic.is3D"
argument_list|,
name|Boolean
operator|.
name|FALSE
argument_list|)
expr_stmt|;
if|if
condition|(
name|b
operator|instanceof
name|CayenneAction
operator|.
name|CayenneToolbarButton
condition|)
block|{
name|b
operator|.
name|addMouseListener
argument_list|(
operator|new
name|MouseAdapter
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|mouseEntered
parameter_list|(
name|MouseEvent
name|e
parameter_list|)
block|{
name|b
operator|.
name|getModel
argument_list|()
operator|.
name|setArmed
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|mouseExited
parameter_list|(
name|MouseEvent
name|e
parameter_list|)
block|{
name|b
operator|.
name|getModel
argument_list|()
operator|.
name|setArmed
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|update
parameter_list|(
name|Graphics
name|g
parameter_list|,
name|JComponent
name|c
parameter_list|)
block|{
if|if
condition|(
name|c
operator|instanceof
name|CayenneAction
operator|.
name|CayenneToolbarButton
condition|)
block|{
name|AbstractButton
name|b
init|=
operator|(
name|AbstractButton
operator|)
name|c
decl_stmt|;
if|if
condition|(
operator|!
name|b
operator|.
name|isEnabled
argument_list|()
condition|)
block|{
name|b
operator|.
name|setBorder
argument_list|(
name|DISABLED_BORDER
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|b
operator|.
name|getModel
argument_list|()
operator|.
name|isArmed
argument_list|()
condition|)
block|{
name|b
operator|.
name|setBorder
argument_list|(
name|ACTIVE_BORDER
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|b
operator|.
name|setBorder
argument_list|(
name|BORDER
argument_list|)
expr_stmt|;
block|}
block|}
name|super
operator|.
name|update
argument_list|(
name|g
argument_list|,
name|c
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|paintButtonPressed
parameter_list|(
name|Graphics
name|g
parameter_list|,
name|AbstractButton
name|b
parameter_list|)
block|{
if|if
condition|(
name|b
operator|.
name|isContentAreaFilled
argument_list|()
condition|)
block|{
name|Dimension
name|size
init|=
name|b
operator|.
name|getSize
argument_list|()
decl_stmt|;
name|g
operator|.
name|setColor
argument_list|(
name|getSelectColor
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|b
operator|instanceof
name|CayenneAction
operator|.
name|CayenneToolbarButton
condition|)
block|{
comment|// don't paint outer border area
name|g
operator|.
name|fillRect
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
name|size
operator|.
name|width
operator|-
literal|2
argument_list|,
name|size
operator|.
name|height
operator|-
literal|2
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|g
operator|.
name|fillRect
argument_list|(
literal|0
argument_list|,
literal|0
argument_list|,
name|size
operator|.
name|width
argument_list|,
name|size
operator|.
name|height
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

