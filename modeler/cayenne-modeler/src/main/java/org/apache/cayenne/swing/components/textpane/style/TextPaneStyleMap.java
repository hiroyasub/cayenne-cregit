begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|swing
operator|.
name|components
operator|.
name|textpane
operator|.
name|style
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|swing
operator|.
name|components
operator|.
name|textpane
operator|.
name|syntax
operator|.
name|SQLSyntaxConstants
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_class
specifier|public
class|class
name|TextPaneStyleMap
block|{
specifier|public
name|Map
argument_list|<
name|TextPaneStyleTypes
argument_list|,
name|SyntaxStyle
argument_list|>
name|syntaxStyleMap
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
specifier|public
name|TextPaneStyleMap
parameter_list|()
block|{
name|Font
name|plainFont
init|=
name|SQLSyntaxConstants
operator|.
name|DEFAULT_FONT
decl_stmt|;
name|Font
name|boldFont
init|=
operator|new
name|Font
argument_list|(
name|plainFont
operator|.
name|getFamily
argument_list|()
argument_list|,
name|Font
operator|.
name|BOLD
argument_list|,
name|plainFont
operator|.
name|getSize
argument_list|()
argument_list|)
decl_stmt|;
name|Font
name|italicFont
init|=
operator|new
name|Font
argument_list|(
name|plainFont
operator|.
name|getFamily
argument_list|()
argument_list|,
name|Font
operator|.
name|ITALIC
argument_list|,
name|plainFont
operator|.
name|getSize
argument_list|()
argument_list|)
decl_stmt|;
name|SyntaxStyle
name|keywordsStyle
init|=
operator|new
name|SyntaxStyle
argument_list|(
name|Color
operator|.
name|blue
argument_list|,
name|boldFont
argument_list|)
decl_stmt|;
name|SyntaxStyle
name|numberStyle
init|=
operator|new
name|SyntaxStyle
argument_list|(
name|Color
operator|.
name|ORANGE
argument_list|,
name|italicFont
argument_list|)
decl_stmt|;
name|SyntaxStyle
name|typeStyle
init|=
operator|new
name|SyntaxStyle
argument_list|(
name|Color
operator|.
name|BLUE
argument_list|,
name|boldFont
argument_list|)
decl_stmt|;
name|SyntaxStyle
name|stringStyle
init|=
operator|new
name|SyntaxStyle
argument_list|(
name|Color
operator|.
name|blue
argument_list|,
name|italicFont
argument_list|)
decl_stmt|;
name|SyntaxStyle
name|commentStyle
init|=
operator|new
name|SyntaxStyle
argument_list|(
name|Color
operator|.
name|LIGHT_GRAY
argument_list|,
name|italicFont
argument_list|)
decl_stmt|;
name|SyntaxStyle
name|keywords2Style
init|=
operator|new
name|SyntaxStyle
argument_list|(
name|Color
operator|.
name|MAGENTA
argument_list|,
name|plainFont
argument_list|)
decl_stmt|;
name|syntaxStyleMap
operator|.
name|put
argument_list|(
name|TextPaneStyleTypes
operator|.
name|KEYWORDS
argument_list|,
name|keywordsStyle
argument_list|)
expr_stmt|;
name|syntaxStyleMap
operator|.
name|put
argument_list|(
name|TextPaneStyleTypes
operator|.
name|KEYWORDS2
argument_list|,
name|keywords2Style
argument_list|)
expr_stmt|;
name|syntaxStyleMap
operator|.
name|put
argument_list|(
name|TextPaneStyleTypes
operator|.
name|OPERATORS
argument_list|,
name|keywordsStyle
argument_list|)
expr_stmt|;
name|syntaxStyleMap
operator|.
name|put
argument_list|(
name|TextPaneStyleTypes
operator|.
name|NUMBER
argument_list|,
name|numberStyle
argument_list|)
expr_stmt|;
name|syntaxStyleMap
operator|.
name|put
argument_list|(
name|TextPaneStyleTypes
operator|.
name|TYPE
argument_list|,
name|typeStyle
argument_list|)
expr_stmt|;
name|syntaxStyleMap
operator|.
name|put
argument_list|(
name|TextPaneStyleTypes
operator|.
name|STRING
argument_list|,
name|stringStyle
argument_list|)
expr_stmt|;
name|syntaxStyleMap
operator|.
name|put
argument_list|(
name|TextPaneStyleTypes
operator|.
name|COMMENT
argument_list|,
name|commentStyle
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

