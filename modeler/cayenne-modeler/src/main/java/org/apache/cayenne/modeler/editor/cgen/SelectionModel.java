begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|editor
operator|.
name|cgen
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|function
operator|.
name|Predicate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DataMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|Embeddable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjEntity
import|;
end_import

begin_comment
comment|/**  * @since 4.2  */
end_comment

begin_class
class|class
name|SelectionModel
block|{
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|selectedEntities
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|selectedEmbeddables
decl_stmt|;
specifier|private
name|Set
argument_list|<
name|String
argument_list|>
name|selectedDataMaps
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|DataMap
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|selectedEntitiesForDataMap
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|DataMap
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|selectedEmbeddablesForDataMap
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|DataMap
argument_list|,
name|Set
argument_list|<
name|String
argument_list|>
argument_list|>
name|selectedDataMapsForDataMap
decl_stmt|;
name|SelectionModel
parameter_list|()
block|{
name|selectedEntitiesForDataMap
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
name|selectedEmbeddablesForDataMap
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
name|selectedDataMapsForDataMap
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
name|selectedEntities
operator|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
expr_stmt|;
name|selectedEmbeddables
operator|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
expr_stmt|;
name|selectedDataMaps
operator|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
expr_stmt|;
block|}
name|void
name|initCollectionsForSelection
parameter_list|(
name|DataMap
name|dataMap
parameter_list|)
block|{
name|selectedEntities
operator|=
name|selectedEntitiesForDataMap
operator|.
name|computeIfAbsent
argument_list|(
name|dataMap
argument_list|,
name|dm
lambda|->
operator|new
name|HashSet
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
name|selectedEmbeddables
operator|=
name|selectedEmbeddablesForDataMap
operator|.
name|computeIfAbsent
argument_list|(
name|dataMap
argument_list|,
name|dm
lambda|->
operator|new
name|HashSet
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
name|selectedDataMaps
operator|=
name|selectedDataMapsForDataMap
operator|.
name|computeIfAbsent
argument_list|(
name|dataMap
argument_list|,
name|dm
lambda|->
operator|new
name|HashSet
argument_list|<>
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|boolean
name|updateSelection
parameter_list|(
name|Predicate
argument_list|<
name|Object
argument_list|>
name|predicate
parameter_list|,
name|List
argument_list|<
name|Object
argument_list|>
name|classes
parameter_list|)
block|{
name|boolean
name|modified
init|=
literal|false
decl_stmt|;
for|for
control|(
name|Object
name|classObj
range|:
name|classes
control|)
block|{
name|boolean
name|select
init|=
name|predicate
operator|.
name|test
argument_list|(
name|classObj
argument_list|)
decl_stmt|;
if|if
condition|(
name|classObj
operator|instanceof
name|ObjEntity
condition|)
block|{
if|if
condition|(
name|select
condition|)
block|{
if|if
condition|(
name|selectedEntities
operator|.
name|add
argument_list|(
operator|(
operator|(
name|ObjEntity
operator|)
name|classObj
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|modified
operator|=
literal|true
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
name|selectedEntities
operator|.
name|remove
argument_list|(
operator|(
operator|(
name|ObjEntity
operator|)
name|classObj
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|modified
operator|=
literal|true
expr_stmt|;
block|}
block|}
block|}
if|else if
condition|(
name|classObj
operator|instanceof
name|Embeddable
condition|)
block|{
if|if
condition|(
name|select
condition|)
block|{
if|if
condition|(
name|selectedEmbeddables
operator|.
name|add
argument_list|(
operator|(
operator|(
name|Embeddable
operator|)
name|classObj
operator|)
operator|.
name|getClassName
argument_list|()
argument_list|)
condition|)
block|{
name|modified
operator|=
literal|true
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
name|selectedEmbeddables
operator|.
name|remove
argument_list|(
operator|(
operator|(
name|Embeddable
operator|)
name|classObj
operator|)
operator|.
name|getClassName
argument_list|()
argument_list|)
condition|)
block|{
name|modified
operator|=
literal|true
expr_stmt|;
block|}
block|}
block|}
if|else if
condition|(
name|classObj
operator|instanceof
name|DataMap
condition|)
block|{
if|if
condition|(
name|select
condition|)
block|{
if|if
condition|(
name|selectedDataMaps
operator|.
name|add
argument_list|(
operator|(
operator|(
name|DataMap
operator|)
name|classObj
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|modified
operator|=
literal|true
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
name|selectedDataMaps
operator|.
name|remove
argument_list|(
operator|(
operator|(
name|DataMap
operator|)
name|classObj
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|modified
operator|=
literal|true
expr_stmt|;
block|}
block|}
block|}
block|}
return|return
name|modified
return|;
block|}
name|List
argument_list|<
name|Embeddable
argument_list|>
name|getSelectedEmbeddables
parameter_list|(
name|List
argument_list|<
name|Object
argument_list|>
name|classes
parameter_list|)
block|{
name|List
argument_list|<
name|Embeddable
argument_list|>
name|selected
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|selectedEmbeddables
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|Object
name|classObj
range|:
name|classes
control|)
block|{
if|if
condition|(
name|classObj
operator|instanceof
name|Embeddable
condition|)
block|{
name|String
name|name
init|=
operator|(
operator|(
name|Embeddable
operator|)
name|classObj
operator|)
operator|.
name|getClassName
argument_list|()
decl_stmt|;
if|if
condition|(
name|selectedEmbeddables
operator|.
name|contains
argument_list|(
name|name
argument_list|)
condition|)
block|{
name|selected
operator|.
name|add
argument_list|(
operator|(
name|Embeddable
operator|)
name|classObj
argument_list|)
expr_stmt|;
block|}
block|}
block|}
return|return
name|selected
return|;
block|}
name|List
argument_list|<
name|ObjEntity
argument_list|>
name|getSelectedEntities
parameter_list|(
name|List
argument_list|<
name|Object
argument_list|>
name|classes
parameter_list|)
block|{
name|List
argument_list|<
name|ObjEntity
argument_list|>
name|selected
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|selectedEntities
operator|.
name|size
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|Object
name|classObj
range|:
name|classes
control|)
block|{
if|if
condition|(
name|classObj
operator|instanceof
name|ObjEntity
condition|)
block|{
name|String
name|name
init|=
operator|(
operator|(
name|ObjEntity
operator|)
name|classObj
operator|)
operator|.
name|getName
argument_list|()
decl_stmt|;
if|if
condition|(
name|selectedEntities
operator|.
name|contains
argument_list|(
name|name
argument_list|)
condition|)
block|{
name|selected
operator|.
name|add
argument_list|(
operator|(
operator|(
name|ObjEntity
operator|)
name|classObj
operator|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
return|return
name|selected
return|;
block|}
name|boolean
name|isSelected
parameter_list|(
name|Object
name|currentClass
parameter_list|)
block|{
if|if
condition|(
name|currentClass
operator|instanceof
name|ObjEntity
condition|)
block|{
return|return
name|selectedEntities
operator|.
name|contains
argument_list|(
operator|(
operator|(
name|ObjEntity
operator|)
name|currentClass
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
return|;
block|}
if|else if
condition|(
name|currentClass
operator|instanceof
name|Embeddable
condition|)
block|{
return|return
name|selectedEmbeddables
operator|.
name|contains
argument_list|(
operator|(
operator|(
name|Embeddable
operator|)
name|currentClass
operator|)
operator|.
name|getClassName
argument_list|()
argument_list|)
return|;
block|}
if|else if
condition|(
name|currentClass
operator|instanceof
name|DataMap
condition|)
block|{
return|return
name|selectedDataMaps
operator|.
name|contains
argument_list|(
operator|(
operator|(
name|DataMap
operator|)
name|currentClass
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
return|;
block|}
return|return
literal|false
return|;
block|}
name|boolean
name|setSelected
parameter_list|(
name|Object
name|currentClass
parameter_list|,
name|boolean
name|selectedFlag
parameter_list|)
block|{
if|if
condition|(
name|currentClass
operator|instanceof
name|ObjEntity
condition|)
block|{
if|if
condition|(
name|selectedFlag
condition|)
block|{
return|return
name|selectedEntities
operator|.
name|add
argument_list|(
operator|(
operator|(
name|ObjEntity
operator|)
name|currentClass
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|selectedEntities
operator|.
name|remove
argument_list|(
operator|(
operator|(
name|ObjEntity
operator|)
name|currentClass
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
return|;
block|}
block|}
if|else if
condition|(
name|currentClass
operator|instanceof
name|Embeddable
condition|)
block|{
if|if
condition|(
name|selectedFlag
condition|)
block|{
return|return
name|selectedEmbeddables
operator|.
name|add
argument_list|(
operator|(
operator|(
name|Embeddable
operator|)
name|currentClass
operator|)
operator|.
name|getClassName
argument_list|()
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|selectedEmbeddables
operator|.
name|remove
argument_list|(
operator|(
operator|(
name|Embeddable
operator|)
name|currentClass
operator|)
operator|.
name|getClassName
argument_list|()
argument_list|)
return|;
block|}
block|}
if|else if
condition|(
name|currentClass
operator|instanceof
name|DataMap
condition|)
block|{
if|if
condition|(
name|selectedFlag
condition|)
block|{
return|return
name|selectedDataMaps
operator|.
name|add
argument_list|(
operator|(
operator|(
name|DataMap
operator|)
name|currentClass
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
return|;
block|}
else|else
block|{
return|return
name|selectedDataMaps
operator|.
name|remove
argument_list|(
operator|(
operator|(
name|DataMap
operator|)
name|currentClass
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
return|;
block|}
block|}
return|return
literal|false
return|;
block|}
name|void
name|removeFromSelectedEntities
parameter_list|(
name|ObjEntity
name|objEntity
parameter_list|)
block|{
name|initCollectionsForSelection
argument_list|(
name|objEntity
operator|.
name|getDataMap
argument_list|()
argument_list|)
expr_stmt|;
name|selectedEntities
operator|.
name|remove
argument_list|(
name|objEntity
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|void
name|removeFromSelectedEmbeddables
parameter_list|(
name|Embeddable
name|embeddable
parameter_list|)
block|{
name|initCollectionsForSelection
argument_list|(
name|embeddable
operator|.
name|getDataMap
argument_list|()
argument_list|)
expr_stmt|;
name|selectedEmbeddables
operator|.
name|remove
argument_list|(
name|embeddable
operator|.
name|getClassName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|void
name|addSelectedEntities
parameter_list|(
name|Collection
argument_list|<
name|String
argument_list|>
name|entities
parameter_list|)
block|{
name|selectedEntities
operator|.
name|addAll
argument_list|(
name|entities
argument_list|)
expr_stmt|;
block|}
name|void
name|addSelectedEntity
parameter_list|(
name|String
name|entity
parameter_list|)
block|{
name|selectedEntities
operator|.
name|add
argument_list|(
name|entity
argument_list|)
expr_stmt|;
block|}
name|void
name|addSelectedEmbeddables
parameter_list|(
name|Collection
argument_list|<
name|String
argument_list|>
name|entities
parameter_list|)
block|{
name|selectedEmbeddables
operator|.
name|addAll
argument_list|(
name|entities
argument_list|)
expr_stmt|;
block|}
name|void
name|addSelectedEmbeddable
parameter_list|(
name|String
name|entity
parameter_list|)
block|{
name|selectedEmbeddables
operator|.
name|add
argument_list|(
name|entity
argument_list|)
expr_stmt|;
block|}
name|int
name|getSelectedEntitiesCount
parameter_list|()
block|{
return|return
name|selectedEntities
operator|.
name|size
argument_list|()
return|;
block|}
name|int
name|getSelecetedEmbeddablesCount
parameter_list|()
block|{
return|return
name|selectedEmbeddables
operator|.
name|size
argument_list|()
return|;
block|}
name|int
name|getSelectedDataMapsCount
parameter_list|()
block|{
return|return
name|selectedDataMaps
operator|.
name|size
argument_list|()
return|;
block|}
block|}
end_class

end_unit

