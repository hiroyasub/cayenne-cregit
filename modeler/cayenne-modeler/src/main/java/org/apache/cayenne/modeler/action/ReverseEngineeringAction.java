begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|action
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|Application
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|db
operator|.
name|DataSourceWizard
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|db
operator|.
name|load
operator|.
name|DbLoaderContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|db
operator|.
name|load
operator|.
name|DbLoaderOptionsDialog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|db
operator|.
name|load
operator|.
name|LoadDataMapTask
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|SQLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JOptionPane
import|;
end_import

begin_comment
comment|/**  * Action that imports database structure into a DataMap.  */
end_comment

begin_class
specifier|public
class|class
name|ReverseEngineeringAction
extends|extends
name|DBWizardAction
argument_list|<
name|DbLoaderOptionsDialog
argument_list|>
block|{
name|ReverseEngineeringAction
parameter_list|(
name|Application
name|application
parameter_list|)
block|{
name|super
argument_list|(
name|getActionName
argument_list|()
argument_list|,
name|application
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|String
name|getActionName
parameter_list|()
block|{
return|return
literal|"Reengineer Database Schema"
return|;
block|}
comment|/**      * Connects to DB and delegates processing to DbLoaderController, starting it asynchronously.      */
annotation|@
name|Override
specifier|public
name|void
name|performAction
parameter_list|(
name|ActionEvent
name|event
parameter_list|)
block|{
specifier|final
name|DbLoaderContext
name|context
init|=
operator|new
name|DbLoaderContext
argument_list|()
decl_stmt|;
specifier|final
name|DataSourceWizard
name|connectWizard
init|=
name|dataSourceWizardDialog
argument_list|(
literal|"Reengineer DB Schema: Connect to Database"
argument_list|)
decl_stmt|;
if|if
condition|(
name|connectWizard
operator|==
literal|null
condition|)
block|{
return|return;
block|}
name|context
operator|.
name|setProjectController
argument_list|(
name|getProjectController
argument_list|()
argument_list|)
expr_stmt|;
try|try
block|{
name|context
operator|.
name|setConnection
argument_list|(
name|connectWizard
operator|.
name|getDataSource
argument_list|()
operator|.
name|getConnection
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SQLException
name|ex
parameter_list|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|Application
operator|.
name|getFrame
argument_list|()
argument_list|,
name|ex
operator|.
name|getMessage
argument_list|()
argument_list|,
literal|"Error loading schemas dialog"
argument_list|,
name|JOptionPane
operator|.
name|ERROR_MESSAGE
argument_list|)
expr_stmt|;
return|return;
block|}
specifier|final
name|DbLoaderOptionsDialog
name|loaderOptionsDialog
init|=
name|loaderOptionDialog
argument_list|(
name|connectWizard
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|context
operator|.
name|buildConfig
argument_list|(
name|connectWizard
argument_list|,
name|loaderOptionsDialog
argument_list|)
condition|)
block|{
try|try
block|{
name|context
operator|.
name|getConnection
argument_list|()
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SQLException
name|ignored
parameter_list|)
block|{
block|}
return|return;
block|}
name|runLoaderInThread
argument_list|(
name|context
argument_list|,
operator|new
name|Runnable
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|run
parameter_list|()
block|{
name|application
operator|.
name|getUndoManager
argument_list|()
operator|.
name|discardAllEdits
argument_list|()
expr_stmt|;
try|try
block|{
name|context
operator|.
name|getConnection
argument_list|()
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SQLException
name|ignored
parameter_list|)
block|{
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|runLoaderInThread
parameter_list|(
specifier|final
name|DbLoaderContext
name|context
parameter_list|,
specifier|final
name|Runnable
name|callback
parameter_list|)
block|{
name|Thread
name|th
init|=
operator|new
name|Thread
argument_list|(
operator|new
name|Runnable
argument_list|()
block|{
specifier|public
name|void
name|run
parameter_list|()
block|{
name|LoadDataMapTask
name|task
init|=
operator|new
name|LoadDataMapTask
argument_list|(
name|Application
operator|.
name|getFrame
argument_list|()
argument_list|,
literal|"Reengineering DB"
argument_list|,
name|context
argument_list|)
decl_stmt|;
name|task
operator|.
name|startAndWait
argument_list|()
expr_stmt|;
name|SwingUtilities
operator|.
name|invokeLater
argument_list|(
name|callback
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
decl_stmt|;
name|th
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|DbLoaderOptionsDialog
name|createDialog
parameter_list|(
name|Collection
argument_list|<
name|String
argument_list|>
name|catalogs
parameter_list|,
name|Collection
argument_list|<
name|String
argument_list|>
name|schemas
parameter_list|,
name|String
name|currentCatalog
parameter_list|,
name|String
name|currentSchema
parameter_list|)
block|{
return|return
operator|new
name|DbLoaderOptionsDialog
argument_list|(
name|catalogs
argument_list|,
name|schemas
argument_list|,
name|currentCatalog
argument_list|,
name|currentSchema
argument_list|)
return|;
block|}
block|}
end_class

end_unit

