begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|editor
operator|.
name|cgen
operator|.
name|templateeditor
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|CayenneController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|util
operator|.
name|Util
import|;
end_import

begin_import
import|import
name|org
operator|.
name|fife
operator|.
name|ui
operator|.
name|rtextarea
operator|.
name|SearchContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|fife
operator|.
name|ui
operator|.
name|rtextarea
operator|.
name|SearchEngine
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JButton
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JOptionPane
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionListener
import|;
end_import

begin_comment
comment|/**  * @since 5.0  */
end_comment

begin_class
specifier|public
class|class
name|FindController
extends|extends
name|CayenneController
implements|implements
name|ActionListener
block|{
specifier|private
name|FindView
name|view
decl_stmt|;
specifier|protected
name|TemplateEditorView
name|parentView
decl_stmt|;
specifier|private
name|JButton
name|nextButton
decl_stmt|;
specifier|private
name|JButton
name|prevButton
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|TEXT_NOT_FOUND_MSG
init|=
literal|"Text not found"
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|FIND_NEXT
init|=
literal|"FindNext"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|FIND_PREV
init|=
literal|"FindPrev"
decl_stmt|;
specifier|public
name|FindController
parameter_list|(
name|TemplateEditorController
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|this
operator|.
name|parentView
operator|=
name|parent
operator|.
name|getView
argument_list|()
expr_stmt|;
name|initComponents
argument_list|()
expr_stmt|;
name|initListeners
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|initComponents
parameter_list|()
block|{
name|this
operator|.
name|view
operator|=
operator|new
name|FindView
argument_list|()
expr_stmt|;
name|this
operator|.
name|nextButton
operator|=
name|this
operator|.
name|view
operator|.
name|getNextButton
argument_list|()
expr_stmt|;
name|this
operator|.
name|prevButton
operator|=
name|this
operator|.
name|view
operator|.
name|getPrevButton
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Component
name|getView
parameter_list|()
block|{
return|return
name|view
return|;
block|}
specifier|protected
name|void
name|initListeners
parameter_list|()
block|{
name|nextButton
operator|.
name|setActionCommand
argument_list|(
name|FIND_NEXT
argument_list|)
expr_stmt|;
name|nextButton
operator|.
name|addActionListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|prevButton
operator|.
name|setActionCommand
argument_list|(
name|FIND_PREV
argument_list|)
expr_stmt|;
name|prevButton
operator|.
name|addActionListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
comment|// "FindNext" => search forward, "FindPrev" => search backward
name|String
name|command
init|=
name|e
operator|.
name|getActionCommand
argument_list|()
decl_stmt|;
name|boolean
name|forward
init|=
name|FIND_NEXT
operator|.
name|equals
argument_list|(
name|command
argument_list|)
decl_stmt|;
name|SearchContext
name|context
init|=
name|getSearchContext
argument_list|(
name|forward
argument_list|,
name|view
argument_list|)
decl_stmt|;
if|if
condition|(
name|context
operator|==
literal|null
condition|)
return|return;
name|boolean
name|found
init|=
name|SearchEngine
operator|.
name|find
argument_list|(
name|parentView
operator|.
name|getEditingTemplatePane
argument_list|()
argument_list|,
name|context
argument_list|)
operator|.
name|wasFound
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|found
condition|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|view
argument_list|,
name|TEXT_NOT_FOUND_MSG
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|SearchContext
name|getSearchContext
parameter_list|(
name|boolean
name|forward
parameter_list|,
name|FindView
name|view
parameter_list|)
block|{
name|SearchContext
name|context
init|=
operator|new
name|SearchContext
argument_list|()
decl_stmt|;
name|String
name|text
init|=
name|view
operator|.
name|getSearchField
argument_list|()
operator|.
name|getText
argument_list|()
decl_stmt|;
if|if
condition|(
name|Util
operator|.
name|isEmptyString
argument_list|(
name|text
argument_list|)
condition|)
block|{
return|return
literal|null
return|;
block|}
name|context
operator|.
name|setSearchFor
argument_list|(
name|text
argument_list|)
expr_stmt|;
name|context
operator|.
name|setMatchCase
argument_list|(
name|view
operator|.
name|getMatchCaseCB
argument_list|()
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|setRegularExpression
argument_list|(
name|view
operator|.
name|getRegexCB
argument_list|()
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|setWholeWord
argument_list|(
name|view
operator|.
name|getWholeWordCB
argument_list|()
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|setSearchForward
argument_list|(
name|forward
argument_list|)
expr_stmt|;
return|return
name|context
return|;
block|}
comment|/**      * Pops up a dialog and blocks current thread until the dialog is closed.      */
specifier|public
name|void
name|startupAction
parameter_list|()
block|{
name|view
operator|.
name|setModal
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|view
operator|.
name|pack
argument_list|()
expr_stmt|;
name|view
operator|.
name|setResizable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|makeCloseableOnEscape
argument_list|()
expr_stmt|;
name|centerView
argument_list|()
expr_stmt|;
name|view
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

