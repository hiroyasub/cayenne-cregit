begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|templateeditor
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|xml
operator|.
name|DataChannelMetaData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Injector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Key
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|gen
operator|.
name|CgenConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|gen
operator|.
name|ClassGenerationAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|gen
operator|.
name|ClassGenerationActionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DataMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|pref
operator|.
name|TemplatePreferences
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|pref
operator|.
name|TemplatePreferencesView
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|CayenneController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|swing
operator|.
name|BindingBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|tools
operator|.
name|ToolsInjectorBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|velocity
operator|.
name|exception
operator|.
name|ParseErrorException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|velocity
operator|.
name|runtime
operator|.
name|resource
operator|.
name|loader
operator|.
name|StringResourceLoader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|velocity
operator|.
name|runtime
operator|.
name|resource
operator|.
name|util
operator|.
name|StringResourceRepository
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|velocity
operator|.
name|runtime
operator|.
name|resource
operator|.
name|util
operator|.
name|StringResourceRepositoryImpl
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|text
operator|.
name|BadLocationException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|stream
operator|.
name|Collectors
import|;
end_import

begin_comment
comment|/**  * @since 5.0  */
end_comment

begin_class
specifier|public
class|class
name|TemplateEditorController
extends|extends
name|CayenneController
block|{
specifier|public
specifier|static
specifier|final
name|String
name|TEMPLATE_EDITOR_REPO
init|=
literal|"templateEditorRepo"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|TEMPLATE_EDITOR_WRITER
init|=
literal|"tplEditorWriter"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|EDITED_TEMPLATE
init|=
literal|"editedTemplate"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Key
argument_list|<
name|StringWriter
argument_list|>
name|TPL_EDITOR_WRITER
init|=
name|Key
operator|.
name|get
argument_list|(
name|StringWriter
operator|.
name|class
argument_list|,
name|TEMPLATE_EDITOR_WRITER
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|customTemplates
decl_stmt|;
specifier|private
specifier|final
name|DataMap
name|currentDataMap
decl_stmt|;
specifier|protected
name|TemplatePreferencesView
name|preferencesView
decl_stmt|;
specifier|protected
name|TemplateEditorView
name|view
decl_stmt|;
specifier|protected
name|boolean
name|canceled
decl_stmt|;
specifier|public
name|TemplateEditorController
parameter_list|(
name|TemplatePreferences
name|preferences
parameter_list|)
block|{
name|super
argument_list|(
name|preferences
argument_list|)
expr_stmt|;
name|this
operator|.
name|preferencesView
operator|=
name|preferences
operator|.
name|getView
argument_list|()
expr_stmt|;
name|this
operator|.
name|customTemplates
operator|=
name|application
operator|.
name|getCodeTemplateManager
argument_list|()
operator|.
name|getCustomTemplates
argument_list|()
expr_stmt|;
name|this
operator|.
name|currentDataMap
operator|=
name|application
operator|.
name|getFrameController
argument_list|()
operator|.
name|getProjectController
argument_list|()
operator|.
name|getCurrentDataMap
argument_list|()
expr_stmt|;
name|this
operator|.
name|view
operator|=
operator|new
name|TemplateEditorView
argument_list|(
name|getEntityNames
argument_list|()
argument_list|)
expr_stmt|;
name|initBindings
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|startupAction
parameter_list|()
block|{
name|this
operator|.
name|view
operator|.
name|getEditingTemplatePane
argument_list|()
operator|.
name|setText
argument_list|(
name|loadSelectedTemplateText
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|view
operator|.
name|editingTemplatePane
operator|.
name|setCaretPosition
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|this
operator|.
name|view
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|private
name|String
name|loadSelectedTemplateText
parameter_list|()
block|{
name|TemplateLoader
name|templateLoader
init|=
operator|new
name|TemplateLoader
argument_list|()
decl_stmt|;
return|return
name|templateLoader
operator|.
name|load
argument_list|(
name|view
argument_list|,
name|getSelectedTemplate
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|Component
name|getView
parameter_list|()
block|{
return|return
name|view
return|;
block|}
specifier|protected
name|void
name|initBindings
parameter_list|()
block|{
name|BindingBuilder
name|builder
init|=
operator|new
name|BindingBuilder
argument_list|(
name|getApplication
argument_list|()
operator|.
name|getBindingFactory
argument_list|()
argument_list|,
name|this
argument_list|)
decl_stmt|;
name|builder
operator|.
name|bindToAction
argument_list|(
name|view
operator|.
name|getSaveButton
argument_list|()
argument_list|,
literal|"saveAction()"
argument_list|)
expr_stmt|;
name|builder
operator|.
name|bindToAction
argument_list|(
name|view
operator|.
name|getPreviewButton
argument_list|()
argument_list|,
literal|"generateAction()"
argument_list|)
expr_stmt|;
name|builder
operator|.
name|bindToAction
argument_list|(
name|view
operator|.
name|getFindButton
argument_list|()
argument_list|,
literal|"findAction()"
argument_list|)
expr_stmt|;
name|builder
operator|.
name|bindToAction
argument_list|(
name|view
operator|.
name|getFindAndReplaceButton
argument_list|()
argument_list|,
literal|"findAndReplaceAction()"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unused"
argument_list|)
specifier|public
name|void
name|saveAction
parameter_list|()
block|{
if|if
condition|(
name|getSelectedTemplate
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|File
name|dest
init|=
operator|new
name|File
argument_list|(
name|getSelectedTemplate
argument_list|()
argument_list|)
decl_stmt|;
name|FileTemplateSaver
name|templateSaver
init|=
operator|new
name|FileTemplateSaver
argument_list|()
decl_stmt|;
name|templateSaver
operator|.
name|save
argument_list|(
name|view
operator|.
name|getTemplateText
argument_list|()
argument_list|,
name|dest
argument_list|,
name|view
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|String
name|getSelectedTemplate
parameter_list|()
block|{
name|int
name|selectedRow
init|=
name|preferencesView
operator|.
name|getTable
argument_list|()
operator|.
name|getSelectedRow
argument_list|()
decl_stmt|;
if|if
condition|(
name|selectedRow
operator|!=
operator|-
literal|1
condition|)
block|{
name|Object
name|key
init|=
name|preferencesView
operator|.
name|getTable
argument_list|()
operator|.
name|getModel
argument_list|()
operator|.
name|getValueAt
argument_list|(
name|selectedRow
argument_list|,
literal|0
argument_list|)
decl_stmt|;
return|return
name|customTemplates
operator|.
name|get
argument_list|(
name|key
operator|.
name|toString
argument_list|()
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unused"
argument_list|)
specifier|public
name|void
name|generateAction
parameter_list|()
throws|throws
name|Exception
block|{
name|putTemplateTextInRepository
argument_list|()
expr_stmt|;
name|Injector
name|injector
init|=
name|getInjector
argument_list|()
decl_stmt|;
name|ClassGenerationAction
name|action
init|=
name|injector
operator|.
name|getInstance
argument_list|(
name|ClassGenerationActionFactory
operator|.
name|class
argument_list|)
operator|.
name|createAction
argument_list|(
name|getCgenConfiguration
argument_list|()
argument_list|)
decl_stmt|;
name|StringWriter
name|writer
init|=
name|injector
operator|.
name|getInstance
argument_list|(
name|TPL_EDITOR_WRITER
argument_list|)
decl_stmt|;
name|action
operator|.
name|addEntities
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|getSelectedEntity
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|int
name|caretPosition
init|=
name|view
operator|.
name|getEditingTemplatePane
argument_list|()
operator|.
name|getCaretPosition
argument_list|()
decl_stmt|;
try|try
block|{
name|action
operator|.
name|execute
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ParseErrorException
name|pe
parameter_list|)
block|{
name|caretPosition
operator|=
name|getErrorCaretPosition
argument_list|(
name|pe
argument_list|)
expr_stmt|;
name|writer
operator|.
name|write
argument_list|(
name|pe
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|writer
operator|.
name|write
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|view
operator|.
name|getEditingTemplatePane
argument_list|()
operator|.
name|setCaretPosition
argument_list|(
name|caretPosition
argument_list|)
expr_stmt|;
name|view
operator|.
name|getClassPreviewPane
argument_list|()
operator|.
name|setText
argument_list|(
name|writer
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|.
name|getClassPreviewPane
argument_list|()
operator|.
name|setCaretPosition
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|putTemplateTextInRepository
parameter_list|()
block|{
name|StringResourceLoader
operator|.
name|setRepository
argument_list|(
name|TEMPLATE_EDITOR_REPO
argument_list|,
operator|new
name|StringResourceRepositoryImpl
argument_list|()
argument_list|)
expr_stmt|;
name|StringResourceRepository
name|repo
init|=
name|StringResourceLoader
operator|.
name|getRepository
argument_list|(
name|TEMPLATE_EDITOR_REPO
argument_list|)
decl_stmt|;
name|repo
operator|.
name|putStringResource
argument_list|(
name|EDITED_TEMPLATE
argument_list|,
name|view
operator|.
name|getTemplateText
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|Injector
name|getInjector
parameter_list|()
block|{
name|DataChannelMetaData
name|metaData
init|=
name|getApplication
argument_list|()
operator|.
name|getMetaData
argument_list|()
decl_stmt|;
return|return
operator|new
name|ToolsInjectorBuilder
argument_list|()
operator|.
name|addModule
argument_list|(
name|binder
lambda|->
name|binder
operator|.
name|bind
argument_list|(
name|DataChannelMetaData
operator|.
name|class
argument_list|)
operator|.
name|toInstance
argument_list|(
name|metaData
argument_list|)
argument_list|)
operator|.
name|addModule
argument_list|(
name|binder
lambda|->
name|binder
operator|.
name|bind
argument_list|(
name|ClassGenerationActionFactory
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|PreviewClassGenerationFactory
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|addModule
argument_list|(
name|binder
lambda|->
name|binder
operator|.
name|bind
argument_list|(
name|TPL_EDITOR_WRITER
argument_list|)
operator|.
name|to
argument_list|(
name|StringWriter
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|create
argument_list|()
return|;
block|}
specifier|private
name|CgenConfiguration
name|getCgenConfiguration
parameter_list|()
block|{
name|CgenConfiguration
name|cgenConfiguration
init|=
operator|new
name|CgenConfiguration
argument_list|()
decl_stmt|;
name|cgenConfiguration
operator|.
name|setMakePairs
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|cgenConfiguration
operator|.
name|setTemplate
argument_list|(
name|EDITED_TEMPLATE
argument_list|)
expr_stmt|;
name|cgenConfiguration
operator|.
name|setDataMap
argument_list|(
name|currentDataMap
argument_list|)
expr_stmt|;
return|return
name|cgenConfiguration
return|;
block|}
specifier|private
name|int
name|getErrorCaretPosition
parameter_list|(
name|ParseErrorException
name|e
parameter_list|)
throws|throws
name|BadLocationException
block|{
name|int
name|errorLineNumber
init|=
name|e
operator|.
name|getLineNumber
argument_list|()
decl_stmt|;
return|return
name|view
operator|.
name|getEditingTemplatePane
argument_list|()
operator|.
name|getLineStartOffset
argument_list|(
name|errorLineNumber
operator|-
literal|1
argument_list|)
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unused"
argument_list|)
specifier|public
name|void
name|findAction
parameter_list|()
block|{
operator|new
name|FindController
argument_list|(
name|this
argument_list|)
operator|.
name|startupAction
argument_list|()
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unused"
argument_list|)
specifier|public
name|void
name|findAndReplaceAction
parameter_list|()
block|{
operator|new
name|FindAndReplaceController
argument_list|(
name|this
argument_list|)
operator|.
name|startupAction
argument_list|()
expr_stmt|;
block|}
specifier|private
name|ObjEntity
name|getSelectedEntity
parameter_list|()
block|{
name|String
name|selectedEntityName
init|=
name|view
operator|.
name|getSelectedEntityName
argument_list|()
decl_stmt|;
if|if
condition|(
name|currentDataMap
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
return|return
name|currentDataMap
operator|.
name|getObjEntity
argument_list|(
name|selectedEntityName
argument_list|)
return|;
block|}
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|getEntityNames
parameter_list|()
block|{
if|if
condition|(
name|currentDataMap
operator|==
literal|null
condition|)
block|{
return|return
name|Collections
operator|.
name|emptyList
argument_list|()
return|;
block|}
return|return
name|currentDataMap
operator|.
name|getObjEntities
argument_list|()
operator|.
name|stream
argument_list|()
operator|.
name|map
argument_list|(
name|ObjEntity
operator|::
name|getName
argument_list|)
operator|.
name|collect
argument_list|(
name|Collectors
operator|.
name|toList
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

