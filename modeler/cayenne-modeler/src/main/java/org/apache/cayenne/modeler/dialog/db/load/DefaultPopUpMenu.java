begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|db
operator|.
name|load
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|ProjectController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|action
operator|.
name|dbimport
operator|.
name|DeleteNodeAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|action
operator|.
name|dbimport
operator|.
name|EditNodeAction
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JMenuItem
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPopupMenu
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTree
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionListener
import|;
end_import

begin_comment
comment|/**  * @since 4.1  */
end_comment

begin_class
specifier|public
class|class
name|DefaultPopUpMenu
extends|extends
name|JPopupMenu
block|{
specifier|protected
name|JMenuItem
name|rename
decl_stmt|;
specifier|protected
name|JMenuItem
name|delete
decl_stmt|;
specifier|protected
name|DbImportTreeNode
name|selectedElement
decl_stmt|;
specifier|protected
name|DbImportTreeNode
name|parentElement
decl_stmt|;
specifier|protected
name|JTree
name|tree
decl_stmt|;
specifier|protected
name|ProjectController
name|projectController
decl_stmt|;
specifier|public
name|DefaultPopUpMenu
parameter_list|()
block|{
name|rename
operator|=
operator|new
name|JMenuItem
argument_list|(
literal|"Rename"
argument_list|)
expr_stmt|;
name|delete
operator|=
operator|new
name|JMenuItem
argument_list|(
literal|"Delete"
argument_list|)
expr_stmt|;
name|this
operator|.
name|add
argument_list|(
name|rename
argument_list|)
expr_stmt|;
name|this
operator|.
name|add
argument_list|(
name|delete
argument_list|)
expr_stmt|;
name|initListeners
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|initListeners
parameter_list|()
block|{
name|rename
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
if|if
condition|(
operator|(
name|selectedElement
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|parentElement
operator|!=
literal|null
operator|)
condition|)
block|{
name|projectController
operator|.
name|getApplication
argument_list|()
operator|.
name|getActionManager
argument_list|()
operator|.
name|getAction
argument_list|(
name|EditNodeAction
operator|.
name|class
argument_list|)
operator|.
name|actionPerformed
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|delete
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
if|if
condition|(
operator|(
name|selectedElement
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|parentElement
operator|!=
literal|null
operator|)
condition|)
block|{
name|projectController
operator|.
name|getApplication
argument_list|()
operator|.
name|getActionManager
argument_list|()
operator|.
name|getAction
argument_list|(
name|DeleteNodeAction
operator|.
name|class
argument_list|)
operator|.
name|actionPerformed
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setSelectedElement
parameter_list|(
name|DbImportTreeNode
name|selectedElement
parameter_list|)
block|{
name|this
operator|.
name|selectedElement
operator|=
name|selectedElement
expr_stmt|;
block|}
specifier|public
name|void
name|setParentElement
parameter_list|(
name|DbImportTreeNode
name|parentElement
parameter_list|)
block|{
name|this
operator|.
name|parentElement
operator|=
name|parentElement
expr_stmt|;
block|}
specifier|public
name|void
name|setTree
parameter_list|(
name|JTree
name|tree
parameter_list|)
block|{
name|this
operator|.
name|tree
operator|=
name|tree
expr_stmt|;
block|}
specifier|public
name|void
name|setProjectController
parameter_list|(
name|ProjectController
name|projectController
parameter_list|)
block|{
name|this
operator|.
name|projectController
operator|=
name|projectController
expr_stmt|;
block|}
block|}
end_class

end_unit

