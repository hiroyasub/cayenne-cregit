begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|pref
package|;
end_package

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|builder
operator|.
name|PanelBuilder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|layout
operator|.
name|CellConstraints
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|layout
operator|.
name|FormLayout
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|*
import|;
end_import

begin_comment
comment|/**  */
end_comment

begin_class
specifier|public
class|class
name|GeneralPreferencesView
extends|extends
name|JPanel
block|{
specifier|protected
name|EncodingSelectorView
name|encodingSelector
decl_stmt|;
specifier|protected
name|JLabel
name|encodingSelectorLabel
decl_stmt|;
specifier|protected
name|JCheckBox
name|autoLoadProjectBox
decl_stmt|;
specifier|protected
name|JCheckBox
name|deletePromptBox
decl_stmt|;
specifier|public
name|GeneralPreferencesView
parameter_list|()
block|{
name|this
operator|.
name|encodingSelector
operator|=
operator|new
name|EncodingSelectorView
argument_list|()
expr_stmt|;
name|this
operator|.
name|encodingSelectorLabel
operator|=
operator|new
name|JLabel
argument_list|(
literal|"File Encoding:"
argument_list|)
expr_stmt|;
name|this
operator|.
name|autoLoadProjectBox
operator|=
operator|new
name|JCheckBox
argument_list|(
literal|"Automatically Load Last Opened Project"
argument_list|)
expr_stmt|;
name|this
operator|.
name|deletePromptBox
operator|=
operator|new
name|JCheckBox
argument_list|(
literal|"Always Delete Items Without Prompt"
argument_list|)
expr_stmt|;
name|FormLayout
name|layout
init|=
operator|new
name|FormLayout
argument_list|(
literal|"right:pref, 3dlu, 30dlu, 3dlu, fill:70dlu"
argument_list|,
literal|"p, 3dlu, p, 12dlu, p, 30dlu, p, 12dlu, p, 3dlu, p, fill:40dlu:grow"
argument_list|)
decl_stmt|;
name|CellConstraints
name|cc
init|=
operator|new
name|CellConstraints
argument_list|()
decl_stmt|;
name|PanelBuilder
name|builder
init|=
operator|new
name|PanelBuilder
argument_list|(
name|layout
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setDefaultDialogBorder
argument_list|()
expr_stmt|;
name|builder
operator|.
name|addSeparator
argument_list|(
literal|"General Preferences"
argument_list|,
name|cc
operator|.
name|xyw
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|encodingSelectorLabel
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|1
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|encodingSelector
argument_list|,
name|cc
operator|.
name|xywh
argument_list|(
literal|3
argument_list|,
literal|5
argument_list|,
literal|3
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|autoLoadProjectBox
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|1
argument_list|,
literal|7
argument_list|,
name|CellConstraints
operator|.
name|LEFT
argument_list|,
name|CellConstraints
operator|.
name|DEFAULT
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|addSeparator
argument_list|(
literal|"Editor Preferences"
argument_list|,
name|cc
operator|.
name|xyw
argument_list|(
literal|1
argument_list|,
literal|9
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|deletePromptBox
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|1
argument_list|,
literal|11
argument_list|,
name|CellConstraints
operator|.
name|LEFT
argument_list|,
name|CellConstraints
operator|.
name|DEFAULT
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|setLayout
argument_list|(
operator|new
name|BorderLayout
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|add
argument_list|(
name|builder
operator|.
name|getPanel
argument_list|()
argument_list|,
name|BorderLayout
operator|.
name|CENTER
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setEnabled
parameter_list|(
name|boolean
name|b
parameter_list|)
block|{
name|super
operator|.
name|setEnabled
argument_list|(
name|b
argument_list|)
expr_stmt|;
name|encodingSelector
operator|.
name|setEnabled
argument_list|(
name|b
argument_list|)
expr_stmt|;
name|encodingSelectorLabel
operator|.
name|setEnabled
argument_list|(
name|b
argument_list|)
expr_stmt|;
name|autoLoadProjectBox
operator|.
name|setEnabled
argument_list|(
name|b
argument_list|)
expr_stmt|;
name|deletePromptBox
operator|.
name|setEnabled
argument_list|(
name|b
argument_list|)
expr_stmt|;
block|}
specifier|public
name|EncodingSelectorView
name|getEncodingSelector
parameter_list|()
block|{
return|return
name|encodingSelector
return|;
block|}
specifier|public
name|JCheckBox
name|getAutoLoadProject
parameter_list|()
block|{
return|return
name|autoLoadProjectBox
return|;
block|}
specifier|public
name|JCheckBox
name|getDeletePrompt
parameter_list|()
block|{
return|return
name|deletePromptBox
return|;
block|}
block|}
end_class

end_unit

