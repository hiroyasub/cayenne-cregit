begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|graph
operator|.
name|extension
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|DataChannelDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|xml
operator|.
name|DataChannelMetaData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|graph
operator|.
name|GraphMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|graph
operator|.
name|GraphRegistry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|project
operator|.
name|extension
operator|.
name|BaseSaverDelegate
import|;
end_import

begin_comment
comment|/**  * @since 4.1  */
end_comment

begin_class
class|class
name|GraphSaverDelegate
extends|extends
name|BaseSaverDelegate
block|{
name|DataChannelMetaData
name|metaData
decl_stmt|;
name|GraphSaverDelegate
parameter_list|(
name|DataChannelMetaData
name|metaData
parameter_list|)
block|{
name|this
operator|.
name|metaData
operator|=
name|metaData
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Void
name|visitDataChannelDescriptor
parameter_list|(
name|DataChannelDescriptor
name|channelDescriptor
parameter_list|)
block|{
if|if
condition|(
name|isStandalone
argument_list|()
condition|)
block|{
name|printGraphs
argument_list|(
name|channelDescriptor
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|printInclude
argument_list|(
name|channelDescriptor
argument_list|)
expr_stmt|;
block|}
return|return
literal|null
return|;
block|}
specifier|private
name|void
name|printGraphs
parameter_list|(
name|DataChannelDescriptor
name|channelDescriptor
parameter_list|)
block|{
name|GraphRegistry
name|registry
init|=
name|metaData
operator|.
name|get
argument_list|(
name|channelDescriptor
argument_list|,
name|GraphRegistry
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|registry
operator|==
literal|null
condition|)
block|{
return|return;
block|}
name|GraphMap
name|map
init|=
name|registry
operator|.
name|getGraphMap
argument_list|(
name|channelDescriptor
argument_list|)
decl_stmt|;
name|encoder
operator|.
name|start
argument_list|(
literal|"graphs"
argument_list|)
operator|.
name|attribute
argument_list|(
literal|"xmlns"
argument_list|,
name|GraphExtension
operator|.
name|NAMESPACE
argument_list|)
operator|.
name|attribute
argument_list|(
literal|"selected"
argument_list|,
name|map
operator|.
name|getSelectedType
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|.
name|nested
argument_list|(
name|map
argument_list|,
name|getParentDelegate
argument_list|()
argument_list|)
operator|.
name|end
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|printInclude
parameter_list|(
name|DataChannelDescriptor
name|channelDescriptor
parameter_list|)
block|{
name|encoder
operator|.
name|start
argument_list|(
literal|"xi:include"
argument_list|)
operator|.
name|attribute
argument_list|(
literal|"xmlns:xi"
argument_list|,
literal|"http://www.w3.org/2001/XInclude"
argument_list|)
operator|.
name|attribute
argument_list|(
literal|"href"
argument_list|,
name|channelDescriptor
operator|.
name|getName
argument_list|()
operator|+
literal|".graph.xml"
argument_list|)
operator|.
name|end
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

