begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|editor
operator|.
name|dbimport
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|reverse
operator|.
name|dbimport
operator|.
name|Catalog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|reverse
operator|.
name|dbimport
operator|.
name|FilterContainer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|reverse
operator|.
name|dbimport
operator|.
name|IncludeTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|reverse
operator|.
name|dbimport
operator|.
name|ReverseEngineering
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|reverse
operator|.
name|dbimport
operator|.
name|Schema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|reverse
operator|.
name|dbimport
operator|.
name|SchemaContainer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|db
operator|.
name|load
operator|.
name|DbImportTreeNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|editor
operator|.
name|dbimport
operator|.
name|tree
operator|.
name|NodeType
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Comparator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * @since 5.0  */
end_comment

begin_class
specifier|public
class|class
name|DbImportSorter
block|{
specifier|private
specifier|static
specifier|final
name|Comparator
argument_list|<
name|DbImportTreeNode
argument_list|>
name|NODE_COMPARATOR
init|=
name|Comparator
operator|.
name|comparing
argument_list|(
name|DbImportTreeNode
operator|::
name|getNodeType
argument_list|)
operator|.
name|thenComparing
argument_list|(
name|DbImportTreeNode
operator|::
name|getSimpleNodeName
argument_list|)
decl_stmt|;
specifier|public
specifier|static
name|void
name|sortNode
parameter_list|(
name|DbImportTreeNode
name|node
parameter_list|)
block|{
name|sortNodeItems
argument_list|(
name|node
argument_list|)
expr_stmt|;
name|syncUserObjectItems
argument_list|(
name|node
argument_list|)
expr_stmt|;
block|}
specifier|public
specifier|static
name|void
name|sortNodeWithAllChildren
parameter_list|(
name|DbImportTreeNode
name|node
parameter_list|)
block|{
name|DbImportSorter
operator|.
name|sortNode
argument_list|(
name|node
argument_list|)
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|node
operator|.
name|getChildCount
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
name|sortNodeWithAllChildren
argument_list|(
operator|(
name|DbImportTreeNode
operator|)
name|node
operator|.
name|getChildAt
argument_list|(
name|i
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|void
name|sortNodeItems
parameter_list|(
name|DbImportTreeNode
name|node
parameter_list|)
block|{
name|List
argument_list|<
name|DbImportTreeNode
argument_list|>
name|childNodes
init|=
name|node
operator|.
name|getChildNodes
argument_list|()
decl_stmt|;
name|node
operator|.
name|removeAllChildren
argument_list|()
expr_stmt|;
name|childNodes
operator|.
name|sort
argument_list|(
name|NODE_COMPARATOR
argument_list|)
expr_stmt|;
name|childNodes
operator|.
name|forEach
argument_list|(
name|node
operator|::
name|add
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|syncUserObjectItems
parameter_list|(
name|DbImportTreeNode
name|parentNode
parameter_list|)
block|{
name|Object
name|userObject
init|=
name|parentNode
operator|.
name|getUserObject
argument_list|()
decl_stmt|;
if|if
condition|(
name|parentNode
operator|.
name|isReverseEngineering
argument_list|()
condition|)
block|{
name|syncCatalogs
argument_list|(
name|parentNode
argument_list|,
operator|(
name|ReverseEngineering
operator|)
name|userObject
argument_list|)
expr_stmt|;
name|syncSchemas
argument_list|(
name|parentNode
argument_list|,
operator|(
name|ReverseEngineering
operator|)
name|userObject
argument_list|)
expr_stmt|;
name|syncPatternParams
argument_list|(
name|parentNode
argument_list|,
operator|(
name|ReverseEngineering
operator|)
name|userObject
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|parentNode
operator|.
name|isCatalog
argument_list|()
condition|)
block|{
name|syncSchemas
argument_list|(
name|parentNode
argument_list|,
operator|(
name|Catalog
operator|)
name|userObject
argument_list|)
expr_stmt|;
name|syncPatternParams
argument_list|(
name|parentNode
argument_list|,
operator|(
name|Catalog
operator|)
name|userObject
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|parentNode
operator|.
name|isSchema
argument_list|()
condition|)
block|{
name|syncPatternParams
argument_list|(
name|parentNode
argument_list|,
operator|(
name|Schema
operator|)
name|userObject
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|parentNode
operator|.
name|isIncludeTable
argument_list|()
condition|)
block|{
name|syncTablesColumns
argument_list|(
name|parentNode
argument_list|,
operator|(
name|IncludeTable
operator|)
name|userObject
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
name|void
name|syncCatalogs
parameter_list|(
name|DbImportTreeNode
name|node
parameter_list|,
name|ReverseEngineering
name|reverseEngineering
parameter_list|)
block|{
name|syncItemsInContainer
argument_list|(
name|reverseEngineering
operator|.
name|getCatalogs
argument_list|()
argument_list|,
name|node
argument_list|,
name|NodeType
operator|.
name|CATALOG
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|syncSchemas
parameter_list|(
name|DbImportTreeNode
name|node
parameter_list|,
name|SchemaContainer
name|schemaContainer
parameter_list|)
block|{
name|syncItemsInContainer
argument_list|(
name|schemaContainer
operator|.
name|getSchemas
argument_list|()
argument_list|,
name|node
argument_list|,
name|NodeType
operator|.
name|SCHEMA
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|syncPatternParams
parameter_list|(
name|DbImportTreeNode
name|node
parameter_list|,
name|FilterContainer
name|container
parameter_list|)
block|{
name|syncItemsInContainer
argument_list|(
name|container
operator|.
name|getIncludeTables
argument_list|()
argument_list|,
name|node
argument_list|,
name|NodeType
operator|.
name|INCLUDE_TABLE
argument_list|)
expr_stmt|;
name|syncItemsInContainer
argument_list|(
name|container
operator|.
name|getExcludeTables
argument_list|()
argument_list|,
name|node
argument_list|,
name|NodeType
operator|.
name|EXCLUDE_TABLE
argument_list|)
expr_stmt|;
name|syncItemsInContainer
argument_list|(
name|container
operator|.
name|getIncludeColumns
argument_list|()
argument_list|,
name|node
argument_list|,
name|NodeType
operator|.
name|INCLUDE_COLUMN
argument_list|)
expr_stmt|;
name|syncItemsInContainer
argument_list|(
name|container
operator|.
name|getExcludeColumns
argument_list|()
argument_list|,
name|node
argument_list|,
name|NodeType
operator|.
name|EXCLUDE_COLUMN
argument_list|)
expr_stmt|;
name|syncItemsInContainer
argument_list|(
name|container
operator|.
name|getIncludeProcedures
argument_list|()
argument_list|,
name|node
argument_list|,
name|NodeType
operator|.
name|INCLUDE_PROCEDURE
argument_list|)
expr_stmt|;
name|syncItemsInContainer
argument_list|(
name|container
operator|.
name|getExcludeProcedures
argument_list|()
argument_list|,
name|node
argument_list|,
name|NodeType
operator|.
name|EXCLUDE_PROCEDURE
argument_list|)
expr_stmt|;
block|}
specifier|private
specifier|static
name|void
name|syncTablesColumns
parameter_list|(
name|DbImportTreeNode
name|node
parameter_list|,
name|IncludeTable
name|table
parameter_list|)
block|{
name|syncItemsInContainer
argument_list|(
name|table
operator|.
name|getIncludeColumns
argument_list|()
argument_list|,
name|node
argument_list|,
name|NodeType
operator|.
name|INCLUDE_COLUMN
argument_list|)
expr_stmt|;
name|syncItemsInContainer
argument_list|(
name|table
operator|.
name|getExcludeColumns
argument_list|()
argument_list|,
name|node
argument_list|,
name|NodeType
operator|.
name|EXCLUDE_COLUMN
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
block|{
literal|"rawtypes"
block|,
literal|"unchecked"
block|}
argument_list|)
specifier|private
specifier|static
name|void
name|syncItemsInContainer
parameter_list|(
name|Collection
name|collection
parameter_list|,
name|DbImportTreeNode
name|node
parameter_list|,
name|NodeType
name|type
parameter_list|)
block|{
name|collection
operator|.
name|clear
argument_list|()
expr_stmt|;
name|collection
operator|.
name|addAll
argument_list|(
name|node
operator|.
name|getChildrenObjectsByType
argument_list|(
name|type
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

