begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|cgen
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|gen
operator|.
name|CgenConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|gen
operator|.
name|ClassGenerationAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|editor
operator|.
name|cgen
operator|.
name|CustomModeController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|CayenneController
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JDialog
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|SwingUtilities
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Dialog
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Frame
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Window
import|;
end_import

begin_comment
comment|/**  * @since 4.1  */
end_comment

begin_class
specifier|public
class|class
name|TemplateDialog
extends|extends
name|CayenneController
block|{
specifier|protected
name|TemplateDialogView
name|view
decl_stmt|;
specifier|private
name|CgenConfiguration
name|cgenConfiguration
decl_stmt|;
specifier|private
name|String
name|template
decl_stmt|;
specifier|private
name|String
name|superTemplate
decl_stmt|;
specifier|public
name|TemplateDialog
parameter_list|(
specifier|final
name|CayenneController
name|parent
parameter_list|,
name|CgenConfiguration
name|cgenConfiguration
parameter_list|,
name|String
name|template
parameter_list|,
name|String
name|superTemplate
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|this
operator|.
name|cgenConfiguration
operator|=
name|cgenConfiguration
expr_stmt|;
name|this
operator|.
name|template
operator|=
name|template
expr_stmt|;
name|this
operator|.
name|superTemplate
operator|=
name|superTemplate
expr_stmt|;
specifier|final
name|Window
name|parentView
init|=
name|parent
operator|.
name|getView
argument_list|()
operator|instanceof
name|Window
condition|?
operator|(
name|Window
operator|)
name|parent
operator|.
name|getView
argument_list|()
else|:
name|SwingUtilities
operator|.
name|getWindowAncestor
argument_list|(
name|parent
operator|.
name|getView
argument_list|()
argument_list|)
decl_stmt|;
name|this
operator|.
name|view
operator|=
operator|(
name|parentView
operator|instanceof
name|Dialog
operator|)
condition|?
operator|new
name|TemplateDialogView
argument_list|(
operator|(
name|Dialog
operator|)
name|parentView
argument_list|,
name|template
argument_list|,
name|superTemplate
argument_list|)
else|:
operator|new
name|TemplateDialogView
argument_list|(
operator|(
name|Frame
operator|)
name|parentView
argument_list|,
name|template
argument_list|,
name|superTemplate
argument_list|)
expr_stmt|;
name|initListeners
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|startupAction
parameter_list|()
block|{
name|view
operator|.
name|pack
argument_list|()
expr_stmt|;
comment|// show
name|centerView
argument_list|()
expr_stmt|;
name|makeCloseableOnEscape
argument_list|()
expr_stmt|;
name|view
operator|.
name|setDefaultCloseOperation
argument_list|(
name|JDialog
operator|.
name|DISPOSE_ON_CLOSE
argument_list|)
expr_stmt|;
name|view
operator|.
name|setModal
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|view
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Component
name|getView
parameter_list|()
block|{
return|return
name|view
return|;
block|}
specifier|private
name|void
name|initListeners
parameter_list|()
block|{
name|view
operator|.
name|getUseDefault
argument_list|()
operator|.
name|addActionListener
argument_list|(
name|action
lambda|->
block|{
if|if
condition|(
name|template
operator|!=
literal|null
condition|)
block|{
name|cgenConfiguration
operator|.
name|setTemplate
argument_list|(
name|ClassGenerationAction
operator|.
name|SUBCLASS_TEMPLATE
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|superTemplate
operator|!=
literal|null
condition|)
block|{
name|cgenConfiguration
operator|.
name|setSuperTemplate
argument_list|(
name|ClassGenerationAction
operator|.
name|SUPERCLASS_TEMPLATE
argument_list|)
expr_stmt|;
block|}
name|view
operator|.
name|dispose
argument_list|()
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
name|view
operator|.
name|getAddTemplate
argument_list|()
operator|.
name|addActionListener
argument_list|(
name|action
lambda|->
block|{
operator|(
operator|(
name|CustomModeController
operator|)
name|parent
operator|)
operator|.
name|addTemplateAction
argument_list|(
name|template
argument_list|,
name|superTemplate
argument_list|)
expr_stmt|;
name|view
operator|.
name|dispose
argument_list|()
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

