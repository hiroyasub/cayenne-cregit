begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|datadomain
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|WindowConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|DataRowStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|DataChannelDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|event
operator|.
name|DomainEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|event
operator|.
name|JMSBridgeFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|event
operator|.
name|JavaGroupsBridgeFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|ProjectController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|CayenneController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_comment
comment|/**  * A controller for CacheSyncConfigDialog and its subviews. This controller   * manages one main dialog view, and its subviews organized using CardLayout.  *   */
end_comment

begin_class
specifier|public
class|class
name|CacheSyncConfigController
extends|extends
name|CayenneController
block|{
specifier|private
specifier|static
name|Log
name|logObj
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|CacheSyncConfigController
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// using strings instead of the actioal factory classes, since we
comment|// JMS and JavaGroups libraries may not be around, and Modeler
comment|// may throw CNFE
specifier|private
specifier|static
specifier|final
name|String
name|JGROUPS_FACTORY_CLASS
init|=
literal|"org.apache.cayenne.event.JavaGroupsBridgeFactory"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|JMS_FACTORY_CLASS
init|=
literal|"org.apache.cayenne.event.JMSBridgeFactory"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|SAVE_CONFIG_CONTROL
init|=
literal|"Done"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|CANCEL_CONFIG_CONTROL
init|=
literal|"Cancel"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|JGROUPS_DEFAULT_CONTROL
init|=
literal|"Standard Configuration"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|JGROUPS_URL_CONTROL
init|=
literal|"Use Configuration File"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|JGROUPS_FACTORY_LABEL
init|=
literal|"JavaGroups Multicast (Default)"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|JMS_FACTORY_LABEL
init|=
literal|"JMS Transport"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|CUSTOM_FACTORY_LABEL
init|=
literal|"Custom Transport"
decl_stmt|;
specifier|protected
name|Map
name|existingCards
decl_stmt|;
specifier|protected
name|Map
name|properties
decl_stmt|;
specifier|protected
name|boolean
name|modified
decl_stmt|;
specifier|protected
name|ProjectController
name|eventController
decl_stmt|;
specifier|protected
name|CacheSyncConfigView
name|view
decl_stmt|;
specifier|public
name|CacheSyncConfigController
parameter_list|(
name|ProjectController
name|eventController
parameter_list|)
block|{
name|super
argument_list|(
name|eventController
argument_list|)
expr_stmt|;
name|this
operator|.
name|eventController
operator|=
name|eventController
expr_stmt|;
block|}
comment|/**      * Creates and shows a new modal dialog window.      */
specifier|public
name|void
name|startup
parameter_list|()
block|{
name|DataChannelDescriptor
name|domain
init|=
operator|(
name|DataChannelDescriptor
operator|)
name|eventController
operator|.
name|getProject
argument_list|()
operator|.
name|getRootNode
argument_list|()
decl_stmt|;
name|String
name|factory
init|=
operator|(
name|String
operator|)
name|domain
operator|.
name|getProperties
argument_list|()
operator|.
name|get
argument_list|(
name|DataRowStore
operator|.
name|EVENT_BRIDGE_FACTORY_PROPERTY
argument_list|)
decl_stmt|;
name|view
operator|=
operator|new
name|CacheSyncConfigView
argument_list|()
expr_stmt|;
name|initView
argument_list|()
expr_stmt|;
name|properties
operator|=
operator|new
name|HashMap
argument_list|(
operator|(
operator|(
name|DataChannelDescriptor
operator|)
name|eventController
operator|.
name|getProject
argument_list|()
operator|.
name|getRootNode
argument_list|()
operator|)
operator|.
name|getProperties
argument_list|()
argument_list|)
expr_stmt|;
comment|// build cards, showing the one corresponding to DataDomain state
name|prepareChildren
argument_list|(
name|factory
argument_list|)
expr_stmt|;
name|view
operator|.
name|pack
argument_list|()
expr_stmt|;
name|view
operator|.
name|setDefaultCloseOperation
argument_list|(
name|WindowConstants
operator|.
name|DISPOSE_ON_CLOSE
argument_list|)
expr_stmt|;
name|view
operator|.
name|setModal
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|makeCloseableOnEscape
argument_list|()
expr_stmt|;
name|centerView
argument_list|()
expr_stmt|;
name|view
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Component
name|getView
parameter_list|()
block|{
return|return
name|this
operator|.
name|view
return|;
block|}
specifier|private
name|void
name|initView
parameter_list|()
block|{
name|view
operator|.
name|getCancelButton
argument_list|()
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|view
operator|.
name|dispose
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|view
operator|.
name|getSaveButton
argument_list|()
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|commitChanges
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|view
operator|.
name|getTypeSelector
argument_list|()
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|selectCard
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|selectCard
parameter_list|()
block|{
name|view
operator|.
name|showCard
argument_list|(
operator|(
name|String
operator|)
name|view
operator|.
name|getTypeSelector
argument_list|()
operator|.
name|getSelectedItem
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|jgroupsDefaultConfig
parameter_list|()
block|{
name|JGroupsConfigPanel
name|view
init|=
operator|(
name|JGroupsConfigPanel
operator|)
name|existingCards
operator|.
name|get
argument_list|(
name|JGROUPS_FACTORY_LABEL
argument_list|)
decl_stmt|;
if|if
condition|(
name|view
operator|!=
literal|null
condition|)
block|{
name|view
operator|.
name|showDefaultConfig
argument_list|()
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|jgroupsURLConfig
parameter_list|()
block|{
name|JGroupsConfigPanel
name|view
init|=
operator|(
name|JGroupsConfigPanel
operator|)
name|existingCards
operator|.
name|get
argument_list|(
name|JGROUPS_FACTORY_LABEL
argument_list|)
decl_stmt|;
if|if
condition|(
name|view
operator|!=
literal|null
condition|)
block|{
name|view
operator|.
name|showCustomConfig
argument_list|()
expr_stmt|;
block|}
block|}
comment|/**      * Stores configuration changes in the data domain properties.      */
specifier|protected
name|void
name|commitChanges
parameter_list|()
block|{
name|DataChannelDescriptor
name|domain
init|=
operator|(
name|DataChannelDescriptor
operator|)
name|eventController
operator|.
name|getProject
argument_list|()
operator|.
name|getRootNode
argument_list|()
decl_stmt|;
name|logObj
operator|.
name|warn
argument_list|(
literal|"domain properties BEFORE: "
operator|+
name|domain
operator|.
name|getProperties
argument_list|()
argument_list|)
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|props
init|=
name|domain
operator|.
name|getProperties
argument_list|()
decl_stmt|;
name|String
name|type
init|=
operator|(
name|String
operator|)
name|view
operator|.
name|getTypeSelector
argument_list|()
operator|.
name|getSelectedItem
argument_list|()
decl_stmt|;
if|if
condition|(
name|JGROUPS_FACTORY_LABEL
operator|.
name|equals
argument_list|(
name|type
argument_list|)
condition|)
block|{
name|JGroupsConfigPanel
name|jgroupsPanel
init|=
operator|(
name|JGroupsConfigPanel
operator|)
name|existingCards
operator|.
name|get
argument_list|(
name|JGROUPS_FACTORY_LABEL
argument_list|)
decl_stmt|;
name|props
operator|.
name|put
argument_list|(
name|DataRowStore
operator|.
name|EVENT_BRIDGE_FACTORY_PROPERTY
argument_list|,
name|JGROUPS_FACTORY_CLASS
argument_list|)
expr_stmt|;
if|if
condition|(
name|jgroupsPanel
operator|.
name|useConfigFile
operator|.
name|isSelected
argument_list|()
condition|)
block|{
name|props
operator|.
name|remove
argument_list|(
name|JavaGroupsBridgeFactory
operator|.
name|MCAST_ADDRESS_PROPERTY
argument_list|)
expr_stmt|;
name|props
operator|.
name|remove
argument_list|(
name|JavaGroupsBridgeFactory
operator|.
name|MCAST_PORT_PROPERTY
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
literal|""
operator|.
name|equals
argument_list|(
name|jgroupsPanel
operator|.
name|configURL
operator|.
name|getText
argument_list|()
argument_list|)
condition|)
block|{
name|props
operator|.
name|put
argument_list|(
name|JavaGroupsBridgeFactory
operator|.
name|JGROUPS_CONFIG_URL_PROPERTY
argument_list|,
name|jgroupsPanel
operator|.
name|configURL
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|props
operator|.
name|put
argument_list|(
name|JavaGroupsBridgeFactory
operator|.
name|JGROUPS_CONFIG_URL_PROPERTY
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|props
operator|.
name|remove
argument_list|(
name|JavaGroupsBridgeFactory
operator|.
name|JGROUPS_CONFIG_URL_PROPERTY
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
literal|""
operator|.
name|equals
argument_list|(
name|jgroupsPanel
operator|.
name|multicastAddress
operator|.
name|getText
argument_list|()
argument_list|)
condition|)
block|{
name|props
operator|.
name|put
argument_list|(
name|JavaGroupsBridgeFactory
operator|.
name|MCAST_ADDRESS_PROPERTY
argument_list|,
name|jgroupsPanel
operator|.
name|multicastAddress
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|props
operator|.
name|put
argument_list|(
name|JavaGroupsBridgeFactory
operator|.
name|MCAST_ADDRESS_PROPERTY
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
literal|""
operator|.
name|equals
argument_list|(
name|jgroupsPanel
operator|.
name|multicastPort
operator|.
name|getText
argument_list|()
argument_list|)
condition|)
block|{
name|props
operator|.
name|put
argument_list|(
name|JavaGroupsBridgeFactory
operator|.
name|MCAST_PORT_PROPERTY
argument_list|,
name|jgroupsPanel
operator|.
name|multicastPort
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|props
operator|.
name|put
argument_list|(
name|JavaGroupsBridgeFactory
operator|.
name|MCAST_PORT_PROPERTY
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|else if
condition|(
name|JMS_FACTORY_LABEL
operator|.
name|equals
argument_list|(
name|type
argument_list|)
condition|)
block|{
name|JMSConfigPanel
name|jmsPanel
init|=
operator|(
name|JMSConfigPanel
operator|)
name|existingCards
operator|.
name|get
argument_list|(
name|JMS_FACTORY_LABEL
argument_list|)
decl_stmt|;
name|props
operator|.
name|put
argument_list|(
name|DataRowStore
operator|.
name|EVENT_BRIDGE_FACTORY_PROPERTY
argument_list|,
name|JMS_FACTORY_CLASS
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
literal|""
operator|.
name|equals
argument_list|(
name|jmsPanel
operator|.
name|topicFactory
operator|.
name|getText
argument_list|()
argument_list|)
condition|)
block|{
name|props
operator|.
name|put
argument_list|(
name|JMSBridgeFactory
operator|.
name|TOPIC_CONNECTION_FACTORY_PROPERTY
argument_list|,
name|jmsPanel
operator|.
name|topicFactory
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|props
operator|.
name|put
argument_list|(
name|JMSBridgeFactory
operator|.
name|TOPIC_CONNECTION_FACTORY_PROPERTY
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|CUSTOM_FACTORY_LABEL
operator|.
name|equals
argument_list|(
name|type
argument_list|)
condition|)
block|{
name|CustomRemoteEventsConfigPanel
name|customPanel
init|=
operator|(
name|CustomRemoteEventsConfigPanel
operator|)
name|existingCards
operator|.
name|get
argument_list|(
name|CUSTOM_FACTORY_LABEL
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
literal|""
operator|.
name|equals
argument_list|(
name|customPanel
operator|.
name|factoryClass
operator|.
name|getText
argument_list|()
argument_list|)
condition|)
block|{
name|props
operator|.
name|put
argument_list|(
name|DataRowStore
operator|.
name|EVENT_BRIDGE_FACTORY_PROPERTY
argument_list|,
name|customPanel
operator|.
name|factoryClass
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|props
operator|.
name|put
argument_list|(
name|DataRowStore
operator|.
name|EVENT_BRIDGE_FACTORY_PROPERTY
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
name|logObj
operator|.
name|warn
argument_list|(
literal|"domain properties: "
operator|+
name|domain
operator|.
name|getProperties
argument_list|()
argument_list|)
expr_stmt|;
name|eventController
operator|.
name|fireDomainEvent
argument_list|(
operator|new
name|DomainEvent
argument_list|(
name|this
argument_list|,
name|domain
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|dispose
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|loadProperties
parameter_list|(
name|String
name|factory
parameter_list|)
block|{
name|String
name|configUrl
init|=
operator|(
name|String
operator|)
name|properties
operator|.
name|get
argument_list|(
name|JavaGroupsBridgeFactory
operator|.
name|JGROUPS_CONFIG_URL_PROPERTY
argument_list|)
decl_stmt|;
name|String
name|multicastAddress
init|=
operator|(
name|String
operator|)
name|properties
operator|.
name|get
argument_list|(
name|JavaGroupsBridgeFactory
operator|.
name|MCAST_ADDRESS_PROPERTY
argument_list|)
decl_stmt|;
name|String
name|multicastPort
init|=
operator|(
name|String
operator|)
name|properties
operator|.
name|get
argument_list|(
name|JavaGroupsBridgeFactory
operator|.
name|MCAST_PORT_PROPERTY
argument_list|)
decl_stmt|;
name|String
name|topicFactory
init|=
operator|(
name|String
operator|)
name|properties
operator|.
name|get
argument_list|(
name|JMSBridgeFactory
operator|.
name|TOPIC_CONNECTION_FACTORY_PROPERTY
argument_list|)
decl_stmt|;
name|JGroupsConfigPanel
name|jgroupsPanel
init|=
operator|(
name|JGroupsConfigPanel
operator|)
name|existingCards
operator|.
name|get
argument_list|(
name|JGROUPS_FACTORY_LABEL
argument_list|)
decl_stmt|;
if|if
condition|(
name|configUrl
operator|!=
literal|null
condition|)
block|{
name|jgroupsPanel
operator|.
name|useConfigFile
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jgroupsURLConfig
argument_list|()
expr_stmt|;
name|jgroupsPanel
operator|.
name|configURL
operator|.
name|setText
argument_list|(
name|configUrl
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|jgroupsPanel
operator|.
name|useDefaultConfig
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|jgroupsDefaultConfig
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|multicastAddress
operator|!=
literal|null
condition|)
block|{
name|jgroupsPanel
operator|.
name|multicastAddress
operator|.
name|setText
argument_list|(
name|multicastAddress
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|jgroupsPanel
operator|.
name|multicastAddress
operator|.
name|setText
argument_list|(
name|JavaGroupsBridgeFactory
operator|.
name|MCAST_ADDRESS_DEFAULT
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|multicastPort
operator|!=
literal|null
condition|)
block|{
name|jgroupsPanel
operator|.
name|multicastPort
operator|.
name|setText
argument_list|(
name|multicastPort
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|jgroupsPanel
operator|.
name|multicastPort
operator|.
name|setText
argument_list|(
name|JavaGroupsBridgeFactory
operator|.
name|MCAST_PORT_DEFAULT
argument_list|)
expr_stmt|;
block|}
name|JMSConfigPanel
name|jmsPanel
init|=
operator|(
name|JMSConfigPanel
operator|)
name|existingCards
operator|.
name|get
argument_list|(
name|JMS_FACTORY_LABEL
argument_list|)
decl_stmt|;
if|if
condition|(
name|topicFactory
operator|!=
literal|null
condition|)
block|{
name|jmsPanel
operator|.
name|topicFactory
operator|.
name|setText
argument_list|(
name|topicFactory
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|jmsPanel
operator|.
name|topicFactory
operator|.
name|setText
argument_list|(
name|JMSBridgeFactory
operator|.
name|TOPIC_CONNECTION_FACTORY_DEFAULT
argument_list|)
expr_stmt|;
block|}
name|CustomRemoteEventsConfigPanel
name|customPanel
init|=
operator|(
name|CustomRemoteEventsConfigPanel
operator|)
name|existingCards
operator|.
name|get
argument_list|(
name|CUSTOM_FACTORY_LABEL
argument_list|)
decl_stmt|;
name|String
name|factoryClass
init|=
operator|(
name|String
operator|)
name|properties
operator|.
name|get
argument_list|(
name|DataRowStore
operator|.
name|EVENT_BRIDGE_FACTORY_PROPERTY
argument_list|)
decl_stmt|;
if|if
condition|(
name|factoryClass
operator|!=
literal|null
condition|)
block|{
name|customPanel
operator|.
name|factoryClass
operator|.
name|setText
argument_list|(
name|factoryClass
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|customPanel
operator|.
name|factoryClass
operator|.
name|setText
argument_list|(
name|DataRowStore
operator|.
name|EVENT_BRIDGE_FACTORY_DEFAULT
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|JGROUPS_FACTORY_CLASS
operator|.
name|equals
argument_list|(
name|factory
argument_list|)
condition|)
block|{
name|view
operator|.
name|getTypeSelector
argument_list|()
operator|.
name|setSelectedItem
argument_list|(
name|JGROUPS_FACTORY_LABEL
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|JMS_FACTORY_CLASS
operator|.
name|equals
argument_list|(
name|factory
argument_list|)
condition|)
block|{
name|view
operator|.
name|getTypeSelector
argument_list|()
operator|.
name|setSelectedItem
argument_list|(
name|JMS_FACTORY_LABEL
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|view
operator|.
name|getTypeSelector
argument_list|()
operator|.
name|setSelectedItem
argument_list|(
name|CUSTOM_FACTORY_LABEL
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|prepareChildren
parameter_list|(
name|String
name|factory
parameter_list|)
block|{
name|existingCards
operator|=
operator|new
name|HashMap
argument_list|()
expr_stmt|;
name|CacheSyncConfigView
name|topView
init|=
operator|(
name|CacheSyncConfigView
operator|)
name|getView
argument_list|()
decl_stmt|;
comment|// note that none of the panels need a controller
comment|// if they issue controls, they will use this object taken from parent
name|JGroupsConfigPanel
name|jgroupsPanel
init|=
operator|new
name|JGroupsConfigPanel
argument_list|()
decl_stmt|;
name|existingCards
operator|.
name|put
argument_list|(
name|JGROUPS_FACTORY_LABEL
argument_list|,
name|jgroupsPanel
argument_list|)
expr_stmt|;
name|topView
operator|.
name|addCard
argument_list|(
name|jgroupsPanel
argument_list|,
name|JGROUPS_FACTORY_LABEL
argument_list|)
expr_stmt|;
name|jgroupsPanel
operator|.
name|getUseDefaultConfig
argument_list|()
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|jgroupsDefaultConfig
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|jgroupsPanel
operator|.
name|getUseConfigFile
argument_list|()
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|jgroupsURLConfig
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|JMSConfigPanel
name|jmsPanel
init|=
operator|new
name|JMSConfigPanel
argument_list|()
decl_stmt|;
name|existingCards
operator|.
name|put
argument_list|(
name|JMS_FACTORY_LABEL
argument_list|,
name|jmsPanel
argument_list|)
expr_stmt|;
name|topView
operator|.
name|addCard
argument_list|(
name|jmsPanel
argument_list|,
name|JMS_FACTORY_LABEL
argument_list|)
expr_stmt|;
name|CustomRemoteEventsConfigPanel
name|customFactoryPanel
init|=
operator|new
name|CustomRemoteEventsConfigPanel
argument_list|()
decl_stmt|;
name|existingCards
operator|.
name|put
argument_list|(
name|CUSTOM_FACTORY_LABEL
argument_list|,
name|customFactoryPanel
argument_list|)
expr_stmt|;
name|topView
operator|.
name|addCard
argument_list|(
name|customFactoryPanel
argument_list|,
name|CUSTOM_FACTORY_LABEL
argument_list|)
expr_stmt|;
if|if
condition|(
name|factory
operator|==
literal|null
condition|)
block|{
name|factory
operator|=
name|DataRowStore
operator|.
name|EVENT_BRIDGE_FACTORY_DEFAULT
expr_stmt|;
block|}
if|if
condition|(
name|JGROUPS_FACTORY_CLASS
operator|.
name|equals
argument_list|(
name|factory
argument_list|)
condition|)
block|{
operator|(
operator|(
name|CacheSyncConfigView
operator|)
name|getView
argument_list|()
operator|)
operator|.
name|showCard
argument_list|(
name|JGROUPS_FACTORY_LABEL
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|JMS_FACTORY_CLASS
operator|.
name|equals
argument_list|(
name|factory
argument_list|)
condition|)
block|{
operator|(
operator|(
name|CacheSyncConfigView
operator|)
name|getView
argument_list|()
operator|)
operator|.
name|showCard
argument_list|(
name|JMS_FACTORY_LABEL
argument_list|)
expr_stmt|;
block|}
else|else
block|{
operator|(
operator|(
name|CacheSyncConfigView
operator|)
name|getView
argument_list|()
operator|)
operator|.
name|showCard
argument_list|(
name|CUSTOM_FACTORY_LABEL
argument_list|)
expr_stmt|;
block|}
name|loadProperties
argument_list|(
name|factory
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

