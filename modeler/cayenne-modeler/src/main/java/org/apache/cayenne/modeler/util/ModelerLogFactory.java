begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
package|;
end_package

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|ILoggerFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * Factory for creating ModelerLogger instances.  */
end_comment

begin_class
specifier|public
class|class
name|ModelerLogFactory
implements|implements
name|ILoggerFactory
block|{
comment|/** 	 * Local cache of modeler loggers 	 */
specifier|protected
name|Map
argument_list|<
name|String
argument_list|,
name|ModelerLogger
argument_list|>
name|localCache
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|ignoreVelocoty
init|=
literal|"org.apache.velocity"
decl_stmt|;
specifier|public
name|ModelerLogFactory
parameter_list|()
block|{
name|localCache
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
block|}
specifier|public
name|ModelerLogger
name|getLogger
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|ModelerLogger
name|local
init|=
name|localCache
operator|.
name|get
argument_list|(
name|name
argument_list|)
decl_stmt|;
if|if
condition|(
name|local
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|name
operator|.
name|contains
argument_list|(
name|ignoreVelocoty
argument_list|)
condition|)
block|{
name|local
operator|=
operator|new
name|NoopModelerLogger
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|local
operator|=
operator|new
name|ModelerLogger
argument_list|(
name|name
argument_list|)
expr_stmt|;
block|}
name|localCache
operator|.
name|put
argument_list|(
name|name
argument_list|,
name|local
argument_list|)
expr_stmt|;
block|}
return|return
name|local
return|;
block|}
block|}
end_class

end_unit

