begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|editor
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|ProjectController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|action
operator|.
name|GenerateCodeAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|editor
operator|.
name|cgen
operator|.
name|domain
operator|.
name|CgenTabController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|event
operator|.
name|DomainDisplayEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|event
operator|.
name|DomainDisplayListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|event
operator|.
name|EntityDisplayEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|graph
operator|.
name|DataDomainGraphTab
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|*
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|event
operator|.
name|ChangeEvent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|event
operator|.
name|ChangeListener
import|;
end_import

begin_comment
comment|/**  * DataDomain editing tabs container   */
end_comment

begin_class
specifier|public
class|class
name|DataDomainTabbedView
extends|extends
name|JTabbedPane
implements|implements
name|ChangeListener
implements|,
name|DomainDisplayListener
block|{
name|ProjectController
name|mediator
decl_stmt|;
name|DataDomainGraphTab
name|graphTab
decl_stmt|;
specifier|private
name|JScrollPane
name|cgenView
decl_stmt|;
specifier|private
name|CgenTabController
name|cgenTabController
decl_stmt|;
comment|/**      * constructor      * @param mediator mediator instance      */
specifier|public
name|DataDomainTabbedView
parameter_list|(
name|ProjectController
name|mediator
parameter_list|)
block|{
name|this
operator|.
name|mediator
operator|=
name|mediator
expr_stmt|;
name|initView
argument_list|()
expr_stmt|;
block|}
comment|/**      * create tabs      */
specifier|private
name|void
name|initView
parameter_list|()
block|{
name|setTabPlacement
argument_list|(
name|JTabbedPane
operator|.
name|TOP
argument_list|)
expr_stmt|;
comment|// add panels to tabs
comment|// note that those panels that have no internal scrollable tables
comment|// must be wrapped in a scroll pane
name|JScrollPane
name|domainView
init|=
operator|new
name|JScrollPane
argument_list|(
operator|new
name|DataDomainView
argument_list|(
name|mediator
argument_list|)
argument_list|)
decl_stmt|;
name|addTab
argument_list|(
literal|"Main"
argument_list|,
name|domainView
argument_list|)
expr_stmt|;
name|graphTab
operator|=
operator|new
name|DataDomainGraphTab
argument_list|(
name|mediator
argument_list|)
expr_stmt|;
name|addTab
argument_list|(
literal|"Graph"
argument_list|,
name|graphTab
argument_list|)
expr_stmt|;
name|addChangeListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|mediator
operator|.
name|addDomainDisplayListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|cgenTabController
operator|=
operator|new
name|CgenTabController
argument_list|(
name|mediator
argument_list|)
expr_stmt|;
name|cgenView
operator|=
operator|new
name|JScrollPane
argument_list|(
name|cgenTabController
operator|.
name|getView
argument_list|()
argument_list|)
expr_stmt|;
name|addTab
argument_list|(
literal|"Class Generation"
argument_list|,
name|cgenView
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|stateChanged
parameter_list|(
name|ChangeEvent
name|e
parameter_list|)
block|{
if|if
condition|(
name|getSelectedComponent
argument_list|()
operator|==
name|graphTab
condition|)
block|{
name|graphTab
operator|.
name|refresh
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
name|getSelectedComponent
argument_list|()
operator|==
name|cgenView
condition|)
block|{
name|cgenTabController
operator|.
name|getView
argument_list|()
operator|.
name|initView
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|currentDomainChanged
parameter_list|(
name|DomainDisplayEvent
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|instanceof
name|EntityDisplayEvent
condition|)
block|{
comment|//need select an entity
name|setSelectedComponent
argument_list|(
name|graphTab
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|getSelectedComponent
argument_list|()
operator|==
name|cgenView
condition|)
block|{
name|fireStateChanged
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|e
operator|.
name|getSource
argument_list|()
operator|instanceof
name|GenerateCodeAction
condition|)
block|{
name|setSelectedComponent
argument_list|(
name|cgenView
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

