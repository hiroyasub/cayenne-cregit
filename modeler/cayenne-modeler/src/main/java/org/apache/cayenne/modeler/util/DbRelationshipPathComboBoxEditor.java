begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbRelationship
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|Application
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|editor
operator|.
name|ObjRelationshipTableModel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JLabel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JOptionPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTable
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|text
operator|.
name|JTextComponent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|FocusEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|FocusListener
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Pattern
import|;
end_import

begin_class
specifier|public
class|class
name|DbRelationshipPathComboBoxEditor
extends|extends
name|PathChooserComboBoxCellEditor
argument_list|<
name|ObjRelationshipTableModel
argument_list|>
implements|implements
name|FocusListener
block|{
specifier|private
specifier|static
specifier|final
name|int
name|REL_TARGET_PATH_COLUMN
init|=
literal|2
decl_stmt|;
specifier|private
specifier|static
name|int
name|enterPressedCount
init|=
literal|0
decl_stmt|;
specifier|private
name|JTable
name|table
decl_stmt|;
specifier|private
name|String
name|savePath
decl_stmt|;
specifier|private
name|ObjRelationshipTableModel
name|model
decl_stmt|;
annotation|@
name|Override
specifier|public
name|Component
name|getTableCellEditorComponent
parameter_list|(
name|JTable
name|table
parameter_list|,
name|Object
name|value
parameter_list|,
name|boolean
name|isSelected
parameter_list|,
name|int
name|row
parameter_list|,
name|int
name|column
parameter_list|)
block|{
name|this
operator|.
name|model
operator|=
operator|(
name|ObjRelationshipTableModel
operator|)
name|table
operator|.
name|getModel
argument_list|()
expr_stmt|;
name|this
operator|.
name|row
operator|=
name|row
expr_stmt|;
name|this
operator|.
name|table
operator|=
name|table
expr_stmt|;
name|treeModel
operator|=
name|createTreeModelForComboBox
argument_list|(
name|row
argument_list|)
expr_stmt|;
if|if
condition|(
name|treeModel
operator|==
literal|null
condition|)
block|{
return|return
operator|new
name|JLabel
argument_list|(
literal|"You should select table for this ObjectEntity"
argument_list|)
return|;
block|}
name|initializeCombo
argument_list|(
name|model
argument_list|,
name|row
argument_list|,
name|table
argument_list|)
expr_stmt|;
name|String
name|dbRelationshipPath
init|=
operator|(
operator|(
name|JTextComponent
operator|)
operator|(
name|comboBoxPathChooser
operator|)
operator|.
name|getEditor
argument_list|()
operator|.
name|getEditorComponent
argument_list|()
operator|)
operator|.
name|getText
argument_list|()
decl_stmt|;
name|previousEmbeddedLevel
operator|=
name|dbRelationshipPath
operator|.
name|split
argument_list|(
name|Pattern
operator|.
name|quote
argument_list|(
literal|"."
argument_list|)
argument_list|)
operator|.
name|length
expr_stmt|;
return|return
name|comboBoxPathChooser
return|;
block|}
annotation|@
name|Override
specifier|public
name|Object
name|getCellEditorValue
parameter_list|()
block|{
return|return
name|model
operator|.
name|getValueAt
argument_list|(
name|row
argument_list|,
name|REL_TARGET_PATH_COLUMN
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|initializeCombo
parameter_list|(
name|ObjRelationshipTableModel
name|model
parameter_list|,
name|int
name|row
parameter_list|,
specifier|final
name|JTable
name|table
parameter_list|)
block|{
name|super
operator|.
name|initializeCombo
argument_list|(
name|model
argument_list|,
name|row
argument_list|,
name|table
argument_list|)
expr_stmt|;
name|comboBoxPathChooser
operator|.
name|setSelectedItem
argument_list|(
name|model
operator|.
name|getRelationship
argument_list|(
name|row
argument_list|)
operator|.
name|getDbRelationshipPath
argument_list|()
argument_list|)
expr_stmt|;
name|enterPressedCount
operator|=
literal|0
expr_stmt|;
name|comboBoxPathChooser
operator|.
name|setToolTipText
argument_list|(
literal|"To choose relationship press enter two times.To choose next relationship press dot."
argument_list|)
expr_stmt|;
name|JTextComponent
name|textEditor
init|=
operator|(
name|JTextComponent
operator|)
operator|(
name|comboBoxPathChooser
operator|)
operator|.
name|getEditor
argument_list|()
operator|.
name|getEditorComponent
argument_list|()
decl_stmt|;
name|textEditor
operator|.
name|addFocusListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|savePath
operator|=
name|this
operator|.
name|model
operator|.
name|getRelationship
argument_list|(
name|row
argument_list|)
operator|.
name|getDbRelationshipPath
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|enterPressed
parameter_list|(
name|JTable
name|table
parameter_list|)
block|{
name|String
name|dbRelationshipPath
init|=
operator|(
operator|(
name|JTextComponent
operator|)
operator|(
name|comboBoxPathChooser
operator|)
operator|.
name|getEditor
argument_list|()
operator|.
name|getEditorComponent
argument_list|()
operator|)
operator|.
name|getText
argument_list|()
decl_stmt|;
name|changeObjEntity
argument_list|(
name|dbRelationshipPath
argument_list|)
expr_stmt|;
name|Object
name|currentNode
init|=
name|getCurrentNode
argument_list|(
name|dbRelationshipPath
argument_list|)
decl_stmt|;
name|String
index|[]
name|pathStrings
init|=
name|dbRelationshipPath
operator|.
name|split
argument_list|(
name|Pattern
operator|.
name|quote
argument_list|(
literal|"."
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|lastStringInPath
init|=
name|pathStrings
index|[
name|pathStrings
operator|.
name|length
operator|-
literal|1
index|]
decl_stmt|;
if|if
condition|(
name|lastStringInPath
operator|.
name|equals
argument_list|(
name|ModelerUtil
operator|.
name|getObjectName
argument_list|(
name|currentNode
argument_list|)
argument_list|)
operator|&&
name|currentNode
operator|instanceof
name|DbRelationship
condition|)
block|{
if|if
condition|(
name|enterPressedCount
operator|==
literal|1
condition|)
block|{
comment|//it is second time enter pressed.. so we will save input data
name|enterPressedCount
operator|=
literal|0
expr_stmt|;
if|if
condition|(
name|table
operator|.
name|getCellEditor
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|table
operator|.
name|getCellEditor
argument_list|()
operator|.
name|stopCellEditing
argument_list|()
expr_stmt|;
if|if
condition|(
name|dbRelationshipPath
operator|.
name|equals
argument_list|(
name|savePath
argument_list|)
condition|)
block|{
return|return;
block|}
comment|//we need object target to save it in model
name|DbEntity
name|lastEntity
init|=
operator|(
operator|(
name|DbRelationship
operator|)
name|currentNode
operator|)
operator|.
name|getTargetEntity
argument_list|()
decl_stmt|;
if|if
condition|(
name|lastEntity
operator|!=
literal|null
condition|)
block|{
name|Collection
argument_list|<
name|ObjEntity
argument_list|>
name|objEntities
init|=
operator|(
operator|(
name|DbRelationship
operator|)
name|currentNode
operator|)
operator|.
name|getTargetEntity
argument_list|()
operator|.
name|getDataMap
argument_list|()
operator|.
name|getMappedEntities
argument_list|(
name|lastEntity
argument_list|)
decl_stmt|;
name|ObjEntity
name|objectTarget
init|=
name|objEntities
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
name|objEntities
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|model
operator|.
name|getRelationship
argument_list|(
name|row
argument_list|)
operator|.
name|setTargetEntityName
argument_list|(
name|objectTarget
argument_list|)
expr_stmt|;
name|model
operator|.
name|setUpdatedValueAt
argument_list|(
name|dbRelationshipPath
argument_list|,
name|row
argument_list|,
name|REL_TARGET_PATH_COLUMN
argument_list|)
expr_stmt|;
name|model
operator|.
name|getRelationship
argument_list|(
name|row
argument_list|)
operator|.
name|setDbRelationshipPath
argument_list|(
name|dbRelationshipPath
argument_list|)
expr_stmt|;
block|}
name|model
operator|.
name|getRelationship
argument_list|(
name|row
argument_list|)
operator|.
name|setMapKey
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
name|table
operator|.
name|repaint
argument_list|()
expr_stmt|;
block|}
name|enterPressedCount
operator|=
literal|1
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|protected
name|void
name|processDotEntered
parameter_list|()
block|{
name|super
operator|.
name|processDotEntered
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|parsePathString
parameter_list|(
name|char
name|lastEnteredCharacter
parameter_list|)
block|{
name|super
operator|.
name|parsePathString
argument_list|(
name|lastEnteredCharacter
argument_list|)
expr_stmt|;
name|String
name|dbRelationshipPath
init|=
operator|(
operator|(
name|JTextComponent
operator|)
operator|(
name|comboBoxPathChooser
operator|)
operator|.
name|getEditor
argument_list|()
operator|.
name|getEditorComponent
argument_list|()
operator|)
operator|.
name|getText
argument_list|()
decl_stmt|;
name|changeObjEntity
argument_list|(
name|dbRelationshipPath
argument_list|)
expr_stmt|;
name|enterPressedCount
operator|=
literal|0
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|EntityTreeModel
name|createTreeModelForComboBox
parameter_list|(
name|int
name|relationshipIndexInTable
parameter_list|)
block|{
if|if
condition|(
name|model
operator|.
name|getRelationship
argument_list|(
name|relationshipIndexInTable
argument_list|)
operator|.
name|getSourceEntity
argument_list|()
operator|.
name|getDbEntity
argument_list|()
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
name|EntityTreeModel
name|treeModel
init|=
operator|new
name|EntityTreeModel
argument_list|(
name|model
operator|.
name|getRelationship
argument_list|(
name|relationshipIndexInTable
argument_list|)
operator|.
name|getSourceEntity
argument_list|()
operator|.
name|getDbEntity
argument_list|()
argument_list|)
decl_stmt|;
name|treeModel
operator|.
name|setFilter
argument_list|(
operator|new
name|EntityTreeRelationshipFilter
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|treeModel
return|;
block|}
annotation|@
name|Override
specifier|protected
name|Object
name|getCurrentNodeToInitializeCombo
parameter_list|(
name|ObjRelationshipTableModel
name|model
parameter_list|,
name|int
name|row
parameter_list|)
block|{
return|return
name|getCurrentNode
argument_list|(
name|getPathToInitializeCombo
argument_list|(
name|model
argument_list|,
name|row
argument_list|)
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|String
name|getPathToInitializeCombo
parameter_list|(
name|ObjRelationshipTableModel
name|model
parameter_list|,
name|int
name|row
parameter_list|)
block|{
name|String
name|pathString
init|=
name|model
operator|.
name|getRelationship
argument_list|(
name|row
argument_list|)
operator|.
name|getDbRelationshipPath
argument_list|()
decl_stmt|;
if|if
condition|(
name|pathString
operator|==
literal|null
condition|)
block|{
return|return
literal|""
return|;
block|}
name|String
index|[]
name|pathStrings
init|=
name|pathString
operator|.
name|split
argument_list|(
name|Pattern
operator|.
name|quote
argument_list|(
literal|"."
argument_list|)
argument_list|)
decl_stmt|;
name|String
name|lastStringInPath
init|=
name|pathStrings
index|[
name|pathStrings
operator|.
name|length
operator|-
literal|1
index|]
decl_stmt|;
return|return
name|pathString
operator|.
name|replaceAll
argument_list|(
name|lastStringInPath
operator|+
literal|'$'
argument_list|,
literal|""
argument_list|)
return|;
block|}
specifier|private
name|boolean
name|changeObjEntity
parameter_list|(
name|String
name|path
parameter_list|)
block|{
name|Object
name|currentNode
init|=
name|getCurrentNode
argument_list|(
name|path
argument_list|)
decl_stmt|;
if|if
condition|(
name|currentNode
operator|instanceof
name|DbEntity
condition|)
block|{
return|return
literal|false
return|;
block|}
name|DbEntity
name|lastEntity
init|=
operator|(
operator|(
name|DbRelationship
operator|)
name|currentNode
operator|)
operator|.
name|getTargetEntity
argument_list|()
decl_stmt|;
if|if
condition|(
name|lastEntity
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
name|Collection
argument_list|<
name|ObjEntity
argument_list|>
name|objEntities
init|=
operator|(
operator|(
name|DbRelationship
operator|)
name|currentNode
operator|)
operator|.
name|getTargetEntity
argument_list|()
operator|.
name|getDataMap
argument_list|()
operator|.
name|getMappedEntities
argument_list|(
name|lastEntity
argument_list|)
decl_stmt|;
name|ObjEntity
name|objectTarget
init|=
name|objEntities
operator|.
name|isEmpty
argument_list|()
condition|?
literal|null
else|:
name|objEntities
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|model
operator|.
name|getRelationship
argument_list|(
name|row
argument_list|)
operator|.
name|setTargetEntityName
argument_list|(
name|objectTarget
argument_list|)
expr_stmt|;
name|table
operator|.
name|repaint
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|focusGained
parameter_list|(
name|FocusEvent
name|focusEvent
parameter_list|)
block|{
block|}
annotation|@
name|Override
specifier|public
name|void
name|focusLost
parameter_list|(
name|FocusEvent
name|focusEvent
parameter_list|)
block|{
name|String
name|path
init|=
name|model
operator|.
name|getRelationship
argument_list|(
name|row
argument_list|)
operator|.
name|getDbRelationshipPath
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|changeObjEntity
argument_list|(
name|path
argument_list|)
condition|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|Application
operator|.
name|getFrame
argument_list|()
argument_list|,
literal|"Can't set dbAttribute path. At first set target entity in dbEntity."
argument_list|,
literal|"Error"
argument_list|,
name|JOptionPane
operator|.
name|ERROR_MESSAGE
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

