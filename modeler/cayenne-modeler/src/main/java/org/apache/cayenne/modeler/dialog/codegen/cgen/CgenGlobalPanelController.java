begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|codegen
operator|.
name|cgen
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|DataChannelDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|xml
operator|.
name|DataChannelMetaData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|gen
operator|.
name|ClassGenerationAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DataMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|Application
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|CodeTemplateManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|ProjectController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|event
operator|.
name|DataMapDisplayEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|pref
operator|.
name|FSPath
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|CayenneController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|project
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|util
operator|.
name|Util
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|*
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * @since 4.1  */
end_comment

begin_class
specifier|public
class|class
name|CgenGlobalPanelController
extends|extends
name|CayenneController
block|{
specifier|private
specifier|static
specifier|final
name|String
name|ALL_MODE_LABEL
init|=
literal|"Generate all"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|modesByLabel
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
comment|// correspond to non-public constants on MapClassGenerator.
specifier|private
specifier|static
specifier|final
name|String
name|MODE_DATAMAP
init|=
literal|"datamap"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|MODE_ENTITY
init|=
literal|"entity"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|MODE_ALL
init|=
literal|"all"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|DATA_MAP_MODE_LABEL
init|=
literal|"DataMap generation"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|ENTITY_MODE_LABEL
init|=
literal|"Entity and Embeddable generation"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|labelByMode
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
specifier|private
specifier|static
name|Logger
name|logObj
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|CgenGlobalPanelController
operator|.
name|class
argument_list|)
decl_stmt|;
static|static
block|{
name|modesByLabel
operator|.
name|put
argument_list|(
name|DATA_MAP_MODE_LABEL
argument_list|,
name|MODE_DATAMAP
argument_list|)
expr_stmt|;
name|modesByLabel
operator|.
name|put
argument_list|(
name|ENTITY_MODE_LABEL
argument_list|,
name|MODE_ENTITY
argument_list|)
expr_stmt|;
name|modesByLabel
operator|.
name|put
argument_list|(
name|ALL_MODE_LABEL
argument_list|,
name|MODE_ALL
argument_list|)
expr_stmt|;
name|labelByMode
operator|.
name|put
argument_list|(
name|MODE_DATAMAP
argument_list|,
name|DATA_MAP_MODE_LABEL
argument_list|)
expr_stmt|;
name|labelByMode
operator|.
name|put
argument_list|(
name|MODE_ENTITY
argument_list|,
name|ENTITY_MODE_LABEL
argument_list|)
expr_stmt|;
name|labelByMode
operator|.
name|put
argument_list|(
name|MODE_ALL
argument_list|,
name|ALL_MODE_LABEL
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|CgenGlobalPanel
name|view
decl_stmt|;
specifier|private
name|ProjectController
name|projectController
decl_stmt|;
specifier|private
name|Collection
argument_list|<
name|ClassGenerationAction
argument_list|>
name|generators
decl_stmt|;
name|CgenGlobalPanelController
parameter_list|(
name|CayenneController
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|this
operator|.
name|projectController
operator|=
name|Application
operator|.
name|getInstance
argument_list|()
operator|.
name|getFrameController
argument_list|()
operator|.
name|getProjectController
argument_list|()
expr_stmt|;
name|this
operator|.
name|view
operator|=
operator|new
name|CgenGlobalPanel
argument_list|(
name|projectController
argument_list|)
expr_stmt|;
name|this
operator|.
name|generators
operator|=
operator|new
name|HashSet
argument_list|<>
argument_list|()
expr_stmt|;
name|initSources
argument_list|()
expr_stmt|;
name|updateTemplates
argument_list|()
expr_stmt|;
name|initButtons
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|updateTemplates
parameter_list|()
block|{
name|String
index|[]
name|modeChoices
init|=
operator|new
name|String
index|[]
block|{
name|ENTITY_MODE_LABEL
block|,
name|DATA_MAP_MODE_LABEL
block|,
name|ALL_MODE_LABEL
block|}
decl_stmt|;
name|view
operator|.
name|getGenerationMode
argument_list|()
operator|.
name|setModel
argument_list|(
operator|new
name|DefaultComboBoxModel
argument_list|<>
argument_list|(
name|modeChoices
argument_list|)
argument_list|)
expr_stmt|;
name|CodeTemplateManager
name|templateManager
init|=
name|getApplication
argument_list|()
operator|.
name|getCodeTemplateManager
argument_list|()
decl_stmt|;
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|String
argument_list|>
name|customTemplates
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|templateManager
operator|.
name|getCustomTemplates
argument_list|()
operator|.
name|keySet
argument_list|()
argument_list|)
decl_stmt|;
name|Collections
operator|.
name|sort
argument_list|(
name|customTemplates
argument_list|)
expr_stmt|;
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|String
argument_list|>
name|superTemplates
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|templateManager
operator|.
name|getStandardSuperclassTemplates
argument_list|()
argument_list|)
decl_stmt|;
name|Collections
operator|.
name|sort
argument_list|(
name|superTemplates
argument_list|)
expr_stmt|;
name|superTemplates
operator|.
name|addAll
argument_list|(
name|customTemplates
argument_list|)
expr_stmt|;
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|String
argument_list|>
name|subTemplates
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|templateManager
operator|.
name|getStandardSubclassTemplates
argument_list|()
argument_list|)
decl_stmt|;
name|Collections
operator|.
name|sort
argument_list|(
name|subTemplates
argument_list|)
expr_stmt|;
name|subTemplates
operator|.
name|addAll
argument_list|(
name|customTemplates
argument_list|)
expr_stmt|;
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|String
argument_list|>
name|embeddableTemplates
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|templateManager
operator|.
name|getStandartEmbeddableTemplates
argument_list|()
argument_list|)
decl_stmt|;
name|Collections
operator|.
name|sort
argument_list|(
name|embeddableTemplates
argument_list|)
expr_stmt|;
name|embeddableTemplates
operator|.
name|addAll
argument_list|(
name|customTemplates
argument_list|)
expr_stmt|;
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|String
argument_list|>
name|embeddableSuperTemplates
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|templateManager
operator|.
name|getStandartEmbeddableSuperclassTemplates
argument_list|()
argument_list|)
decl_stmt|;
name|Collections
operator|.
name|sort
argument_list|(
name|embeddableSuperTemplates
argument_list|)
expr_stmt|;
name|embeddableSuperTemplates
operator|.
name|addAll
argument_list|(
name|customTemplates
argument_list|)
expr_stmt|;
name|java
operator|.
name|util
operator|.
name|List
argument_list|<
name|String
argument_list|>
name|dataMapTemplates
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|templateManager
operator|.
name|getStandartDataMapTemplates
argument_list|()
argument_list|)
decl_stmt|;
name|Collections
operator|.
name|sort
argument_list|(
name|dataMapTemplates
argument_list|)
expr_stmt|;
name|dataMapTemplates
operator|.
name|addAll
argument_list|(
name|customTemplates
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|dataMapSuperTemplates
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|templateManager
operator|.
name|getStandartDataMapSuperclassTemplates
argument_list|()
argument_list|)
decl_stmt|;
name|Collections
operator|.
name|sort
argument_list|(
name|dataMapSuperTemplates
argument_list|)
expr_stmt|;
name|dataMapSuperTemplates
operator|.
name|addAll
argument_list|(
name|customTemplates
argument_list|)
expr_stmt|;
name|this
operator|.
name|view
operator|.
name|getSubclassTemplate
argument_list|()
operator|.
name|setModel
argument_list|(
operator|new
name|DefaultComboBoxModel
argument_list|<>
argument_list|(
name|subTemplates
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[
literal|0
index|]
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|view
operator|.
name|getSuperclassTemplate
argument_list|()
operator|.
name|setModel
argument_list|(
operator|new
name|DefaultComboBoxModel
argument_list|<>
argument_list|(
name|superTemplates
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[
literal|0
index|]
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|view
operator|.
name|getEmbeddableTemplate
argument_list|()
operator|.
name|setModel
argument_list|(
operator|new
name|DefaultComboBoxModel
argument_list|<>
argument_list|(
name|embeddableTemplates
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[
literal|0
index|]
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|view
operator|.
name|getEmbeddableSuperTemplate
argument_list|()
operator|.
name|setModel
argument_list|(
operator|new
name|DefaultComboBoxModel
argument_list|<>
argument_list|(
name|embeddableSuperTemplates
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[
literal|0
index|]
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|view
operator|.
name|getDataMapTemplate
argument_list|()
operator|.
name|setModel
argument_list|(
operator|new
name|DefaultComboBoxModel
argument_list|<>
argument_list|(
name|dataMapTemplates
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[
literal|0
index|]
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|view
operator|.
name|getDataMapSuperTemplate
argument_list|()
operator|.
name|setModel
argument_list|(
operator|new
name|DefaultComboBoxModel
argument_list|<>
argument_list|(
name|dataMapSuperTemplates
operator|.
name|toArray
argument_list|(
operator|new
name|String
index|[
literal|0
index|]
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|view
operator|.
name|getOutputPattern
argument_list|()
operator|.
name|setText
argument_list|(
literal|"*.java"
argument_list|)
expr_stmt|;
name|this
operator|.
name|view
operator|.
name|getPairs
argument_list|()
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|this
operator|.
name|view
operator|.
name|getUsePackagePath
argument_list|()
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|this
operator|.
name|view
operator|.
name|getOutputFolder
argument_list|()
operator|.
name|setText
argument_list|(
name|System
operator|.
name|getProperty
argument_list|(
literal|"user.home"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|initSources
parameter_list|()
block|{
name|DataChannelMetaData
name|metaData
init|=
name|getApplication
argument_list|()
operator|.
name|getMetaData
argument_list|()
decl_stmt|;
name|Project
name|project
init|=
name|projectController
operator|.
name|getProject
argument_list|()
decl_stmt|;
name|Collection
argument_list|<
name|DataMap
argument_list|>
name|dataMaps
init|=
operator|(
operator|(
name|DataChannelDescriptor
operator|)
name|project
operator|.
name|getRootNode
argument_list|()
operator|)
operator|.
name|getDataMaps
argument_list|()
decl_stmt|;
for|for
control|(
name|DataMap
name|dataMap
range|:
name|dataMaps
control|)
block|{
name|ClassGenerationAction
name|classGenerationAction
init|=
name|metaData
operator|.
name|get
argument_list|(
name|dataMap
argument_list|,
name|ClassGenerationAction
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|classGenerationAction
operator|!=
literal|null
condition|)
block|{
name|generators
operator|.
name|add
argument_list|(
name|classGenerationAction
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|initButtons
parameter_list|()
block|{
name|this
operator|.
name|view
operator|.
name|getSelectOutputFolder
argument_list|()
operator|.
name|addActionListener
argument_list|(
name|action
lambda|->
block|{
name|JTextField
name|outputFolder
init|=
name|view
operator|.
name|getOutputFolder
argument_list|()
decl_stmt|;
name|String
name|currentDir
init|=
name|outputFolder
operator|.
name|getText
argument_list|()
decl_stmt|;
name|JFileChooser
name|chooser
init|=
operator|new
name|JFileChooser
argument_list|()
decl_stmt|;
name|chooser
operator|.
name|setFileSelectionMode
argument_list|(
name|JFileChooser
operator|.
name|DIRECTORIES_ONLY
argument_list|)
expr_stmt|;
name|chooser
operator|.
name|setDialogType
argument_list|(
name|JFileChooser
operator|.
name|OPEN_DIALOG
argument_list|)
expr_stmt|;
comment|// guess start directory
if|if
condition|(
operator|!
name|Util
operator|.
name|isEmptyString
argument_list|(
name|currentDir
argument_list|)
condition|)
block|{
name|chooser
operator|.
name|setCurrentDirectory
argument_list|(
operator|new
name|File
argument_list|(
name|currentDir
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|FSPath
name|lastDir
init|=
name|Application
operator|.
name|getInstance
argument_list|()
operator|.
name|getFrameController
argument_list|()
operator|.
name|getLastDirectory
argument_list|()
decl_stmt|;
name|lastDir
operator|.
name|updateChooser
argument_list|(
name|chooser
argument_list|)
expr_stmt|;
block|}
name|int
name|result
init|=
name|chooser
operator|.
name|showOpenDialog
argument_list|(
name|getView
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|result
operator|==
name|JFileChooser
operator|.
name|APPROVE_OPTION
condition|)
block|{
name|File
name|selected
init|=
name|chooser
operator|.
name|getSelectedFile
argument_list|()
decl_stmt|;
comment|// update model
name|String
name|path
init|=
name|selected
operator|.
name|getAbsolutePath
argument_list|()
decl_stmt|;
name|view
operator|.
name|getOutputFolder
argument_list|()
operator|.
name|setText
argument_list|(
name|path
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|this
operator|.
name|view
operator|.
name|getGenerateButton
argument_list|()
operator|.
name|addActionListener
argument_list|(
name|action
lambda|->
block|{
try|try
block|{
for|for
control|(
name|ClassGenerationAction
name|generator
range|:
name|generators
control|)
block|{
name|generator
operator|.
name|prepareArtifacts
argument_list|()
expr_stmt|;
name|generator
operator|.
name|execute
argument_list|()
expr_stmt|;
block|}
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|this
operator|.
name|getApplication
argument_list|()
operator|.
name|getFrameController
argument_list|()
operator|.
name|getView
argument_list|()
argument_list|,
literal|"Class generation finished"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|ex
parameter_list|)
block|{
name|logObj
operator|.
name|error
argument_list|(
literal|"Error generating classes"
argument_list|,
name|ex
argument_list|)
expr_stmt|;
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|this
operator|.
name|getApplication
argument_list|()
operator|.
name|getFrameController
argument_list|()
operator|.
name|getView
argument_list|()
argument_list|,
literal|"Error generating classes - "
operator|+
name|ex
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|this
operator|.
name|view
operator|.
name|getResetFolder
argument_list|()
operator|.
name|addActionListener
argument_list|(
name|action
lambda|->
name|generators
operator|.
name|forEach
argument_list|(
name|val
lambda|->
block|{
name|val
operator|.
name|setDestDir
argument_list|(
operator|new
name|File
argument_list|(
name|view
operator|.
name|getOutputFolder
argument_list|()
operator|.
name|getText
argument_list|()
argument_list|)
argument_list|)
argument_list|;
name|update
argument_list|(
name|val
operator|.
name|getDataMap
argument_list|()
argument_list|)
argument_list|;
name|projectController
operator|.
name|setDirty
argument_list|(
literal|true
argument_list|)
argument_list|;
block|}
block|)
end_class

begin_empty_stmt
unit|)
empty_stmt|;
end_empty_stmt

begin_expr_stmt
name|this
operator|.
name|view
operator|.
name|getResetMode
argument_list|()
operator|.
name|addActionListener
argument_list|(
name|action
lambda|->
name|generators
operator|.
name|forEach
argument_list|(
name|val
lambda|->
block|{
name|val
operator|.
name|setArtifactsGenerationMode
argument_list|(
name|modesByLabel
operator|.
name|get
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|view
operator|.
name|getGenerationMode
argument_list|()
operator|.
name|getSelectedItem
argument_list|()
argument_list|)
argument_list|)
argument_list|)
argument_list|;
name|update
argument_list|(
name|val
operator|.
name|getDataMap
argument_list|()
argument_list|)
argument_list|;
name|projectController
operator|.
name|setDirty
argument_list|(
literal|true
argument_list|)
argument_list|;
end_expr_stmt

begin_empty_stmt
unit|}))
empty_stmt|;
end_empty_stmt

begin_expr_stmt
name|this
operator|.
name|view
operator|.
name|getResetDataMapTemplate
argument_list|()
operator|.
name|addActionListener
argument_list|(
name|action
lambda|->
name|generators
operator|.
name|forEach
argument_list|(
name|val
lambda|->
block|{
name|val
operator|.
name|setQueryTemplate
argument_list|(
name|Application
operator|.
name|getInstance
argument_list|()
operator|.
name|getCodeTemplateManager
argument_list|()
operator|.
name|getTemplatePath
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|view
operator|.
name|getDataMapTemplate
argument_list|()
operator|.
name|getSelectedItem
argument_list|()
argument_list|)
argument_list|)
argument_list|)
argument_list|;
name|update
argument_list|(
name|val
operator|.
name|getDataMap
argument_list|()
argument_list|)
argument_list|;
name|projectController
operator|.
name|setDirty
argument_list|(
literal|true
argument_list|)
argument_list|;
end_expr_stmt

begin_empty_stmt
unit|}))
empty_stmt|;
end_empty_stmt

begin_expr_stmt
name|this
operator|.
name|view
operator|.
name|getResetDataMapSuperTemplate
argument_list|()
operator|.
name|addActionListener
argument_list|(
name|action
lambda|->
name|generators
operator|.
name|forEach
argument_list|(
name|val
lambda|->
block|{
name|val
operator|.
name|setQuerySuperTemplate
argument_list|(
name|Application
operator|.
name|getInstance
argument_list|()
operator|.
name|getCodeTemplateManager
argument_list|()
operator|.
name|getTemplatePath
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|view
operator|.
name|getDataMapSuperTemplate
argument_list|()
operator|.
name|getSelectedItem
argument_list|()
argument_list|)
argument_list|)
argument_list|)
argument_list|;
name|update
argument_list|(
name|val
operator|.
name|getDataMap
argument_list|()
argument_list|)
argument_list|;
name|projectController
operator|.
name|setDirty
argument_list|(
literal|true
argument_list|)
argument_list|;
end_expr_stmt

begin_empty_stmt
unit|}))
empty_stmt|;
end_empty_stmt

begin_expr_stmt
name|this
operator|.
name|view
operator|.
name|getResetTemplate
argument_list|()
operator|.
name|addActionListener
argument_list|(
name|action
lambda|->
name|generators
operator|.
name|forEach
argument_list|(
name|val
lambda|->
block|{
name|val
operator|.
name|setTemplate
argument_list|(
name|Application
operator|.
name|getInstance
argument_list|()
operator|.
name|getCodeTemplateManager
argument_list|()
operator|.
name|getTemplatePath
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|view
operator|.
name|getSubclassTemplate
argument_list|()
operator|.
name|getSelectedItem
argument_list|()
argument_list|)
argument_list|)
argument_list|)
argument_list|;
name|update
argument_list|(
name|val
operator|.
name|getDataMap
argument_list|()
argument_list|)
argument_list|;
name|projectController
operator|.
name|setDirty
argument_list|(
literal|true
argument_list|)
argument_list|;
end_expr_stmt

begin_empty_stmt
unit|}))
empty_stmt|;
end_empty_stmt

begin_expr_stmt
name|this
operator|.
name|view
operator|.
name|getResetSuperTemplate
argument_list|()
operator|.
name|addActionListener
argument_list|(
name|action
lambda|->
name|generators
operator|.
name|forEach
argument_list|(
name|val
lambda|->
block|{
name|val
operator|.
name|setSuperTemplate
argument_list|(
name|Application
operator|.
name|getInstance
argument_list|()
operator|.
name|getCodeTemplateManager
argument_list|()
operator|.
name|getTemplatePath
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|view
operator|.
name|getSuperclassTemplate
argument_list|()
operator|.
name|getSelectedItem
argument_list|()
argument_list|)
argument_list|)
argument_list|)
argument_list|;
name|update
argument_list|(
name|val
operator|.
name|getDataMap
argument_list|()
argument_list|)
argument_list|;
name|projectController
operator|.
name|setDirty
argument_list|(
literal|true
argument_list|)
argument_list|;
end_expr_stmt

begin_empty_stmt
unit|}))
empty_stmt|;
end_empty_stmt

begin_expr_stmt
name|this
operator|.
name|view
operator|.
name|getResetEmbeddableTemplate
argument_list|()
operator|.
name|addActionListener
argument_list|(
name|action
lambda|->
name|generators
operator|.
name|forEach
argument_list|(
name|val
lambda|->
block|{
name|val
operator|.
name|setEmbeddableTemplate
argument_list|(
name|Application
operator|.
name|getInstance
argument_list|()
operator|.
name|getCodeTemplateManager
argument_list|()
operator|.
name|getTemplatePath
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|view
operator|.
name|getEmbeddableTemplate
argument_list|()
operator|.
name|getSelectedItem
argument_list|()
argument_list|)
argument_list|)
argument_list|)
argument_list|;
name|update
argument_list|(
name|val
operator|.
name|getDataMap
argument_list|()
argument_list|)
argument_list|;
name|projectController
operator|.
name|setDirty
argument_list|(
literal|true
argument_list|)
argument_list|;
end_expr_stmt

begin_empty_stmt
unit|}))
empty_stmt|;
end_empty_stmt

begin_expr_stmt
name|this
operator|.
name|view
operator|.
name|getResetEmbeddableSuperTemplate
argument_list|()
operator|.
name|addActionListener
argument_list|(
name|action
lambda|->
name|generators
operator|.
name|forEach
argument_list|(
name|val
lambda|->
block|{
name|val
operator|.
name|setEmbeddableSuperTemplate
argument_list|(
name|Application
operator|.
name|getInstance
argument_list|()
operator|.
name|getCodeTemplateManager
argument_list|()
operator|.
name|getTemplatePath
argument_list|(
name|String
operator|.
name|valueOf
argument_list|(
name|view
operator|.
name|getEmbeddableSuperTemplate
argument_list|()
operator|.
name|getSelectedItem
argument_list|()
argument_list|)
argument_list|)
argument_list|)
argument_list|;
name|update
argument_list|(
name|val
operator|.
name|getDataMap
argument_list|()
argument_list|)
argument_list|;
name|projectController
operator|.
name|setDirty
argument_list|(
literal|true
argument_list|)
argument_list|;
end_expr_stmt

begin_empty_stmt
unit|}))
empty_stmt|;
end_empty_stmt

begin_expr_stmt
name|this
operator|.
name|view
operator|.
name|getResetEncoding
argument_list|()
operator|.
name|addActionListener
argument_list|(
name|action
lambda|->
name|generators
operator|.
name|forEach
argument_list|(
name|val
lambda|->
block|{
name|val
operator|.
name|setEncoding
argument_list|(
name|view
operator|.
name|getEncoding
argument_list|()
operator|.
name|getText
argument_list|()
argument_list|)
argument_list|;
name|update
argument_list|(
name|val
operator|.
name|getDataMap
argument_list|()
argument_list|)
argument_list|;
name|projectController
operator|.
name|setDirty
argument_list|(
literal|true
argument_list|)
argument_list|;
end_expr_stmt

begin_empty_stmt
unit|}))
empty_stmt|;
end_empty_stmt

begin_expr_stmt
name|this
operator|.
name|view
operator|.
name|getResetPattern
argument_list|()
operator|.
name|addActionListener
argument_list|(
name|action
lambda|->
name|generators
operator|.
name|forEach
argument_list|(
name|val
lambda|->
block|{
name|val
operator|.
name|setOutputPattern
argument_list|(
name|view
operator|.
name|getOutputPattern
argument_list|()
operator|.
name|getText
argument_list|()
argument_list|)
argument_list|;
name|update
argument_list|(
name|val
operator|.
name|getDataMap
argument_list|()
argument_list|)
argument_list|;
name|projectController
operator|.
name|setDirty
argument_list|(
literal|true
argument_list|)
argument_list|;
end_expr_stmt

begin_empty_stmt
unit|}))
empty_stmt|;
end_empty_stmt

begin_expr_stmt
name|this
operator|.
name|view
operator|.
name|getResetPairs
argument_list|()
operator|.
name|addActionListener
argument_list|(
name|action
lambda|->
name|generators
operator|.
name|forEach
argument_list|(
name|val
lambda|->
block|{
name|val
operator|.
name|setMakePairs
argument_list|(
name|view
operator|.
name|getPairs
argument_list|()
operator|.
name|isSelected
argument_list|()
argument_list|)
argument_list|;
name|update
argument_list|(
name|val
operator|.
name|getDataMap
argument_list|()
argument_list|)
argument_list|;
name|projectController
operator|.
name|setDirty
argument_list|(
literal|true
argument_list|)
argument_list|;
end_expr_stmt

begin_empty_stmt
unit|}))
empty_stmt|;
end_empty_stmt

begin_expr_stmt
name|this
operator|.
name|view
operator|.
name|getUsePackagePath
argument_list|()
operator|.
name|addActionListener
argument_list|(
name|action
lambda|->
name|generators
operator|.
name|forEach
argument_list|(
name|val
lambda|->
block|{
name|val
operator|.
name|setUsePkgPath
argument_list|(
name|view
operator|.
name|getUsePackagePath
argument_list|()
operator|.
name|isSelected
argument_list|()
argument_list|)
argument_list|;
name|update
argument_list|(
name|val
operator|.
name|getDataMap
argument_list|()
argument_list|)
argument_list|;
name|projectController
operator|.
name|setDirty
argument_list|(
literal|true
argument_list|)
argument_list|;
end_expr_stmt

begin_empty_stmt
unit|}))
empty_stmt|;
end_empty_stmt

begin_expr_stmt
name|this
operator|.
name|view
operator|.
name|getResetOverwrite
argument_list|()
operator|.
name|addActionListener
argument_list|(
name|action
lambda|->
name|generators
operator|.
name|forEach
argument_list|(
name|val
lambda|->
block|{
name|val
operator|.
name|setUsePkgPath
argument_list|(
name|view
operator|.
name|getUsePackagePath
argument_list|()
operator|.
name|isSelected
argument_list|()
argument_list|)
argument_list|;
name|update
argument_list|(
name|val
operator|.
name|getDataMap
argument_list|()
argument_list|)
argument_list|;
name|projectController
operator|.
name|setDirty
argument_list|(
literal|true
argument_list|)
argument_list|;
end_expr_stmt

begin_empty_stmt
unit|}))
empty_stmt|;
end_empty_stmt

begin_expr_stmt
name|this
operator|.
name|view
operator|.
name|getResetNames
argument_list|()
operator|.
name|addActionListener
argument_list|(
name|action
lambda|->
name|generators
operator|.
name|forEach
argument_list|(
name|val
lambda|->
block|{
name|val
operator|.
name|setCreatePropertyNames
argument_list|(
name|view
operator|.
name|getCreatePropertyNames
argument_list|()
operator|.
name|isSelected
argument_list|()
argument_list|)
argument_list|;
name|update
argument_list|(
name|val
operator|.
name|getDataMap
argument_list|()
argument_list|)
argument_list|;
name|projectController
operator|.
name|setDirty
argument_list|(
literal|true
argument_list|)
argument_list|;
end_expr_stmt

begin_empty_stmt
unit|}))
empty_stmt|;
end_empty_stmt

begin_expr_stmt
name|this
operator|.
name|view
operator|.
name|getResetPackage
argument_list|()
operator|.
name|addActionListener
argument_list|(
name|action
lambda|->
name|generators
operator|.
name|forEach
argument_list|(
name|val
lambda|->
block|{
name|val
operator|.
name|setSuperPkg
argument_list|(
name|view
operator|.
name|getSuperclassPackage
argument_list|()
operator|.
name|getText
argument_list|()
argument_list|)
argument_list|;
name|update
argument_list|(
name|val
operator|.
name|getDataMap
argument_list|()
argument_list|)
argument_list|;
name|projectController
operator|.
name|setDirty
argument_list|(
literal|true
argument_list|)
argument_list|;
end_expr_stmt

begin_empty_stmt
unit|}))
empty_stmt|;
end_empty_stmt

begin_function
unit|}      private
name|void
name|update
parameter_list|(
name|DataMap
name|dataMap
parameter_list|)
block|{
name|projectController
operator|.
name|fireDataMapDisplayEvent
argument_list|(
operator|new
name|DataMapDisplayEvent
argument_list|(
name|this
argument_list|,
name|dataMap
argument_list|,
operator|(
name|DataChannelDescriptor
operator|)
name|projectController
operator|.
name|getProject
argument_list|()
operator|.
name|getRootNode
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
end_function

begin_function
annotation|@
name|Override
specifier|public
name|Component
name|getView
parameter_list|()
block|{
return|return
name|view
return|;
block|}
end_function

unit|}
end_unit

