begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|pref
package|;
end_package

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|builder
operator|.
name|PanelBuilder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|layout
operator|.
name|CellConstraints
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|layout
operator|.
name|FormLayout
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|gen
operator|.
name|TemplateType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|swing
operator|.
name|control
operator|.
name|FileChooser
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JButton
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JCheckBox
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JDialog
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPanel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTextField
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|BorderLayout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|FlowLayout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Font
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * @since 4.3  */
end_comment

begin_class
specifier|public
class|class
name|CreateTemplateFromDefaultView
extends|extends
name|JDialog
block|{
specifier|protected
name|JTextField
name|prefix
decl_stmt|;
specifier|protected
name|FileChooser
name|folderChooser
decl_stmt|;
specifier|protected
name|JCheckBox
name|selectAll
decl_stmt|;
specifier|protected
name|JButton
name|createButton
decl_stmt|;
specifier|protected
name|JButton
name|cancelButton
decl_stmt|;
specifier|protected
name|JCheckBox
name|standardServerSuperclass
decl_stmt|;
specifier|protected
name|JCheckBox
name|standardServerSubclass
decl_stmt|;
specifier|protected
name|JCheckBox
name|standardEmbeddableSuperclass
decl_stmt|;
specifier|protected
name|JCheckBox
name|standardEmbeddableSubclass
decl_stmt|;
specifier|protected
name|JCheckBox
name|standardServerDataMapSuperclass
decl_stmt|;
specifier|protected
name|JCheckBox
name|standardServerDataMapSubclass
decl_stmt|;
specifier|public
name|CreateTemplateFromDefaultView
parameter_list|(
name|JDialog
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|,
literal|"Create from defaults templates"
argument_list|)
expr_stmt|;
name|this
operator|.
name|selectAll
operator|=
operator|new
name|JCheckBox
argument_list|(
literal|"Select all"
argument_list|)
expr_stmt|;
name|this
operator|.
name|selectAll
operator|.
name|setFont
argument_list|(
operator|new
name|Font
argument_list|(
name|getFont
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|Font
operator|.
name|BOLD
argument_list|,
name|getFont
argument_list|()
operator|.
name|getSize
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|standardServerSuperclass
operator|=
operator|new
name|JCheckBox
argument_list|(
name|TemplateType
operator|.
name|ENTITY_SUPERCLASS
operator|.
name|readableName
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|standardServerSubclass
operator|=
operator|new
name|JCheckBox
argument_list|(
name|TemplateType
operator|.
name|ENTITY_SUBCLASS
operator|.
name|readableName
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|standardEmbeddableSuperclass
operator|=
operator|new
name|JCheckBox
argument_list|(
name|TemplateType
operator|.
name|EMBEDDABLE_SUPERCLASS
operator|.
name|readableName
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|standardEmbeddableSubclass
operator|=
operator|new
name|JCheckBox
argument_list|(
name|TemplateType
operator|.
name|EMBEDDABLE_SUBCLASS
operator|.
name|readableName
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|standardServerDataMapSuperclass
operator|=
operator|new
name|JCheckBox
argument_list|(
name|TemplateType
operator|.
name|DATAMAP_SUPERCLASS
operator|.
name|readableName
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|standardServerDataMapSubclass
operator|=
operator|new
name|JCheckBox
argument_list|(
name|TemplateType
operator|.
name|DATAMAP_SUBCLASS
operator|.
name|readableName
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|prefix
operator|=
operator|new
name|JTextField
argument_list|(
literal|150
argument_list|)
expr_stmt|;
name|this
operator|.
name|folderChooser
operator|=
operator|new
name|FileChooser
argument_list|(
literal|"Select template's folder"
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|this
operator|.
name|createButton
operator|=
operator|new
name|JButton
argument_list|(
literal|"Create"
argument_list|)
expr_stmt|;
name|this
operator|.
name|cancelButton
operator|=
operator|new
name|JButton
argument_list|(
literal|"Cancel"
argument_list|)
expr_stmt|;
name|buildView
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|buildView
parameter_list|()
block|{
name|CellConstraints
name|cc
init|=
operator|new
name|CellConstraints
argument_list|()
decl_stmt|;
name|PanelBuilder
name|builder
init|=
operator|new
name|PanelBuilder
argument_list|(
operator|new
name|FormLayout
argument_list|(
literal|"left:90dlu, 10dlu, 90dlu"
argument_list|,
literal|"p, 10dlu, 4*(p, 3dlu), 10dlu, p, 10dlu, 4*(p, 3dlu)"
argument_list|)
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setDefaultDialogBorder
argument_list|()
expr_stmt|;
name|builder
operator|.
name|addSeparator
argument_list|(
literal|"Select templates for generating"
argument_list|,
name|cc
operator|.
name|xyw
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|selectAll
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|1
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|standardServerSuperclass
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|1
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|standardServerSubclass
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|3
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|standardEmbeddableSuperclass
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|1
argument_list|,
literal|7
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|standardEmbeddableSubclass
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|3
argument_list|,
literal|7
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|standardServerDataMapSuperclass
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|1
argument_list|,
literal|9
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|standardServerDataMapSubclass
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|3
argument_list|,
literal|9
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|addSeparator
argument_list|(
literal|"Output options"
argument_list|,
name|cc
operator|.
name|xyw
argument_list|(
literal|1
argument_list|,
literal|12
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|addLabel
argument_list|(
literal|"Enter prefix for the generated templates"
argument_list|,
name|cc
operator|.
name|xyw
argument_list|(
literal|1
argument_list|,
literal|14
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|prefix
argument_list|,
name|cc
operator|.
name|xyw
argument_list|(
literal|1
argument_list|,
literal|16
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|addLabel
argument_list|(
literal|"Select output folder"
argument_list|,
name|cc
operator|.
name|xy
argument_list|(
literal|1
argument_list|,
literal|18
argument_list|)
argument_list|)
expr_stmt|;
name|builder
operator|.
name|add
argument_list|(
name|folderChooser
argument_list|,
name|cc
operator|.
name|xyw
argument_list|(
literal|1
argument_list|,
literal|20
argument_list|,
literal|3
argument_list|)
argument_list|)
expr_stmt|;
name|JPanel
name|buttons
init|=
operator|new
name|JPanel
argument_list|(
operator|new
name|FlowLayout
argument_list|(
name|FlowLayout
operator|.
name|RIGHT
argument_list|)
argument_list|)
decl_stmt|;
name|getRootPane
argument_list|()
operator|.
name|setDefaultButton
argument_list|(
name|createButton
argument_list|)
expr_stmt|;
name|buttons
operator|.
name|add
argument_list|(
name|cancelButton
argument_list|)
expr_stmt|;
name|buttons
operator|.
name|add
argument_list|(
name|createButton
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|setLayout
argument_list|(
operator|new
name|BorderLayout
argument_list|()
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|builder
operator|.
name|getPanel
argument_list|()
argument_list|,
name|BorderLayout
operator|.
name|CENTER
argument_list|)
expr_stmt|;
name|getContentPane
argument_list|()
operator|.
name|add
argument_list|(
name|buttons
argument_list|,
name|BorderLayout
operator|.
name|SOUTH
argument_list|)
expr_stmt|;
block|}
specifier|public
name|JButton
name|getCancelButton
parameter_list|()
block|{
return|return
name|cancelButton
return|;
block|}
specifier|public
name|JButton
name|getCreateButton
parameter_list|()
block|{
return|return
name|createButton
return|;
block|}
specifier|public
name|FileChooser
name|getFolderChooser
parameter_list|()
block|{
return|return
name|folderChooser
return|;
block|}
specifier|public
name|JTextField
name|getPrefix
parameter_list|()
block|{
return|return
name|prefix
return|;
block|}
specifier|public
name|List
argument_list|<
name|JCheckBox
argument_list|>
name|getTemplatesCheckboxes
parameter_list|()
block|{
name|ArrayList
argument_list|<
name|JCheckBox
argument_list|>
name|checkBoxes
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|checkBoxes
operator|.
name|add
argument_list|(
name|standardServerSuperclass
argument_list|)
expr_stmt|;
name|checkBoxes
operator|.
name|add
argument_list|(
name|standardServerSubclass
argument_list|)
expr_stmt|;
name|checkBoxes
operator|.
name|add
argument_list|(
name|standardEmbeddableSuperclass
argument_list|)
expr_stmt|;
name|checkBoxes
operator|.
name|add
argument_list|(
name|standardEmbeddableSubclass
argument_list|)
expr_stmt|;
name|checkBoxes
operator|.
name|add
argument_list|(
name|standardServerDataMapSuperclass
argument_list|)
expr_stmt|;
name|checkBoxes
operator|.
name|add
argument_list|(
name|standardServerDataMapSubclass
argument_list|)
expr_stmt|;
return|return
name|checkBoxes
return|;
block|}
specifier|public
name|List
argument_list|<
name|JCheckBox
argument_list|>
name|getSelectedTemplates
parameter_list|()
block|{
name|List
argument_list|<
name|JCheckBox
argument_list|>
name|templates
init|=
name|getTemplatesCheckboxes
argument_list|()
decl_stmt|;
name|templates
operator|.
name|removeIf
argument_list|(
name|checkBox
lambda|->
operator|(
operator|!
name|checkBox
operator|.
name|isSelected
argument_list|()
operator|)
argument_list|)
expr_stmt|;
return|return
name|templates
return|;
block|}
specifier|public
name|JCheckBox
name|getSelectAll
parameter_list|()
block|{
return|return
name|selectAll
return|;
block|}
block|}
end_class

end_unit

