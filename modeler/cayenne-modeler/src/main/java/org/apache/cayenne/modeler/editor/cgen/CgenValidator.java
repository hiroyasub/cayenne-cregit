begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|editor
operator|.
name|cgen
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|BaseConfigurationNodeVisitor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|ConfigurationNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DataMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|Embeddable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|EmbeddableAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|EmbeddedAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjRelationship
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|CodeValidationUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|validation
operator|.
name|BeanValidationFailure
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|validation
operator|.
name|SimpleValidationFailure
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|validation
operator|.
name|ValidationFailure
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|validation
operator|.
name|ValidationResult
import|;
end_import

begin_comment
comment|/**  * Validator that checks classes and embeddables for code-generation specific problems.  *  * @since 4.2  */
end_comment

begin_class
class|class
name|CgenValidator
block|{
name|ValidationResult
name|getValidationResult
parameter_list|(
name|Collection
argument_list|<
name|?
extends|extends
name|ConfigurationNode
argument_list|>
name|classes
parameter_list|)
block|{
name|ValidationResult
name|validationResult
init|=
operator|new
name|ValidationResult
argument_list|()
decl_stmt|;
for|for
control|(
name|ConfigurationNode
name|configurationNode
range|:
name|classes
control|)
block|{
name|configurationNode
operator|.
name|acceptVisitor
argument_list|(
operator|new
name|BaseConfigurationNodeVisitor
argument_list|<
name|Void
argument_list|>
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|Void
name|visitObjEntity
parameter_list|(
name|ObjEntity
name|entity
parameter_list|)
block|{
name|validateEntity
argument_list|(
name|validationResult
argument_list|,
name|entity
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|Void
name|visitEmbeddable
parameter_list|(
name|Embeddable
name|embeddable
parameter_list|)
block|{
name|validateEmbeddable
argument_list|(
name|validationResult
argument_list|,
name|embeddable
argument_list|)
expr_stmt|;
return|return
literal|null
return|;
block|}
annotation|@
name|Override
specifier|public
name|Void
name|visitDataMap
parameter_list|(
name|DataMap
name|dataMap
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
return|return
name|validationResult
return|;
block|}
specifier|private
name|ValidationFailure
name|validateEmbeddableAttribute
parameter_list|(
name|EmbeddableAttribute
name|attribute
parameter_list|)
block|{
return|return
name|validateAttribute
argument_list|(
name|attribute
operator|.
name|getEmbeddable
argument_list|()
operator|.
name|getClassName
argument_list|()
argument_list|,
name|attribute
operator|.
name|getName
argument_list|()
argument_list|,
name|attribute
operator|.
name|getType
argument_list|()
argument_list|)
return|;
block|}
specifier|private
name|ValidationFailure
name|validateAttribute
parameter_list|(
name|String
name|objectName
parameter_list|,
name|String
name|attributeName
parameter_list|,
name|String
name|attributeType
parameter_list|)
block|{
name|ValidationFailure
name|emptyName
init|=
name|BeanValidationFailure
operator|.
name|validateNotEmpty
argument_list|(
name|objectName
argument_list|,
literal|"attribute.name"
argument_list|,
name|attributeName
argument_list|)
decl_stmt|;
if|if
condition|(
name|emptyName
operator|!=
literal|null
condition|)
block|{
return|return
name|emptyName
return|;
block|}
name|ValidationFailure
name|badName
init|=
name|CodeValidationUtil
operator|.
name|validateJavaIdentifier
argument_list|(
name|objectName
argument_list|,
literal|"attribute.name"
argument_list|,
name|attributeName
argument_list|)
decl_stmt|;
if|if
condition|(
name|badName
operator|!=
literal|null
condition|)
block|{
return|return
name|badName
return|;
block|}
name|ValidationFailure
name|emptyType
init|=
name|BeanValidationFailure
operator|.
name|validateNotEmpty
argument_list|(
name|objectName
argument_list|,
literal|"attribute.type"
argument_list|,
name|attributeType
argument_list|)
decl_stmt|;
if|if
condition|(
name|emptyType
operator|!=
literal|null
condition|)
block|{
return|return
name|emptyType
return|;
block|}
return|return
name|BeanValidationFailure
operator|.
name|validateJavaClassName
argument_list|(
name|objectName
argument_list|,
literal|"attribute.type"
argument_list|,
name|attributeType
argument_list|)
return|;
block|}
specifier|private
name|ValidationFailure
name|validateEmbeddable
parameter_list|(
name|Embeddable
name|embeddable
parameter_list|)
block|{
name|String
name|name
init|=
name|embeddable
operator|.
name|getClassName
argument_list|()
decl_stmt|;
name|ValidationFailure
name|emptyClass
init|=
name|BeanValidationFailure
operator|.
name|validateNotEmpty
argument_list|(
name|name
argument_list|,
literal|"className"
argument_list|,
name|embeddable
operator|.
name|getClassName
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|emptyClass
operator|!=
literal|null
condition|)
block|{
return|return
name|emptyClass
return|;
block|}
return|return
name|BeanValidationFailure
operator|.
name|validateJavaClassName
argument_list|(
name|name
argument_list|,
literal|"className"
argument_list|,
name|embeddable
operator|.
name|getClassName
argument_list|()
argument_list|)
return|;
block|}
specifier|private
name|void
name|validateEntity
parameter_list|(
name|ValidationResult
name|validationBuffer
parameter_list|,
name|ObjEntity
name|entity
parameter_list|)
block|{
name|ValidationFailure
name|entityFailure
init|=
name|validateEntity
argument_list|(
name|entity
argument_list|)
decl_stmt|;
if|if
condition|(
name|entityFailure
operator|!=
literal|null
condition|)
block|{
name|validationBuffer
operator|.
name|addFailure
argument_list|(
name|entityFailure
argument_list|)
expr_stmt|;
return|return;
block|}
for|for
control|(
name|ObjAttribute
name|attribute
range|:
name|entity
operator|.
name|getAttributes
argument_list|()
control|)
block|{
if|if
condition|(
name|attribute
operator|instanceof
name|EmbeddedAttribute
condition|)
block|{
name|EmbeddedAttribute
name|embeddedAttribute
init|=
operator|(
name|EmbeddedAttribute
operator|)
name|attribute
decl_stmt|;
for|for
control|(
name|ObjAttribute
name|subAttribute
range|:
name|embeddedAttribute
operator|.
name|getAttributes
argument_list|()
control|)
block|{
name|ValidationFailure
name|failure
init|=
name|validateEmbeddedAttribute
argument_list|(
name|subAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|failure
operator|!=
literal|null
condition|)
block|{
name|validationBuffer
operator|.
name|addFailure
argument_list|(
name|failure
argument_list|)
expr_stmt|;
return|return;
block|}
block|}
block|}
else|else
block|{
name|ValidationFailure
name|failure
init|=
name|validateAttribute
argument_list|(
name|attribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|failure
operator|!=
literal|null
condition|)
block|{
name|validationBuffer
operator|.
name|addFailure
argument_list|(
name|failure
argument_list|)
expr_stmt|;
return|return;
block|}
block|}
block|}
for|for
control|(
name|ObjRelationship
name|rel
range|:
name|entity
operator|.
name|getRelationships
argument_list|()
control|)
block|{
name|ValidationFailure
name|failure
init|=
name|validateRelationship
argument_list|(
name|rel
argument_list|)
decl_stmt|;
if|if
condition|(
name|failure
operator|!=
literal|null
condition|)
block|{
name|validationBuffer
operator|.
name|addFailure
argument_list|(
name|failure
argument_list|)
expr_stmt|;
return|return;
block|}
block|}
block|}
specifier|private
name|ValidationFailure
name|validateEntity
parameter_list|(
name|ObjEntity
name|entity
parameter_list|)
block|{
name|String
name|name
init|=
name|entity
operator|.
name|getName
argument_list|()
decl_stmt|;
if|if
condition|(
name|entity
operator|.
name|isGeneric
argument_list|()
condition|)
block|{
return|return
operator|new
name|SimpleValidationFailure
argument_list|(
name|name
argument_list|,
literal|"Generic class"
argument_list|)
return|;
block|}
name|ValidationFailure
name|emptyClass
init|=
name|BeanValidationFailure
operator|.
name|validateNotEmpty
argument_list|(
name|name
argument_list|,
literal|"className"
argument_list|,
name|entity
operator|.
name|getClassName
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|emptyClass
operator|!=
literal|null
condition|)
block|{
return|return
name|emptyClass
return|;
block|}
name|ValidationFailure
name|badClass
init|=
name|BeanValidationFailure
operator|.
name|validateJavaClassName
argument_list|(
name|name
argument_list|,
literal|"className"
argument_list|,
name|entity
operator|.
name|getClassName
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|badClass
operator|!=
literal|null
condition|)
block|{
return|return
name|badClass
return|;
block|}
if|if
condition|(
name|entity
operator|.
name|getSuperClassName
argument_list|()
operator|!=
literal|null
condition|)
block|{
return|return
name|BeanValidationFailure
operator|.
name|validateJavaClassName
argument_list|(
name|name
argument_list|,
literal|"superClassName"
argument_list|,
name|entity
operator|.
name|getSuperClassName
argument_list|()
argument_list|)
return|;
block|}
return|return
literal|null
return|;
block|}
specifier|private
name|ValidationFailure
name|validateAttribute
parameter_list|(
name|ObjAttribute
name|attribute
parameter_list|)
block|{
return|return
name|validateAttribute
argument_list|(
name|attribute
operator|.
name|getEntity
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|attribute
operator|.
name|getName
argument_list|()
argument_list|,
name|attribute
operator|.
name|getType
argument_list|()
argument_list|)
return|;
block|}
specifier|private
name|ValidationFailure
name|validateEmbeddedAttribute
parameter_list|(
name|ObjAttribute
name|attribute
parameter_list|)
block|{
name|String
name|name
init|=
name|attribute
operator|.
name|getEntity
argument_list|()
operator|.
name|getName
argument_list|()
decl_stmt|;
comment|// validate embeddedAttribute and attribute names
comment|// embeddedAttribute returned attibute as
comment|// [name_embeddedAttribute].[name_attribute]
name|String
index|[]
name|attributes
init|=
name|attribute
operator|.
name|getName
argument_list|()
operator|.
name|split
argument_list|(
literal|"\\."
argument_list|)
decl_stmt|;
name|String
name|nameEmbeddedAttribute
init|=
name|attributes
index|[
literal|0
index|]
decl_stmt|;
name|int
name|beginIndex
init|=
name|attributes
index|[
literal|0
index|]
operator|.
name|length
argument_list|()
decl_stmt|;
name|String
name|attr
init|=
name|attribute
operator|.
name|getName
argument_list|()
operator|.
name|substring
argument_list|(
name|beginIndex
operator|+
literal|1
argument_list|)
decl_stmt|;
name|ValidationFailure
name|emptyEmbeddedName
init|=
name|BeanValidationFailure
operator|.
name|validateNotEmpty
argument_list|(
name|name
argument_list|,
literal|"attribute.name"
argument_list|,
name|nameEmbeddedAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|emptyEmbeddedName
operator|!=
literal|null
condition|)
block|{
return|return
name|emptyEmbeddedName
return|;
block|}
name|ValidationFailure
name|badEmbeddedName
init|=
name|CodeValidationUtil
operator|.
name|validateJavaIdentifier
argument_list|(
name|name
argument_list|,
literal|"attribute.name"
argument_list|,
name|nameEmbeddedAttribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|badEmbeddedName
operator|!=
literal|null
condition|)
block|{
return|return
name|badEmbeddedName
return|;
block|}
return|return
name|validateAttribute
argument_list|(
name|name
argument_list|,
name|attr
argument_list|,
name|attribute
operator|.
name|getType
argument_list|()
argument_list|)
return|;
block|}
specifier|private
name|ValidationFailure
name|validateRelationship
parameter_list|(
name|ObjRelationship
name|relationship
parameter_list|)
block|{
name|String
name|name
init|=
name|relationship
operator|.
name|getSourceEntity
argument_list|()
operator|.
name|getName
argument_list|()
decl_stmt|;
name|ValidationFailure
name|emptyName
init|=
name|BeanValidationFailure
operator|.
name|validateNotEmpty
argument_list|(
name|name
argument_list|,
literal|"relationship.name"
argument_list|,
name|relationship
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|emptyName
operator|!=
literal|null
condition|)
block|{
return|return
name|emptyName
return|;
block|}
name|ValidationFailure
name|badName
init|=
name|CodeValidationUtil
operator|.
name|validateJavaIdentifier
argument_list|(
name|name
argument_list|,
literal|"relationship.name"
argument_list|,
name|relationship
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|badName
operator|!=
literal|null
condition|)
block|{
return|return
name|badName
return|;
block|}
if|if
condition|(
operator|!
name|relationship
operator|.
name|isToMany
argument_list|()
condition|)
block|{
name|ObjEntity
name|targetEntity
init|=
name|relationship
operator|.
name|getTargetEntity
argument_list|()
decl_stmt|;
if|if
condition|(
name|targetEntity
operator|==
literal|null
condition|)
block|{
return|return
operator|new
name|BeanValidationFailure
argument_list|(
name|name
argument_list|,
literal|"relationship.targetEntity"
argument_list|,
literal|"No target entity"
argument_list|)
return|;
block|}
if|else if
condition|(
operator|!
name|targetEntity
operator|.
name|isGeneric
argument_list|()
condition|)
block|{
name|ValidationFailure
name|emptyClass
init|=
name|BeanValidationFailure
operator|.
name|validateNotEmpty
argument_list|(
name|name
argument_list|,
literal|"relationship.targetEntity.className"
argument_list|,
name|targetEntity
operator|.
name|getClassName
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|emptyClass
operator|!=
literal|null
condition|)
block|{
return|return
name|emptyClass
return|;
block|}
return|return
name|BeanValidationFailure
operator|.
name|validateJavaClassName
argument_list|(
name|name
argument_list|,
literal|"relationship.targetEntity.className"
argument_list|,
name|targetEntity
operator|.
name|getClassName
argument_list|()
argument_list|)
return|;
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|private
name|void
name|validateEmbeddable
parameter_list|(
name|ValidationResult
name|validationBuffer
parameter_list|,
name|Embeddable
name|embeddable
parameter_list|)
block|{
name|ValidationFailure
name|embeddableFailure
init|=
name|validateEmbeddable
argument_list|(
name|embeddable
argument_list|)
decl_stmt|;
if|if
condition|(
name|embeddableFailure
operator|!=
literal|null
condition|)
block|{
name|validationBuffer
operator|.
name|addFailure
argument_list|(
name|embeddableFailure
argument_list|)
expr_stmt|;
return|return;
block|}
for|for
control|(
name|EmbeddableAttribute
name|attribute
range|:
name|embeddable
operator|.
name|getAttributes
argument_list|()
control|)
block|{
name|ValidationFailure
name|failure
init|=
name|validateEmbeddableAttribute
argument_list|(
name|attribute
argument_list|)
decl_stmt|;
if|if
condition|(
name|failure
operator|!=
literal|null
condition|)
block|{
name|validationBuffer
operator|.
name|addFailure
argument_list|(
name|failure
argument_list|)
expr_stmt|;
return|return;
block|}
block|}
block|}
block|}
end_class

end_unit

