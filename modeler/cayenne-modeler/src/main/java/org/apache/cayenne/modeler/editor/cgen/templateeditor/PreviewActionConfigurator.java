begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|editor
operator|.
name|cgen
operator|.
name|templateeditor
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|xml
operator|.
name|DataChannelMetaData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Injector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Key
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|gen
operator|.
name|ArtifactsGenerationMode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|gen
operator|.
name|CgenConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|gen
operator|.
name|ClassGenerationAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|gen
operator|.
name|ClassGenerationActionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|gen
operator|.
name|TemplateType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|tools
operator|.
name|ToolsInjectorBuilder
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Writer
import|;
end_import

begin_comment
comment|/**  * @since 4.3  */
end_comment

begin_class
specifier|public
class|class
name|PreviewActionConfigurator
block|{
specifier|public
specifier|static
specifier|final
name|String
name|TEMPLATE_EDITOR_WRITER
init|=
literal|"tplEditorWriter"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|Key
argument_list|<
name|StringWriter
argument_list|>
name|TPL_EDITOR_WRITER
init|=
name|Key
operator|.
name|get
argument_list|(
name|StringWriter
operator|.
name|class
argument_list|,
name|TEMPLATE_EDITOR_WRITER
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|TemplateEditorController
name|editorController
decl_stmt|;
specifier|private
specifier|final
name|TemplateType
name|templateType
decl_stmt|;
specifier|private
specifier|final
name|ArtefactsConfigurator
name|artefactsConfigurator
decl_stmt|;
specifier|private
specifier|final
name|Injector
name|injector
decl_stmt|;
specifier|public
name|PreviewActionConfigurator
parameter_list|(
name|TemplateEditorController
name|editorController
parameter_list|)
block|{
name|this
operator|.
name|editorController
operator|=
name|editorController
expr_stmt|;
name|this
operator|.
name|templateType
operator|=
name|editorController
operator|.
name|getTemplateType
argument_list|()
expr_stmt|;
name|this
operator|.
name|artefactsConfigurator
operator|=
name|editorController
operator|.
name|getArtefactsConfigurator
argument_list|()
expr_stmt|;
name|this
operator|.
name|injector
operator|=
name|getInjector
argument_list|()
expr_stmt|;
block|}
specifier|private
name|Injector
name|getInjector
parameter_list|()
block|{
name|DataChannelMetaData
name|metaData
init|=
name|editorController
operator|.
name|getApplication
argument_list|()
operator|.
name|getMetaData
argument_list|()
decl_stmt|;
return|return
operator|new
name|ToolsInjectorBuilder
argument_list|()
operator|.
name|addModule
argument_list|(
name|binder
lambda|->
name|binder
operator|.
name|bind
argument_list|(
name|DataChannelMetaData
operator|.
name|class
argument_list|)
operator|.
name|toInstance
argument_list|(
name|metaData
argument_list|)
argument_list|)
operator|.
name|addModule
argument_list|(
name|binder
lambda|->
name|binder
operator|.
name|bind
argument_list|(
name|ClassGenerationActionFactory
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|PreviewClassGenerationFactory
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|addModule
argument_list|(
name|binder
lambda|->
name|binder
operator|.
name|bind
argument_list|(
name|TPL_EDITOR_WRITER
argument_list|)
operator|.
name|to
argument_list|(
name|StringWriter
operator|.
name|class
argument_list|)
argument_list|)
operator|.
name|create
argument_list|()
return|;
block|}
specifier|public
name|ClassGenerationAction
name|preparePreviewAction
parameter_list|(
name|String
name|templateText
parameter_list|)
block|{
name|CgenConfiguration
name|previewCgenConfiguration
init|=
name|createPreviewCgenConfiguration
argument_list|()
decl_stmt|;
name|setTemplateTextInCgenConfig
argument_list|(
name|templateText
argument_list|,
name|previewCgenConfiguration
argument_list|)
expr_stmt|;
name|ClassGenerationAction
name|action
init|=
name|injector
operator|.
name|getInstance
argument_list|(
name|ClassGenerationActionFactory
operator|.
name|class
argument_list|)
operator|.
name|createAction
argument_list|(
name|previewCgenConfiguration
argument_list|)
decl_stmt|;
name|artefactsConfigurator
operator|.
name|config
argument_list|(
name|action
argument_list|,
name|editorController
operator|.
name|getSelectedArtifactName
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|action
return|;
block|}
specifier|private
name|void
name|setTemplateTextInCgenConfig
parameter_list|(
name|String
name|templateText
parameter_list|,
name|CgenConfiguration
name|previewCgenConfiguration
parameter_list|)
block|{
switch|switch
condition|(
name|templateType
condition|)
block|{
case|case
name|ENTITY_SUPERCLASS
case|:
case|case
name|ENTITY_SUBCLASS
case|:
block|{
name|previewCgenConfiguration
operator|.
name|setTemplate
argument_list|(
name|templateText
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|EMBEDDABLE_SUPERCLASS
case|:
case|case
name|EMBEDDABLE_SUBCLASS
case|:
block|{
name|previewCgenConfiguration
operator|.
name|setEmbeddableTemplate
argument_list|(
name|templateText
argument_list|)
expr_stmt|;
break|break;
block|}
case|case
name|DATAMAP_SUPERCLASS
case|:
case|case
name|DATAMAP_SUBCLASS
case|:
block|{
name|previewCgenConfiguration
operator|.
name|setDataMapTemplate
argument_list|(
name|templateText
argument_list|)
expr_stmt|;
break|break;
block|}
default|default:
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Illegal template type "
operator|+
name|templateType
argument_list|)
throw|;
block|}
block|}
specifier|private
name|CgenConfiguration
name|createPreviewCgenConfiguration
parameter_list|()
block|{
name|CgenConfiguration
name|cgenConfiguration
init|=
operator|new
name|CgenConfiguration
argument_list|()
decl_stmt|;
name|cgenConfiguration
operator|.
name|setDataMap
argument_list|(
name|editorController
operator|.
name|getCurrentDataMap
argument_list|()
argument_list|)
expr_stmt|;
name|cgenConfiguration
operator|.
name|setMakePairs
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|cgenConfiguration
operator|.
name|setArtifactsGenerationMode
argument_list|(
name|ArtifactsGenerationMode
operator|.
name|ALL
operator|.
name|getLabel
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|cgenConfiguration
return|;
block|}
specifier|public
name|Writer
name|getWriter
parameter_list|()
block|{
return|return
name|injector
operator|.
name|getInstance
argument_list|(
name|TPL_EDITOR_WRITER
argument_list|)
return|;
block|}
block|}
end_class

end_unit

