begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|editor
operator|.
name|cgen
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|ConfigurationNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DataMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|Embeddable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|CayenneController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|CellRenderers
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|CheckBoxHeader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|ModelerUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|swing
operator|.
name|BindingBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|swing
operator|.
name|ImageRendererColumn
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|swing
operator|.
name|ObjectBinding
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|swing
operator|.
name|TableBindingBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|validation
operator|.
name|ValidationFailure
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|validation
operator|.
name|ValidationResult
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|Icon
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JLabel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|table
operator|.
name|TableColumnModel
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * @since 4.1  */
end_comment

begin_class
specifier|public
class|class
name|CgenArtefactSelectorController
extends|extends
name|CayenneController
block|{
specifier|private
specifier|static
specifier|final
name|Icon
name|ERROR_ICON
init|=
name|ModelerUtil
operator|.
name|buildIcon
argument_list|(
literal|"icon-error.png"
argument_list|)
decl_stmt|;
specifier|protected
name|CgenArtefactSelectorPanel
name|view
decl_stmt|;
specifier|protected
name|ObjectBinding
name|tableBinding
decl_stmt|;
specifier|private
name|ValidationResult
name|lastValidationResult
decl_stmt|;
specifier|private
specifier|final
name|BindingBuilder
name|builder
decl_stmt|;
specifier|private
specifier|final
name|CheckBoxHeader
name|checkBoxHeader
decl_stmt|;
specifier|public
name|CgenArtefactSelectorController
parameter_list|(
name|CgenController
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|this
operator|.
name|checkBoxHeader
operator|=
operator|new
name|CheckBoxHeader
argument_list|()
expr_stmt|;
name|this
operator|.
name|view
operator|=
operator|new
name|CgenArtefactSelectorPanel
argument_list|()
expr_stmt|;
name|this
operator|.
name|builder
operator|=
operator|new
name|BindingBuilder
argument_list|(
name|getApplication
argument_list|()
operator|.
name|getBindingFactory
argument_list|()
argument_list|,
name|this
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|startup
parameter_list|()
block|{
name|initBindings
argument_list|()
expr_stmt|;
name|classSelectedAction
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|CgenController
name|getParentController
parameter_list|()
block|{
return|return
operator|(
name|CgenController
operator|)
name|getParent
argument_list|()
return|;
block|}
specifier|public
name|Component
name|getView
parameter_list|()
block|{
return|return
name|view
return|;
block|}
specifier|protected
name|void
name|initBindings
parameter_list|()
block|{
name|builder
operator|.
name|bindToAction
argument_list|(
name|checkBoxHeader
argument_list|,
literal|"checkAllAction()"
argument_list|)
expr_stmt|;
name|TableBindingBuilder
name|tableBuilder
init|=
operator|new
name|TableBindingBuilder
argument_list|(
name|builder
argument_list|)
decl_stmt|;
name|tableBuilder
operator|.
name|addColumn
argument_list|(
literal|""
argument_list|,
literal|"parent.setCurrentClass(#item), selected"
argument_list|,
name|Boolean
operator|.
name|class
argument_list|,
literal|true
argument_list|,
name|Boolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
name|tableBuilder
operator|.
name|addColumn
argument_list|(
literal|"  Class"
argument_list|,
literal|"getItemName(#item)"
argument_list|,
name|JLabel
operator|.
name|class
argument_list|,
literal|false
argument_list|,
literal|"XXXXXXXXXXXXXXXXXXXXXXXXXX"
argument_list|)
expr_stmt|;
name|tableBuilder
operator|.
name|addColumn
argument_list|(
literal|""
argument_list|,
literal|"getProblem(#item)"
argument_list|,
name|String
operator|.
name|class
argument_list|,
literal|false
argument_list|,
literal|"XX"
argument_list|)
expr_stmt|;
name|this
operator|.
name|tableBinding
operator|=
name|tableBuilder
operator|.
name|bindToTable
argument_list|(
name|view
operator|.
name|getTable
argument_list|()
argument_list|,
literal|"parent.classes"
argument_list|)
expr_stmt|;
name|TableColumnModel
name|columnModel
init|=
name|view
operator|.
name|getTable
argument_list|()
operator|.
name|getColumnModel
argument_list|()
decl_stmt|;
name|columnModel
operator|.
name|getColumn
argument_list|(
literal|0
argument_list|)
operator|.
name|setHeaderRenderer
argument_list|(
name|checkBoxHeader
argument_list|)
expr_stmt|;
name|columnModel
operator|.
name|getColumn
argument_list|(
literal|1
argument_list|)
operator|.
name|setCellRenderer
argument_list|(
operator|new
name|ImageRendererColumn
argument_list|()
argument_list|)
expr_stmt|;
name|columnModel
operator|.
name|getColumn
argument_list|(
literal|2
argument_list|)
operator|.
name|setCellRenderer
argument_list|(
operator|new
name|ImageRendererColumn
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|isSelected
parameter_list|()
block|{
return|return
name|getParentController
argument_list|()
operator|.
name|isSelected
argument_list|()
return|;
block|}
specifier|public
name|void
name|setSelected
parameter_list|(
name|boolean
name|selected
parameter_list|)
block|{
name|getParentController
argument_list|()
operator|.
name|setSelected
argument_list|(
name|selected
argument_list|)
expr_stmt|;
name|classSelectedAction
argument_list|()
expr_stmt|;
block|}
comment|/**      * A callback action that updates the state of Select All checkbox.      */
specifier|public
name|void
name|classSelectedAction
parameter_list|()
block|{
name|int
name|selectedCount
init|=
name|getParentController
argument_list|()
operator|.
name|getSelectedEntitiesSize
argument_list|()
operator|+
name|getParentController
argument_list|()
operator|.
name|getSelectedEmbeddablesSize
argument_list|()
operator|+
operator|(
name|getParentController
argument_list|()
operator|.
name|isDataMapSelected
argument_list|()
condition|?
literal|1
else|:
literal|0
operator|)
decl_stmt|;
name|int
name|totalClasses
init|=
name|getParentController
argument_list|()
operator|.
name|getClasses
argument_list|()
operator|.
name|size
argument_list|()
decl_stmt|;
name|checkBoxHeader
operator|.
name|setSelected
argument_list|(
name|selectedCount
operator|>=
name|totalClasses
argument_list|)
expr_stmt|;
name|getParentController
argument_list|()
operator|.
name|updateGenerateButton
argument_list|()
expr_stmt|;
name|getParentController
argument_list|()
operator|.
name|updateSelectedEntities
argument_list|()
expr_stmt|;
name|getParentController
argument_list|()
operator|.
name|getStandardModeController
argument_list|()
operator|.
name|updateTemplateEditorButtons
argument_list|()
expr_stmt|;
name|view
operator|.
name|repaint
argument_list|()
expr_stmt|;
block|}
comment|/**      * An action that updates entity check boxes in response to the Select All state      * change.      */
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unused"
argument_list|)
specifier|public
name|void
name|checkAllAction
parameter_list|()
block|{
if|if
condition|(
name|getParentController
argument_list|()
operator|.
name|updateSelection
argument_list|(
name|checkBoxHeader
operator|.
name|isSelected
argument_list|()
condition|?
name|o
lambda|->
literal|true
else|:
name|o
lambda|->
literal|false
argument_list|)
condition|)
block|{
name|tableBinding
operator|.
name|updateView
argument_list|()
block|;
name|getParentController
argument_list|()
operator|.
name|updateSelectedEntities
argument_list|()
empty_stmt|;
name|getParentController
argument_list|()
operator|.
name|updateGenerateButton
argument_list|()
expr_stmt|;
name|getParentController
argument_list|()
operator|.
name|getStandardModeController
argument_list|()
operator|.
name|updateTemplateEditorButtons
argument_list|()
expr_stmt|;
block|}
block|}
end_class

begin_function
specifier|public
name|void
name|validate
parameter_list|(
name|Collection
argument_list|<
name|?
extends|extends
name|ConfigurationNode
argument_list|>
name|classes
parameter_list|)
block|{
name|CgenValidator
name|validator
init|=
operator|new
name|CgenValidator
argument_list|()
decl_stmt|;
name|this
operator|.
name|lastValidationResult
operator|=
name|validator
operator|.
name|getValidationResult
argument_list|(
name|classes
argument_list|)
expr_stmt|;
block|}
end_function

begin_comment
comment|/**      * Returns the first encountered validation problem for an antity matching the name or      * null if the entity is valid or the entity is not present.      */
end_comment

begin_function
specifier|public
name|JLabel
name|getProblem
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
name|String
name|name
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|obj
operator|instanceof
name|ObjEntity
condition|)
block|{
name|name
operator|=
operator|(
operator|(
name|ObjEntity
operator|)
name|obj
operator|)
operator|.
name|getName
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
name|obj
operator|instanceof
name|Embeddable
condition|)
block|{
name|name
operator|=
operator|(
operator|(
name|Embeddable
operator|)
name|obj
operator|)
operator|.
name|getClassName
argument_list|()
expr_stmt|;
block|}
name|ValidationFailure
name|validationFailure
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|lastValidationResult
operator|!=
literal|null
condition|)
block|{
name|List
argument_list|<
name|ValidationFailure
argument_list|>
name|failures
init|=
name|lastValidationResult
operator|.
name|getFailures
argument_list|(
name|name
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|failures
operator|.
name|isEmpty
argument_list|()
condition|)
block|{
name|validationFailure
operator|=
name|failures
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
name|JLabel
name|labelIcon
init|=
operator|new
name|JLabel
argument_list|()
decl_stmt|;
name|labelIcon
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|validationFailure
operator|!=
literal|null
condition|)
block|{
name|labelIcon
operator|.
name|setIcon
argument_list|(
name|ERROR_ICON
argument_list|)
expr_stmt|;
name|labelIcon
operator|.
name|setToolTipText
argument_list|(
name|validationFailure
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|labelIcon
return|;
block|}
end_function

begin_function
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unused"
argument_list|)
specifier|public
name|JLabel
name|getItemName
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
name|String
name|className
decl_stmt|;
name|Icon
name|icon
decl_stmt|;
if|if
condition|(
name|obj
operator|instanceof
name|Embeddable
condition|)
block|{
name|className
operator|=
operator|(
operator|(
name|Embeddable
operator|)
name|obj
operator|)
operator|.
name|getClassName
argument_list|()
expr_stmt|;
name|icon
operator|=
name|CellRenderers
operator|.
name|iconForObject
argument_list|(
operator|new
name|Embeddable
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|obj
operator|instanceof
name|ObjEntity
condition|)
block|{
name|className
operator|=
operator|(
operator|(
name|ObjEntity
operator|)
name|obj
operator|)
operator|.
name|getName
argument_list|()
expr_stmt|;
name|icon
operator|=
name|CellRenderers
operator|.
name|iconForObject
argument_list|(
operator|new
name|ObjEntity
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|className
operator|=
operator|(
operator|(
name|DataMap
operator|)
name|obj
operator|)
operator|.
name|getName
argument_list|()
expr_stmt|;
name|icon
operator|=
name|CellRenderers
operator|.
name|iconForObject
argument_list|(
operator|new
name|DataMap
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|JLabel
name|labelIcon
init|=
operator|new
name|JLabel
argument_list|()
decl_stmt|;
name|labelIcon
operator|.
name|setIcon
argument_list|(
name|icon
argument_list|)
expr_stmt|;
name|labelIcon
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|labelIcon
operator|.
name|setText
argument_list|(
name|className
argument_list|)
expr_stmt|;
return|return
name|labelIcon
return|;
block|}
end_function

unit|}
end_unit

