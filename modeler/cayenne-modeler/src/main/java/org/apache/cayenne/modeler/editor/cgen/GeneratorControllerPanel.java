begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|editor
operator|.
name|cgen
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|gen
operator|.
name|CgenConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DataMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|ProjectController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|TextAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|validation
operator|.
name|ValidationException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JButton
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPanel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTextField
import|;
end_import

begin_comment
comment|/**  * @since 4.1  * A generic panel that is a superclass of generator panels, defining common fields.  */
end_comment

begin_class
specifier|public
class|class
name|GeneratorControllerPanel
extends|extends
name|JPanel
block|{
specifier|protected
name|TextAdapter
name|outputFolder
decl_stmt|;
specifier|protected
name|JButton
name|selectOutputFolder
decl_stmt|;
specifier|protected
name|ProjectController
name|projectController
decl_stmt|;
specifier|public
name|GeneratorControllerPanel
parameter_list|(
name|ProjectController
name|projectController
parameter_list|,
name|CodeGeneratorControllerBase
name|codeGeneratorControllerBase
parameter_list|)
block|{
name|this
operator|.
name|projectController
operator|=
name|projectController
expr_stmt|;
name|this
operator|.
name|outputFolder
operator|=
operator|new
name|TextAdapter
argument_list|(
operator|new
name|JTextField
argument_list|()
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|void
name|updateModel
parameter_list|(
name|String
name|text
parameter_list|)
throws|throws
name|ValidationException
block|{
name|CgenConfiguration
name|cgenByDataMap
init|=
name|getCgenByDataMap
argument_list|()
decl_stmt|;
if|if
condition|(
name|cgenByDataMap
operator|!=
literal|null
condition|)
block|{
name|cgenByDataMap
operator|.
name|setRelPath
argument_list|(
name|text
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|codeGeneratorControllerBase
operator|.
name|isInitFromModel
argument_list|()
condition|)
block|{
name|projectController
operator|.
name|setDirty
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
expr_stmt|;
name|this
operator|.
name|selectOutputFolder
operator|=
operator|new
name|JButton
argument_list|(
literal|".."
argument_list|)
expr_stmt|;
block|}
specifier|public
name|TextAdapter
name|getOutputFolder
parameter_list|()
block|{
return|return
name|outputFolder
return|;
block|}
specifier|public
name|JButton
name|getSelectOutputFolder
parameter_list|()
block|{
return|return
name|selectOutputFolder
return|;
block|}
specifier|public
name|CgenConfiguration
name|getCgenByDataMap
parameter_list|()
block|{
name|DataMap
name|dataMap
init|=
name|projectController
operator|.
name|getCurrentDataMap
argument_list|()
decl_stmt|;
return|return
name|projectController
operator|.
name|getApplication
argument_list|()
operator|.
name|getMetaData
argument_list|()
operator|.
name|get
argument_list|(
name|dataMap
argument_list|,
name|CgenConfiguration
operator|.
name|class
argument_list|)
return|;
block|}
block|}
end_class

end_unit

