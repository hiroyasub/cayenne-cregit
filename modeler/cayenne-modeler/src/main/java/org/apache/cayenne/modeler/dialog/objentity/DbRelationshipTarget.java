begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|objentity
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|DefaultComboBoxModel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JOptionPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|WindowConstants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|EntityResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|ProjectController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|CayenneController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|CellRenderers
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|Comparators
import|;
end_import

begin_class
specifier|public
class|class
name|DbRelationshipTarget
extends|extends
name|CayenneController
block|{
specifier|private
name|DbEntity
name|source1
decl_stmt|;
specifier|private
name|DbEntity
name|source2
decl_stmt|;
specifier|protected
name|DbEntity
name|relTarget
decl_stmt|;
specifier|protected
name|List
argument_list|<
name|DbEntity
argument_list|>
name|relTargets
decl_stmt|;
specifier|protected
name|DbEntity
name|source
decl_stmt|;
specifier|protected
name|CayenneController
name|mediator
decl_stmt|;
specifier|protected
name|boolean
name|source1Selected
decl_stmt|;
specifier|protected
name|DbRelationshipTargetView
name|view
decl_stmt|;
specifier|protected
name|boolean
name|toMany
decl_stmt|;
specifier|protected
name|boolean
name|savePressed
decl_stmt|;
specifier|public
name|DbRelationshipTarget
parameter_list|(
name|ProjectController
name|mediator
parameter_list|,
name|DbEntity
name|source1
parameter_list|,
name|DbEntity
name|source2
parameter_list|)
block|{
name|super
argument_list|(
name|mediator
argument_list|)
expr_stmt|;
name|view
operator|=
operator|new
name|DbRelationshipTargetView
argument_list|(
name|source1
argument_list|,
name|source2
argument_list|)
expr_stmt|;
name|initController
argument_list|()
expr_stmt|;
name|view
operator|.
name|getSource1Button
argument_list|()
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|view
operator|.
name|getToManyCheckBox
argument_list|()
operator|.
name|setSelected
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|setSource
argument_list|(
name|source1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|this
operator|.
name|mediator
operator|=
name|mediator
expr_stmt|;
name|this
operator|.
name|source1
operator|=
name|source1
expr_stmt|;
name|this
operator|.
name|source2
operator|=
name|source2
expr_stmt|;
name|EntityResolver
name|resolver
init|=
name|mediator
operator|.
name|getEntityResolver
argument_list|()
decl_stmt|;
name|this
operator|.
name|relTargets
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|(
name|resolver
operator|.
name|getDbEntities
argument_list|()
argument_list|)
expr_stmt|;
name|relTargets
operator|.
name|sort
argument_list|(
name|Comparators
operator|.
name|getNamedObjectComparator
argument_list|()
argument_list|)
expr_stmt|;
name|DbEntity
index|[]
name|dbEntities
init|=
name|relTargets
operator|.
name|toArray
argument_list|(
operator|new
name|DbEntity
index|[
literal|0
index|]
argument_list|)
decl_stmt|;
name|DefaultComboBoxModel
argument_list|<
name|DbEntity
argument_list|>
name|dbModel
init|=
operator|new
name|DefaultComboBoxModel
argument_list|<>
argument_list|(
name|dbEntities
argument_list|)
decl_stmt|;
name|view
operator|.
name|targetCombo
operator|.
name|setRenderer
argument_list|(
name|CellRenderers
operator|.
name|entityListRendererWithIcons
argument_list|(
name|mediator
operator|.
name|getCurrentDataMap
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|targetCombo
operator|.
name|removeAllItems
argument_list|()
expr_stmt|;
name|view
operator|.
name|targetCombo
operator|.
name|setModel
argument_list|(
name|dbModel
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|initController
parameter_list|()
block|{
name|view
operator|.
name|getCancelButton
argument_list|()
operator|.
name|addActionListener
argument_list|(
name|e
lambda|->
name|view
operator|.
name|dispose
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|.
name|getSaveButton
argument_list|()
operator|.
name|addActionListener
argument_list|(
name|e
lambda|->
name|save
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|.
name|getSource1Button
argument_list|()
operator|.
name|addActionListener
argument_list|(
name|e
lambda|->
name|setSource
argument_list|(
name|source1
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|getSource2Button
argument_list|()
operator|.
name|addActionListener
argument_list|(
name|e
lambda|->
name|setSource
argument_list|(
name|source2
argument_list|,
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|getToManyCheckBox
argument_list|()
operator|.
name|addChangeListener
argument_list|(
name|e
lambda|->
name|toMany
operator|=
name|view
operator|.
name|getToManyCheckBox
argument_list|()
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Component
name|getView
parameter_list|()
block|{
return|return
name|view
return|;
block|}
specifier|protected
name|void
name|save
parameter_list|()
block|{
name|this
operator|.
name|relTarget
operator|=
name|relTargets
operator|.
name|get
argument_list|(
name|view
operator|.
name|targetCombo
operator|.
name|getSelectedIndex
argument_list|()
argument_list|)
expr_stmt|;
name|DbEntity
name|target
init|=
name|getTarget
argument_list|()
decl_stmt|;
if|if
condition|(
name|target
operator|==
literal|null
condition|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|getView
argument_list|()
argument_list|,
literal|"Please select target entity first."
argument_list|,
literal|"Warning"
argument_list|,
name|JOptionPane
operator|.
name|WARNING_MESSAGE
argument_list|)
expr_stmt|;
return|return;
block|}
name|savePressed
operator|=
literal|true
expr_stmt|;
name|view
operator|.
name|dispose
argument_list|()
expr_stmt|;
block|}
comment|/**      * Creates and runs the dialog.      */
specifier|public
name|void
name|startupAction
parameter_list|()
block|{
name|view
operator|.
name|pack
argument_list|()
expr_stmt|;
name|view
operator|.
name|setDefaultCloseOperation
argument_list|(
name|WindowConstants
operator|.
name|DISPOSE_ON_CLOSE
argument_list|)
expr_stmt|;
name|view
operator|.
name|setModal
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|makeCloseableOnEscape
argument_list|()
expr_stmt|;
name|centerView
argument_list|()
expr_stmt|;
name|view
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
name|boolean
name|isSavePressed
parameter_list|()
block|{
return|return
name|savePressed
return|;
block|}
specifier|public
name|List
argument_list|<
name|DbEntity
argument_list|>
name|getTargets
parameter_list|()
block|{
return|return
name|relTargets
return|;
block|}
specifier|public
name|DbEntity
name|getTarget
parameter_list|()
block|{
return|return
name|relTarget
return|;
block|}
specifier|public
name|void
name|setTarget
parameter_list|(
name|DbEntity
name|newRelTarget
parameter_list|)
block|{
name|this
operator|.
name|relTarget
operator|=
name|newRelTarget
expr_stmt|;
block|}
specifier|public
name|boolean
name|isSource1Selected
parameter_list|()
block|{
return|return
name|source1Selected
return|;
block|}
specifier|public
name|DbEntity
name|getSource
parameter_list|()
block|{
return|return
name|source
return|;
block|}
specifier|public
name|void
name|setSource
parameter_list|(
name|DbEntity
name|source
parameter_list|,
name|boolean
name|source1
parameter_list|)
block|{
name|this
operator|.
name|source
operator|=
name|source
expr_stmt|;
name|this
operator|.
name|source1Selected
operator|=
name|source1
expr_stmt|;
block|}
specifier|public
name|boolean
name|isToMany
parameter_list|()
block|{
return|return
name|toMany
return|;
block|}
block|}
end_class

end_unit

