begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|BorderLayout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|FlowLayout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|MouseAdapter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|MouseEvent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|BorderFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JButton
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JComponent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JLabel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPanel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JScrollPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTable
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|ListSelectionModel
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|builder
operator|.
name|DefaultFormBuilder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|layout
operator|.
name|FormLayout
import|;
end_import

begin_comment
comment|/**   * Implements a set of utility methods for laying out components on the panels.  *   */
end_comment

begin_comment
comment|// TODO: get rid of PanelFactory in favor of JGoodies Forms
end_comment

begin_class
specifier|public
class|class
name|PanelFactory
block|{
comment|/**       * Creates and returns a panel with right-centered buttons.      */
specifier|public
specifier|static
name|JPanel
name|createButtonPanel
parameter_list|(
name|JButton
index|[]
name|buttons
parameter_list|)
block|{
name|JPanel
name|panel
init|=
operator|new
name|JPanel
argument_list|()
decl_stmt|;
name|panel
operator|.
name|setBorder
argument_list|(
name|BorderFactory
operator|.
name|createEmptyBorder
argument_list|(
literal|3
argument_list|,
literal|20
argument_list|,
literal|3
argument_list|,
literal|7
argument_list|)
argument_list|)
expr_stmt|;
name|panel
operator|.
name|setLayout
argument_list|(
operator|new
name|FlowLayout
argument_list|(
name|FlowLayout
operator|.
name|RIGHT
argument_list|)
argument_list|)
expr_stmt|;
for|for
control|(
name|JButton
name|button
range|:
name|buttons
control|)
block|{
name|panel
operator|.
name|add
argument_list|(
name|button
argument_list|)
expr_stmt|;
block|}
return|return
name|panel
return|;
block|}
specifier|public
specifier|static
name|JPanel
name|createForm
parameter_list|(
name|String
name|title
parameter_list|,
name|String
index|[]
name|labels
parameter_list|,
name|Component
index|[]
name|components
parameter_list|)
block|{
name|Component
index|[]
name|jlabels
init|=
operator|new
name|Component
index|[
name|labels
operator|.
name|length
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|labels
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|jlabels
index|[
name|i
index|]
operator|=
operator|new
name|JLabel
argument_list|(
name|labels
index|[
name|i
index|]
argument_list|)
expr_stmt|;
block|}
return|return
name|createForm
argument_list|(
name|title
argument_list|,
name|jlabels
argument_list|,
name|components
argument_list|)
return|;
block|}
specifier|public
specifier|static
name|JPanel
name|createForm
parameter_list|(
name|Component
index|[]
name|leftComponents
parameter_list|,
name|Component
index|[]
name|rightComponents
parameter_list|)
block|{
return|return
name|createForm
argument_list|(
literal|null
argument_list|,
name|leftComponents
argument_list|,
name|rightComponents
argument_list|)
return|;
block|}
comment|/**       * Create panel with aligned labels on the right and fields on the left.      */
specifier|public
specifier|static
name|JPanel
name|createForm
parameter_list|(
name|String
name|title
parameter_list|,
name|Component
index|[]
name|leftComponents
parameter_list|,
name|Component
index|[]
name|rightComponents
parameter_list|)
block|{
if|if
condition|(
name|leftComponents
operator|.
name|length
operator|!=
name|rightComponents
operator|.
name|length
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Arrays must be the same size, instead got "
operator|+
name|leftComponents
operator|.
name|length
operator|+
literal|"and "
operator|+
name|rightComponents
operator|.
name|length
argument_list|)
throw|;
block|}
name|int
name|numRows
init|=
name|leftComponents
operator|.
name|length
decl_stmt|;
if|if
condition|(
name|numRows
operator|==
literal|0
condition|)
block|{
throw|throw
operator|new
name|IllegalArgumentException
argument_list|(
literal|"Zero components."
argument_list|)
throw|;
block|}
name|FormLayout
name|layout
init|=
operator|new
name|FormLayout
argument_list|(
literal|"right:100, 3dlu, left:300"
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|DefaultFormBuilder
name|builder
init|=
operator|new
name|DefaultFormBuilder
argument_list|(
name|layout
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setDefaultDialogBorder
argument_list|()
expr_stmt|;
if|if
condition|(
name|title
operator|!=
literal|null
condition|)
block|{
name|builder
operator|.
name|appendSeparator
argument_list|(
name|title
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|numRows
condition|;
name|i
operator|++
control|)
block|{
name|builder
operator|.
name|append
argument_list|(
name|leftComponents
index|[
name|i
index|]
argument_list|,
name|rightComponents
index|[
name|i
index|]
argument_list|)
expr_stmt|;
name|builder
operator|.
name|nextLine
argument_list|()
expr_stmt|;
block|}
return|return
name|builder
operator|.
name|getPanel
argument_list|()
return|;
block|}
comment|/**       * Creates panel with table within scroll panel and buttons in the bottom.      * Also sets the resizing and selection policies of the table to      * AUTO_RESIZE_OFF and SINGLE_SELECTION respectively.      */
specifier|public
specifier|static
name|JPanel
name|createTablePanel
parameter_list|(
specifier|final
name|JTable
name|table
parameter_list|,
name|JButton
index|[]
name|buttons
parameter_list|)
block|{
name|JPanel
name|panel
init|=
operator|new
name|JPanel
argument_list|()
decl_stmt|;
name|panel
operator|.
name|setLayout
argument_list|(
operator|new
name|BorderLayout
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
comment|// Create table with two columns and no rows.
name|table
operator|.
name|setSelectionMode
argument_list|(
name|ListSelectionModel
operator|.
name|MULTIPLE_INTERVAL_SELECTION
argument_list|)
expr_stmt|;
name|table
operator|.
name|setAutoResizeMode
argument_list|(
name|JTable
operator|.
name|AUTO_RESIZE_OFF
argument_list|)
expr_stmt|;
name|JScrollPane
name|scrollPane
init|=
operator|new
name|JScrollPane
argument_list|(
name|table
argument_list|)
decl_stmt|;
name|scrollPane
operator|.
name|addMouseListener
argument_list|(
operator|new
name|MouseAdapter
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|mouseClicked
parameter_list|(
name|MouseEvent
name|e
parameter_list|)
block|{
if|if
condition|(
name|table
operator|.
name|isEditing
argument_list|()
condition|)
block|{
name|table
operator|.
name|getCellEditor
argument_list|()
operator|.
name|stopCellEditing
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
comment|// Panel to add space between table and EAST/WEST borders
name|panel
operator|.
name|add
argument_list|(
name|scrollPane
argument_list|,
name|BorderLayout
operator|.
name|CENTER
argument_list|)
expr_stmt|;
comment|// Add Add and Remove buttons
if|if
condition|(
name|buttons
operator|!=
literal|null
condition|)
block|{
name|panel
operator|.
name|add
argument_list|(
name|createButtonPanel
argument_list|(
name|buttons
argument_list|)
argument_list|,
name|BorderLayout
operator|.
name|SOUTH
argument_list|)
expr_stmt|;
block|}
return|return
name|panel
return|;
block|}
comment|/** Creates panel with table within scroll panel and buttons in the bottom.       * Also sets the resizing and selection policies of the table to       * AUTO_RESIZE_OFF and SINGLE_SELECTION respectively.*/
specifier|public
specifier|static
name|JPanel
name|createTablePanel
parameter_list|(
name|JTable
name|table
parameter_list|,
name|JComponent
index|[]
name|components
parameter_list|,
name|JButton
index|[]
name|buttons
parameter_list|)
block|{
name|JPanel
name|panel
init|=
operator|new
name|JPanel
argument_list|()
decl_stmt|;
name|panel
operator|.
name|setLayout
argument_list|(
operator|new
name|BorderLayout
argument_list|(
literal|5
argument_list|,
literal|5
argument_list|)
argument_list|)
expr_stmt|;
name|JPanel
name|temp_panel
init|=
operator|new
name|JPanel
argument_list|(
operator|new
name|BorderLayout
argument_list|()
argument_list|)
decl_stmt|;
comment|// Create table with two columns and no rows.
name|table
operator|.
name|getSelectionModel
argument_list|()
operator|.
name|setSelectionMode
argument_list|(
name|ListSelectionModel
operator|.
name|SINGLE_SELECTION
argument_list|)
expr_stmt|;
name|table
operator|.
name|setAutoResizeMode
argument_list|(
name|JTable
operator|.
name|AUTO_RESIZE_OFF
argument_list|)
expr_stmt|;
name|JScrollPane
name|scroll_pane
init|=
operator|new
name|JScrollPane
argument_list|(
name|table
argument_list|)
decl_stmt|;
name|temp_panel
operator|.
name|add
argument_list|(
name|scroll_pane
argument_list|,
name|BorderLayout
operator|.
name|CENTER
argument_list|)
expr_stmt|;
for|for
control|(
name|JComponent
name|component
range|:
name|components
control|)
block|{
name|JPanel
name|temp
init|=
operator|new
name|JPanel
argument_list|(
operator|new
name|BorderLayout
argument_list|()
argument_list|)
decl_stmt|;
name|temp
operator|.
name|add
argument_list|(
name|temp_panel
argument_list|,
name|BorderLayout
operator|.
name|CENTER
argument_list|)
expr_stmt|;
name|temp
operator|.
name|add
argument_list|(
name|component
argument_list|,
name|BorderLayout
operator|.
name|SOUTH
argument_list|)
expr_stmt|;
name|temp_panel
operator|=
name|temp
expr_stmt|;
block|}
name|panel
operator|.
name|add
argument_list|(
name|temp_panel
argument_list|,
name|BorderLayout
operator|.
name|CENTER
argument_list|)
expr_stmt|;
if|if
condition|(
name|buttons
operator|!=
literal|null
condition|)
block|{
name|panel
operator|.
name|add
argument_list|(
name|createButtonPanel
argument_list|(
name|buttons
argument_list|)
argument_list|,
name|BorderLayout
operator|.
name|SOUTH
argument_list|)
expr_stmt|;
block|}
return|return
name|panel
return|;
block|}
block|}
end_class

end_unit

