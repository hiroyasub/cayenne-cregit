begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|pref
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|db
operator|.
name|model
operator|.
name|DbCatalog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|db
operator|.
name|model
operator|.
name|DbColumn
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|db
operator|.
name|model
operator|.
name|DbEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|db
operator|.
name|model
operator|.
name|DbProcedure
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|db
operator|.
name|model
operator|.
name|DbSchema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|CellRenderers
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|ImageIcon
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTree
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|tree
operator|.
name|DefaultMutableTreeNode
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|tree
operator|.
name|DefaultTreeCellRenderer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Component
import|;
end_import

begin_comment
comment|/**  * @since 4.0  */
end_comment

begin_class
specifier|public
class|class
name|FilteredTreeCellRenderer
extends|extends
name|DefaultTreeCellRenderer
block|{
annotation|@
name|Override
specifier|public
name|Component
name|getTreeCellRendererComponent
parameter_list|(
name|JTree
name|tree
parameter_list|,
name|Object
name|value
parameter_list|,
name|boolean
name|sel
parameter_list|,
name|boolean
name|expanded
parameter_list|,
name|boolean
name|leaf
parameter_list|,
name|int
name|row
parameter_list|,
name|boolean
name|hasFocus
parameter_list|)
block|{
name|super
operator|.
name|getTreeCellRendererComponent
argument_list|(
name|tree
argument_list|,
name|value
argument_list|,
name|sel
argument_list|,
name|expanded
argument_list|,
name|leaf
argument_list|,
name|row
argument_list|,
name|hasFocus
argument_list|)
expr_stmt|;
if|if
condition|(
operator|(
name|value
operator|!=
literal|null
operator|)
operator|&&
operator|(
name|value
operator|instanceof
name|DefaultMutableTreeNode
operator|)
condition|)
block|{
name|Object
name|userObject
init|=
operator|(
operator|(
name|DefaultMutableTreeNode
operator|)
name|value
operator|)
operator|.
name|getUserObject
argument_list|()
decl_stmt|;
name|ImageIcon
name|imageIcon
init|=
name|CellRenderers
operator|.
name|iconForObject
argument_list|(
name|userObject
argument_list|)
decl_stmt|;
if|if
condition|(
name|userObject
operator|instanceof
name|DbCatalog
condition|)
block|{
name|setText
argument_list|(
operator|(
operator|(
name|DbCatalog
operator|)
name|userObject
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|setIcon
argument_list|(
name|imageIcon
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|userObject
operator|instanceof
name|DbSchema
condition|)
block|{
name|setText
argument_list|(
operator|(
operator|(
name|DbSchema
operator|)
name|userObject
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|setIcon
argument_list|(
name|imageIcon
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|userObject
operator|instanceof
name|DbEntity
condition|)
block|{
name|setText
argument_list|(
operator|(
operator|(
name|DbEntity
operator|)
name|userObject
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|setIcon
argument_list|(
name|imageIcon
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|userObject
operator|instanceof
name|DbColumn
condition|)
block|{
name|setText
argument_list|(
operator|(
operator|(
name|DbColumn
operator|)
name|userObject
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|setIcon
argument_list|(
name|imageIcon
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|userObject
operator|instanceof
name|DbProcedure
condition|)
block|{
name|setText
argument_list|(
operator|(
operator|(
name|DbProcedure
operator|)
name|userObject
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|setIcon
argument_list|(
name|imageIcon
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|this
return|;
block|}
block|}
end_class

end_unit

