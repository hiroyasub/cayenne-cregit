begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|editor
operator|.
name|dbimport
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|reverse
operator|.
name|dbimport
operator|.
name|Catalog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|reverse
operator|.
name|dbimport
operator|.
name|ExcludeColumn
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|reverse
operator|.
name|dbimport
operator|.
name|ExcludeProcedure
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|reverse
operator|.
name|dbimport
operator|.
name|ExcludeTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|reverse
operator|.
name|dbimport
operator|.
name|IncludeColumn
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|reverse
operator|.
name|dbimport
operator|.
name|IncludeProcedure
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|reverse
operator|.
name|dbimport
operator|.
name|IncludeTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|reverse
operator|.
name|dbimport
operator|.
name|ReverseEngineering
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|reverse
operator|.
name|dbimport
operator|.
name|Schema
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DataMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|ProjectController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|db
operator|.
name|load
operator|.
name|CatalogPopUpMenu
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|db
operator|.
name|load
operator|.
name|DbImportTreeNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|db
operator|.
name|load
operator|.
name|DefaultPopUpMenu
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|db
operator|.
name|load
operator|.
name|IncludeTablePopUpMenu
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|db
operator|.
name|load
operator|.
name|RootPopUpMenu
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|db
operator|.
name|load
operator|.
name|SchemaPopUpMenu
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JScrollPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTree
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|ScrollPaneLayout
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|SwingUtilities
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|tree
operator|.
name|DefaultTreeCellRenderer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|tree
operator|.
name|TreePath
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|MouseAdapter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|MouseEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * @since 4.1  */
end_comment

begin_class
class|class
name|ReverseEngineeringTreePanel
extends|extends
name|JScrollPane
block|{
specifier|private
name|DbImportTree
name|reverseEngineeringTree
decl_stmt|;
specifier|private
name|DbImportTree
name|dbSchemaTree
decl_stmt|;
specifier|private
name|ProjectController
name|projectController
decl_stmt|;
specifier|private
name|TreeToolbarPanel
name|treeToolbar
decl_stmt|;
specifier|private
name|Map
argument_list|<
name|Class
argument_list|,
name|DefaultPopUpMenu
argument_list|>
name|popups
decl_stmt|;
name|ReverseEngineeringTreePanel
parameter_list|(
name|ProjectController
name|projectController
parameter_list|,
name|DbImportTree
name|reverseEngineeringTree
parameter_list|,
name|DbImportTree
name|dbSchemaTree
parameter_list|)
block|{
name|super
argument_list|(
name|reverseEngineeringTree
argument_list|)
expr_stmt|;
name|this
operator|.
name|projectController
operator|=
name|projectController
expr_stmt|;
name|this
operator|.
name|reverseEngineeringTree
operator|=
name|reverseEngineeringTree
expr_stmt|;
name|this
operator|.
name|dbSchemaTree
operator|=
name|dbSchemaTree
expr_stmt|;
name|reverseEngineeringTree
operator|.
name|setEditable
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|reverseEngineeringTree
operator|.
name|setCellRenderer
argument_list|(
operator|new
name|DbImportTreeCellRenderer
argument_list|()
argument_list|)
expr_stmt|;
name|DbImportTreeCellEditor
name|editor
init|=
operator|new
name|DbImportTreeCellEditor
argument_list|(
name|reverseEngineeringTree
argument_list|,
operator|(
name|DefaultTreeCellRenderer
operator|)
name|reverseEngineeringTree
operator|.
name|getCellRenderer
argument_list|()
argument_list|)
decl_stmt|;
name|editor
operator|.
name|setProjectController
argument_list|(
name|projectController
argument_list|)
expr_stmt|;
name|reverseEngineeringTree
operator|.
name|setCellEditor
argument_list|(
name|editor
argument_list|)
expr_stmt|;
name|initListeners
argument_list|()
expr_stmt|;
name|initPopupMenus
argument_list|()
expr_stmt|;
name|changeIcons
argument_list|()
expr_stmt|;
block|}
name|void
name|updateTree
parameter_list|()
block|{
name|reverseEngineeringTree
operator|.
name|translateReverseEngineeringToTree
argument_list|(
name|getReverseEngineeringBySelectedMap
argument_list|()
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|initPopupMenus
parameter_list|()
block|{
name|popups
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
name|popups
operator|.
name|put
argument_list|(
name|Catalog
operator|.
name|class
argument_list|,
operator|new
name|CatalogPopUpMenu
argument_list|()
argument_list|)
expr_stmt|;
name|popups
operator|.
name|put
argument_list|(
name|Schema
operator|.
name|class
argument_list|,
operator|new
name|SchemaPopUpMenu
argument_list|()
argument_list|)
expr_stmt|;
name|popups
operator|.
name|put
argument_list|(
name|ReverseEngineering
operator|.
name|class
argument_list|,
operator|new
name|RootPopUpMenu
argument_list|()
argument_list|)
expr_stmt|;
name|popups
operator|.
name|put
argument_list|(
name|String
operator|.
name|class
argument_list|,
operator|new
name|RootPopUpMenu
argument_list|()
argument_list|)
expr_stmt|;
name|popups
operator|.
name|put
argument_list|(
name|IncludeTable
operator|.
name|class
argument_list|,
operator|new
name|IncludeTablePopUpMenu
argument_list|()
argument_list|)
expr_stmt|;
name|popups
operator|.
name|put
argument_list|(
name|ExcludeTable
operator|.
name|class
argument_list|,
operator|new
name|DefaultPopUpMenu
argument_list|()
argument_list|)
expr_stmt|;
name|popups
operator|.
name|put
argument_list|(
name|IncludeColumn
operator|.
name|class
argument_list|,
operator|new
name|DefaultPopUpMenu
argument_list|()
argument_list|)
expr_stmt|;
name|popups
operator|.
name|put
argument_list|(
name|ExcludeColumn
operator|.
name|class
argument_list|,
operator|new
name|DefaultPopUpMenu
argument_list|()
argument_list|)
expr_stmt|;
name|popups
operator|.
name|put
argument_list|(
name|IncludeProcedure
operator|.
name|class
argument_list|,
operator|new
name|DefaultPopUpMenu
argument_list|()
argument_list|)
expr_stmt|;
name|popups
operator|.
name|put
argument_list|(
name|ExcludeProcedure
operator|.
name|class
argument_list|,
operator|new
name|DefaultPopUpMenu
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|initListeners
parameter_list|()
block|{
name|reverseEngineeringTree
operator|.
name|addTreeSelectionListener
argument_list|(
name|e
lambda|->
name|treeToolbar
operator|.
name|lockButtons
argument_list|()
argument_list|)
expr_stmt|;
name|reverseEngineeringTree
operator|.
name|addMouseListener
argument_list|(
operator|new
name|MouseAdapter
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|mouseClicked
parameter_list|(
name|MouseEvent
name|e
parameter_list|)
block|{
if|if
condition|(
name|reverseEngineeringTree
operator|.
name|getRowForLocation
argument_list|(
name|e
operator|.
name|getX
argument_list|()
argument_list|,
name|e
operator|.
name|getY
argument_list|()
argument_list|)
operator|==
operator|-
literal|1
condition|)
block|{
name|reverseEngineeringTree
operator|.
name|setSelectionRow
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|SwingUtilities
operator|.
name|isRightMouseButton
argument_list|(
name|e
argument_list|)
condition|)
block|{
if|if
condition|(
name|reverseEngineeringTree
operator|.
name|isEditing
argument_list|()
condition|)
block|{
return|return;
block|}
name|int
name|row
init|=
name|reverseEngineeringTree
operator|.
name|getClosestRowForLocation
argument_list|(
name|e
operator|.
name|getX
argument_list|()
argument_list|,
name|e
operator|.
name|getY
argument_list|()
argument_list|)
decl_stmt|;
name|reverseEngineeringTree
operator|.
name|setSelectionRow
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|DefaultPopUpMenu
name|popupMenu
decl_stmt|;
name|DbImportTreeNode
name|selectedElement
decl_stmt|;
if|if
condition|(
name|reverseEngineeringTree
operator|.
name|getSelectionPath
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|selectedElement
operator|=
name|reverseEngineeringTree
operator|.
name|getSelectedNode
argument_list|()
expr_stmt|;
name|popupMenu
operator|=
name|popups
operator|.
name|get
argument_list|(
name|selectedElement
operator|.
name|getUserObject
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|selectedElement
operator|=
name|reverseEngineeringTree
operator|.
name|getRootNode
argument_list|()
expr_stmt|;
name|popupMenu
operator|=
name|popups
operator|.
name|get
argument_list|(
name|ReverseEngineering
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|popupMenu
operator|!=
literal|null
condition|)
block|{
name|popupMenu
operator|.
name|setProjectController
argument_list|(
name|projectController
argument_list|)
expr_stmt|;
name|popupMenu
operator|.
name|setSelectedElement
argument_list|(
name|selectedElement
argument_list|)
expr_stmt|;
name|popupMenu
operator|.
name|setParentElement
argument_list|(
operator|(
name|DbImportTreeNode
operator|)
name|selectedElement
operator|.
name|getParent
argument_list|()
argument_list|)
expr_stmt|;
name|popupMenu
operator|.
name|setTree
argument_list|(
name|reverseEngineeringTree
argument_list|)
expr_stmt|;
name|popupMenu
operator|.
name|show
argument_list|(
name|e
operator|.
name|getComponent
argument_list|()
argument_list|,
name|e
operator|.
name|getX
argument_list|()
argument_list|,
name|e
operator|.
name|getY
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|reverseEngineeringTree
operator|.
name|getSelectionPath
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|DbImportTreeNode
name|findedNode
init|=
name|dbSchemaTree
operator|.
name|findNode
argument_list|(
name|dbSchemaTree
operator|.
name|getRootNode
argument_list|()
argument_list|,
name|reverseEngineeringTree
operator|.
name|getSelectedNode
argument_list|()
argument_list|,
literal|0
argument_list|)
decl_stmt|;
if|if
condition|(
name|findedNode
operator|!=
literal|null
condition|)
block|{
name|dbSchemaTree
operator|.
name|expandPath
argument_list|(
operator|new
name|TreePath
argument_list|(
operator|(
operator|(
name|DbImportTreeNode
operator|)
name|findedNode
operator|.
name|getParent
argument_list|()
operator|)
operator|.
name|getPath
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|scrollToNode
argument_list|(
name|dbSchemaTree
argument_list|,
name|findedNode
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|scrollToNode
parameter_list|(
name|JTree
name|tree
parameter_list|,
name|DbImportTreeNode
name|node
parameter_list|)
block|{
name|TreePath
name|path
init|=
operator|new
name|TreePath
argument_list|(
name|node
operator|.
name|getPath
argument_list|()
argument_list|)
decl_stmt|;
name|tree
operator|.
name|scrollPathToVisible
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|DraggableTreePanel
name|parentPanel
init|=
operator|(
operator|(
name|DraggableTreePanel
operator|)
name|dbSchemaTree
operator|.
name|getParent
argument_list|()
operator|.
name|getParent
argument_list|()
operator|)
decl_stmt|;
name|parentPanel
operator|.
name|getHorizontalScrollBar
argument_list|()
operator|.
name|setValue
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
specifier|private
name|ReverseEngineering
name|getReverseEngineeringBySelectedMap
parameter_list|()
block|{
name|DataMap
name|dataMap
init|=
name|projectController
operator|.
name|getCurrentDataMap
argument_list|()
decl_stmt|;
return|return
name|projectController
operator|.
name|getApplication
argument_list|()
operator|.
name|getMetaData
argument_list|()
operator|.
name|get
argument_list|(
name|dataMap
argument_list|,
name|ReverseEngineering
operator|.
name|class
argument_list|)
return|;
block|}
specifier|private
name|void
name|changeIcons
parameter_list|()
block|{
comment|// Deleting standard tree icons
name|DefaultTreeCellRenderer
name|renderer
init|=
operator|(
name|DefaultTreeCellRenderer
operator|)
name|reverseEngineeringTree
operator|.
name|getCellRenderer
argument_list|()
decl_stmt|;
name|renderer
operator|.
name|setLeafIcon
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|renderer
operator|.
name|setClosedIcon
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|renderer
operator|.
name|setOpenIcon
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|DbImportTree
name|getReverseEngineeringTree
parameter_list|()
block|{
return|return
name|reverseEngineeringTree
return|;
block|}
name|void
name|setTreeToolbar
parameter_list|(
name|TreeToolbarPanel
name|treeToolbar
parameter_list|)
block|{
name|this
operator|.
name|treeToolbar
operator|=
name|treeToolbar
expr_stmt|;
block|}
block|}
end_class

end_unit

