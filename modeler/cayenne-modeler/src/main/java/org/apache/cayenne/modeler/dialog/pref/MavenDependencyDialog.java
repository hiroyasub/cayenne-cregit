begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|pref
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Dialog
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Frame
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Window
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedInputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileOutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|OutputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JOptionPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|SwingUtilities
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|Application
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|CayenneController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_class
specifier|public
class|class
name|MavenDependencyDialog
extends|extends
name|CayenneController
block|{
specifier|private
specifier|static
specifier|final
name|Logger
name|LOGGER
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|MavenDependencyDialog
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|int
name|DEFAULT_BUFFER_SIZE
init|=
literal|8192
decl_stmt|;
specifier|private
specifier|final
name|ClasspathPreferences
name|preferencesController
decl_stmt|;
specifier|private
specifier|final
name|MavenDependencyDialogView
name|view
decl_stmt|;
specifier|private
specifier|volatile
name|boolean
name|closing
decl_stmt|;
specifier|public
name|MavenDependencyDialog
parameter_list|(
name|ClasspathPreferences
name|preferencesController
parameter_list|)
block|{
name|this
operator|.
name|preferencesController
operator|=
name|preferencesController
expr_stmt|;
name|Window
name|parentView
init|=
name|preferencesController
operator|.
name|getView
argument_list|()
operator|instanceof
name|Window
condition|?
operator|(
name|Window
operator|)
name|preferencesController
operator|.
name|getView
argument_list|()
else|:
name|SwingUtilities
operator|.
name|getWindowAncestor
argument_list|(
name|preferencesController
operator|.
name|getView
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|parentView
operator|instanceof
name|Dialog
condition|)
block|{
name|view
operator|=
operator|new
name|MavenDependencyDialogView
argument_list|(
operator|(
name|Dialog
operator|)
name|parentView
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|view
operator|=
operator|new
name|MavenDependencyDialogView
argument_list|(
operator|(
name|Frame
operator|)
name|parentView
argument_list|)
expr_stmt|;
block|}
name|initBindings
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|initBindings
parameter_list|()
block|{
name|view
operator|.
name|getDownloadButton
argument_list|()
operator|.
name|addActionListener
argument_list|(
name|e
lambda|->
name|loadArtifact
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|.
name|getCancelButton
argument_list|()
operator|.
name|addActionListener
argument_list|(
name|e
lambda|->
name|close
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|loadArtifact
parameter_list|()
block|{
comment|// url template: https://repo1.maven.org/maven2/org/apache/cayenne/cayenne-server/4.2.M1/cayenne-server-4.2.M1.jar
name|String
name|groupPath
init|=
name|view
operator|.
name|getGroupId
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|replace
argument_list|(
literal|'.'
argument_list|,
literal|'/'
argument_list|)
operator|.
name|trim
argument_list|()
decl_stmt|;
name|String
name|artifactIdText
init|=
name|view
operator|.
name|getArtifactId
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
decl_stmt|;
name|String
name|versionText
init|=
name|view
operator|.
name|getVersion
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|trim
argument_list|()
decl_stmt|;
if|if
condition|(
literal|""
operator|.
name|equals
argument_list|(
name|groupPath
argument_list|)
condition|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|view
argument_list|,
literal|"Empty group Id"
argument_list|,
literal|"Warning"
argument_list|,
name|JOptionPane
operator|.
name|WARNING_MESSAGE
argument_list|)
expr_stmt|;
return|return;
block|}
if|if
condition|(
literal|""
operator|.
name|equals
argument_list|(
name|artifactIdText
argument_list|)
condition|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|view
argument_list|,
literal|"Empty artifact Id"
argument_list|,
literal|"Warning"
argument_list|,
name|JOptionPane
operator|.
name|WARNING_MESSAGE
argument_list|)
expr_stmt|;
return|return;
block|}
if|if
condition|(
literal|""
operator|.
name|equals
argument_list|(
name|versionText
argument_list|)
condition|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|view
argument_list|,
literal|"Empty version"
argument_list|,
literal|"Warning"
argument_list|,
name|JOptionPane
operator|.
name|WARNING_MESSAGE
argument_list|)
expr_stmt|;
return|return;
block|}
name|String
name|urlText
init|=
literal|"https://repo1.maven.org/maven2/"
operator|+
name|groupPath
operator|+
literal|"/"
operator|+
name|artifactIdText
operator|+
literal|"/"
operator|+
name|versionText
operator|+
literal|"/"
operator|+
name|artifactIdText
operator|+
literal|"-"
operator|+
name|versionText
operator|+
literal|".jar"
decl_stmt|;
name|Application
operator|.
name|getInstance
argument_list|()
operator|.
name|getFrameController
argument_list|()
operator|.
name|updateStatus
argument_list|(
literal|"Loading "
operator|+
name|urlText
argument_list|)
expr_stmt|;
name|String
name|localPath
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"user.home"
argument_list|)
operator|+
literal|"/.cayenne/modeler/"
operator|+
name|groupPath
operator|+
literal|"/"
operator|+
name|artifactIdText
operator|+
literal|"-"
operator|+
name|versionText
operator|+
literal|".jar"
decl_stmt|;
name|File
name|targetFile
init|=
operator|new
name|File
argument_list|(
name|localPath
argument_list|)
decl_stmt|;
name|view
operator|.
name|getDownloadButton
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
operator|new
name|Thread
argument_list|(
parameter_list|()
lambda|->
name|download
argument_list|(
name|urlText
argument_list|,
name|targetFile
argument_list|)
argument_list|)
operator|.
name|start
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|close
parameter_list|()
block|{
name|this
operator|.
name|closing
operator|=
literal|true
expr_stmt|;
name|view
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|download
parameter_list|(
name|String
name|srcUrl
parameter_list|,
name|File
name|dstFile
parameter_list|)
block|{
if|if
condition|(
operator|!
name|dstFile
operator|.
name|getParentFile
argument_list|()
operator|.
name|exists
argument_list|()
operator|&&
operator|!
name|dstFile
operator|.
name|getParentFile
argument_list|()
operator|.
name|mkdirs
argument_list|()
condition|)
block|{
name|finalizeDownload
argument_list|(
name|dstFile
argument_list|,
literal|"Unable to create file "
operator|+
name|dstFile
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return;
block|}
try|try
block|{
name|BufferedInputStream
name|is
init|=
operator|new
name|BufferedInputStream
argument_list|(
operator|new
name|URL
argument_list|(
name|srcUrl
argument_list|)
operator|.
name|openStream
argument_list|()
argument_list|)
decl_stmt|;
name|OutputStream
name|os
init|=
operator|new
name|FileOutputStream
argument_list|(
name|dstFile
argument_list|)
decl_stmt|;
name|transferTo
argument_list|(
name|is
argument_list|,
name|os
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|FileNotFoundException
name|fnf
parameter_list|)
block|{
name|finalizeDownload
argument_list|(
name|dstFile
argument_list|,
literal|"Url not found: "
operator|+
name|srcUrl
argument_list|,
literal|false
argument_list|,
literal|false
argument_list|)
expr_stmt|;
return|return;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|LOGGER
operator|.
name|warn
argument_list|(
literal|"Failed to download Maven dependency "
operator|+
name|srcUrl
argument_list|,
name|e
argument_list|)
expr_stmt|;
name|finalizeDownload
argument_list|(
name|dstFile
argument_list|,
literal|"Unable to download file "
operator|+
name|dstFile
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
expr_stmt|;
return|return;
block|}
name|finalizeDownload
argument_list|(
name|dstFile
argument_list|,
literal|"Succesfully downloaded"
argument_list|,
literal|true
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|finalizeDownload
parameter_list|(
name|File
name|dstFile
parameter_list|,
name|String
name|status
parameter_list|,
name|boolean
name|success
parameter_list|,
name|boolean
name|shouldClose
parameter_list|)
block|{
name|SwingUtilities
operator|.
name|invokeLater
argument_list|(
parameter_list|()
lambda|->
block|{
if|if
condition|(
name|success
condition|)
block|{
name|preferencesController
operator|.
name|addClasspathEntry
argument_list|(
name|dstFile
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|view
argument_list|,
name|status
argument_list|,
literal|"Error"
argument_list|,
name|JOptionPane
operator|.
name|ERROR_MESSAGE
argument_list|)
expr_stmt|;
block|}
name|view
operator|.
name|getDownloadButton
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|Application
operator|.
name|getInstance
argument_list|()
operator|.
name|getFrameController
argument_list|()
operator|.
name|updateStatus
argument_list|(
name|status
argument_list|)
expr_stmt|;
if|if
condition|(
name|shouldClose
condition|)
block|{
name|close
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|transferTo
parameter_list|(
name|InputStream
name|in
parameter_list|,
name|OutputStream
name|out
parameter_list|)
throws|throws
name|IOException
block|{
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|in
argument_list|)
expr_stmt|;
name|Objects
operator|.
name|requireNonNull
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|byte
index|[]
name|buffer
init|=
operator|new
name|byte
index|[
name|DEFAULT_BUFFER_SIZE
index|]
decl_stmt|;
name|int
name|read
decl_stmt|;
while|while
condition|(
operator|(
name|read
operator|=
name|in
operator|.
name|read
argument_list|(
name|buffer
argument_list|,
literal|0
argument_list|,
name|DEFAULT_BUFFER_SIZE
argument_list|)
operator|)
operator|>=
literal|0
condition|)
block|{
name|out
operator|.
name|write
argument_list|(
name|buffer
argument_list|,
literal|0
argument_list|,
name|read
argument_list|)
expr_stmt|;
if|if
condition|(
name|closing
condition|)
block|{
break|break;
block|}
block|}
block|}
annotation|@
name|Override
specifier|public
name|Component
name|getView
parameter_list|()
block|{
return|return
name|view
return|;
block|}
block|}
end_class

end_unit

