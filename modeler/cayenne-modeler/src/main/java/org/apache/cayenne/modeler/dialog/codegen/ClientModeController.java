begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|codegen
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|gen
operator|.
name|ClassGenerationAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|gen
operator|.
name|ClientClassGenerationAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DataMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|pref
operator|.
name|DataMapDefaults
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|validation
operator|.
name|BeanValidationFailure
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|validation
operator|.
name|ValidationResult
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|TreeMap
import|;
end_import

begin_class
specifier|public
class|class
name|ClientModeController
extends|extends
name|StandardModeController
block|{
specifier|public
name|ClientModeController
parameter_list|(
name|CodeGeneratorControllerBase
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|validateEntity
parameter_list|(
name|ValidationResult
name|validationBuffer
parameter_list|,
name|ObjEntity
name|entity
parameter_list|)
block|{
if|if
condition|(
operator|!
name|entity
operator|.
name|isClientAllowed
argument_list|()
condition|)
block|{
name|validationBuffer
operator|.
name|addFailure
argument_list|(
operator|new
name|BeanValidationFailure
argument_list|(
name|entity
operator|.
name|getName
argument_list|()
argument_list|,
literal|"clientAllowed"
argument_list|,
literal|"Not a client entity"
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|super
operator|.
name|validateEntity
argument_list|(
name|validationBuffer
argument_list|,
name|entity
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|createDefaults
parameter_list|()
block|{
name|TreeMap
argument_list|<
name|DataMap
argument_list|,
name|DataMapDefaults
argument_list|>
name|map
init|=
operator|new
name|TreeMap
argument_list|<
name|DataMap
argument_list|,
name|DataMapDefaults
argument_list|>
argument_list|()
decl_stmt|;
name|ArrayList
argument_list|<
name|DataMap
argument_list|>
name|dataMaps
init|=
operator|(
name|ArrayList
argument_list|<
name|DataMap
argument_list|>
operator|)
name|getParentController
argument_list|()
operator|.
name|getDataMaps
argument_list|()
decl_stmt|;
for|for
control|(
name|DataMap
name|dataMap
range|:
name|dataMaps
control|)
block|{
name|DataMapDefaults
name|preferences
init|=
name|getApplication
argument_list|()
operator|.
name|getFrameController
argument_list|()
operator|.
name|getProjectController
argument_list|()
operator|.
name|getDataMapPreferences
argument_list|(
name|this
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|replace
argument_list|(
literal|"."
argument_list|,
literal|"/"
argument_list|)
argument_list|,
name|dataMap
argument_list|)
decl_stmt|;
name|preferences
operator|.
name|setSuperclassPackage
argument_list|(
literal|""
argument_list|)
expr_stmt|;
name|preferences
operator|.
name|updateSuperclassPackage
argument_list|(
name|dataMap
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|map
operator|.
name|put
argument_list|(
name|dataMap
argument_list|,
name|preferences
argument_list|)
expr_stmt|;
if|if
condition|(
name|getOutputPath
argument_list|()
operator|==
literal|null
condition|)
block|{
name|setOutputPath
argument_list|(
name|preferences
operator|.
name|getOutputPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|setMapPreferences
argument_list|(
name|map
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|GeneratorControllerPanel
name|createView
parameter_list|()
block|{
name|this
operator|.
name|view
operator|=
operator|new
name|StandardModePanel
argument_list|()
expr_stmt|;
return|return
name|view
return|;
block|}
annotation|@
name|Override
specifier|protected
name|ClassGenerationAction
name|newGenerator
parameter_list|()
block|{
return|return
operator|new
name|ClientClassGenerationAction
argument_list|()
return|;
block|}
block|}
end_class

end_unit

