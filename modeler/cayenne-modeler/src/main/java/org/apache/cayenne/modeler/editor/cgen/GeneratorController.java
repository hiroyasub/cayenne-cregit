begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|editor
operator|.
name|cgen
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|gen
operator|.
name|CgenConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|Application
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|pref
operator|.
name|FSPath
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|CayenneController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|TextAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|swing
operator|.
name|BindingBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|util
operator|.
name|Util
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JButton
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JFileChooser
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_comment
comment|/**  * @since 4.1  * A mode-specific part of the code generation dialog.  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|GeneratorController
extends|extends
name|CayenneController
block|{
specifier|protected
name|CgenConfiguration
name|cgenConfiguration
decl_stmt|;
specifier|public
name|GeneratorController
parameter_list|(
name|CodeGeneratorController
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|createView
argument_list|()
expr_stmt|;
name|initBindings
argument_list|(
operator|new
name|BindingBuilder
argument_list|(
name|getApplication
argument_list|()
operator|.
name|getBindingFactory
argument_list|()
argument_list|,
name|this
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|initBindings
parameter_list|(
name|BindingBuilder
name|bindingBuilder
parameter_list|)
block|{
name|JButton
name|outputSelect
init|=
name|getView
argument_list|()
operator|.
name|getSelectOutputFolder
argument_list|()
decl_stmt|;
name|bindingBuilder
operator|.
name|bindToAction
argument_list|(
name|outputSelect
argument_list|,
literal|"selectOutputFolderAction()"
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|CodeGeneratorController
name|getParentController
parameter_list|()
block|{
return|return
operator|(
name|CodeGeneratorController
operator|)
name|getParent
argument_list|()
return|;
block|}
specifier|protected
specifier|abstract
name|void
name|createView
parameter_list|()
function_decl|;
annotation|@
name|Override
specifier|public
specifier|abstract
name|GeneratorControllerPanel
name|getView
parameter_list|()
function_decl|;
specifier|protected
name|void
name|initForm
parameter_list|(
name|CgenConfiguration
name|cgenConfiguration
parameter_list|)
block|{
name|this
operator|.
name|cgenConfiguration
operator|=
name|cgenConfiguration
expr_stmt|;
if|if
condition|(
name|cgenConfiguration
operator|.
name|getRootPath
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|getView
argument_list|()
operator|.
name|getOutputFolder
argument_list|()
operator|.
name|setText
argument_list|(
name|cgenConfiguration
operator|.
name|buildOutputPath
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|cgenConfiguration
operator|.
name|getArtifactsGenerationMode
argument_list|()
operator|.
name|equalsIgnoreCase
argument_list|(
literal|"all"
argument_list|)
condition|)
block|{
name|getParentController
argument_list|()
operator|.
name|setCurrentClass
argument_list|(
name|cgenConfiguration
operator|.
name|getDataMap
argument_list|()
argument_list|)
expr_stmt|;
name|getParentController
argument_list|()
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
name|getView
argument_list|()
operator|.
name|getOutputFolder
argument_list|()
operator|.
name|updateModel
argument_list|()
expr_stmt|;
block|}
specifier|public
specifier|abstract
name|void
name|updateConfiguration
parameter_list|(
name|CgenConfiguration
name|cgenConfiguration
parameter_list|)
function_decl|;
comment|/**      * An action method that pops up a file chooser dialog to pick the      * generation directory.      */
specifier|public
name|void
name|selectOutputFolderAction
parameter_list|()
block|{
name|TextAdapter
name|outputFolder
init|=
name|getView
argument_list|()
operator|.
name|getOutputFolder
argument_list|()
decl_stmt|;
name|String
name|currentDir
init|=
name|outputFolder
operator|.
name|getComponent
argument_list|()
operator|.
name|getText
argument_list|()
decl_stmt|;
name|JFileChooser
name|chooser
init|=
operator|new
name|JFileChooser
argument_list|()
decl_stmt|;
name|chooser
operator|.
name|setFileSelectionMode
argument_list|(
name|JFileChooser
operator|.
name|DIRECTORIES_ONLY
argument_list|)
expr_stmt|;
name|chooser
operator|.
name|setDialogType
argument_list|(
name|JFileChooser
operator|.
name|OPEN_DIALOG
argument_list|)
expr_stmt|;
comment|// guess start directory
if|if
condition|(
operator|!
name|Util
operator|.
name|isEmptyString
argument_list|(
name|currentDir
argument_list|)
condition|)
block|{
name|chooser
operator|.
name|setCurrentDirectory
argument_list|(
operator|new
name|File
argument_list|(
name|currentDir
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|FSPath
name|lastDir
init|=
name|Application
operator|.
name|getInstance
argument_list|()
operator|.
name|getFrameController
argument_list|()
operator|.
name|getLastDirectory
argument_list|()
decl_stmt|;
name|lastDir
operator|.
name|updateChooser
argument_list|(
name|chooser
argument_list|)
expr_stmt|;
block|}
name|int
name|result
init|=
name|chooser
operator|.
name|showOpenDialog
argument_list|(
name|getView
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|result
operator|==
name|JFileChooser
operator|.
name|APPROVE_OPTION
condition|)
block|{
name|File
name|selected
init|=
name|chooser
operator|.
name|getSelectedFile
argument_list|()
decl_stmt|;
comment|// update model
name|String
name|path
init|=
name|selected
operator|.
name|getAbsolutePath
argument_list|()
decl_stmt|;
name|getView
argument_list|()
operator|.
name|getOutputFolder
argument_list|()
operator|.
name|setText
argument_list|(
name|path
argument_list|)
expr_stmt|;
name|getView
argument_list|()
operator|.
name|getOutputFolder
argument_list|()
operator|.
name|updateModel
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

