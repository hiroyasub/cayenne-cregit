begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|swing
operator|.
name|control
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Color
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|MouseAdapter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|MouseEvent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JLabel
import|;
end_import

begin_comment
comment|/**  * A label that works like an HTML hyperlink, generating ActionEvents on click.  *   */
end_comment

begin_class
specifier|public
class|class
name|ActionLink
extends|extends
name|JLabel
block|{
specifier|static
specifier|final
name|Color
name|LINK_FONT_COLOR
init|=
name|Color
operator|.
name|BLUE
decl_stmt|;
specifier|static
specifier|final
name|Color
name|LINK_MOUSEOVER_FONT_COLOR
init|=
name|Color
operator|.
name|RED
decl_stmt|;
specifier|public
name|ActionLink
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|super
argument_list|(
name|text
argument_list|)
expr_stmt|;
comment|// due to this bug (that is marked as fixed, but stil doesn't work on JDK
comment|// 1.4.2), we can't build underlined font:
comment|// http://bugs.sun.com/bugdatabase/view_bug.do;:YfiG?bug_id=4296952
name|setForeground
argument_list|(
name|LINK_FONT_COLOR
argument_list|)
expr_stmt|;
name|addMouseListener
argument_list|(
operator|new
name|MouseAdapter
argument_list|()
block|{
specifier|public
name|void
name|mouseClicked
parameter_list|(
name|MouseEvent
name|e
parameter_list|)
block|{
name|fireActionPerformed
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|mouseEntered
parameter_list|(
name|MouseEvent
name|e
parameter_list|)
block|{
name|setForeground
argument_list|(
name|LINK_MOUSEOVER_FONT_COLOR
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|mouseExited
parameter_list|(
name|MouseEvent
name|e
parameter_list|)
block|{
name|setForeground
argument_list|(
name|LINK_FONT_COLOR
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|fireActionPerformed
parameter_list|()
block|{
name|Object
index|[]
name|listeners
init|=
name|listenerList
operator|.
name|getListenerList
argument_list|()
decl_stmt|;
name|ActionEvent
name|e
init|=
literal|null
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
name|listeners
operator|.
name|length
operator|-
literal|2
init|;
name|i
operator|>=
literal|0
condition|;
name|i
operator|-=
literal|2
control|)
block|{
if|if
condition|(
name|listeners
index|[
name|i
index|]
operator|==
name|ActionListener
operator|.
name|class
condition|)
block|{
if|if
condition|(
name|e
operator|==
literal|null
condition|)
block|{
name|e
operator|=
operator|new
name|ActionEvent
argument_list|(
name|this
argument_list|,
name|ActionEvent
operator|.
name|ACTION_PERFORMED
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
operator|(
operator|(
name|ActionListener
operator|)
name|listeners
index|[
name|i
operator|+
literal|1
index|]
operator|)
operator|.
name|actionPerformed
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|void
name|addActionListener
parameter_list|(
name|ActionListener
name|l
parameter_list|)
block|{
name|listenerList
operator|.
name|add
argument_list|(
name|ActionListener
operator|.
name|class
argument_list|,
name|l
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|removeActionListener
parameter_list|(
name|ActionListener
name|l
parameter_list|)
block|{
name|listenerList
operator|.
name|remove
argument_list|(
name|ActionListener
operator|.
name|class
argument_list|,
name|l
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

