begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|editor
operator|.
name|cgen
operator|.
name|templateeditor
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|gen
operator|.
name|CgenConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|gen
operator|.
name|ClassGenerationAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|gen
operator|.
name|TemplateType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DataMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|editor
operator|.
name|cgen
operator|.
name|StandardModeController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|CayenneController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|swing
operator|.
name|BindingBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|velocity
operator|.
name|exception
operator|.
name|ParseErrorException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JOptionPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|event
operator|.
name|DocumentEvent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|event
operator|.
name|DocumentListener
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|text
operator|.
name|BadLocationException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|WindowAdapter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|WindowEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Writer
import|;
end_import

begin_comment
comment|/**  * since 4.3  */
end_comment

begin_class
specifier|public
class|class
name|TemplateEditorController
extends|extends
name|CayenneController
block|{
specifier|private
specifier|final
name|DataMap
name|currentDataMap
decl_stmt|;
specifier|private
specifier|final
name|CgenConfiguration
name|configuration
decl_stmt|;
specifier|private
specifier|final
name|StandardModeController
name|parentController
decl_stmt|;
specifier|private
specifier|final
name|TemplateType
name|templateType
decl_stmt|;
specifier|private
name|EditorTemplateLoader
name|templateLoader
decl_stmt|;
specifier|private
name|EditorTemplateSaver
name|templateSaver
decl_stmt|;
specifier|private
name|Boolean
name|isTemplateModified
decl_stmt|;
specifier|private
name|Boolean
name|isTemplateDefault
decl_stmt|;
specifier|private
name|ArtefactsConfigurator
name|artefactsConfigurator
decl_stmt|;
specifier|private
name|TemplateEditorView
name|editorView
decl_stmt|;
specifier|private
name|PreviewActionConfigurator
name|actionConfigurator
decl_stmt|;
specifier|public
name|TemplateEditorController
parameter_list|(
name|StandardModeController
name|parentController
parameter_list|,
name|TemplateType
name|templateType
parameter_list|)
block|{
name|super
argument_list|(
name|parentController
operator|.
name|getCodeGeneratorController
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|templateType
operator|=
name|templateType
expr_stmt|;
name|this
operator|.
name|configuration
operator|=
name|parentController
operator|.
name|getCodeGeneratorController
argument_list|()
operator|.
name|getCgenConfiguration
argument_list|()
expr_stmt|;
name|this
operator|.
name|currentDataMap
operator|=
name|configuration
operator|.
name|getDataMap
argument_list|()
expr_stmt|;
name|this
operator|.
name|parentController
operator|=
name|parentController
expr_stmt|;
block|}
specifier|public
name|void
name|startupAction
parameter_list|()
block|{
name|this
operator|.
name|artefactsConfigurator
operator|=
name|setupArtefactConfigurator
argument_list|()
expr_stmt|;
name|this
operator|.
name|editorView
operator|=
operator|new
name|TemplateEditorView
argument_list|(
name|artefactsConfigurator
operator|.
name|getArtifactsNames
argument_list|(
name|currentDataMap
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|actionConfigurator
operator|=
operator|new
name|PreviewActionConfigurator
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|this
operator|.
name|isTemplateDefault
operator|=
name|TemplateType
operator|.
name|isDefault
argument_list|(
name|configuration
operator|.
name|getTemplateByType
argument_list|(
name|templateType
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|isTemplateModified
operator|=
literal|false
expr_stmt|;
name|this
operator|.
name|templateLoader
operator|=
operator|new
name|EditorTemplateLoader
argument_list|(
name|configuration
argument_list|,
name|this
operator|.
name|editorView
argument_list|)
expr_stmt|;
name|this
operator|.
name|templateSaver
operator|=
operator|new
name|EditorTemplateSaver
argument_list|(
name|configuration
argument_list|,
name|this
operator|.
name|editorView
argument_list|)
expr_stmt|;
name|configureEditorView
argument_list|(
name|templateType
argument_list|)
expr_stmt|;
name|addListeners
argument_list|()
expr_stmt|;
name|centerView
argument_list|()
expr_stmt|;
name|disabledEditorsButtonsInParentWindow
argument_list|()
expr_stmt|;
name|initBindings
argument_list|()
expr_stmt|;
name|this
operator|.
name|editorView
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|disabledEditorsButtonsInParentWindow
parameter_list|()
block|{
name|parentController
operator|.
name|getView
argument_list|()
operator|.
name|setEnableEditSubclassTemplateButtons
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|parentController
operator|.
name|getView
argument_list|()
operator|.
name|setEnableEditSuperclassTemplateButtons
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|private
name|ArtefactsConfigurator
name|setupArtefactConfigurator
parameter_list|()
block|{
switch|switch
condition|(
name|templateType
condition|)
block|{
case|case
name|ENTITY_SUPERCLASS
case|:
case|case
name|ENTITY_SUBCLASS
case|:
block|{
return|return
operator|new
name|EntityArtefactsConfigurator
argument_list|()
return|;
block|}
case|case
name|EMBEDDABLE_SUPERCLASS
case|:
case|case
name|EMBEDDABLE_SUBCLASS
case|:
block|{
return|return
operator|new
name|EmbeddableArtefactsConfigurator
argument_list|()
return|;
block|}
case|case
name|DATAMAP_SUPERCLASS
case|:
case|case
name|DATAMAP_SUBCLASS
case|:
block|{
return|return
operator|new
name|DataMapArtefactsConfigurator
argument_list|()
return|;
block|}
default|default:
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Illegal template type "
operator|+
name|templateType
argument_list|)
throw|;
block|}
block|}
specifier|private
name|void
name|configureEditorView
parameter_list|(
name|TemplateType
name|templateType
parameter_list|)
block|{
name|this
operator|.
name|editorView
operator|.
name|getEditingTemplatePane
argument_list|()
operator|.
name|setText
argument_list|(
name|templateLoader
operator|.
name|load
argument_list|(
name|templateType
argument_list|,
name|isTemplateDefault
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|editorView
operator|.
name|editingTemplatePane
operator|.
name|setCaretPosition
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|this
operator|.
name|editorView
operator|.
name|getSaveButton
argument_list|()
operator|.
name|setEnabled
argument_list|(
name|isTemplateModified
argument_list|)
expr_stmt|;
name|this
operator|.
name|editorView
operator|.
name|setTitle
argument_list|(
name|templateType
operator|.
name|readableName
argument_list|()
operator|+
literal|" - cayenne template editor"
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|TemplateEditorView
name|getView
parameter_list|()
block|{
return|return
name|editorView
return|;
block|}
specifier|protected
name|void
name|initBindings
parameter_list|()
block|{
name|BindingBuilder
name|builder
init|=
operator|new
name|BindingBuilder
argument_list|(
name|getApplication
argument_list|()
operator|.
name|getBindingFactory
argument_list|()
argument_list|,
name|this
argument_list|)
decl_stmt|;
name|builder
operator|.
name|bindToAction
argument_list|(
name|editorView
operator|.
name|getSaveButton
argument_list|()
argument_list|,
literal|"saveAction()"
argument_list|)
expr_stmt|;
name|builder
operator|.
name|bindToAction
argument_list|(
name|editorView
operator|.
name|getPreviewButton
argument_list|()
argument_list|,
literal|"generatePreviewAction()"
argument_list|)
expr_stmt|;
name|builder
operator|.
name|bindToAction
argument_list|(
name|editorView
operator|.
name|getFindButton
argument_list|()
argument_list|,
literal|"findAction()"
argument_list|)
expr_stmt|;
name|builder
operator|.
name|bindToAction
argument_list|(
name|editorView
operator|.
name|getFindAndReplaceButton
argument_list|()
argument_list|,
literal|"findAndReplaceAction()"
argument_list|)
expr_stmt|;
name|builder
operator|.
name|bindToAction
argument_list|(
name|editorView
operator|.
name|getResetToDefaultButton
argument_list|()
argument_list|,
literal|"resetToDefaultAction()"
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|addListeners
parameter_list|()
block|{
name|editorView
operator|.
name|getEditingTemplatePane
argument_list|()
operator|.
name|getDocument
argument_list|()
operator|.
name|addDocumentListener
argument_list|(
operator|new
name|DocumentListener
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|insertUpdate
parameter_list|(
name|DocumentEvent
name|e
parameter_list|)
block|{
comment|//noop
block|}
annotation|@
name|Override
specifier|public
name|void
name|removeUpdate
parameter_list|(
name|DocumentEvent
name|e
parameter_list|)
block|{
comment|//noop
block|}
annotation|@
name|Override
specifier|public
name|void
name|changedUpdate
parameter_list|(
name|DocumentEvent
name|e
parameter_list|)
block|{
name|isTemplateModified
operator|=
literal|true
expr_stmt|;
name|isTemplateDefault
operator|=
literal|false
expr_stmt|;
name|editorView
operator|.
name|getSaveButton
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|editorView
operator|.
name|addWindowListener
argument_list|(
operator|new
name|WindowAdapter
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|windowClosing
parameter_list|(
name|WindowEvent
name|e
parameter_list|)
block|{
if|if
condition|(
name|isTemplateModified
operator|&&
name|showUnsavedChangesCloseDialog
argument_list|()
operator|==
literal|0
condition|)
block|{
name|saveAction
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|configuration
operator|.
name|isMakePairs
argument_list|()
condition|)
block|{
name|parentController
operator|.
name|getView
argument_list|()
operator|.
name|setEnableEditSuperclassTemplateButtons
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
name|parentController
operator|.
name|getView
argument_list|()
operator|.
name|setEnableEditSubclassTemplateButtons
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unused"
argument_list|)
specifier|public
name|void
name|saveAction
parameter_list|()
block|{
name|templateSaver
operator|.
name|save
argument_list|(
name|templateType
argument_list|,
name|isTemplateDefault
argument_list|)
expr_stmt|;
name|parentController
operator|.
name|getCodeGeneratorController
argument_list|()
operator|.
name|checkCgenConfigDirty
argument_list|()
expr_stmt|;
name|isTemplateModified
operator|=
literal|false
expr_stmt|;
name|parentController
operator|.
name|updateTemplatesLabels
argument_list|(
name|configuration
argument_list|)
expr_stmt|;
name|editorView
operator|.
name|getSaveButton
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unused"
argument_list|)
specifier|public
name|void
name|generatePreviewAction
parameter_list|()
throws|throws
name|Exception
block|{
name|ClassGenerationAction
name|action
init|=
name|actionConfigurator
operator|.
name|preparePreviewAction
argument_list|(
name|editorView
operator|.
name|getTemplateText
argument_list|()
argument_list|)
decl_stmt|;
name|Writer
name|writer
init|=
name|actionConfigurator
operator|.
name|getWriter
argument_list|()
decl_stmt|;
name|int
name|caretPosition
init|=
name|editorView
operator|.
name|getEditingTemplatePane
argument_list|()
operator|.
name|getCaretPosition
argument_list|()
decl_stmt|;
try|try
block|{
name|action
operator|.
name|execute
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|ParseErrorException
name|pe
parameter_list|)
block|{
name|caretPosition
operator|=
name|getErrorCaretPosition
argument_list|(
name|pe
argument_list|)
expr_stmt|;
name|writer
operator|.
name|write
argument_list|(
name|pe
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|writer
operator|.
name|write
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|displayPreview
argument_list|(
name|writer
argument_list|,
name|caretPosition
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|displayPreview
parameter_list|(
name|Writer
name|writer
parameter_list|,
name|int
name|caretPosition
parameter_list|)
block|{
name|editorView
operator|.
name|getEditingTemplatePane
argument_list|()
operator|.
name|setCaretPosition
argument_list|(
name|caretPosition
argument_list|)
expr_stmt|;
name|editorView
operator|.
name|getClassPreviewPane
argument_list|()
operator|.
name|setText
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|editorView
operator|.
name|getClassPreviewPane
argument_list|()
operator|.
name|setText
argument_list|(
name|writer
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|editorView
operator|.
name|getClassPreviewPane
argument_list|()
operator|.
name|setCaretPosition
argument_list|(
literal|0
argument_list|)
expr_stmt|;
block|}
specifier|private
name|int
name|getErrorCaretPosition
parameter_list|(
name|ParseErrorException
name|e
parameter_list|)
throws|throws
name|BadLocationException
block|{
name|int
name|errorLineNumber
init|=
name|e
operator|.
name|getLineNumber
argument_list|()
decl_stmt|;
return|return
name|editorView
operator|.
name|getEditingTemplatePane
argument_list|()
operator|.
name|getLineStartOffset
argument_list|(
name|errorLineNumber
operator|-
literal|1
argument_list|)
return|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unused"
argument_list|)
specifier|public
name|void
name|findAction
parameter_list|()
block|{
operator|new
name|FindController
argument_list|(
name|this
argument_list|)
operator|.
name|startupAction
argument_list|()
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unused"
argument_list|)
specifier|public
name|void
name|findAndReplaceAction
parameter_list|()
block|{
operator|new
name|FindAndReplaceController
argument_list|(
name|this
argument_list|)
operator|.
name|startupAction
argument_list|()
expr_stmt|;
block|}
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unused"
argument_list|)
specifier|public
name|void
name|resetToDefaultAction
parameter_list|()
block|{
name|int
name|result
init|=
name|showResetToDefaultDialog
argument_list|()
decl_stmt|;
if|if
condition|(
name|result
operator|==
name|JOptionPane
operator|.
name|OK_OPTION
condition|)
block|{
name|editorView
operator|.
name|getEditingTemplatePane
argument_list|()
operator|.
name|setText
argument_list|(
name|templateLoader
operator|.
name|load
argument_list|(
name|templateType
argument_list|,
literal|true
argument_list|)
argument_list|)
expr_stmt|;
name|editorView
operator|.
name|getEditingTemplatePane
argument_list|()
operator|.
name|setCaretPosition
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|isTemplateModified
operator|=
literal|true
expr_stmt|;
name|isTemplateDefault
operator|=
literal|true
expr_stmt|;
block|}
block|}
comment|/**      * Brings up a YES_NO option dialog      *      * @return 0 if "Yes" was selected 1 for the "No""      */
specifier|private
name|int
name|showResetToDefaultDialog
parameter_list|()
block|{
name|Object
index|[]
name|options
init|=
block|{
literal|"Yes"
block|,
literal|"No"
block|}
decl_stmt|;
return|return
name|JOptionPane
operator|.
name|showOptionDialog
argument_list|(
literal|null
argument_list|,
literal|"This action will be rollback template to default."
operator|+
literal|"\n            This action can't be revert. "
operator|+
literal|"\n                   Are you sure?"
argument_list|,
literal|"Reset template to default"
argument_list|,
name|JOptionPane
operator|.
name|YES_NO_OPTION
argument_list|,
name|JOptionPane
operator|.
name|QUESTION_MESSAGE
argument_list|,
literal|null
argument_list|,
name|options
argument_list|,
name|options
index|[
literal|1
index|]
argument_list|)
return|;
block|}
comment|/**      * Brings up a YES_NO option dialog      *      * @return 0 if "Yes" was selected 1 for the "No""      */
specifier|private
name|int
name|showUnsavedChangesCloseDialog
parameter_list|()
block|{
name|Object
index|[]
name|options
init|=
block|{
literal|"Yes"
block|,
literal|"No"
block|}
decl_stmt|;
return|return
name|JOptionPane
operator|.
name|showOptionDialog
argument_list|(
literal|null
argument_list|,
literal|"The are unsaved changes in template"
operator|+
literal|"\n    Do you want to save it? "
argument_list|,
literal|"Unsaved changes"
argument_list|,
name|JOptionPane
operator|.
name|YES_NO_OPTION
argument_list|,
name|JOptionPane
operator|.
name|QUESTION_MESSAGE
argument_list|,
literal|null
argument_list|,
name|options
argument_list|,
name|options
index|[
literal|0
index|]
argument_list|)
return|;
block|}
specifier|public
name|DataMap
name|getCurrentDataMap
parameter_list|()
block|{
return|return
name|currentDataMap
return|;
block|}
specifier|public
name|CgenConfiguration
name|getConfiguration
parameter_list|()
block|{
return|return
name|configuration
return|;
block|}
specifier|public
name|TemplateType
name|getTemplateType
parameter_list|()
block|{
return|return
name|templateType
return|;
block|}
specifier|public
name|ArtefactsConfigurator
name|getArtefactsConfigurator
parameter_list|()
block|{
return|return
name|artefactsConfigurator
return|;
block|}
specifier|public
name|String
name|getSelectedArtifactName
parameter_list|()
block|{
return|return
name|getView
argument_list|()
operator|.
name|getSelectedArtifactName
argument_list|()
return|;
block|}
block|}
end_class

end_unit

