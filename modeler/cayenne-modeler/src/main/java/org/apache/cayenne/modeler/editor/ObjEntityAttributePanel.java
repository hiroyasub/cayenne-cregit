begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|editor
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|DataChannelDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DataMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|Embeddable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|event
operator|.
name|AttributeEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|event
operator|.
name|EntityEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|event
operator|.
name|ObjAttributeListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|event
operator|.
name|ObjEntityListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|Application
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|ProjectController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|action
operator|.
name|ActionManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|action
operator|.
name|CopyAttributeRelationshipAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|action
operator|.
name|CutAttributeRelationshipAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|action
operator|.
name|ObjEntityToSuperEntityAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|action
operator|.
name|PasteAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|action
operator|.
name|RemoveAttributeRelationshipAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|objentity
operator|.
name|ObjAttributeInfoDialog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|editor
operator|.
name|wrapper
operator|.
name|ObjAttributeWrapper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|event
operator|.
name|EntityDisplayEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|event
operator|.
name|ObjEntityDisplayListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|event
operator|.
name|ProjectOnSaveEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|event
operator|.
name|ProjectOnSaveListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|event
operator|.
name|TablePopupHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|pref
operator|.
name|TableColumnPreferences
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|CayenneAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|CayenneTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|CayenneTableModel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|DbAttributePathComboBoxRenderer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|DbAttributePathComboBoxEditor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|ModelerUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|PanelFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|ProjectUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|UIUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|combo
operator|.
name|AutoCompletion
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|swing
operator|.
name|components
operator|.
name|image
operator|.
name|FilteredIconFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|BorderFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|Icon
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|ImageIcon
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JComboBox
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JDialog
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JOptionPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JMenuItem
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPanel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPopupMenu
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTable
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|ListSelectionModel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|UIManager
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|event
operator|.
name|ListSelectionEvent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|event
operator|.
name|ListSelectionListener
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|table
operator|.
name|DefaultTableCellRenderer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|table
operator|.
name|TableCellEditor
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|table
operator|.
name|TableColumn
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|BorderLayout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Color
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Font
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|MouseAdapter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|MouseEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_comment
comment|/**  * Detail view of the ObjEntity attributes.  */
end_comment

begin_class
specifier|public
class|class
name|ObjEntityAttributePanel
extends|extends
name|JPanel
implements|implements
name|ObjEntityDisplayListener
implements|,
name|ObjEntityListener
implements|,
name|ObjAttributeListener
implements|,
name|ProjectOnSaveListener
block|{
specifier|private
specifier|static
specifier|final
name|int
name|INHERITANCE_COLUMN_WIDTH
init|=
literal|35
decl_stmt|;
specifier|private
name|ProjectController
name|mediator
decl_stmt|;
specifier|private
name|CayenneTable
name|table
decl_stmt|;
specifier|private
name|TableColumnPreferences
name|tablePreferences
decl_stmt|;
specifier|private
name|ObjEntityAttributeRelationshipTab
name|parentPanel
decl_stmt|;
specifier|private
name|boolean
name|enabledResolve
decl_stmt|;
comment|//for JBottom "resolve" in ObjEntityAttrRelationshipTab
specifier|private
name|ActionListener
name|resolver
decl_stmt|;
comment|/**      * By now popup menu item is made similar to toolbar button. (i.e. all functionality      * is here) This should be probably refactored as Action.      */
specifier|private
name|JMenuItem
name|resolveMenu
decl_stmt|;
specifier|public
name|ObjEntityAttributePanel
parameter_list|(
name|ProjectController
name|mediator
parameter_list|,
name|ObjEntityAttributeRelationshipTab
name|parentPanel
parameter_list|)
block|{
name|this
operator|.
name|mediator
operator|=
name|mediator
expr_stmt|;
name|this
operator|.
name|parentPanel
operator|=
name|parentPanel
expr_stmt|;
name|initView
argument_list|()
expr_stmt|;
name|initController
argument_list|()
expr_stmt|;
block|}
specifier|public
name|CayenneTable
name|getTable
parameter_list|()
block|{
return|return
name|table
return|;
block|}
specifier|public
name|void
name|setTable
parameter_list|(
name|CayenneTable
name|table
parameter_list|)
block|{
name|this
operator|.
name|table
operator|=
name|table
expr_stmt|;
block|}
specifier|private
name|void
name|initView
parameter_list|()
block|{
name|this
operator|.
name|setLayout
argument_list|(
operator|new
name|BorderLayout
argument_list|()
argument_list|)
expr_stmt|;
name|ActionManager
name|actionManager
init|=
name|Application
operator|.
name|getInstance
argument_list|()
operator|.
name|getActionManager
argument_list|()
decl_stmt|;
name|table
operator|=
operator|new
name|CayenneTable
argument_list|()
expr_stmt|;
name|table
operator|.
name|setDefaultRenderer
argument_list|(
name|String
operator|.
name|class
argument_list|,
operator|new
name|CellRenderer
argument_list|()
argument_list|)
expr_stmt|;
name|tablePreferences
operator|=
operator|new
name|TableColumnPreferences
argument_list|(
name|ObjAttributeTableModel
operator|.
name|class
argument_list|,
literal|"objEntity/attributeTable"
argument_list|)
expr_stmt|;
comment|// go to SuperEntity from ObjEntity by inheritance icon
name|table
operator|.
name|addMouseListener
argument_list|(
operator|new
name|MouseAdapter
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|mouseReleased
parameter_list|(
name|MouseEvent
name|e
parameter_list|)
block|{
name|int
name|row
init|=
name|table
operator|.
name|rowAtPoint
argument_list|(
name|e
operator|.
name|getPoint
argument_list|()
argument_list|)
decl_stmt|;
name|int
name|col
init|=
name|table
operator|.
name|columnAtPoint
argument_list|(
name|e
operator|.
name|getPoint
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|row
operator|>=
literal|0
operator|&&
name|col
operator|==
name|ObjAttributeTableModel
operator|.
name|INHERITED
condition|)
block|{
if|if
condition|(
name|Boolean
operator|.
name|TRUE
operator|.
name|equals
argument_list|(
name|table
operator|.
name|getValueAt
argument_list|(
name|row
argument_list|,
name|col
argument_list|)
argument_list|)
condition|)
block|{
name|ActionManager
name|actionManager
init|=
name|Application
operator|.
name|getInstance
argument_list|()
operator|.
name|getActionManager
argument_list|()
decl_stmt|;
name|actionManager
operator|.
name|getAction
argument_list|(
name|ObjEntityToSuperEntityAction
operator|.
name|class
argument_list|)
operator|.
name|performAction
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
argument_list|)
expr_stmt|;
comment|// Create and install a popup
name|Icon
name|ico
init|=
name|ModelerUtil
operator|.
name|buildIcon
argument_list|(
literal|"icon-edit.png"
argument_list|)
decl_stmt|;
name|resolveMenu
operator|=
operator|new
name|CayenneAction
operator|.
name|CayenneMenuItem
argument_list|(
literal|"Database Mapping"
argument_list|,
name|ico
argument_list|)
expr_stmt|;
name|JPopupMenu
name|popup
init|=
operator|new
name|JPopupMenu
argument_list|()
decl_stmt|;
name|popup
operator|.
name|add
argument_list|(
name|resolveMenu
argument_list|)
expr_stmt|;
name|popup
operator|.
name|add
argument_list|(
name|actionManager
operator|.
name|getAction
argument_list|(
name|RemoveAttributeRelationshipAction
operator|.
name|class
argument_list|)
operator|.
name|buildMenu
argument_list|()
argument_list|)
expr_stmt|;
name|popup
operator|.
name|addSeparator
argument_list|()
expr_stmt|;
name|popup
operator|.
name|add
argument_list|(
name|actionManager
operator|.
name|getAction
argument_list|(
name|CutAttributeRelationshipAction
operator|.
name|class
argument_list|)
operator|.
name|buildMenu
argument_list|()
argument_list|)
expr_stmt|;
name|popup
operator|.
name|add
argument_list|(
name|actionManager
operator|.
name|getAction
argument_list|(
name|CopyAttributeRelationshipAction
operator|.
name|class
argument_list|)
operator|.
name|buildMenu
argument_list|()
argument_list|)
expr_stmt|;
name|popup
operator|.
name|add
argument_list|(
name|actionManager
operator|.
name|getAction
argument_list|(
name|PasteAction
operator|.
name|class
argument_list|)
operator|.
name|buildMenu
argument_list|()
argument_list|)
expr_stmt|;
name|TablePopupHandler
operator|.
name|install
argument_list|(
name|table
argument_list|,
name|popup
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|PanelFactory
operator|.
name|createTablePanel
argument_list|(
name|table
argument_list|,
literal|null
argument_list|)
argument_list|,
name|BorderLayout
operator|.
name|CENTER
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|initController
parameter_list|()
block|{
name|mediator
operator|.
name|addObjEntityDisplayListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|mediator
operator|.
name|addObjEntityListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|mediator
operator|.
name|addObjAttributeListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|resolver
operator|=
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|int
name|row
init|=
name|table
operator|.
name|getSelectedRow
argument_list|()
decl_stmt|;
if|if
condition|(
name|row
operator|<
literal|0
condition|)
block|{
return|return;
block|}
name|ObjAttributeTableModel
name|model
init|=
operator|(
name|ObjAttributeTableModel
operator|)
name|table
operator|.
name|getModel
argument_list|()
decl_stmt|;
comment|// ... show dialog...
operator|new
name|ObjAttributeInfoDialog
argument_list|(
name|mediator
argument_list|,
name|row
argument_list|,
name|model
argument_list|)
operator|.
name|startupAction
argument_list|()
expr_stmt|;
comment|// This is required for a table to be updated properly
name|table
operator|.
name|cancelEditing
argument_list|()
expr_stmt|;
comment|// need to refresh selected row... do this by unselecting/selecting the row
name|table
operator|.
name|getSelectionModel
argument_list|()
operator|.
name|clearSelection
argument_list|()
expr_stmt|;
name|table
operator|.
name|select
argument_list|(
name|row
argument_list|)
expr_stmt|;
name|enabledResolve
operator|=
literal|false
expr_stmt|;
block|}
block|}
expr_stmt|;
name|resolveMenu
operator|.
name|addActionListener
argument_list|(
name|resolver
argument_list|)
expr_stmt|;
name|table
operator|.
name|getSelectionModel
argument_list|()
operator|.
name|addListSelectionListener
argument_list|(
operator|new
name|ObjAttributeListSelectionListener
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|setAutoResizeMode
argument_list|(
name|JTable
operator|.
name|AUTO_RESIZE_OFF
argument_list|)
expr_stmt|;
name|mediator
operator|.
name|getApplication
argument_list|()
operator|.
name|getActionManager
argument_list|()
operator|.
name|setupCutCopyPaste
argument_list|(
name|table
argument_list|,
name|CutAttributeRelationshipAction
operator|.
name|class
argument_list|,
name|CopyAttributeRelationshipAction
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|initComboBoxes
parameter_list|()
block|{
name|List
argument_list|<
name|String
argument_list|>
name|embeddableNames
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|typeNames
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|DataMap
name|dataMap
range|:
operator|(
operator|(
name|DataChannelDescriptor
operator|)
name|mediator
operator|.
name|getProject
argument_list|()
operator|.
name|getRootNode
argument_list|()
operator|)
operator|.
name|getDataMaps
argument_list|()
control|)
block|{
for|for
control|(
name|Embeddable
name|emb
range|:
name|dataMap
operator|.
name|getEmbeddables
argument_list|()
control|)
block|{
name|embeddableNames
operator|.
name|add
argument_list|(
name|emb
operator|.
name|getClassName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
name|String
index|[]
name|registeredTypes
init|=
name|ModelerUtil
operator|.
name|getRegisteredTypeNames
argument_list|()
decl_stmt|;
name|Collections
operator|.
name|addAll
argument_list|(
name|typeNames
argument_list|,
name|registeredTypes
argument_list|)
expr_stmt|;
name|typeNames
operator|.
name|addAll
argument_list|(
name|embeddableNames
argument_list|)
expr_stmt|;
name|TableColumn
name|typeColumn
init|=
name|table
operator|.
name|getColumnModel
argument_list|()
operator|.
name|getColumn
argument_list|(
name|ObjAttributeTableModel
operator|.
name|OBJ_ATTRIBUTE_TYPE
argument_list|)
decl_stmt|;
name|JComboBox
name|javaTypesCombo
init|=
name|Application
operator|.
name|getWidgetFactory
argument_list|()
operator|.
name|createComboBox
argument_list|(
name|typeNames
operator|.
name|toArray
argument_list|()
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|AutoCompletion
operator|.
name|enable
argument_list|(
name|javaTypesCombo
argument_list|,
literal|false
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|typeColumn
operator|.
name|setCellEditor
argument_list|(
name|Application
operator|.
name|getWidgetFactory
argument_list|()
operator|.
name|createCellEditor
argument_list|(
name|javaTypesCombo
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * Selects a specified attribute.      */
specifier|public
name|void
name|selectAttributes
parameter_list|(
name|ObjAttribute
index|[]
name|attrs
parameter_list|)
block|{
name|ObjAttributeTableModel
name|model
init|=
operator|(
name|ObjAttributeTableModel
operator|)
name|table
operator|.
name|getModel
argument_list|()
decl_stmt|;
name|List
argument_list|<
name|ObjAttributeWrapper
argument_list|>
name|listAttrs
init|=
name|model
operator|.
name|getObjectList
argument_list|()
decl_stmt|;
name|int
index|[]
name|newSel
init|=
operator|new
name|int
index|[
name|attrs
operator|.
name|length
index|]
decl_stmt|;
name|parentPanel
operator|.
name|updateActions
argument_list|(
name|attrs
argument_list|)
expr_stmt|;
comment|// search for attributes to select from attributes that model has
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|attrs
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
for|for
control|(
name|int
name|j
init|=
literal|0
init|;
name|j
operator|<
name|listAttrs
operator|.
name|size
argument_list|()
condition|;
name|j
operator|++
control|)
block|{
if|if
condition|(
name|listAttrs
operator|.
name|get
argument_list|(
name|j
argument_list|)
operator|.
name|getValue
argument_list|()
operator|==
name|attrs
index|[
name|i
index|]
condition|)
block|{
name|newSel
index|[
name|i
index|]
operator|=
name|j
expr_stmt|;
break|break;
block|}
block|}
block|}
name|table
operator|.
name|select
argument_list|(
name|newSel
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|objAttributeChanged
parameter_list|(
name|AttributeEvent
name|e
parameter_list|)
block|{
name|ObjAttributeTableModel
name|model
init|=
operator|(
name|ObjAttributeTableModel
operator|)
name|table
operator|.
name|getModel
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|model
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|model
operator|.
name|resetModel
argument_list|()
expr_stmt|;
block|}
name|model
operator|.
name|fireTableDataChanged
argument_list|()
expr_stmt|;
name|int
name|ind
init|=
operator|-
literal|1
decl_stmt|;
name|List
argument_list|<
name|ObjAttributeWrapper
argument_list|>
name|list
init|=
name|model
operator|.
name|getObjectList
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|list
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|list
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|.
name|getValue
argument_list|()
operator|==
name|e
operator|.
name|getAttribute
argument_list|()
condition|)
block|{
name|ind
operator|=
name|i
expr_stmt|;
block|}
block|}
name|table
operator|.
name|select
argument_list|(
name|ind
argument_list|)
expr_stmt|;
if|if
condition|(
name|e
operator|.
name|getOldName
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|removeDuplicateAttribute
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|objAttributeAdded
parameter_list|(
name|AttributeEvent
name|e
parameter_list|)
block|{
name|ObjAttributeTableModel
name|model
init|=
operator|(
name|ObjAttributeTableModel
operator|)
name|table
operator|.
name|getModel
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|model
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|model
operator|.
name|resetModel
argument_list|()
expr_stmt|;
block|}
name|model
operator|.
name|addRow
argument_list|(
operator|new
name|ObjAttributeWrapper
argument_list|(
operator|(
name|ObjAttribute
operator|)
name|e
operator|.
name|getAttribute
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|fireTableDataChanged
argument_list|()
expr_stmt|;
name|int
name|ind
init|=
operator|-
literal|1
decl_stmt|;
name|List
argument_list|<
name|ObjAttributeWrapper
argument_list|>
name|list
init|=
name|model
operator|.
name|getObjectList
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|list
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|list
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|.
name|getValue
argument_list|()
operator|==
name|e
operator|.
name|getAttribute
argument_list|()
condition|)
block|{
name|ind
operator|=
name|i
expr_stmt|;
block|}
block|}
name|table
operator|.
name|select
argument_list|(
name|ind
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|objAttributeRemoved
parameter_list|(
name|AttributeEvent
name|e
parameter_list|)
block|{
name|ObjAttributeTableModel
name|model
init|=
operator|(
name|ObjAttributeTableModel
operator|)
name|table
operator|.
name|getModel
argument_list|()
decl_stmt|;
name|int
name|ind
init|=
operator|-
literal|1
decl_stmt|;
name|List
argument_list|<
name|ObjAttributeWrapper
argument_list|>
name|list
init|=
name|model
operator|.
name|getObjectList
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|list
operator|.
name|size
argument_list|()
condition|;
name|i
operator|++
control|)
block|{
if|if
condition|(
name|list
operator|.
name|get
argument_list|(
name|i
argument_list|)
operator|.
name|getValue
argument_list|()
operator|==
name|e
operator|.
name|getAttribute
argument_list|()
condition|)
block|{
name|ind
operator|=
name|i
expr_stmt|;
block|}
block|}
if|if
condition|(
operator|!
name|model
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|model
operator|.
name|resetModel
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|ind
operator|>=
literal|0
condition|)
block|{
name|model
operator|.
name|removeRow
argument_list|(
name|list
operator|.
name|get
argument_list|(
name|ind
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|fireTableDataChanged
argument_list|()
expr_stmt|;
name|table
operator|.
name|select
argument_list|(
name|ind
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|removeDuplicateAttribute
parameter_list|(
name|AttributeEvent
name|e
parameter_list|)
block|{
name|Collection
argument_list|<
name|ObjEntity
argument_list|>
name|objEntities
init|=
name|ProjectUtil
operator|.
name|getCollectionOfChildren
argument_list|(
operator|(
name|ObjEntity
operator|)
name|e
operator|.
name|getEntity
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|ObjEntity
name|objEntity
range|:
name|objEntities
control|)
block|{
if|if
condition|(
name|objEntity
operator|.
name|getDeclaredAttribute
argument_list|(
name|e
operator|.
name|getAttribute
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|JOptionPane
name|pane
init|=
operator|new
name|JOptionPane
argument_list|(
name|String
operator|.
name|format
argument_list|(
literal|"'%s' and '%s' can't have attribute '%s' together. "
operator|+
literal|"Would you like to delete this attribute from the '%s' class?"
argument_list|,
name|objEntity
operator|.
name|getName
argument_list|()
argument_list|,
name|e
operator|.
name|getEntity
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|e
operator|.
name|getAttribute
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|,
name|objEntity
operator|.
name|getName
argument_list|()
argument_list|)
argument_list|,
name|JOptionPane
operator|.
name|QUESTION_MESSAGE
argument_list|,
name|JOptionPane
operator|.
name|YES_NO_OPTION
argument_list|)
decl_stmt|;
name|JDialog
name|dialog
init|=
name|pane
operator|.
name|createDialog
argument_list|(
name|Application
operator|.
name|getFrame
argument_list|()
argument_list|,
literal|"Confirm Remove"
argument_list|)
decl_stmt|;
name|dialog
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|boolean
name|shouldDelete
decl_stmt|;
name|Object
name|selectedValue
init|=
name|pane
operator|.
name|getValue
argument_list|()
decl_stmt|;
name|shouldDelete
operator|=
name|selectedValue
operator|!=
literal|null
operator|&&
name|selectedValue
operator|.
name|equals
argument_list|(
name|JOptionPane
operator|.
name|YES_OPTION
argument_list|)
expr_stmt|;
if|if
condition|(
name|shouldDelete
condition|)
block|{
name|objEntity
operator|.
name|removeAttribute
argument_list|(
name|e
operator|.
name|getAttribute
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|objEntity
operator|.
name|removeAttributeOverride
argument_list|(
name|e
operator|.
name|getAttribute
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
specifier|public
name|void
name|currentObjEntityChanged
parameter_list|(
name|EntityDisplayEvent
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|.
name|getSource
argument_list|()
operator|==
name|this
condition|)
block|{
return|return;
block|}
name|ObjEntity
name|entity
init|=
operator|(
name|ObjEntity
operator|)
name|e
operator|.
name|getEntity
argument_list|()
decl_stmt|;
comment|// Important: process event even if this is the same entity,
comment|// since the inheritance structure might have changed
if|if
condition|(
name|entity
operator|!=
literal|null
condition|)
block|{
name|rebuildTable
argument_list|(
name|entity
argument_list|)
expr_stmt|;
block|}
comment|// if an entity was selected on a tree,
comment|// unselect currently selected row
if|if
condition|(
name|e
operator|.
name|isUnselectAttributes
argument_list|()
condition|)
block|{
name|table
operator|.
name|clearSelection
argument_list|()
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|rebuildTable
parameter_list|(
name|ObjEntity
name|entity
parameter_list|)
block|{
if|if
condition|(
name|table
operator|.
name|getEditingRow
argument_list|()
operator|!=
operator|-
literal|1
operator|&&
name|table
operator|.
name|getEditingColumn
argument_list|()
operator|!=
operator|-
literal|1
condition|)
block|{
name|TableCellEditor
name|cellEditor
init|=
name|table
operator|.
name|getCellEditor
argument_list|(
name|table
operator|.
name|getEditingRow
argument_list|()
argument_list|,
name|table
operator|.
name|getEditingColumn
argument_list|()
argument_list|)
decl_stmt|;
name|cellEditor
operator|.
name|stopCellEditing
argument_list|()
expr_stmt|;
block|}
name|ObjAttributeTableModel
name|model
init|=
operator|new
name|ObjAttributeTableModel
argument_list|(
name|entity
argument_list|,
name|mediator
argument_list|,
name|this
argument_list|)
decl_stmt|;
name|table
operator|.
name|setModel
argument_list|(
name|model
argument_list|)
expr_stmt|;
name|table
operator|.
name|setRowHeight
argument_list|(
literal|25
argument_list|)
expr_stmt|;
name|table
operator|.
name|setRowMargin
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|setUpTableStructure
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|setUpTableStructure
parameter_list|()
block|{
name|Map
argument_list|<
name|Integer
argument_list|,
name|Integer
argument_list|>
name|minSizes
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|Integer
argument_list|,
name|Integer
argument_list|>
name|maxSizes
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|minSizes
operator|.
name|put
argument_list|(
name|ObjAttributeTableModel
operator|.
name|INHERITED
argument_list|,
name|INHERITANCE_COLUMN_WIDTH
argument_list|)
expr_stmt|;
name|maxSizes
operator|.
name|put
argument_list|(
name|ObjAttributeTableModel
operator|.
name|INHERITED
argument_list|,
name|INHERITANCE_COLUMN_WIDTH
argument_list|)
expr_stmt|;
name|initComboBoxes
argument_list|()
expr_stmt|;
name|table
operator|.
name|getColumnModel
argument_list|()
operator|.
name|getColumn
argument_list|(
literal|3
argument_list|)
operator|.
name|setCellRenderer
argument_list|(
operator|new
name|DbAttributePathComboBoxRenderer
argument_list|()
argument_list|)
expr_stmt|;
name|table
operator|.
name|getColumnModel
argument_list|()
operator|.
name|getColumn
argument_list|(
literal|3
argument_list|)
operator|.
name|setCellEditor
argument_list|(
operator|new
name|DbAttributePathComboBoxEditor
argument_list|()
argument_list|)
expr_stmt|;
name|tablePreferences
operator|.
name|bind
argument_list|(
name|table
argument_list|,
name|minSizes
argument_list|,
name|maxSizes
argument_list|,
literal|null
argument_list|,
name|ObjAttributeTableModel
operator|.
name|OBJ_ATTRIBUTE
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
comment|/**      * Refreshes attributes view for the updated entity      */
specifier|public
name|void
name|objEntityChanged
parameter_list|(
name|EntityEvent
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|.
name|getSource
argument_list|()
operator|==
name|this
condition|)
block|{
return|return;
block|}
if|if
condition|(
operator|!
operator|(
name|table
operator|.
name|getModel
argument_list|()
operator|instanceof
name|ObjAttributeTableModel
operator|)
condition|)
block|{
comment|// probably means this panel hasn't been loaded yet...
return|return;
block|}
name|ObjAttributeTableModel
name|model
init|=
operator|(
name|ObjAttributeTableModel
operator|)
name|table
operator|.
name|getModel
argument_list|()
decl_stmt|;
if|if
condition|(
name|model
operator|.
name|getDbEntity
argument_list|()
operator|!=
operator|(
operator|(
name|ObjEntity
operator|)
name|e
operator|.
name|getEntity
argument_list|()
operator|)
operator|.
name|getDbEntity
argument_list|()
condition|)
block|{
name|model
operator|.
name|resetDbEntity
argument_list|()
expr_stmt|;
name|setUpTableStructure
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|objEntityAdded
parameter_list|(
name|EntityEvent
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|.
name|getSource
argument_list|()
operator|==
name|this
condition|)
block|{
return|return;
block|}
name|this
operator|.
name|rebuildTable
argument_list|(
operator|(
name|ObjEntity
operator|)
name|e
operator|.
name|getEntity
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|objEntityRemoved
parameter_list|(
name|EntityEvent
name|e
parameter_list|)
block|{
block|}
comment|// custom renderer used for inherited attributes highlighting
specifier|final
class|class
name|CellRenderer
extends|extends
name|DefaultTableCellRenderer
block|{
annotation|@
name|Override
specifier|public
name|Component
name|getTableCellRendererComponent
parameter_list|(
name|JTable
name|table
parameter_list|,
name|Object
name|value
parameter_list|,
name|boolean
name|isSelected
parameter_list|,
name|boolean
name|hasFocus
parameter_list|,
name|int
name|row
parameter_list|,
name|int
name|column
parameter_list|)
block|{
name|super
operator|.
name|getTableCellRendererComponent
argument_list|(
name|table
argument_list|,
name|value
argument_list|,
name|isSelected
argument_list|,
name|hasFocus
argument_list|,
name|row
argument_list|,
name|column
argument_list|)
expr_stmt|;
name|ObjAttributeTableModel
name|model
init|=
operator|(
name|ObjAttributeTableModel
operator|)
name|table
operator|.
name|getModel
argument_list|()
decl_stmt|;
name|column
operator|=
name|table
operator|.
name|getColumnModel
argument_list|()
operator|.
name|getColumn
argument_list|(
name|column
argument_list|)
operator|.
name|getModelIndex
argument_list|()
expr_stmt|;
name|ObjAttribute
name|attribute
init|=
name|model
operator|.
name|getAttribute
argument_list|(
name|row
argument_list|)
operator|.
name|getValue
argument_list|()
decl_stmt|;
if|if
condition|(
name|column
operator|!=
name|ObjAttributeTableModel
operator|.
name|INHERITED
condition|)
block|{
if|if
condition|(
operator|!
name|model
operator|.
name|isCellEditable
argument_list|(
name|row
argument_list|,
name|column
argument_list|)
condition|)
block|{
name|setForeground
argument_list|(
name|Color
operator|.
name|GRAY
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|setForeground
argument_list|(
name|isSelected
operator|&&
operator|!
name|hasFocus
condition|?
name|table
operator|.
name|getSelectionForeground
argument_list|()
else|:
name|table
operator|.
name|getForeground
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|attribute
operator|.
name|isInherited
argument_list|()
condition|)
block|{
name|Font
name|font
init|=
name|getFont
argument_list|()
decl_stmt|;
name|Font
name|newFont
init|=
name|font
operator|.
name|deriveFont
argument_list|(
name|Font
operator|.
name|ITALIC
argument_list|)
decl_stmt|;
name|setFont
argument_list|(
name|newFont
argument_list|)
expr_stmt|;
block|}
name|setIcon
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|attribute
operator|.
name|isInherited
argument_list|()
condition|)
block|{
name|Icon
name|objEntityIcon
init|=
name|ModelerUtil
operator|.
name|buildIcon
argument_list|(
literal|"icon-inheritance.png"
argument_list|)
decl_stmt|;
name|setIcon
argument_list|(
name|objEntityIcon
argument_list|)
expr_stmt|;
block|}
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
name|setFont
argument_list|(
name|UIManager
operator|.
name|getFont
argument_list|(
literal|"Label.font"
argument_list|)
argument_list|)
expr_stmt|;
name|setBorder
argument_list|(
name|BorderFactory
operator|.
name|createEmptyBorder
argument_list|(
literal|0
argument_list|,
literal|5
argument_list|,
literal|0
argument_list|,
literal|0
argument_list|)
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|private
name|void
name|resetTableModel
parameter_list|()
block|{
name|CayenneTableModel
name|model
init|=
name|table
operator|.
name|getCayenneModel
argument_list|()
decl_stmt|;
if|if
condition|(
name|model
operator|!=
literal|null
operator|&&
operator|!
name|model
operator|.
name|isValid
argument_list|()
condition|)
block|{
name|model
operator|.
name|resetModel
argument_list|()
expr_stmt|;
name|model
operator|.
name|fireTableDataChanged
argument_list|()
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|beforeSaveChanges
parameter_list|(
name|ProjectOnSaveEvent
name|e
parameter_list|)
block|{
name|resetTableModel
argument_list|()
expr_stmt|;
block|}
specifier|private
class|class
name|ObjAttributeListSelectionListener
implements|implements
name|ListSelectionListener
block|{
specifier|public
name|void
name|valueChanged
parameter_list|(
name|ListSelectionEvent
name|e
parameter_list|)
block|{
name|ObjAttribute
index|[]
name|attrs
init|=
operator|new
name|ObjAttribute
index|[
literal|0
index|]
decl_stmt|;
if|if
condition|(
operator|!
name|e
operator|.
name|getValueIsAdjusting
argument_list|()
operator|&&
operator|!
operator|(
operator|(
name|ListSelectionModel
operator|)
name|e
operator|.
name|getSource
argument_list|()
operator|)
operator|.
name|isSelectionEmpty
argument_list|()
condition|)
block|{
name|parentPanel
operator|.
name|getRelationshipPanel
argument_list|()
operator|.
name|getTable
argument_list|()
operator|.
name|getSelectionModel
argument_list|()
operator|.
name|clearSelection
argument_list|()
expr_stmt|;
if|if
condition|(
name|parentPanel
operator|.
name|getRelationshipPanel
argument_list|()
operator|.
name|getTable
argument_list|()
operator|.
name|getCellEditor
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|parentPanel
operator|.
name|getRelationshipPanel
argument_list|()
operator|.
name|getTable
argument_list|()
operator|.
name|getCellEditor
argument_list|()
operator|.
name|stopCellEditing
argument_list|()
expr_stmt|;
block|}
name|Application
operator|.
name|getInstance
argument_list|()
operator|.
name|getActionManager
argument_list|()
operator|.
name|getAction
argument_list|(
name|RemoveAttributeRelationshipAction
operator|.
name|class
argument_list|)
operator|.
name|setCurrentSelectedPanel
argument_list|(
name|parentPanel
operator|.
name|getAttributePanel
argument_list|()
argument_list|)
expr_stmt|;
name|Application
operator|.
name|getInstance
argument_list|()
operator|.
name|getActionManager
argument_list|()
operator|.
name|getAction
argument_list|(
name|CutAttributeRelationshipAction
operator|.
name|class
argument_list|)
operator|.
name|setCurrentSelectedPanel
argument_list|(
name|parentPanel
operator|.
name|getAttributePanel
argument_list|()
argument_list|)
expr_stmt|;
name|Application
operator|.
name|getInstance
argument_list|()
operator|.
name|getActionManager
argument_list|()
operator|.
name|getAction
argument_list|(
name|CopyAttributeRelationshipAction
operator|.
name|class
argument_list|)
operator|.
name|setCurrentSelectedPanel
argument_list|(
name|parentPanel
operator|.
name|getAttributePanel
argument_list|()
argument_list|)
expr_stmt|;
name|parentPanel
operator|.
name|getResolve
argument_list|()
operator|.
name|removeActionListener
argument_list|(
name|parentPanel
operator|.
name|getRelationshipPanel
argument_list|()
operator|.
name|getResolver
argument_list|()
argument_list|)
expr_stmt|;
name|parentPanel
operator|.
name|getResolve
argument_list|()
operator|.
name|removeActionListener
argument_list|(
name|getResolver
argument_list|()
argument_list|)
expr_stmt|;
name|parentPanel
operator|.
name|getResolve
argument_list|()
operator|.
name|addActionListener
argument_list|(
name|getResolver
argument_list|()
argument_list|)
expr_stmt|;
name|parentPanel
operator|.
name|getResolve
argument_list|()
operator|.
name|setToolTipText
argument_list|(
literal|"Edit Attribute"
argument_list|)
expr_stmt|;
name|parentPanel
operator|.
name|getResolve
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|table
operator|.
name|getSelectedRow
argument_list|()
operator|>=
literal|0
condition|)
block|{
name|ObjAttributeTableModel
name|model
init|=
operator|(
name|ObjAttributeTableModel
operator|)
name|table
operator|.
name|getModel
argument_list|()
decl_stmt|;
name|int
index|[]
name|sel
init|=
name|table
operator|.
name|getSelectedRows
argument_list|()
decl_stmt|;
name|attrs
operator|=
operator|new
name|ObjAttribute
index|[
name|sel
operator|.
name|length
index|]
expr_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|sel
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|attrs
index|[
name|i
index|]
operator|=
name|model
operator|.
name|getAttribute
argument_list|(
name|sel
index|[
name|i
index|]
argument_list|)
operator|.
name|getValue
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|sel
operator|.
name|length
operator|==
literal|1
condition|)
block|{
name|UIUtil
operator|.
name|scrollToSelectedRow
argument_list|(
name|table
argument_list|)
expr_stmt|;
block|}
name|enabledResolve
operator|=
literal|true
expr_stmt|;
block|}
else|else
block|{
name|enabledResolve
operator|=
literal|false
expr_stmt|;
block|}
name|resolveMenu
operator|.
name|setEnabled
argument_list|(
name|enabledResolve
argument_list|)
expr_stmt|;
block|}
name|mediator
operator|.
name|setCurrentObjAttributes
argument_list|(
name|attrs
argument_list|)
expr_stmt|;
name|parentPanel
operator|.
name|updateActions
argument_list|(
name|attrs
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|boolean
name|isEnabledResolve
parameter_list|()
block|{
return|return
name|enabledResolve
return|;
block|}
specifier|public
name|ActionListener
name|getResolver
parameter_list|()
block|{
return|return
name|resolver
return|;
block|}
block|}
end_class

end_unit

