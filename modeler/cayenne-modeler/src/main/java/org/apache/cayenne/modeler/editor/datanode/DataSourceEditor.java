begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|editor
operator|.
name|datanode
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|DataNodeDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|ProjectController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|CayenneController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|swing
operator|.
name|BindingBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|swing
operator|.
name|BindingDelegate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|swing
operator|.
name|ObjectBinding
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|util
operator|.
name|Util
import|;
end_import

begin_comment
comment|/**  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|DataSourceEditor
extends|extends
name|CayenneController
block|{
specifier|protected
name|ObjectBinding
index|[]
name|fieldAdapters
decl_stmt|;
specifier|private
name|DataNodeDescriptor
name|node
decl_stmt|;
specifier|protected
name|BindingDelegate
name|nodeChangeProcessor
decl_stmt|;
specifier|public
name|DataSourceEditor
parameter_list|(
name|ProjectController
name|controller
parameter_list|,
name|BindingDelegate
name|nodeChangeProcessor
parameter_list|)
block|{
name|super
argument_list|(
name|controller
argument_list|)
expr_stmt|;
name|this
operator|.
name|nodeChangeProcessor
operator|=
name|nodeChangeProcessor
expr_stmt|;
name|initBindings
argument_list|()
expr_stmt|;
block|}
specifier|public
name|DataNodeDescriptor
name|getNode
parameter_list|()
block|{
return|return
name|node
return|;
block|}
specifier|public
name|void
name|setNode
parameter_list|(
name|DataNodeDescriptor
name|node
parameter_list|)
block|{
if|if
condition|(
operator|!
name|Util
operator|.
name|nullSafeEquals
argument_list|(
name|this
operator|.
name|node
argument_list|,
name|node
argument_list|)
condition|)
block|{
name|this
operator|.
name|node
operator|=
name|node
expr_stmt|;
for|for
control|(
name|ObjectBinding
name|fieldAdapter
range|:
name|fieldAdapters
control|)
block|{
name|fieldAdapter
operator|.
name|updateView
argument_list|()
expr_stmt|;
block|}
block|}
block|}
specifier|protected
name|void
name|initBindings
parameter_list|()
block|{
name|BindingBuilder
name|builder
init|=
operator|new
name|BindingBuilder
argument_list|(
name|getApplication
argument_list|()
operator|.
name|getBindingFactory
argument_list|()
argument_list|,
name|this
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setDelegate
argument_list|(
name|nodeChangeProcessor
argument_list|)
expr_stmt|;
name|prepareBindings
argument_list|(
name|builder
argument_list|)
expr_stmt|;
block|}
specifier|protected
specifier|abstract
name|void
name|prepareBindings
parameter_list|(
name|BindingBuilder
name|builder
parameter_list|)
function_decl|;
specifier|protected
name|void
name|refreshView
parameter_list|()
block|{
for|for
control|(
name|ObjectBinding
name|fieldAdapter
range|:
name|fieldAdapters
control|)
block|{
name|fieldAdapter
operator|.
name|updateView
argument_list|()
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

