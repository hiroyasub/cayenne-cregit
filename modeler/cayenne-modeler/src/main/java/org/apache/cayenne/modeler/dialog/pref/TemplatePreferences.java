begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|pref
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|prefs
operator|.
name|BackingStoreException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|prefs
operator|.
name|Preferences
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|table
operator|.
name|AbstractTableModel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|CodeTemplateManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|pref
operator|.
name|FSPath
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|CayenneController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|pref
operator|.
name|CayennePreferenceEditor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|pref
operator|.
name|PreferenceEditor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|swing
operator|.
name|BindingBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|swing
operator|.
name|ObjectBinding
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|swing
operator|.
name|TableBindingBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_class
specifier|public
class|class
name|TemplatePreferences
extends|extends
name|CayenneController
block|{
specifier|protected
name|TemplatePreferencesView
name|view
decl_stmt|;
specifier|protected
name|CayennePreferenceEditor
name|editor
decl_stmt|;
specifier|protected
name|List
argument_list|<
name|FSPath
argument_list|>
name|templateEntries
decl_stmt|;
specifier|protected
name|ObjectBinding
name|tableBinding
decl_stmt|;
specifier|private
specifier|static
name|Log
name|logger
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|TemplatePreferences
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
name|TemplatePreferences
parameter_list|(
name|PreferenceDialog
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|this
operator|.
name|view
operator|=
operator|new
name|TemplatePreferencesView
argument_list|()
expr_stmt|;
name|PreferenceEditor
name|editor
init|=
name|parent
operator|.
name|getEditor
argument_list|()
decl_stmt|;
if|if
condition|(
name|editor
operator|instanceof
name|CayennePreferenceEditor
condition|)
block|{
name|this
operator|.
name|editor
operator|=
operator|(
name|CayennePreferenceEditor
operator|)
name|editor
expr_stmt|;
block|}
name|this
operator|.
name|templateEntries
operator|=
operator|new
name|ArrayList
argument_list|<
name|FSPath
argument_list|>
argument_list|()
expr_stmt|;
try|try
block|{
name|String
index|[]
name|keys
init|=
name|getTemplatePreferences
argument_list|()
operator|.
name|childrenNames
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|keys
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|templateEntries
operator|.
name|add
argument_list|(
operator|(
name|FSPath
operator|)
name|application
operator|.
name|getCayenneProjectPreferences
argument_list|()
operator|.
name|getProjectDetailObject
argument_list|(
name|FSPath
operator|.
name|class
argument_list|,
name|getTemplatePreferences
argument_list|()
operator|.
name|node
argument_list|(
name|keys
index|[
name|i
index|]
argument_list|)
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|BackingStoreException
name|e
parameter_list|)
block|{
name|logger
operator|.
name|warn
argument_list|(
literal|"Error reading preferences"
argument_list|)
expr_stmt|;
block|}
name|initBindings
argument_list|()
expr_stmt|;
block|}
specifier|public
name|Component
name|getView
parameter_list|()
block|{
return|return
name|view
return|;
block|}
specifier|protected
name|Preferences
name|getTemplatePreferences
parameter_list|()
block|{
return|return
name|application
operator|.
name|getPreferencesNode
argument_list|(
name|CodeTemplateManager
operator|.
name|class
argument_list|,
name|CodeTemplateManager
operator|.
name|NODE_NAME
argument_list|)
return|;
block|}
specifier|protected
name|void
name|initBindings
parameter_list|()
block|{
name|BindingBuilder
name|builder
init|=
operator|new
name|BindingBuilder
argument_list|(
name|getApplication
argument_list|()
operator|.
name|getBindingFactory
argument_list|()
argument_list|,
name|this
argument_list|)
decl_stmt|;
name|builder
operator|.
name|bindToAction
argument_list|(
name|view
operator|.
name|getAddButton
argument_list|()
argument_list|,
literal|"addTemplateAction()"
argument_list|)
expr_stmt|;
name|builder
operator|.
name|bindToAction
argument_list|(
name|view
operator|.
name|getRemoveButton
argument_list|()
argument_list|,
literal|"removeTemplateAction()"
argument_list|)
expr_stmt|;
name|TableBindingBuilder
name|tableBuilder
init|=
operator|new
name|TableBindingBuilder
argument_list|(
name|builder
argument_list|)
decl_stmt|;
name|tableBuilder
operator|.
name|addColumn
argument_list|(
literal|"Name"
argument_list|,
literal|"#item.key"
argument_list|,
name|String
operator|.
name|class
argument_list|,
literal|false
argument_list|,
literal|"XXXXXXXXXXXXXXX"
argument_list|)
expr_stmt|;
name|tableBuilder
operator|.
name|addColumn
argument_list|(
literal|"Path"
argument_list|,
literal|"#item.path"
argument_list|,
name|String
operator|.
name|class
argument_list|,
literal|false
argument_list|,
literal|"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX"
argument_list|)
expr_stmt|;
name|tableBuilder
operator|.
name|bindToTable
argument_list|(
name|view
operator|.
name|getTable
argument_list|()
argument_list|,
literal|"templateEntries"
argument_list|)
operator|.
name|updateView
argument_list|()
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|FSPath
argument_list|>
name|getTemplateEntries
parameter_list|()
block|{
return|return
name|templateEntries
return|;
block|}
specifier|public
name|PreferenceEditor
name|getEditor
parameter_list|()
block|{
return|return
name|editor
return|;
block|}
specifier|public
name|void
name|addTemplateAction
parameter_list|()
block|{
name|FSPath
name|path
init|=
operator|new
name|TemplateCreator
argument_list|(
name|this
argument_list|)
operator|.
name|startupAction
argument_list|()
decl_stmt|;
if|if
condition|(
name|path
operator|!=
literal|null
condition|)
block|{
name|int
name|len
init|=
name|templateEntries
operator|.
name|size
argument_list|()
decl_stmt|;
name|templateEntries
operator|.
name|add
argument_list|(
name|path
argument_list|)
expr_stmt|;
operator|(
operator|(
name|AbstractTableModel
operator|)
name|view
operator|.
name|getTable
argument_list|()
operator|.
name|getModel
argument_list|()
operator|)
operator|.
name|fireTableRowsInserted
argument_list|(
name|len
argument_list|,
name|len
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|removeTemplateAction
parameter_list|()
block|{
name|int
name|selected
init|=
name|view
operator|.
name|getTable
argument_list|()
operator|.
name|getSelectedRow
argument_list|()
decl_stmt|;
if|if
condition|(
name|selected
operator|<
literal|0
condition|)
block|{
return|return;
block|}
name|Object
name|key
init|=
operator|(
operator|(
name|AbstractTableModel
operator|)
name|view
operator|.
name|getTable
argument_list|()
operator|.
name|getModel
argument_list|()
operator|)
operator|.
name|getValueAt
argument_list|(
name|selected
argument_list|,
literal|0
argument_list|)
decl_stmt|;
name|editor
operator|.
name|getRemovedNode
argument_list|()
operator|.
name|add
argument_list|(
name|getTemplatePreferences
argument_list|()
operator|.
name|node
argument_list|(
operator|(
name|String
operator|)
name|key
argument_list|)
argument_list|)
expr_stmt|;
name|templateEntries
operator|.
name|remove
argument_list|(
name|selected
argument_list|)
expr_stmt|;
operator|(
operator|(
name|AbstractTableModel
operator|)
name|view
operator|.
name|getTable
argument_list|()
operator|.
name|getModel
argument_list|()
operator|)
operator|.
name|fireTableRowsDeleted
argument_list|(
name|selected
argument_list|,
name|selected
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

