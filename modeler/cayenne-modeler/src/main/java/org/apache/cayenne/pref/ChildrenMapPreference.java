begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|pref
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|prefs
operator|.
name|BackingStoreException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|prefs
operator|.
name|Preferences
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|CayenneRuntimeException
import|;
end_import

begin_class
specifier|public
class|class
name|ChildrenMapPreference
extends|extends
name|PreferenceDecorator
block|{
specifier|private
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|children
decl_stmt|;
specifier|private
name|List
argument_list|<
name|String
argument_list|>
name|removeObject
decl_stmt|;
specifier|public
name|ChildrenMapPreference
parameter_list|(
name|CayennePreference
name|delegate
parameter_list|)
block|{
name|super
argument_list|(
name|delegate
argument_list|)
expr_stmt|;
name|this
operator|.
name|children
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
name|this
operator|.
name|removeObject
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
block|}
specifier|public
name|ChildrenMapPreference
parameter_list|(
name|CayennePreference
name|delegate
parameter_list|,
name|Preferences
name|preferences
parameter_list|)
block|{
name|super
argument_list|(
name|delegate
argument_list|)
expr_stmt|;
name|delegate
operator|.
name|setCurrentPreference
argument_list|(
name|preferences
argument_list|)
expr_stmt|;
name|this
operator|.
name|children
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|initChildrenPreferences
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|children
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
try|try
block|{
name|String
index|[]
name|names
init|=
name|getCurrentPreference
argument_list|()
operator|.
name|childrenNames
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|name
range|:
name|names
control|)
block|{
try|try
block|{
name|Object
name|newInstance
init|=
name|delegate
operator|.
name|getClass
argument_list|()
operator|.
name|getConstructor
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|boolean
operator|.
name|class
argument_list|)
operator|.
name|newInstance
argument_list|(
name|name
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|children
operator|.
name|put
argument_list|(
name|name
argument_list|,
name|newInstance
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|CayenneRuntimeException
argument_list|(
literal|"Error initializing preference"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
name|this
operator|.
name|children
operator|.
name|putAll
argument_list|(
name|children
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|BackingStoreException
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|Map
name|getChildrenPreferences
parameter_list|()
block|{
return|return
name|children
return|;
block|}
specifier|public
name|CayennePreference
name|getObject
parameter_list|(
name|String
name|key
parameter_list|)
block|{
return|return
operator|(
name|CayennePreference
operator|)
name|children
operator|.
name|get
argument_list|(
name|key
argument_list|)
return|;
block|}
specifier|public
name|void
name|remove
parameter_list|(
name|String
name|key
parameter_list|)
block|{
name|removeObject
operator|.
name|add
argument_list|(
name|key
argument_list|)
expr_stmt|;
name|children
operator|.
name|remove
argument_list|(
name|key
argument_list|)
expr_stmt|;
block|}
specifier|public
name|CayennePreference
name|create
parameter_list|(
name|String
name|nodeName
parameter_list|)
block|{
try|try
block|{
name|Object
name|newInstance
init|=
name|delegate
operator|.
name|getClass
argument_list|()
operator|.
name|getConstructor
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|boolean
operator|.
name|class
argument_list|)
operator|.
name|newInstance
argument_list|(
name|nodeName
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|children
operator|.
name|put
argument_list|(
name|nodeName
argument_list|,
name|newInstance
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Throwable
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|CayenneRuntimeException
argument_list|(
literal|"Error creating preference"
argument_list|)
throw|;
block|}
return|return
operator|(
name|CayennePreference
operator|)
name|children
operator|.
name|get
argument_list|(
name|nodeName
argument_list|)
return|;
block|}
specifier|public
name|void
name|create
parameter_list|(
name|String
name|nodeName
parameter_list|,
name|Object
name|obj
parameter_list|)
block|{
name|children
operator|.
name|put
argument_list|(
name|nodeName
argument_list|,
name|obj
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|save
parameter_list|()
block|{
if|if
condition|(
name|removeObject
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
for|for
control|(
name|String
name|aRemoveObject
range|:
name|removeObject
control|)
block|{
try|try
block|{
name|delegate
operator|.
name|getCurrentPreference
argument_list|()
operator|.
name|node
argument_list|(
name|aRemoveObject
argument_list|)
operator|.
name|removeNode
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|BackingStoreException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|CayenneRuntimeException
argument_list|(
literal|"Error saving preference"
argument_list|)
throw|;
block|}
block|}
block|}
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|pairs
range|:
name|children
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|delegate
operator|.
name|getCurrentPreference
argument_list|()
operator|.
name|node
argument_list|(
name|pairs
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
operator|(
operator|(
name|CayennePreference
operator|)
name|pairs
operator|.
name|getValue
argument_list|()
operator|)
operator|.
name|saveObjectPreference
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|cancel
parameter_list|()
block|{
name|this
operator|.
name|children
operator|.
name|clear
argument_list|()
expr_stmt|;
name|initChildrenPreferences
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

