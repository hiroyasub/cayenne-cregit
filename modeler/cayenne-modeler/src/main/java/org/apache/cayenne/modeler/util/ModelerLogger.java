begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|LogConsole
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Marker
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|helpers
operator|.
name|FormattingTuple
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|helpers
operator|.
name|MessageFormatter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|text
operator|.
name|AttributeSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|SimpleDateFormat
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_comment
comment|/**  * ModelerLogger is a Logger implementation, which performs output  * to the LogConsole.  */
end_comment

begin_class
specifier|public
class|class
name|ModelerLogger
implements|implements
name|Logger
block|{
specifier|private
specifier|static
specifier|final
name|int
name|BUFFER_SIZE
init|=
literal|32
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|byte
name|LOG_LEVEL_INFO
init|=
literal|2
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|byte
name|LOG_LEVEL_DEBUG
init|=
literal|1
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|byte
name|LOG_LEVEL_TRACE
init|=
literal|0
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|byte
name|LOG_LEVEL_WARNING
init|=
literal|3
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|byte
name|LOG_LEVEL_ERROR
init|=
literal|4
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|INFO_LOG_NAME
init|=
literal|"INFO"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|DEBUG_LOG_NAME
init|=
literal|"DEBUG"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|TRACE_LOG_NAME
init|=
literal|"TRACE"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|WARNING_LOG_NAME
init|=
literal|"WARNING"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|ERROR_LOG_NAME
init|=
literal|"ERROR"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|DATE_FORMAT
init|=
literal|"yyyy/MM/dd HH.mm.ss"
decl_stmt|;
comment|/**       * Logger name       */
specifier|private
name|String
name|name
decl_stmt|;
specifier|private
name|int
name|currentLogLevel
init|=
name|LOG_LEVEL_INFO
decl_stmt|;
specifier|public
name|ModelerLogger
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
specifier|private
name|String
name|getLogLevel
parameter_list|(
name|byte
name|level
parameter_list|)
block|{
switch|switch
condition|(
name|level
condition|)
block|{
case|case
name|LOG_LEVEL_INFO
case|:
return|return
name|INFO_LOG_NAME
return|;
case|case
name|LOG_LEVEL_DEBUG
case|:
return|return
name|DEBUG_LOG_NAME
return|;
case|case
name|LOG_LEVEL_TRACE
case|:
return|return
name|TRACE_LOG_NAME
return|;
case|case
name|LOG_LEVEL_WARNING
case|:
return|return
name|WARNING_LOG_NAME
return|;
case|case
name|LOG_LEVEL_ERROR
case|:
return|return
name|ERROR_LOG_NAME
return|;
default|default:
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Unregistered log level - "
operator|+
name|level
argument_list|)
throw|;
block|}
block|}
specifier|private
name|void
name|consoleLog
parameter_list|(
name|byte
name|level
parameter_list|,
name|String
name|message
parameter_list|,
name|Throwable
name|throwable
parameter_list|)
block|{
if|if
condition|(
name|this
operator|.
name|isLevelEnabled
argument_list|(
name|level
argument_list|)
condition|)
block|{
name|StringBuilder
name|buffer
init|=
operator|new
name|StringBuilder
argument_list|(
name|BUFFER_SIZE
argument_list|)
decl_stmt|;
name|buffer
operator|.
name|append
argument_list|(
name|this
operator|.
name|getFormattedDate
argument_list|()
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|append
argument_list|(
literal|' '
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|append
argument_list|(
literal|'['
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|append
argument_list|(
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|append
argument_list|(
literal|"] "
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|append
argument_list|(
literal|'['
argument_list|)
expr_stmt|;
name|String
name|levelStr
init|=
name|this
operator|.
name|getLogLevel
argument_list|(
name|level
argument_list|)
decl_stmt|;
name|buffer
operator|.
name|append
argument_list|(
name|levelStr
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|append
argument_list|(
literal|']'
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|append
argument_list|(
literal|' '
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|append
argument_list|(
name|message
argument_list|)
expr_stmt|;
name|this
operator|.
name|write
argument_list|(
name|buffer
argument_list|,
name|throwable
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|consoleLog
parameter_list|(
name|byte
name|level
parameter_list|,
name|String
name|message
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|level
argument_list|,
name|message
argument_list|,
operator|(
name|Throwable
operator|)
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|consoleLog
parameter_list|(
name|byte
name|level
parameter_list|,
name|String
name|format
parameter_list|,
name|Object
modifier|...
name|arguments
parameter_list|)
block|{
if|if
condition|(
name|this
operator|.
name|isLevelEnabled
argument_list|(
name|level
argument_list|)
condition|)
block|{
name|FormattingTuple
name|tuple
init|=
name|MessageFormatter
operator|.
name|arrayFormat
argument_list|(
name|format
argument_list|,
name|arguments
argument_list|)
decl_stmt|;
name|this
operator|.
name|consoleLog
argument_list|(
name|level
argument_list|,
name|tuple
operator|.
name|getMessage
argument_list|()
argument_list|,
name|tuple
operator|.
name|getThrowable
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|String
name|getFormattedDate
parameter_list|()
block|{
name|Date
name|currentDate
init|=
operator|new
name|Date
argument_list|()
decl_stmt|;
name|SimpleDateFormat
name|formatter
init|=
operator|new
name|SimpleDateFormat
argument_list|(
name|DATE_FORMAT
argument_list|)
decl_stmt|;
name|String
name|dateText
init|=
name|formatter
operator|.
name|format
argument_list|(
name|currentDate
argument_list|)
decl_stmt|;
return|return
name|dateText
return|;
block|}
specifier|private
name|void
name|write
parameter_list|(
name|StringBuilder
name|buffer
parameter_list|,
name|Throwable
name|throwable
parameter_list|)
block|{
name|PrintStream
name|targetStream
init|=
name|System
operator|.
name|err
decl_stmt|;
name|targetStream
operator|.
name|println
argument_list|(
name|buffer
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|this
operator|.
name|writeThrowable
argument_list|(
name|throwable
argument_list|,
name|targetStream
argument_list|)
expr_stmt|;
name|targetStream
operator|.
name|flush
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|writeThrowable
parameter_list|(
name|Throwable
name|throwable
parameter_list|,
name|PrintStream
name|targetStream
parameter_list|)
block|{
if|if
condition|(
name|throwable
operator|!=
literal|null
condition|)
block|{
name|throwable
operator|.
name|printStackTrace
argument_list|(
name|targetStream
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|boolean
name|isLevelEnabled
parameter_list|(
name|int
name|logLevel
parameter_list|)
block|{
return|return
operator|(
name|logLevel
operator|>=
name|this
operator|.
name|currentLogLevel
operator|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|debug
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_DEBUG
argument_list|,
name|message
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"DEBUG"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|WARN_STYLE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|debug
parameter_list|(
name|String
name|message
parameter_list|,
name|Object
name|object
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_DEBUG
argument_list|,
name|message
argument_list|,
name|object
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"DEBUG"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|WARN_STYLE
argument_list|,
name|object
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|debug
parameter_list|(
name|String
name|message
parameter_list|,
name|Object
name|object
parameter_list|,
name|Object
name|secondObject
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_DEBUG
argument_list|,
name|message
argument_list|,
name|object
argument_list|,
name|secondObject
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"DEBUG"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|WARN_STYLE
argument_list|,
name|object
argument_list|,
name|secondObject
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|debug
parameter_list|(
name|String
name|message
parameter_list|,
name|Object
modifier|...
name|objects
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_DEBUG
argument_list|,
name|message
argument_list|,
name|objects
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"DEBUG"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|WARN_STYLE
argument_list|,
name|objects
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|debug
parameter_list|(
name|String
name|message
parameter_list|,
name|Throwable
name|throwable
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_DEBUG
argument_list|,
name|message
argument_list|,
name|throwable
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"DEBUG"
argument_list|,
name|message
argument_list|,
name|throwable
argument_list|,
name|LogConsole
operator|.
name|WARN_STYLE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isDebugEnabled
parameter_list|(
name|Marker
name|marker
parameter_list|)
block|{
return|return
name|isLevelEnabled
argument_list|(
name|LOG_LEVEL_DEBUG
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|debug
parameter_list|(
name|Marker
name|marker
parameter_list|,
name|String
name|message
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_DEBUG
argument_list|,
name|message
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"DEBUG"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|WARN_STYLE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|debug
parameter_list|(
name|Marker
name|marker
parameter_list|,
name|String
name|message
parameter_list|,
name|Object
name|object
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_DEBUG
argument_list|,
name|message
argument_list|,
name|object
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"DEBUG"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|WARN_STYLE
argument_list|,
name|object
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|debug
parameter_list|(
name|Marker
name|marker
parameter_list|,
name|String
name|message
parameter_list|,
name|Object
name|object
parameter_list|,
name|Object
name|secondObject
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_DEBUG
argument_list|,
name|message
argument_list|,
name|object
argument_list|,
name|secondObject
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"DEBUG"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|WARN_STYLE
argument_list|,
name|object
argument_list|,
name|secondObject
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|debug
parameter_list|(
name|Marker
name|marker
parameter_list|,
name|String
name|message
parameter_list|,
name|Object
modifier|...
name|objects
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_DEBUG
argument_list|,
name|message
argument_list|,
name|objects
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"DEBUG"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|WARN_STYLE
argument_list|,
name|objects
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|debug
parameter_list|(
name|Marker
name|marker
parameter_list|,
name|String
name|message
parameter_list|,
name|Throwable
name|throwable
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_DEBUG
argument_list|,
name|message
argument_list|,
name|throwable
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"DEBUG"
argument_list|,
name|message
argument_list|,
name|throwable
argument_list|,
name|LogConsole
operator|.
name|WARN_STYLE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isInfoEnabled
parameter_list|()
block|{
return|return
name|isLevelEnabled
argument_list|(
name|LOG_LEVEL_INFO
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|error
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_ERROR
argument_list|,
name|message
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"ERROR"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|ERROR_STYLE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|error
parameter_list|(
name|String
name|message
parameter_list|,
name|Object
name|object
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_ERROR
argument_list|,
name|message
argument_list|,
name|object
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"ERROR"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|ERROR_STYLE
argument_list|,
name|object
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|error
parameter_list|(
name|String
name|message
parameter_list|,
name|Object
name|object
parameter_list|,
name|Object
name|secondObject
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_ERROR
argument_list|,
name|message
argument_list|,
name|object
argument_list|,
name|secondObject
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"ERROR"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|ERROR_STYLE
argument_list|,
name|object
argument_list|,
name|secondObject
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|error
parameter_list|(
name|String
name|message
parameter_list|,
name|Object
modifier|...
name|objects
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_ERROR
argument_list|,
name|message
argument_list|,
name|objects
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"ERROR"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|ERROR_STYLE
argument_list|,
name|objects
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|error
parameter_list|(
name|String
name|message
parameter_list|,
name|Throwable
name|throwable
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_ERROR
argument_list|,
name|message
argument_list|,
name|throwable
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"ERROR"
argument_list|,
name|message
argument_list|,
name|throwable
argument_list|,
name|LogConsole
operator|.
name|ERROR_STYLE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isErrorEnabled
parameter_list|(
name|Marker
name|marker
parameter_list|)
block|{
return|return
name|isLevelEnabled
argument_list|(
name|LOG_LEVEL_ERROR
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|error
parameter_list|(
name|Marker
name|marker
parameter_list|,
name|String
name|message
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_ERROR
argument_list|,
name|message
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"ERROR"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|ERROR_STYLE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|error
parameter_list|(
name|Marker
name|marker
parameter_list|,
name|String
name|message
parameter_list|,
name|Object
name|object
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_ERROR
argument_list|,
name|message
argument_list|,
name|object
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"ERROR"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|ERROR_STYLE
argument_list|,
name|object
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|error
parameter_list|(
name|Marker
name|marker
parameter_list|,
name|String
name|message
parameter_list|,
name|Object
name|object
parameter_list|,
name|Object
name|secondObject
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_ERROR
argument_list|,
name|message
argument_list|,
name|object
argument_list|,
name|secondObject
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"ERROR"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|ERROR_STYLE
argument_list|,
name|object
argument_list|,
name|secondObject
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|error
parameter_list|(
name|Marker
name|marker
parameter_list|,
name|String
name|message
parameter_list|,
name|Object
modifier|...
name|objects
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_ERROR
argument_list|,
name|message
argument_list|,
name|objects
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"ERROR"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|ERROR_STYLE
argument_list|,
name|objects
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|error
parameter_list|(
name|Marker
name|marker
parameter_list|,
name|String
name|message
parameter_list|,
name|Throwable
name|throwable
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_ERROR
argument_list|,
name|message
argument_list|,
name|throwable
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"ERROR"
argument_list|,
name|message
argument_list|,
name|throwable
argument_list|,
name|LogConsole
operator|.
name|ERROR_STYLE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|info
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_INFO
argument_list|,
name|message
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"INFO"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|INFO_STYLE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|info
parameter_list|(
name|String
name|message
parameter_list|,
name|Object
name|object
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_INFO
argument_list|,
name|message
argument_list|,
name|object
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"INFO"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|INFO_STYLE
argument_list|,
name|object
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|info
parameter_list|(
name|String
name|message
parameter_list|,
name|Object
name|object
parameter_list|,
name|Object
name|secondObject
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_INFO
argument_list|,
name|message
argument_list|,
name|object
argument_list|,
name|secondObject
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"INFO"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|INFO_STYLE
argument_list|,
name|object
argument_list|,
name|secondObject
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|info
parameter_list|(
name|String
name|message
parameter_list|,
name|Object
modifier|...
name|objects
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_INFO
argument_list|,
name|message
argument_list|,
name|objects
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"INFO"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|INFO_STYLE
argument_list|,
name|objects
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|info
parameter_list|(
name|String
name|message
parameter_list|,
name|Throwable
name|throwable
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_INFO
argument_list|,
name|message
argument_list|,
name|throwable
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"INFO"
argument_list|,
name|message
argument_list|,
name|throwable
argument_list|,
name|LogConsole
operator|.
name|INFO_STYLE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isInfoEnabled
parameter_list|(
name|Marker
name|marker
parameter_list|)
block|{
return|return
name|isLevelEnabled
argument_list|(
name|LOG_LEVEL_INFO
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|info
parameter_list|(
name|Marker
name|marker
parameter_list|,
name|String
name|message
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_INFO
argument_list|,
name|message
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"INFO"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|INFO_STYLE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|info
parameter_list|(
name|Marker
name|marker
parameter_list|,
name|String
name|message
parameter_list|,
name|Object
name|object
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_INFO
argument_list|,
name|message
argument_list|,
name|object
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"INFO"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|INFO_STYLE
argument_list|,
name|object
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|info
parameter_list|(
name|Marker
name|marker
parameter_list|,
name|String
name|message
parameter_list|,
name|Object
name|object
parameter_list|,
name|Object
name|secondObject
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_INFO
argument_list|,
name|message
argument_list|,
name|object
argument_list|,
name|secondObject
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"INFO"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|INFO_STYLE
argument_list|,
name|object
argument_list|,
name|secondObject
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|info
parameter_list|(
name|Marker
name|marker
parameter_list|,
name|String
name|message
parameter_list|,
name|Object
modifier|...
name|objects
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_INFO
argument_list|,
name|message
argument_list|,
name|objects
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"INFO"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|INFO_STYLE
argument_list|,
name|objects
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|info
parameter_list|(
name|Marker
name|marker
parameter_list|,
name|String
name|message
parameter_list|,
name|Throwable
name|throwable
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_INFO
argument_list|,
name|message
argument_list|,
name|throwable
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"INFO"
argument_list|,
name|message
argument_list|,
name|throwable
argument_list|,
name|LogConsole
operator|.
name|INFO_STYLE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isWarnEnabled
parameter_list|()
block|{
return|return
name|isLevelEnabled
argument_list|(
name|LOG_LEVEL_WARNING
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isTraceEnabled
parameter_list|()
block|{
return|return
name|isLevelEnabled
argument_list|(
name|LOG_LEVEL_TRACE
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|trace
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_TRACE
argument_list|,
name|message
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"TRACE"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|DEBUG_STYLE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|trace
parameter_list|(
name|String
name|message
parameter_list|,
name|Object
name|object
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_TRACE
argument_list|,
name|message
argument_list|,
name|object
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"TRACE"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|DEBUG_STYLE
argument_list|,
name|object
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|trace
parameter_list|(
name|String
name|message
parameter_list|,
name|Object
name|object
parameter_list|,
name|Object
name|secondObject
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_TRACE
argument_list|,
name|message
argument_list|,
name|secondObject
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"TRACE"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|DEBUG_STYLE
argument_list|,
name|object
argument_list|,
name|secondObject
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|trace
parameter_list|(
name|String
name|message
parameter_list|,
name|Object
modifier|...
name|objects
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_TRACE
argument_list|,
name|message
argument_list|,
name|objects
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"TRACE"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|DEBUG_STYLE
argument_list|,
name|objects
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|trace
parameter_list|(
name|String
name|message
parameter_list|,
name|Throwable
name|throwable
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_TRACE
argument_list|,
name|message
argument_list|,
name|throwable
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"TRACE"
argument_list|,
name|message
argument_list|,
name|throwable
argument_list|,
name|LogConsole
operator|.
name|DEBUG_STYLE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isTraceEnabled
parameter_list|(
name|Marker
name|marker
parameter_list|)
block|{
return|return
name|isLevelEnabled
argument_list|(
name|LOG_LEVEL_TRACE
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|trace
parameter_list|(
name|Marker
name|marker
parameter_list|,
name|String
name|message
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_TRACE
argument_list|,
name|message
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"TRACE"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|DEBUG_STYLE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|trace
parameter_list|(
name|Marker
name|marker
parameter_list|,
name|String
name|message
parameter_list|,
name|Object
name|object
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_TRACE
argument_list|,
name|message
argument_list|,
name|object
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"TRACE"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|DEBUG_STYLE
argument_list|,
name|object
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|trace
parameter_list|(
name|Marker
name|marker
parameter_list|,
name|String
name|message
parameter_list|,
name|Object
name|object
parameter_list|,
name|Object
name|secondObject
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_TRACE
argument_list|,
name|message
argument_list|,
name|object
argument_list|,
name|secondObject
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"TRACE"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|DEBUG_STYLE
argument_list|,
name|object
argument_list|,
name|secondObject
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|trace
parameter_list|(
name|Marker
name|marker
parameter_list|,
name|String
name|message
parameter_list|,
name|Object
modifier|...
name|objects
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_TRACE
argument_list|,
name|message
argument_list|,
name|objects
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"TRACE"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|DEBUG_STYLE
argument_list|,
name|objects
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|trace
parameter_list|(
name|Marker
name|marker
parameter_list|,
name|String
name|message
parameter_list|,
name|Throwable
name|throwable
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_TRACE
argument_list|,
name|message
argument_list|,
name|throwable
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"TRACE"
argument_list|,
name|message
argument_list|,
name|throwable
argument_list|,
name|LogConsole
operator|.
name|DEBUG_STYLE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isDebugEnabled
parameter_list|()
block|{
return|return
name|isErrorEnabled
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|warn
parameter_list|(
name|String
name|message
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_WARNING
argument_list|,
name|message
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"WARN"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|WARN_STYLE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|warn
parameter_list|(
name|String
name|message
parameter_list|,
name|Object
name|object
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_WARNING
argument_list|,
name|message
argument_list|,
name|object
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"WARN"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|WARN_STYLE
argument_list|,
name|object
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|warn
parameter_list|(
name|String
name|message
parameter_list|,
name|Object
modifier|...
name|objects
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_WARNING
argument_list|,
name|message
argument_list|,
name|objects
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"WARN"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|WARN_STYLE
argument_list|,
name|objects
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|warn
parameter_list|(
name|String
name|message
parameter_list|,
name|Object
name|object
parameter_list|,
name|Object
name|secondObject
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_WARNING
argument_list|,
name|message
argument_list|,
name|secondObject
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"WARN"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|WARN_STYLE
argument_list|,
name|object
argument_list|,
name|secondObject
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|warn
parameter_list|(
name|String
name|message
parameter_list|,
name|Throwable
name|throwable
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_WARNING
argument_list|,
name|message
argument_list|,
name|throwable
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"WARN"
argument_list|,
name|message
argument_list|,
name|throwable
argument_list|,
name|LogConsole
operator|.
name|WARN_STYLE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isWarnEnabled
parameter_list|(
name|Marker
name|marker
parameter_list|)
block|{
return|return
name|isLevelEnabled
argument_list|(
name|LOG_LEVEL_WARNING
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|warn
parameter_list|(
name|Marker
name|marker
parameter_list|,
name|String
name|message
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_WARNING
argument_list|,
name|message
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"WARN"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|WARN_STYLE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|warn
parameter_list|(
name|Marker
name|marker
parameter_list|,
name|String
name|message
parameter_list|,
name|Object
name|object
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_WARNING
argument_list|,
name|message
argument_list|,
name|object
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"WARN"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|WARN_STYLE
argument_list|,
name|object
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|warn
parameter_list|(
name|Marker
name|marker
parameter_list|,
name|String
name|message
parameter_list|,
name|Object
name|object
parameter_list|,
name|Object
name|secondObject
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_WARNING
argument_list|,
name|message
argument_list|,
name|object
argument_list|,
name|secondObject
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"WARN"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|WARN_STYLE
argument_list|,
name|object
argument_list|,
name|secondObject
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|warn
parameter_list|(
name|Marker
name|marker
parameter_list|,
name|String
name|message
parameter_list|,
name|Object
modifier|...
name|objects
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_WARNING
argument_list|,
name|message
argument_list|,
name|objects
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"WARN"
argument_list|,
name|message
argument_list|,
literal|null
argument_list|,
name|LogConsole
operator|.
name|WARN_STYLE
argument_list|,
name|objects
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|warn
parameter_list|(
name|Marker
name|marker
parameter_list|,
name|String
name|message
parameter_list|,
name|Throwable
name|throwable
parameter_list|)
block|{
name|consoleLog
argument_list|(
name|LOG_LEVEL_WARNING
argument_list|,
name|message
argument_list|,
name|throwable
argument_list|)
expr_stmt|;
name|log
argument_list|(
literal|"WARN"
argument_list|,
name|message
argument_list|,
name|throwable
argument_list|,
name|LogConsole
operator|.
name|WARN_STYLE
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|isErrorEnabled
parameter_list|()
block|{
return|return
name|isLevelEnabled
argument_list|(
name|LOG_LEVEL_ERROR
argument_list|)
return|;
block|}
comment|/**      * Prints common message to the modeler console      */
specifier|private
name|void
name|log
parameter_list|(
name|String
name|level
parameter_list|,
name|String
name|message
parameter_list|,
name|Throwable
name|throwable
parameter_list|,
name|AttributeSet
name|style
parameter_list|,
name|Object
modifier|...
name|parameters
parameter_list|)
block|{
name|FormattingTuple
name|tuple
init|=
name|MessageFormatter
operator|.
name|arrayFormat
argument_list|(
name|message
argument_list|,
name|parameters
argument_list|)
decl_stmt|;
name|getLogConsole
argument_list|()
operator|.
name|appendMessage
argument_list|(
name|level
argument_list|,
name|tuple
operator|.
name|getMessage
argument_list|()
argument_list|,
name|throwable
argument_list|,
name|style
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|log
parameter_list|(
name|String
name|level
parameter_list|,
name|Object
name|message
parameter_list|,
name|Throwable
name|throwable
parameter_list|,
name|AttributeSet
name|style
parameter_list|)
block|{
name|getLogConsole
argument_list|()
operator|.
name|appendMessage
argument_list|(
name|level
argument_list|,
name|String
operator|.
name|valueOf
argument_list|(
name|message
argument_list|)
argument_list|,
name|throwable
argument_list|,
name|style
argument_list|)
expr_stmt|;
block|}
specifier|private
name|LogConsole
name|getLogConsole
parameter_list|()
block|{
return|return
name|LogConsole
operator|.
name|getInstance
argument_list|()
return|;
block|}
block|}
end_class

end_unit

