begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|Application
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|editor
operator|.
name|ObjRelationshipTableModel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|AbstractCellEditor
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JComboBox
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JLabel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTable
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|table
operator|.
name|TableCellEditor
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionListener
import|;
end_import

begin_class
specifier|public
class|class
name|JTableCollectionTypeComboBoxEditor
extends|extends
name|AbstractCellEditor
implements|implements
name|TableCellEditor
block|{
specifier|private
specifier|static
specifier|final
name|String
name|COLLECTION_TYPE_MAP
init|=
literal|"java.util.Map"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|COLLECTION_TYPE_SET
init|=
literal|"java.util.Set"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|COLLECTION_TYPE_COLLECTION
init|=
literal|"java.util.Collection"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|DEFAULT_COLLECTION_TYPE
init|=
literal|"java.util.List"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|int
name|REL_COLLECTION_TYPE_COLUMN
init|=
literal|3
decl_stmt|;
specifier|private
name|ObjRelationshipTableModel
name|model
decl_stmt|;
specifier|private
name|int
name|row
decl_stmt|;
specifier|public
name|JTableCollectionTypeComboBoxEditor
parameter_list|()
block|{
block|}
annotation|@
name|Override
specifier|public
name|Component
name|getTableCellEditorComponent
parameter_list|(
specifier|final
name|JTable
name|table
parameter_list|,
name|Object
name|value
parameter_list|,
name|boolean
name|isSelected
parameter_list|,
specifier|final
name|int
name|row
parameter_list|,
specifier|final
name|int
name|column
parameter_list|)
block|{
name|this
operator|.
name|model
operator|=
operator|(
name|ObjRelationshipTableModel
operator|)
name|table
operator|.
name|getModel
argument_list|()
expr_stmt|;
name|this
operator|.
name|row
operator|=
name|row
expr_stmt|;
specifier|final
name|JComboBox
name|collectionTypeCombo
init|=
name|Application
operator|.
name|getWidgetFactory
argument_list|()
operator|.
name|createComboBox
argument_list|(
operator|new
name|Object
index|[]
block|{
name|COLLECTION_TYPE_MAP
block|,
name|COLLECTION_TYPE_SET
block|,
name|COLLECTION_TYPE_COLLECTION
block|,
name|DEFAULT_COLLECTION_TYPE
block|}
argument_list|,
literal|false
argument_list|)
decl_stmt|;
if|if
condition|(
name|model
operator|.
name|getRelationship
argument_list|(
name|row
argument_list|)
operator|.
name|isToMany
argument_list|()
condition|)
block|{
name|collectionTypeCombo
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|collectionTypeCombo
operator|.
name|setSelectedItem
argument_list|(
name|model
operator|.
name|getRelationship
argument_list|(
name|row
argument_list|)
operator|.
name|getCollectionType
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|JLabel
name|labelIfToOneRelationship
init|=
operator|new
name|JLabel
argument_list|()
decl_stmt|;
name|labelIfToOneRelationship
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
return|return
name|labelIfToOneRelationship
return|;
block|}
name|collectionTypeCombo
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|Object
name|selected
init|=
name|collectionTypeCombo
operator|.
name|getSelectedItem
argument_list|()
decl_stmt|;
name|model
operator|.
name|setUpdatedValueAt
argument_list|(
name|selected
argument_list|,
name|row
argument_list|,
name|REL_COLLECTION_TYPE_COLUMN
argument_list|)
expr_stmt|;
name|table
operator|.
name|repaint
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
return|return
name|collectionTypeCombo
return|;
block|}
annotation|@
name|Override
specifier|public
name|Object
name|getCellEditorValue
parameter_list|()
block|{
return|return
name|model
operator|.
name|getValueAt
argument_list|(
name|row
argument_list|,
name|REL_COLLECTION_TYPE_COLUMN
argument_list|)
return|;
block|}
block|}
end_class

end_unit

