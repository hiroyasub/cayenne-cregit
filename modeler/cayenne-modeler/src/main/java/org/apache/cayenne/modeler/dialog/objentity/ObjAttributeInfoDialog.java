begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|objentity
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|DataChannelDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbRelationship
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|Embeddable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|EmbeddableAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|EmbeddedAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|Entity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|event
operator|.
name|AttributeEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|event
operator|.
name|EntityEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|event
operator|.
name|MapEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|ProjectController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|editor
operator|.
name|ObjAttributeTableModel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|event
operator|.
name|AttributeDisplayEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|event
operator|.
name|EntityDisplayEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|CayenneController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|EntityTreeAttributeRelationshipFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|EntityTreeModel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|ModelerUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|swing
operator|.
name|BindingBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|util
operator|.
name|CayenneMapEntry
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|DefaultComboBoxModel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JOptionPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTable
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|WindowConstants
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|event
operator|.
name|TreeSelectionEvent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|event
operator|.
name|TreeSelectionListener
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|table
operator|.
name|DefaultTableCellRenderer
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|table
operator|.
name|TableColumn
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|tree
operator|.
name|TreePath
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Color
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|KeyEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|KeyListener
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Objects
import|;
end_import

begin_class
specifier|public
class|class
name|ObjAttributeInfoDialog
extends|extends
name|CayenneController
implements|implements
name|TreeSelectionListener
block|{
specifier|private
name|ObjAttributeTableModel
name|model
decl_stmt|;
specifier|private
name|OverrideEmbeddableAttributeTableModel
name|embeddableModel
decl_stmt|;
specifier|private
name|int
name|row
decl_stmt|;
specifier|protected
name|ObjAttributeInfoDialogView
name|view
decl_stmt|;
specifier|protected
name|ObjAttribute
name|attribute
decl_stmt|;
specifier|protected
name|ObjAttribute
name|attributeSaved
decl_stmt|;
specifier|protected
name|List
argument_list|<
name|DbEntity
argument_list|>
name|relTargets
decl_stmt|;
specifier|protected
name|Map
argument_list|<
name|String
argument_list|,
name|Embeddable
argument_list|>
name|stringToEmbeddables
decl_stmt|;
specifier|protected
name|List
argument_list|<
name|String
argument_list|>
name|embeddableNames
decl_stmt|;
specifier|protected
name|ProjectController
name|mediator
decl_stmt|;
specifier|private
name|Object
name|lastObjectType
decl_stmt|;
specifier|public
name|ObjAttributeInfoDialog
parameter_list|(
name|ProjectController
name|mediator
parameter_list|,
name|int
name|row
parameter_list|,
name|ObjAttributeTableModel
name|model
parameter_list|)
block|{
name|super
argument_list|(
name|mediator
argument_list|)
expr_stmt|;
name|this
operator|.
name|view
operator|=
operator|new
name|ObjAttributeInfoDialogView
argument_list|(
name|mediator
argument_list|)
expr_stmt|;
name|this
operator|.
name|mediator
operator|=
name|mediator
expr_stmt|;
name|this
operator|.
name|model
operator|=
name|model
expr_stmt|;
name|this
operator|.
name|row
operator|=
name|row
expr_stmt|;
name|this
operator|.
name|stringToEmbeddables
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
name|this
operator|.
name|embeddableNames
operator|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
expr_stmt|;
for|for
control|(
name|Embeddable
name|emb
range|:
name|mediator
operator|.
name|getEmbeddablesInCurrentDataDomain
argument_list|()
control|)
block|{
name|stringToEmbeddables
operator|.
name|put
argument_list|(
name|emb
operator|.
name|getClassName
argument_list|()
argument_list|,
name|emb
argument_list|)
expr_stmt|;
name|embeddableNames
operator|.
name|add
argument_list|(
name|emb
operator|.
name|getClassName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|initController
argument_list|(
name|model
operator|.
name|getAttribute
argument_list|(
name|row
argument_list|)
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Component
name|getView
parameter_list|()
block|{
return|return
name|view
return|;
block|}
comment|/** 	 * Starts options dialog. 	 */
specifier|public
name|void
name|startupAction
parameter_list|()
block|{
name|view
operator|.
name|pack
argument_list|()
expr_stmt|;
name|view
operator|.
name|setDefaultCloseOperation
argument_list|(
name|WindowConstants
operator|.
name|DISPOSE_ON_CLOSE
argument_list|)
expr_stmt|;
name|view
operator|.
name|setModal
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|makeCloseableOnEscape
argument_list|()
expr_stmt|;
name|centerView
argument_list|()
expr_stmt|;
name|view
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|initController
parameter_list|(
name|ObjAttribute
name|attr
parameter_list|)
block|{
for|for
control|(
name|String
name|embeddableName
range|:
name|embeddableNames
control|)
block|{
operator|(
operator|(
name|DefaultComboBoxModel
operator|)
name|view
operator|.
name|getTypeComboBox
argument_list|()
operator|.
name|getModel
argument_list|()
operator|)
operator|.
name|addElement
argument_list|(
name|embeddableName
argument_list|)
expr_stmt|;
block|}
name|this
operator|.
name|attribute
operator|=
name|attr
expr_stmt|;
if|if
condition|(
name|attribute
operator|instanceof
name|EmbeddedAttribute
operator|||
name|embeddableNames
operator|.
name|contains
argument_list|(
name|attribute
operator|.
name|getType
argument_list|()
argument_list|)
condition|)
block|{
name|this
operator|.
name|attributeSaved
operator|=
operator|new
name|EmbeddedAttribute
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|this
operator|.
name|attributeSaved
operator|=
operator|new
name|ObjAttribute
argument_list|()
expr_stmt|;
block|}
name|copyObjAttribute
argument_list|(
name|attributeSaved
argument_list|,
name|attribute
argument_list|)
expr_stmt|;
name|relTargets
operator|=
operator|new
name|ArrayList
argument_list|<
name|DbEntity
argument_list|>
argument_list|(
name|attribute
operator|.
name|getEntity
argument_list|()
operator|.
name|getDataMap
argument_list|()
operator|.
name|getDbEntities
argument_list|()
argument_list|)
expr_stmt|;
comment|/* 		 * Register auto-selection of the target 		 */
name|view
operator|.
name|getPathBrowser
argument_list|()
operator|.
name|addTreeSelectionListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|view
operator|.
name|getAttributeName
argument_list|()
operator|.
name|setText
argument_list|(
name|attribute
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|attribute
operator|.
name|getDbAttributePath
argument_list|()
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|attribute
operator|.
name|getDbAttributePath
argument_list|()
operator|.
name|contains
argument_list|(
literal|"."
argument_list|)
condition|)
block|{
name|String
name|path
init|=
name|attribute
operator|.
name|getDbAttributePath
argument_list|()
decl_stmt|;
name|view
operator|.
name|getCurrentPathLabel
argument_list|()
operator|.
name|setText
argument_list|(
name|path
operator|.
name|replace
argument_list|(
literal|"."
argument_list|,
literal|" -> "
argument_list|)
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|view
operator|.
name|getCurrentPathLabel
argument_list|()
operator|.
name|setText
argument_list|(
name|attribute
operator|.
name|getDbAttributePath
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|view
operator|.
name|getCurrentPathLabel
argument_list|()
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
name|view
operator|.
name|getSourceEntityLabel
argument_list|()
operator|.
name|setText
argument_list|(
name|attribute
operator|.
name|getEntity
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|.
name|getTypeComboBox
argument_list|()
operator|.
name|setSelectedItem
argument_list|(
name|attribute
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|BindingBuilder
name|builder
init|=
operator|new
name|BindingBuilder
argument_list|(
name|getApplication
argument_list|()
operator|.
name|getBindingFactory
argument_list|()
argument_list|,
name|this
argument_list|)
decl_stmt|;
name|builder
operator|.
name|bindToAction
argument_list|(
name|view
operator|.
name|getCancelButton
argument_list|()
argument_list|,
literal|"closeAction()"
argument_list|)
expr_stmt|;
name|builder
operator|.
name|bindToAction
argument_list|(
name|view
operator|.
name|getSelectPathButton
argument_list|()
argument_list|,
literal|"setPath(true)"
argument_list|)
expr_stmt|;
name|builder
operator|.
name|bindToAction
argument_list|(
name|view
operator|.
name|getSaveButton
argument_list|()
argument_list|,
literal|"saveMapping()"
argument_list|)
expr_stmt|;
comment|/* 		 * set filter for ObjAttributePathBrowser 		 */
if|if
condition|(
name|view
operator|.
name|getPathBrowser
argument_list|()
operator|.
name|getModel
argument_list|()
operator|==
literal|null
condition|)
block|{
name|Entity
name|firstEntity
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|attribute
operator|.
name|getDbAttribute
argument_list|()
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|attribute
operator|.
name|getParent
argument_list|()
operator|instanceof
name|ObjEntity
condition|)
block|{
name|DbEntity
name|dbEnt
init|=
operator|(
operator|(
name|ObjEntity
operator|)
name|attribute
operator|.
name|getParent
argument_list|()
operator|)
operator|.
name|getDbEntity
argument_list|()
decl_stmt|;
if|if
condition|(
name|dbEnt
operator|!=
literal|null
condition|)
block|{
name|Collection
argument_list|<
name|DbAttribute
argument_list|>
name|attrib
init|=
name|dbEnt
operator|.
name|getAttributes
argument_list|()
decl_stmt|;
name|Collection
argument_list|<
name|DbRelationship
argument_list|>
name|rel
init|=
name|dbEnt
operator|.
name|getRelationships
argument_list|()
decl_stmt|;
if|if
condition|(
name|attrib
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|Iterator
argument_list|<
name|DbAttribute
argument_list|>
name|iter
init|=
name|attrib
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|firstEntity
operator|=
name|iter
operator|.
name|next
argument_list|()
operator|.
name|getEntity
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
name|rel
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
name|Iterator
argument_list|<
name|DbRelationship
argument_list|>
name|iter
init|=
name|rel
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|firstEntity
operator|=
name|iter
operator|.
name|next
argument_list|()
operator|.
name|getSourceEntity
argument_list|()
expr_stmt|;
block|}
block|}
block|}
block|}
else|else
block|{
name|firstEntity
operator|=
name|getFirstEntity
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|firstEntity
operator|!=
literal|null
condition|)
block|{
name|EntityTreeModel
name|treeModel
init|=
operator|new
name|EntityTreeModel
argument_list|(
name|firstEntity
argument_list|)
decl_stmt|;
name|treeModel
operator|.
name|setFilter
argument_list|(
operator|new
name|EntityTreeAttributeRelationshipFilter
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|.
name|getPathBrowser
argument_list|()
operator|.
name|setModel
argument_list|(
name|treeModel
argument_list|)
expr_stmt|;
block|}
block|}
if|if
condition|(
name|attribute
operator|.
name|getDbAttribute
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|setSelectionPath
argument_list|()
expr_stmt|;
block|}
name|view
operator|.
name|getTypeComboBox
argument_list|()
operator|.
name|addItemListener
argument_list|(
name|e
lambda|->
block|{
if|if
condition|(
name|lastObjectType
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
operator|!
name|lastObjectType
operator|.
name|equals
argument_list|(
name|e
operator|.
name|getItemSelectable
argument_list|()
argument_list|)
condition|)
block|{
if|if
condition|(
name|embeddableNames
operator|.
name|contains
argument_list|(
name|e
operator|.
name|getItemSelectable
argument_list|()
operator|.
name|getSelectedObjects
argument_list|()
index|[
literal|0
index|]
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
if|if
condition|(
name|attributeSaved
operator|instanceof
name|ObjAttribute
condition|)
block|{
name|EmbeddedAttribute
name|copyAttrSaved
init|=
operator|new
name|EmbeddedAttribute
argument_list|()
decl_stmt|;
name|copyObjAttribute
argument_list|(
name|copyAttrSaved
argument_list|,
name|attributeSaved
argument_list|)
expr_stmt|;
name|attributeSaved
operator|=
name|copyAttrSaved
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
name|attributeSaved
operator|instanceof
name|EmbeddedAttribute
condition|)
block|{
name|ObjAttribute
name|copyAttrSaved
init|=
operator|new
name|ObjAttribute
argument_list|()
decl_stmt|;
name|copyObjAttribute
argument_list|(
name|copyAttrSaved
argument_list|,
name|attributeSaved
argument_list|)
expr_stmt|;
name|attributeSaved
operator|=
name|copyAttrSaved
expr_stmt|;
block|}
block|}
name|attributeSaved
operator|.
name|setType
argument_list|(
name|e
operator|.
name|getItemSelectable
argument_list|()
operator|.
name|getSelectedObjects
argument_list|()
index|[
literal|0
index|]
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
name|rebuildTable
argument_list|()
expr_stmt|;
name|setEnabledSaveButton
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|view
operator|.
name|getAttributeName
argument_list|()
operator|.
name|addKeyListener
argument_list|(
operator|new
name|KeyListener
argument_list|()
block|{
specifier|public
name|void
name|keyPressed
parameter_list|(
name|KeyEvent
name|e
parameter_list|)
block|{
if|if
condition|(
operator|!
name|view
operator|.
name|getAttributeName
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|equals
argument_list|(
name|attribute
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|setEnabledSaveButton
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|keyReleased
parameter_list|(
name|KeyEvent
name|e
parameter_list|)
block|{
if|if
condition|(
operator|!
name|view
operator|.
name|getAttributeName
argument_list|()
operator|.
name|getText
argument_list|()
operator|.
name|equals
argument_list|(
name|attribute
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|setEnabledSaveButton
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|keyTyped
parameter_list|(
name|KeyEvent
name|e
parameter_list|)
block|{
block|}
block|}
argument_list|)
expr_stmt|;
name|rebuildTable
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|setEnabledSaveButton
parameter_list|()
block|{
if|if
condition|(
operator|!
name|attribute
operator|.
name|getDbPathIterator
argument_list|()
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|view
operator|.
name|getSaveButton
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|boolean
name|isAttributeLast
init|=
literal|false
decl_stmt|;
name|Iterator
argument_list|<
name|CayenneMapEntry
argument_list|>
name|it
init|=
name|attribute
operator|.
name|getDbPathIterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|it
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Object
name|obj
init|=
name|it
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|obj
operator|instanceof
name|DbAttribute
operator|&&
operator|!
name|it
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|isAttributeLast
operator|=
literal|true
expr_stmt|;
block|}
block|}
name|view
operator|.
name|getSaveButton
argument_list|()
operator|.
name|setEnabled
argument_list|(
name|isAttributeLast
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|setUpTableStructure
parameter_list|()
block|{
name|DefaultTableCellRenderer
name|renderer
init|=
operator|new
name|CellRenderer
argument_list|()
decl_stmt|;
name|TableColumn
name|nameColumn
init|=
name|view
operator|.
name|getOverrideAttributeTable
argument_list|()
operator|.
name|getColumnModel
argument_list|()
operator|.
name|getColumn
argument_list|(
name|OverrideEmbeddableAttributeTableModel
operator|.
name|OBJ_ATTRIBUTE
argument_list|)
decl_stmt|;
name|nameColumn
operator|.
name|setCellRenderer
argument_list|(
name|renderer
argument_list|)
expr_stmt|;
name|TableColumn
name|typeColumn
init|=
name|view
operator|.
name|getOverrideAttributeTable
argument_list|()
operator|.
name|getColumnModel
argument_list|()
operator|.
name|getColumn
argument_list|(
name|OverrideEmbeddableAttributeTableModel
operator|.
name|OBJ_ATTRIBUTE_TYPE
argument_list|)
decl_stmt|;
name|typeColumn
operator|.
name|setCellRenderer
argument_list|(
name|renderer
argument_list|)
expr_stmt|;
name|TableColumn
name|dbAttrColumn
init|=
name|view
operator|.
name|getOverrideAttributeTable
argument_list|()
operator|.
name|getColumnModel
argument_list|()
operator|.
name|getColumn
argument_list|(
name|OverrideEmbeddableAttributeTableModel
operator|.
name|DB_ATTRIBUTE
argument_list|)
decl_stmt|;
name|dbAttrColumn
operator|.
name|setCellRenderer
argument_list|(
name|renderer
argument_list|)
expr_stmt|;
name|TableColumn
name|dbAttrTypeColumn
init|=
name|view
operator|.
name|getOverrideAttributeTable
argument_list|()
operator|.
name|getColumnModel
argument_list|()
operator|.
name|getColumn
argument_list|(
name|OverrideEmbeddableAttributeTableModel
operator|.
name|DB_ATTRIBUTE_TYPE
argument_list|)
decl_stmt|;
name|dbAttrTypeColumn
operator|.
name|setCellRenderer
argument_list|(
name|renderer
argument_list|)
expr_stmt|;
name|view
operator|.
name|getTablePreferences
argument_list|()
operator|.
name|bind
argument_list|(
name|view
operator|.
name|getOverrideAttributeTable
argument_list|()
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
literal|null
argument_list|,
name|OverrideEmbeddableAttributeTableModel
operator|.
name|OBJ_ATTRIBUTE
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|initComboBoxes
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|initComboBoxes
parameter_list|()
block|{
name|Collection
argument_list|<
name|String
argument_list|>
name|nameAttr
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|attributeSaved
operator|!=
literal|null
condition|)
block|{
name|DbEntity
name|currentEnt
init|=
operator|(
operator|(
name|ObjEntity
operator|)
name|attributeSaved
operator|.
name|getEntity
argument_list|()
operator|)
operator|.
name|getDbEntity
argument_list|()
decl_stmt|;
if|if
condition|(
name|currentEnt
operator|!=
literal|null
condition|)
block|{
name|nameAttr
operator|=
name|ModelerUtil
operator|.
name|getDbAttributeNames
argument_list|(
name|mediator
argument_list|,
name|currentEnt
argument_list|)
expr_stmt|;
name|embeddableModel
operator|.
name|setCellEditor
argument_list|(
name|nameAttr
argument_list|,
name|view
operator|.
name|getOverrideAttributeTable
argument_list|()
argument_list|)
expr_stmt|;
name|embeddableModel
operator|.
name|setComboBoxes
argument_list|(
name|nameAttr
argument_list|,
name|view
operator|.
name|getOverrideAttributeTable
argument_list|()
operator|.
name|convertColumnIndexToView
argument_list|(
name|OverrideEmbeddableAttributeTableModel
operator|.
name|DB_ATTRIBUTE
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|rebuildTable
parameter_list|()
block|{
name|String
name|typeName
init|=
literal|null
decl_stmt|;
name|Collection
argument_list|<
name|EmbeddableAttribute
argument_list|>
name|embAttrTempCopy
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
if|if
condition|(
name|attributeSaved
operator|.
name|getType
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|typeName
operator|=
name|attributeSaved
operator|.
name|getType
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|embeddableNames
operator|.
name|contains
argument_list|(
name|typeName
argument_list|)
condition|)
block|{
name|Collection
argument_list|<
name|EmbeddableAttribute
argument_list|>
name|embAttrTemp
init|=
name|stringToEmbeddables
operator|.
name|get
argument_list|(
name|typeName
argument_list|)
operator|.
name|getAttributes
argument_list|()
decl_stmt|;
for|for
control|(
name|EmbeddableAttribute
name|temp
range|:
name|embAttrTemp
control|)
block|{
name|EmbeddableAttribute
name|at
init|=
operator|new
name|EmbeddableAttribute
argument_list|()
decl_stmt|;
name|at
operator|.
name|setDbAttributeName
argument_list|(
name|temp
operator|.
name|getDbAttributeName
argument_list|()
argument_list|)
expr_stmt|;
name|at
operator|.
name|setName
argument_list|(
name|temp
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|at
operator|.
name|setType
argument_list|(
name|temp
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|at
operator|.
name|setEmbeddable
argument_list|(
name|temp
operator|.
name|getEmbeddable
argument_list|()
argument_list|)
expr_stmt|;
name|embAttrTempCopy
operator|.
name|add
argument_list|(
name|at
argument_list|)
expr_stmt|;
block|}
block|}
name|embeddableModel
operator|=
operator|new
name|OverrideEmbeddableAttributeTableModel
argument_list|(
name|mediator
argument_list|,
name|this
argument_list|,
name|embAttrTempCopy
argument_list|,
name|attributeSaved
argument_list|)
expr_stmt|;
name|view
operator|.
name|getOverrideAttributeTable
argument_list|()
operator|.
name|setModel
argument_list|(
name|embeddableModel
argument_list|)
expr_stmt|;
name|view
operator|.
name|getOverrideAttributeTable
argument_list|()
operator|.
name|setRowHeight
argument_list|(
literal|25
argument_list|)
expr_stmt|;
name|view
operator|.
name|getOverrideAttributeTable
argument_list|()
operator|.
name|setRowMargin
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|setUpTableStructure
argument_list|()
expr_stmt|;
if|if
condition|(
name|view
operator|.
name|getTypeComboBox
argument_list|()
operator|.
name|getSelectedItem
argument_list|()
operator|==
literal|null
condition|)
block|{
name|lastObjectType
operator|=
literal|""
expr_stmt|;
block|}
else|else
block|{
name|lastObjectType
operator|=
name|view
operator|.
name|getTypeComboBox
argument_list|()
operator|.
name|getSelectedItem
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|closeAction
parameter_list|()
block|{
name|view
operator|.
name|dispose
argument_list|()
expr_stmt|;
block|}
specifier|public
name|boolean
name|setPath
parameter_list|(
name|boolean
name|isChange
parameter_list|)
block|{
if|if
condition|(
name|isChange
argument_list|()
condition|)
block|{
if|if
condition|(
name|view
operator|.
name|getTypeComboBox
argument_list|()
operator|.
name|getSelectedItem
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|attributeSaved
operator|.
name|setType
argument_list|(
name|view
operator|.
name|getTypeComboBox
argument_list|()
operator|.
name|getSelectedItem
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|attributeSaved
operator|.
name|setName
argument_list|(
name|view
operator|.
name|getAttributeName
argument_list|()
operator|.
name|getText
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
operator|!
operator|(
name|attributeSaved
operator|instanceof
name|EmbeddedAttribute
operator|)
operator|||
name|isRegistredType
argument_list|(
name|attributeSaved
operator|.
name|getType
argument_list|()
argument_list|)
condition|)
block|{
name|StringBuilder
name|attributePath
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|StringBuilder
name|pathStr
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|TreePath
name|path
init|=
name|view
operator|.
name|getPathBrowser
argument_list|()
operator|.
name|getSelectionPath
argument_list|()
decl_stmt|;
if|if
condition|(
name|attribute
operator|.
name|getEntity
argument_list|()
operator|.
name|getDbEntity
argument_list|()
operator|!=
literal|null
operator|&&
name|path
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|path
operator|.
name|getLastPathComponent
argument_list|()
operator|instanceof
name|DbAttribute
condition|)
block|{
name|Object
index|[]
name|pathComponents
init|=
name|path
operator|.
name|getPath
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|pathComponents
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|boolean
name|attrOrRel
init|=
literal|true
decl_stmt|;
if|if
condition|(
name|pathComponents
index|[
name|i
index|]
operator|instanceof
name|DbAttribute
condition|)
block|{
name|pathStr
operator|.
name|append
argument_list|(
operator|(
operator|(
name|DbAttribute
operator|)
name|pathComponents
index|[
name|i
index|]
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|attributePath
operator|.
name|append
argument_list|(
operator|(
operator|(
name|DbAttribute
operator|)
name|pathComponents
index|[
name|i
index|]
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|pathComponents
index|[
name|i
index|]
operator|instanceof
name|DbRelationship
condition|)
block|{
name|pathStr
operator|.
name|append
argument_list|(
operator|(
operator|(
name|DbRelationship
operator|)
name|pathComponents
index|[
name|i
index|]
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|attributePath
operator|.
name|append
argument_list|(
operator|(
operator|(
name|DbRelationship
operator|)
name|pathComponents
index|[
name|i
index|]
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|attrOrRel
operator|=
literal|false
expr_stmt|;
block|}
if|if
condition|(
name|i
operator|!=
name|pathComponents
operator|.
name|length
operator|-
literal|1
operator|&&
name|attrOrRel
condition|)
block|{
name|pathStr
operator|.
name|append
argument_list|(
literal|" -> "
argument_list|)
expr_stmt|;
name|attributePath
operator|.
name|append
argument_list|(
literal|"."
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
else|else
block|{
name|view
operator|.
name|getCurrentPathLabel
argument_list|()
operator|.
name|setText
argument_list|(
literal|""
argument_list|)
expr_stmt|;
block|}
name|view
operator|.
name|getCurrentPathLabel
argument_list|()
operator|.
name|setText
argument_list|(
name|pathStr
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|attribute
operator|.
name|getDbAttributePath
argument_list|()
operator|!=
literal|null
operator|&&
operator|(
operator|(
name|view
operator|.
name|getTypeComboBox
argument_list|()
operator|.
name|getSelectedItem
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|embeddableNames
operator|.
name|contains
argument_list|(
name|view
operator|.
name|getTypeComboBox
argument_list|()
operator|.
name|getSelectedItem
argument_list|()
operator|.
name|toString
argument_list|()
argument_list|)
operator|)
operator|||
name|view
operator|.
name|getTypeComboBox
argument_list|()
operator|.
name|getSelectedItem
argument_list|()
operator|==
literal|null
operator|)
condition|)
block|{
if|if
condition|(
operator|!
name|attribute
operator|.
name|getDbAttributePath
argument_list|()
operator|.
name|equals
argument_list|(
name|attributePath
operator|.
name|toString
argument_list|()
argument_list|)
condition|)
block|{
name|attributeSaved
operator|.
name|setDbAttributePath
argument_list|(
name|attributePath
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|attribute
operator|.
name|getDbAttributePath
argument_list|()
operator|.
name|equals
argument_list|(
name|attributePath
operator|.
name|toString
argument_list|()
argument_list|)
operator|&&
name|isChange
condition|)
block|{
name|model
operator|.
name|setUpdatedValueAt
argument_list|(
name|attributeSaved
operator|.
name|getDbAttributePath
argument_list|()
argument_list|,
name|row
argument_list|,
literal|3
argument_list|)
expr_stmt|;
block|}
return|return
literal|true
return|;
block|}
block|}
else|else
block|{
if|if
condition|(
name|attributePath
operator|.
name|length
argument_list|()
operator|>
literal|0
operator|||
operator|(
name|attribute
operator|instanceof
name|EmbeddedAttribute
operator|&&
operator|!
operator|(
name|attributeSaved
operator|instanceof
name|EmbeddedAttribute
operator|)
operator|)
condition|)
block|{
name|attributeSaved
operator|.
name|setDbAttributePath
argument_list|(
name|attributePath
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|attributePath
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
name|model
operator|.
name|setUpdatedValueAt
argument_list|(
name|attributeSaved
operator|.
name|getDbAttributePath
argument_list|()
argument_list|,
name|row
argument_list|,
literal|3
argument_list|)
expr_stmt|;
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
block|}
block|}
return|return
literal|false
return|;
block|}
specifier|public
name|boolean
name|isChange
parameter_list|()
block|{
name|boolean
name|isOverrideTableChange
init|=
operator|(
operator|(
name|OverrideEmbeddableAttributeTableModel
operator|)
name|view
operator|.
name|getOverrideAttributeTable
argument_list|()
operator|.
name|getModel
argument_list|()
operator|)
operator|.
name|isAttributeOverrideChange
argument_list|()
decl_stmt|;
return|return
name|isOverrideTableChange
operator|||
operator|!
name|attribute
operator|.
name|getName
argument_list|()
operator|.
name|equals
argument_list|(
name|view
operator|.
name|getAttributeName
argument_list|()
operator|.
name|getText
argument_list|()
argument_list|)
operator|||
operator|(
name|attribute
operator|.
name|getType
argument_list|()
operator|==
literal|null
operator|&&
name|view
operator|.
name|getTypeComboBox
argument_list|()
operator|.
name|getSelectedItem
argument_list|()
operator|!=
literal|null
operator|)
operator|||
operator|!
name|Objects
operator|.
name|equals
argument_list|(
name|attribute
operator|.
name|getType
argument_list|()
argument_list|,
name|view
operator|.
name|getTypeComboBox
argument_list|()
operator|.
name|getSelectedItem
argument_list|()
argument_list|)
return|;
block|}
specifier|public
name|void
name|saveMapping
parameter_list|()
block|{
if|if
condition|(
name|setPath
argument_list|(
literal|false
argument_list|)
condition|)
block|{
if|if
condition|(
name|JOptionPane
operator|.
name|showConfirmDialog
argument_list|(
name|getView
argument_list|()
argument_list|,
literal|"You have changed Db Attribute path. Do you want it to be saved?"
argument_list|,
literal|"Save ObjAttribute"
argument_list|,
name|JOptionPane
operator|.
name|YES_NO_OPTION
argument_list|)
operator|==
name|JOptionPane
operator|.
name|YES_OPTION
condition|)
block|{
if|if
condition|(
name|attribute
operator|instanceof
name|EmbeddedAttribute
condition|)
block|{
name|changeAttributeObject
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|model
operator|.
name|setUpdatedValueAt
argument_list|(
name|attributeSaved
operator|.
name|getName
argument_list|()
argument_list|,
name|row
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|model
operator|.
name|setUpdatedValueAt
argument_list|(
name|attributeSaved
operator|.
name|getType
argument_list|()
argument_list|,
name|row
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
name|model
operator|.
name|setUpdatedValueAt
argument_list|(
name|attributeSaved
operator|.
name|getDbAttributePath
argument_list|()
argument_list|,
name|row
argument_list|,
literal|3
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|model
operator|.
name|setUpdatedValueAt
argument_list|(
name|attributeSaved
operator|.
name|getName
argument_list|()
argument_list|,
name|row
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|model
operator|.
name|setUpdatedValueAt
argument_list|(
name|attributeSaved
operator|.
name|getType
argument_list|()
argument_list|,
name|row
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
if|if
condition|(
operator|(
name|attributeSaved
operator|instanceof
name|EmbeddedAttribute
operator|&&
operator|!
operator|(
name|attribute
operator|instanceof
name|EmbeddedAttribute
operator|)
operator|)
operator|||
operator|(
operator|!
operator|(
name|attributeSaved
operator|instanceof
name|EmbeddedAttribute
operator|)
operator|&&
name|attribute
operator|instanceof
name|EmbeddedAttribute
operator|)
condition|)
block|{
name|changeAttributeObject
argument_list|()
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|attributeSaved
operator|instanceof
name|EmbeddedAttribute
operator|&&
name|embeddableModel
operator|.
name|isAttributeOverrideChange
argument_list|()
condition|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|overrides
init|=
operator|(
operator|(
name|EmbeddedAttribute
operator|)
name|attributeSaved
operator|)
operator|.
name|getAttributeOverrides
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|currentOverrAttr
init|=
name|getCurrentOverrideAttribute
argument_list|()
decl_stmt|;
name|compareAndSetOverrideInEmbeddedAttribute
argument_list|(
name|attributeSaved
argument_list|,
name|overrides
argument_list|,
name|currentOverrAttr
argument_list|)
expr_stmt|;
block|}
name|model
operator|.
name|setUpdatedValueAt
argument_list|(
name|attributeSaved
operator|.
name|getName
argument_list|()
argument_list|,
name|row
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|model
operator|.
name|setUpdatedValueAt
argument_list|(
name|attributeSaved
operator|.
name|getType
argument_list|()
argument_list|,
name|row
argument_list|,
literal|2
argument_list|)
expr_stmt|;
name|model
operator|.
name|setUpdatedValueAt
argument_list|(
name|attributeSaved
operator|.
name|getDbAttributePath
argument_list|()
argument_list|,
name|row
argument_list|,
literal|3
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|attributeSaved
operator|instanceof
name|EmbeddedAttribute
operator|&&
name|attribute
operator|instanceof
name|EmbeddedAttribute
condition|)
block|{
name|model
operator|.
name|setUpdatedValueAt
argument_list|(
name|attributeSaved
operator|.
name|getDbAttributePath
argument_list|()
argument_list|,
name|row
argument_list|,
literal|3
argument_list|)
expr_stmt|;
if|if
condition|(
name|embeddableModel
operator|.
name|isAttributeOverrideChange
argument_list|()
condition|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|overrides
decl_stmt|;
name|overrides
operator|=
operator|(
operator|(
name|EmbeddedAttribute
operator|)
name|attribute
operator|)
operator|.
name|getAttributeOverrides
argument_list|()
expr_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|currentOverrAttr
init|=
operator|(
operator|(
name|EmbeddedAttribute
operator|)
name|attributeSaved
operator|)
operator|.
name|getAttributeOverrides
argument_list|()
decl_stmt|;
name|compareAndSetOverrideInEmbeddedAttribute
argument_list|(
name|attribute
argument_list|,
name|overrides
argument_list|,
name|currentOverrAttr
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|closeAction
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|changeAttributeObject
parameter_list|()
block|{
if|if
condition|(
name|attributeSaved
operator|instanceof
name|EmbeddedAttribute
operator|&&
name|embeddableModel
operator|.
name|isAttributeOverrideChange
argument_list|()
condition|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|overrides
init|=
operator|(
operator|(
name|EmbeddedAttribute
operator|)
name|attributeSaved
operator|)
operator|.
name|getAttributeOverrides
argument_list|()
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|currentOverrAttr
init|=
name|getCurrentOverrideAttribute
argument_list|()
decl_stmt|;
name|compareAndSetOverrideInEmbeddedAttribute
argument_list|(
name|attributeSaved
argument_list|,
name|overrides
argument_list|,
name|currentOverrAttr
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|attributeSaved
operator|instanceof
name|EmbeddedAttribute
condition|)
block|{
name|attributeSaved
operator|.
name|setDbAttributePath
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|model
operator|.
name|setUpdatedValueAt
argument_list|(
name|attributeSaved
operator|.
name|getDbAttributePath
argument_list|()
argument_list|,
name|row
argument_list|,
literal|3
argument_list|)
expr_stmt|;
block|}
name|model
operator|.
name|getEntity
argument_list|()
operator|.
name|removeAttribute
argument_list|(
name|attribute
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|model
operator|.
name|getEntity
argument_list|()
operator|.
name|addAttribute
argument_list|(
name|attributeSaved
argument_list|)
expr_stmt|;
name|mediator
operator|.
name|fireObjEntityEvent
argument_list|(
operator|new
name|EntityEvent
argument_list|(
name|this
argument_list|,
name|model
operator|.
name|getEntity
argument_list|()
argument_list|,
name|MapEvent
operator|.
name|CHANGE
argument_list|)
argument_list|)
expr_stmt|;
name|EntityDisplayEvent
name|event
init|=
operator|new
name|EntityDisplayEvent
argument_list|(
name|this
argument_list|,
name|mediator
operator|.
name|getCurrentObjEntity
argument_list|()
argument_list|,
name|mediator
operator|.
name|getCurrentDataMap
argument_list|()
argument_list|,
operator|(
name|DataChannelDescriptor
operator|)
name|mediator
operator|.
name|getProject
argument_list|()
operator|.
name|getRootNode
argument_list|()
argument_list|)
decl_stmt|;
name|mediator
operator|.
name|fireObjEntityDisplayEvent
argument_list|(
name|event
argument_list|)
expr_stmt|;
name|mediator
operator|.
name|fireObjAttributeEvent
argument_list|(
operator|new
name|AttributeEvent
argument_list|(
name|this
argument_list|,
name|attributeSaved
argument_list|,
name|model
operator|.
name|getEntity
argument_list|()
argument_list|,
name|MapEvent
operator|.
name|CHANGE
argument_list|)
argument_list|)
expr_stmt|;
name|AttributeDisplayEvent
name|eventAttr
init|=
operator|new
name|AttributeDisplayEvent
argument_list|(
name|this
argument_list|,
name|attributeSaved
argument_list|,
name|mediator
operator|.
name|getCurrentObjEntity
argument_list|()
argument_list|,
name|mediator
operator|.
name|getCurrentDataMap
argument_list|()
argument_list|,
operator|(
name|DataChannelDescriptor
operator|)
name|mediator
operator|.
name|getProject
argument_list|()
operator|.
name|getRootNode
argument_list|()
argument_list|)
decl_stmt|;
name|mediator
operator|.
name|fireObjAttributeDisplayEvent
argument_list|(
name|eventAttr
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|getCurrentOverrideAttribute
parameter_list|()
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|currentEmbeddableOverrite
init|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
decl_stmt|;
name|Collection
argument_list|<
name|EmbeddableAttribute
argument_list|>
name|embList
init|=
name|embeddableModel
operator|.
name|getEmbeddableList
argument_list|()
decl_stmt|;
name|Embeddable
name|emb
init|=
name|stringToEmbeddables
operator|.
name|get
argument_list|(
name|attributeSaved
operator|.
name|getType
argument_list|()
argument_list|)
decl_stmt|;
for|for
control|(
name|EmbeddableAttribute
name|e
range|:
name|embList
control|)
block|{
if|if
condition|(
operator|(
name|emb
operator|.
name|getAttribute
argument_list|(
name|e
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|getDbAttributeName
argument_list|()
operator|==
literal|null
operator|&&
name|e
operator|.
name|getDbAttributeName
argument_list|()
operator|!=
literal|null
operator|)
operator|||
operator|(
name|emb
operator|.
name|getAttribute
argument_list|(
name|e
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|getDbAttributeName
argument_list|()
operator|!=
literal|null
operator|&&
operator|!
name|emb
operator|.
name|getAttribute
argument_list|(
name|e
operator|.
name|getName
argument_list|()
argument_list|)
operator|.
name|getDbAttributeName
argument_list|()
operator|.
name|equals
argument_list|(
name|e
operator|.
name|getDbAttributeName
argument_list|()
argument_list|)
operator|)
condition|)
block|{
name|currentEmbeddableOverrite
operator|.
name|put
argument_list|(
name|e
operator|.
name|getName
argument_list|()
argument_list|,
name|e
operator|.
name|getDbAttributeName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|currentEmbeddableOverrite
return|;
block|}
specifier|public
name|void
name|valueChanged
parameter_list|(
name|TreeSelectionEvent
name|e
parameter_list|)
block|{
block|}
specifier|private
name|Entity
name|getFirstEntity
parameter_list|()
block|{
name|Iterator
argument_list|<
name|CayenneMapEntry
argument_list|>
name|it
init|=
name|attribute
operator|.
name|getDbPathIterator
argument_list|()
decl_stmt|;
name|Entity
name|firstEnt
init|=
name|attribute
operator|.
name|getDbAttribute
argument_list|()
operator|.
name|getEntity
argument_list|()
decl_stmt|;
name|boolean
name|setEnt
init|=
literal|false
decl_stmt|;
while|while
condition|(
name|it
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Object
name|ob
init|=
name|it
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|ob
operator|instanceof
name|DbRelationship
condition|)
block|{
if|if
condition|(
operator|!
name|setEnt
condition|)
block|{
name|firstEnt
operator|=
operator|(
operator|(
name|DbRelationship
operator|)
name|ob
operator|)
operator|.
name|getSourceEntity
argument_list|()
expr_stmt|;
name|setEnt
operator|=
literal|true
expr_stmt|;
block|}
block|}
if|else if
condition|(
name|ob
operator|instanceof
name|DbAttribute
condition|)
block|{
if|if
condition|(
operator|!
name|setEnt
condition|)
block|{
name|firstEnt
operator|=
operator|(
operator|(
name|DbAttribute
operator|)
name|ob
operator|)
operator|.
name|getEntity
argument_list|()
expr_stmt|;
block|}
block|}
block|}
return|return
name|firstEnt
return|;
block|}
comment|/** 	 * Selects path in browser 	 */
specifier|public
name|void
name|setSelectionPath
parameter_list|()
block|{
name|List
argument_list|<
name|CayenneMapEntry
argument_list|>
name|list
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|boolean
name|isAttributeLast
init|=
literal|false
decl_stmt|;
name|Iterator
argument_list|<
name|CayenneMapEntry
argument_list|>
name|it
init|=
name|attribute
operator|.
name|getDbPathIterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|it
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|CayenneMapEntry
name|obj
init|=
name|it
operator|.
name|next
argument_list|()
decl_stmt|;
name|list
operator|.
name|add
argument_list|(
name|obj
argument_list|)
expr_stmt|;
if|if
condition|(
name|obj
operator|instanceof
name|DbAttribute
operator|&&
operator|!
name|it
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|isAttributeLast
operator|=
literal|true
expr_stmt|;
block|}
block|}
if|if
condition|(
name|isAttributeLast
condition|)
block|{
name|Object
index|[]
name|path
init|=
operator|new
name|Object
index|[
name|list
operator|.
name|size
argument_list|()
operator|+
literal|1
index|]
decl_stmt|;
name|path
index|[
literal|0
index|]
operator|=
name|getFirstEntity
argument_list|()
expr_stmt|;
name|System
operator|.
name|arraycopy
argument_list|(
name|list
operator|.
name|toArray
argument_list|()
argument_list|,
literal|0
argument_list|,
name|path
argument_list|,
literal|1
argument_list|,
name|list
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|view
operator|.
name|getPathBrowser
argument_list|()
operator|.
name|setSelectionPath
argument_list|(
operator|new
name|TreePath
argument_list|(
name|path
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|getSaveButton
argument_list|()
operator|.
name|setEnabled
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|boolean
name|isRegistredType
parameter_list|(
name|String
name|typeName
parameter_list|)
block|{
name|boolean
name|isType
init|=
literal|false
decl_stmt|;
name|String
index|[]
name|typeNames
init|=
name|ModelerUtil
operator|.
name|getRegisteredTypeNames
argument_list|()
decl_stmt|;
for|for
control|(
name|String
name|nextTypeName
range|:
name|typeNames
control|)
block|{
if|if
condition|(
name|nextTypeName
operator|.
name|equals
argument_list|(
name|typeName
argument_list|)
condition|)
block|{
name|isType
operator|=
literal|true
expr_stmt|;
block|}
block|}
return|return
name|isType
return|;
block|}
comment|// custom renderer used for inherited attributes highlighting
specifier|final
class|class
name|CellRenderer
extends|extends
name|DefaultTableCellRenderer
block|{
annotation|@
name|Override
specifier|public
name|Component
name|getTableCellRendererComponent
parameter_list|(
name|JTable
name|table
parameter_list|,
name|Object
name|value
parameter_list|,
name|boolean
name|isSelected
parameter_list|,
name|boolean
name|hasFocus
parameter_list|,
name|int
name|row
parameter_list|,
name|int
name|column
parameter_list|)
block|{
name|super
operator|.
name|getTableCellRendererComponent
argument_list|(
name|table
argument_list|,
name|value
argument_list|,
name|isSelected
argument_list|,
name|hasFocus
argument_list|,
name|row
argument_list|,
name|column
argument_list|)
expr_stmt|;
name|OverrideEmbeddableAttributeTableModel
name|model
init|=
operator|(
name|OverrideEmbeddableAttributeTableModel
operator|)
name|table
operator|.
name|getModel
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|model
operator|.
name|isCellEditable
argument_list|(
name|row
argument_list|,
name|column
argument_list|)
condition|)
block|{
name|setForeground
argument_list|(
name|Color
operator|.
name|GRAY
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|setForeground
argument_list|(
name|isSelected
operator|&&
operator|!
name|hasFocus
condition|?
name|table
operator|.
name|getSelectionForeground
argument_list|()
else|:
name|table
operator|.
name|getForeground
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|setBackground
argument_list|(
name|isSelected
operator|&&
operator|!
name|hasFocus
condition|?
name|table
operator|.
name|getSelectionBackground
argument_list|()
else|:
name|table
operator|.
name|getBackground
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
block|}
specifier|private
name|void
name|copyObjAttribute
parameter_list|(
name|ObjAttribute
name|attributeSaved
parameter_list|,
name|ObjAttribute
name|attribute
parameter_list|)
block|{
name|attributeSaved
operator|.
name|setDbAttributePath
argument_list|(
name|attribute
operator|.
name|getDbAttributePath
argument_list|()
argument_list|)
expr_stmt|;
name|attributeSaved
operator|.
name|setName
argument_list|(
name|attribute
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|attributeSaved
operator|.
name|setEntity
argument_list|(
name|attribute
operator|.
name|getEntity
argument_list|()
argument_list|)
expr_stmt|;
name|attributeSaved
operator|.
name|setParent
argument_list|(
name|attribute
operator|.
name|getParent
argument_list|()
argument_list|)
expr_stmt|;
name|attributeSaved
operator|.
name|setType
argument_list|(
name|attribute
operator|.
name|getType
argument_list|()
argument_list|)
expr_stmt|;
name|attributeSaved
operator|.
name|setUsedForLocking
argument_list|(
name|attribute
operator|.
name|isUsedForLocking
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
name|attributeSaved
operator|instanceof
name|EmbeddedAttribute
condition|)
block|{
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|attrOverrides
decl_stmt|;
if|if
condition|(
name|attribute
operator|instanceof
name|EmbeddedAttribute
condition|)
block|{
name|attrOverrides
operator|=
operator|(
operator|(
name|EmbeddedAttribute
operator|)
name|attribute
operator|)
operator|.
name|getAttributeOverrides
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|attrOverrides
operator|=
operator|new
name|HashMap
argument_list|<>
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|attrOverrides
operator|.
name|size
argument_list|()
operator|>
literal|0
condition|)
block|{
for|for
control|(
name|Map
operator|.
name|Entry
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|attrOv
range|:
name|attrOverrides
operator|.
name|entrySet
argument_list|()
control|)
block|{
operator|(
operator|(
name|EmbeddedAttribute
operator|)
name|attributeSaved
operator|)
operator|.
name|addAttributeOverride
argument_list|(
name|attrOv
operator|.
name|getKey
argument_list|()
argument_list|,
name|attrOv
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
specifier|private
name|void
name|compareAndSetOverrideInEmbeddedAttribute
parameter_list|(
name|ObjAttribute
name|attribute
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|overrides
parameter_list|,
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|currentOverrAttr
parameter_list|)
block|{
name|ArrayList
argument_list|<
name|String
argument_list|>
name|keysForDelete
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|ArrayList
argument_list|<
name|String
argument_list|>
name|keysForAdd
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
for|for
control|(
name|Object
name|o
range|:
name|overrides
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|Map
operator|.
name|Entry
name|obj
init|=
operator|(
name|Map
operator|.
name|Entry
operator|)
name|o
decl_stmt|;
name|String
name|key
init|=
operator|(
name|String
operator|)
name|obj
operator|.
name|getKey
argument_list|()
decl_stmt|;
if|if
condition|(
name|currentOverrAttr
operator|.
name|get
argument_list|(
name|key
argument_list|)
operator|==
literal|null
operator|||
operator|!
operator|(
name|obj
operator|.
name|getValue
argument_list|()
operator|.
name|equals
argument_list|(
name|currentOverrAttr
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|)
operator|)
condition|)
block|{
name|keysForDelete
operator|.
name|add
argument_list|(
name|key
argument_list|)
expr_stmt|;
block|}
block|}
for|for
control|(
name|Object
name|o
range|:
name|currentOverrAttr
operator|.
name|entrySet
argument_list|()
control|)
block|{
name|Map
operator|.
name|Entry
name|obj
init|=
operator|(
name|Map
operator|.
name|Entry
operator|)
name|o
decl_stmt|;
name|String
name|key
init|=
operator|(
name|String
operator|)
name|obj
operator|.
name|getKey
argument_list|()
decl_stmt|;
if|if
condition|(
name|overrides
operator|.
name|get
argument_list|(
name|key
argument_list|)
operator|==
literal|null
operator|||
operator|!
operator|(
name|obj
operator|.
name|getValue
argument_list|()
operator|.
name|equals
argument_list|(
name|overrides
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|)
operator|)
condition|)
block|{
name|keysForAdd
operator|.
name|add
argument_list|(
name|key
argument_list|)
expr_stmt|;
block|}
block|}
for|for
control|(
name|String
name|aKeysForDelete
range|:
name|keysForDelete
control|)
block|{
operator|(
operator|(
name|EmbeddedAttribute
operator|)
name|attribute
operator|)
operator|.
name|removeAttributeOverride
argument_list|(
name|aKeysForDelete
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|String
name|key
range|:
name|keysForAdd
control|)
block|{
operator|(
operator|(
name|EmbeddedAttribute
operator|)
name|attribute
operator|)
operator|.
name|addAttributeOverride
argument_list|(
name|key
argument_list|,
name|currentOverrAttr
operator|.
name|get
argument_list|(
name|key
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

