begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|editor
operator|.
name|templateeditor
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|gen
operator|.
name|CgenConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|gen
operator|.
name|CgenTemplate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|gen
operator|.
name|TemplateType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|editor
operator|.
name|cgen
operator|.
name|templateeditor
operator|.
name|EditorTemplateLoader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|velocity
operator|.
name|exception
operator|.
name|ResourceNotFoundException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|charset
operator|.
name|StandardCharsets
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_class
specifier|public
class|class
name|EditorTemplateLoaderTest
block|{
specifier|private
name|CgenConfiguration
name|configuration
decl_stmt|;
specifier|private
name|EditorTemplateLoader
name|loader
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|CUSTOM_TPL
init|=
literal|"Custom tpl"
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|createCgenConfiguration
parameter_list|()
block|{
name|this
operator|.
name|configuration
operator|=
operator|new
name|CgenConfiguration
argument_list|()
expr_stmt|;
name|this
operator|.
name|loader
operator|=
operator|new
name|EditorTemplateLoader
argument_list|(
name|configuration
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testLoadCustom
parameter_list|()
block|{
name|configuration
operator|.
name|setTemplate
argument_list|(
operator|new
name|CgenTemplate
argument_list|(
name|CUSTOM_TPL
argument_list|,
literal|false
argument_list|,
name|TemplateType
operator|.
name|ENTITY_SUBCLASS
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|customTemplate
init|=
name|loader
operator|.
name|load
argument_list|(
name|TemplateType
operator|.
name|ENTITY_SUBCLASS
argument_list|,
literal|false
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|CUSTOM_TPL
argument_list|,
name|customTemplate
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testLoadDefault
parameter_list|()
block|{
name|configuration
operator|.
name|setSuperTemplate
argument_list|(
name|TemplateType
operator|.
name|ENTITY_SUPERCLASS
operator|.
name|defaultTemplate
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|defaultTemplateText
init|=
name|getDefaultTemplateText
argument_list|(
name|TemplateType
operator|.
name|ENTITY_SUPERCLASS
argument_list|)
decl_stmt|;
name|String
name|defaultTemplate
init|=
name|loader
operator|.
name|load
argument_list|(
name|TemplateType
operator|.
name|ENTITY_SUPERCLASS
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|defaultTemplateText
argument_list|,
name|defaultTemplate
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testLoadSingleDefault
parameter_list|()
block|{
name|configuration
operator|.
name|setSuperTemplate
argument_list|(
name|TemplateType
operator|.
name|ENTITY_SUBCLASS
operator|.
name|defaultTemplate
argument_list|()
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|setMakePairs
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|String
name|defaultTemplateText
init|=
name|getDefaultTemplateText
argument_list|(
name|TemplateType
operator|.
name|ENTITY_SINGLE_CLASS
argument_list|)
decl_stmt|;
name|String
name|defaultTemplate
init|=
name|loader
operator|.
name|load
argument_list|(
name|TemplateType
operator|.
name|ENTITY_SUBCLASS
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|defaultTemplateText
argument_list|,
name|defaultTemplate
argument_list|)
expr_stmt|;
block|}
specifier|private
name|String
name|getDefaultTemplateText
parameter_list|(
name|TemplateType
name|type
parameter_list|)
block|{
try|try
init|(
name|InputStream
name|stream
init|=
name|getClass
argument_list|()
operator|.
name|getClassLoader
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
name|type
operator|.
name|pathFromSourceRoot
argument_list|()
argument_list|)
init|)
block|{
if|if
condition|(
name|stream
operator|!=
literal|null
condition|)
block|{
return|return
operator|new
name|String
argument_list|(
name|stream
operator|.
name|readAllBytes
argument_list|()
argument_list|,
name|StandardCharsets
operator|.
name|UTF_8
argument_list|)
return|;
block|}
block|}
catch|catch
parameter_list|(
name|IOException
decl||
name|ResourceNotFoundException
name|ignored
parameter_list|)
block|{
block|}
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

