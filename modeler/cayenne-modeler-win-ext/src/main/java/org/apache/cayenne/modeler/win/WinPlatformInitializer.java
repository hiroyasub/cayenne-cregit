begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|win
package|;
end_package

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|looks
operator|.
name|windows
operator|.
name|WindowsLookAndFeel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|init
operator|.
name|platform
operator|.
name|PlatformInitializer
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|ModelerUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|Logger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|slf4j
operator|.
name|LoggerFactory
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JFrame
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|UIManager
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|BorderFactory
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Color
import|;
end_import

begin_class
specifier|public
class|class
name|WinPlatformInitializer
implements|implements
name|PlatformInitializer
block|{
specifier|private
specifier|static
name|Logger
name|logger
init|=
name|LoggerFactory
operator|.
name|getLogger
argument_list|(
name|WinPlatformInitializer
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|public
name|void
name|setupMenus
parameter_list|(
name|JFrame
name|frame
parameter_list|)
block|{
block|}
specifier|public
name|void
name|initLookAndFeel
parameter_list|()
block|{
try|try
block|{
name|UIManager
operator|.
name|setLookAndFeel
argument_list|(
name|WindowsLookAndFeel
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
comment|// override some default styles and colors
name|overrideUIDefaults
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|logger
operator|.
name|warn
argument_list|(
literal|"Error installing L&F: "
operator|+
name|WindowsLookAndFeel
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|e
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|overrideUIDefaults
parameter_list|()
block|{
name|Color
name|darkGrey
init|=
operator|new
name|Color
argument_list|(
literal|225
argument_list|,
literal|225
argument_list|,
literal|225
argument_list|)
decl_stmt|;
name|UIManager
operator|.
name|put
argument_list|(
literal|"TextFieldUI"
argument_list|,
name|WinCustomTextFieldUI
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|UIManager
operator|.
name|put
argument_list|(
literal|"Tree.expandedIcon"
argument_list|,
name|ModelerUtil
operator|.
name|buildIcon
argument_list|(
literal|"icon-arrow-open.png"
argument_list|)
argument_list|)
expr_stmt|;
name|UIManager
operator|.
name|put
argument_list|(
literal|"Tree.collapsedIcon"
argument_list|,
name|ModelerUtil
operator|.
name|buildIcon
argument_list|(
literal|"icon-arrow-closed.png"
argument_list|)
argument_list|)
expr_stmt|;
name|UIManager
operator|.
name|put
argument_list|(
literal|"Tree.paintLines"
argument_list|,
name|Boolean
operator|.
name|FALSE
argument_list|)
expr_stmt|;
name|UIManager
operator|.
name|put
argument_list|(
literal|"Tree.drawDashedFocusIndicator"
argument_list|,
name|Boolean
operator|.
name|FALSE
argument_list|)
expr_stmt|;
name|UIManager
operator|.
name|put
argument_list|(
literal|"Tree.selectionBackground"
argument_list|,
name|darkGrey
argument_list|)
expr_stmt|;
name|UIManager
operator|.
name|put
argument_list|(
literal|"Tree.selectionForeground"
argument_list|,
name|Color
operator|.
name|BLACK
argument_list|)
expr_stmt|;
name|UIManager
operator|.
name|put
argument_list|(
literal|"Tree.selectionBorderColor"
argument_list|,
name|UIManager
operator|.
name|get
argument_list|(
literal|"Tree.selectionBackground"
argument_list|)
argument_list|)
expr_stmt|;
name|UIManager
operator|.
name|put
argument_list|(
literal|"Table.selectionForeground"
argument_list|,
name|Color
operator|.
name|BLACK
argument_list|)
expr_stmt|;
name|UIManager
operator|.
name|put
argument_list|(
literal|"Table.selectionBackground"
argument_list|,
name|darkGrey
argument_list|)
expr_stmt|;
name|UIManager
operator|.
name|put
argument_list|(
literal|"ScrollPane.border"
argument_list|,
name|BorderFactory
operator|.
name|createEmptyBorder
argument_list|()
argument_list|)
expr_stmt|;
name|UIManager
operator|.
name|put
argument_list|(
literal|"Table.scrollPaneBorder"
argument_list|,
name|BorderFactory
operator|.
name|createEmptyBorder
argument_list|()
argument_list|)
expr_stmt|;
name|UIManager
operator|.
name|put
argument_list|(
literal|"SplitPane.border"
argument_list|,
name|BorderFactory
operator|.
name|createEmptyBorder
argument_list|()
argument_list|)
expr_stmt|;
name|UIManager
operator|.
name|put
argument_list|(
literal|"SplitPane.background"
argument_list|,
name|darkGrey
argument_list|)
expr_stmt|;
name|UIManager
operator|.
name|put
argument_list|(
literal|"Separator.background"
argument_list|,
name|darkGrey
argument_list|)
expr_stmt|;
name|UIManager
operator|.
name|put
argument_list|(
literal|"Separator.foreground"
argument_list|,
name|darkGrey
argument_list|)
expr_stmt|;
name|UIManager
operator|.
name|put
argument_list|(
literal|"Separator.opaque"
argument_list|,
name|Boolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
name|UIManager
operator|.
name|put
argument_list|(
literal|"MenuItem.selectionBackground"
argument_list|,
name|darkGrey
argument_list|)
expr_stmt|;
name|UIManager
operator|.
name|put
argument_list|(
literal|"MenuItem.selectionForeground"
argument_list|,
name|Color
operator|.
name|BLACK
argument_list|)
expr_stmt|;
name|UIManager
operator|.
name|put
argument_list|(
literal|"MenuItem.opaque"
argument_list|,
name|Boolean
operator|.
name|TRUE
argument_list|)
expr_stmt|;
name|UIManager
operator|.
name|put
argument_list|(
literal|"Button.border"
argument_list|,
name|BorderFactory
operator|.
name|createEmptyBorder
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|,
literal|2
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

