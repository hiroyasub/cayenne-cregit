begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|tools
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dbsync
operator|.
name|filter
operator|.
name|NameFilter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DataMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|Embeddable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjEntity
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|MalformedURLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_comment
comment|/**  * Performs entity filtering to build a collection of entities that should be used in  * class generation.  *   * @since 3.0  */
end_comment

begin_class
class|class
name|CayenneGeneratorEntityFilterAction
block|{
specifier|private
name|NameFilter
name|nameFilter
decl_stmt|;
specifier|private
name|boolean
name|client
decl_stmt|;
name|Collection
argument_list|<
name|Embeddable
argument_list|>
name|getFilteredEmbeddables
parameter_list|(
name|DataMap
name|mainDataMap
parameter_list|)
block|{
name|Collection
argument_list|<
name|Embeddable
argument_list|>
name|embeddables
init|=
operator|new
name|ArrayList
argument_list|<
name|Embeddable
argument_list|>
argument_list|(
name|mainDataMap
operator|.
name|getEmbeddables
argument_list|()
argument_list|)
decl_stmt|;
comment|// filter out excluded entities...
name|Iterator
argument_list|<
name|Embeddable
argument_list|>
name|it
init|=
name|embeddables
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|it
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Embeddable
name|e
init|=
name|it
operator|.
name|next
argument_list|()
decl_stmt|;
comment|// note that unlike entity, embeddable is matched by class name as it doesn't
comment|// have a symbolic name...
if|if
condition|(
operator|!
name|nameFilter
operator|.
name|isIncluded
argument_list|(
name|e
operator|.
name|getClassName
argument_list|()
argument_list|)
condition|)
block|{
name|it
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
block|}
return|return
name|embeddables
return|;
block|}
name|Collection
argument_list|<
name|ObjEntity
argument_list|>
name|getFilteredEntities
parameter_list|(
name|DataMap
name|mainDataMap
parameter_list|)
throws|throws
name|MalformedURLException
block|{
name|Collection
argument_list|<
name|ObjEntity
argument_list|>
name|entities
init|=
operator|new
name|ArrayList
argument_list|<
name|ObjEntity
argument_list|>
argument_list|(
name|mainDataMap
operator|.
name|getObjEntities
argument_list|()
argument_list|)
decl_stmt|;
comment|// filter out excluded entities...
name|Iterator
argument_list|<
name|ObjEntity
argument_list|>
name|it
init|=
name|entities
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|it
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|ObjEntity
name|e
init|=
name|it
operator|.
name|next
argument_list|()
decl_stmt|;
if|if
condition|(
name|e
operator|.
name|isGeneric
argument_list|()
operator|||
name|client
operator|&&
operator|!
name|e
operator|.
name|isClientAllowed
argument_list|()
operator|||
operator|!
name|nameFilter
operator|.
name|isIncluded
argument_list|(
name|e
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|it
operator|.
name|remove
argument_list|()
expr_stmt|;
block|}
block|}
return|return
name|entities
return|;
block|}
name|void
name|setClient
parameter_list|(
name|boolean
name|client
parameter_list|)
block|{
name|this
operator|.
name|client
operator|=
name|client
expr_stmt|;
block|}
specifier|public
name|void
name|setNameFilter
parameter_list|(
name|NameFilter
name|nameFilter
parameter_list|)
block|{
name|this
operator|.
name|nameFilter
operator|=
name|nameFilter
expr_stmt|;
block|}
block|}
end_class

end_unit

