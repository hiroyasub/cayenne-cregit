begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|tools
operator|.
name|dbimport
operator|.
name|config
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|tools
operator|.
name|ExcludeTable
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|LinkedList
import|;
end_import

begin_comment
comment|/**  * @since 4.0.  */
end_comment

begin_class
specifier|public
class|class
name|FilterContainer
block|{
specifier|private
name|Collection
argument_list|<
name|IncludeTable
argument_list|>
name|includeTables
init|=
operator|new
name|LinkedList
argument_list|<
name|IncludeTable
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|Collection
argument_list|<
name|ExcludeTable
argument_list|>
name|excludeTables
init|=
operator|new
name|LinkedList
argument_list|<
name|ExcludeTable
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|Collection
argument_list|<
name|IncludeColumn
argument_list|>
name|includeColumns
init|=
operator|new
name|LinkedList
argument_list|<
name|IncludeColumn
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|Collection
argument_list|<
name|ExcludeColumn
argument_list|>
name|excludeColumns
init|=
operator|new
name|LinkedList
argument_list|<
name|ExcludeColumn
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|Collection
argument_list|<
name|IncludeProcedure
argument_list|>
name|includeProcedures
init|=
operator|new
name|LinkedList
argument_list|<
name|IncludeProcedure
argument_list|>
argument_list|()
decl_stmt|;
specifier|private
name|Collection
argument_list|<
name|ExcludeProcedure
argument_list|>
name|excludeProcedures
init|=
operator|new
name|LinkedList
argument_list|<
name|ExcludeProcedure
argument_list|>
argument_list|()
decl_stmt|;
specifier|public
name|Collection
argument_list|<
name|IncludeTable
argument_list|>
name|getIncludeTables
parameter_list|()
block|{
return|return
name|includeTables
return|;
block|}
specifier|public
name|void
name|setIncludeTables
parameter_list|(
name|Collection
argument_list|<
name|IncludeTable
argument_list|>
name|includeTables
parameter_list|)
block|{
name|this
operator|.
name|includeTables
operator|=
name|includeTables
expr_stmt|;
block|}
specifier|public
name|Collection
argument_list|<
name|ExcludeTable
argument_list|>
name|getExcludeTables
parameter_list|()
block|{
return|return
name|excludeTables
return|;
block|}
specifier|public
name|void
name|setExcludeTables
parameter_list|(
name|Collection
argument_list|<
name|ExcludeTable
argument_list|>
name|excludeTables
parameter_list|)
block|{
name|this
operator|.
name|excludeTables
operator|=
name|excludeTables
expr_stmt|;
block|}
specifier|public
name|Collection
argument_list|<
name|IncludeColumn
argument_list|>
name|getIncludeColumns
parameter_list|()
block|{
return|return
name|includeColumns
return|;
block|}
specifier|public
name|void
name|setIncludeColumns
parameter_list|(
name|Collection
argument_list|<
name|IncludeColumn
argument_list|>
name|includeColumns
parameter_list|)
block|{
name|this
operator|.
name|includeColumns
operator|=
name|includeColumns
expr_stmt|;
block|}
specifier|public
name|Collection
argument_list|<
name|ExcludeColumn
argument_list|>
name|getExcludeColumns
parameter_list|()
block|{
return|return
name|excludeColumns
return|;
block|}
specifier|public
name|void
name|setExcludeColumns
parameter_list|(
name|Collection
argument_list|<
name|ExcludeColumn
argument_list|>
name|excludeColumns
parameter_list|)
block|{
name|this
operator|.
name|excludeColumns
operator|=
name|excludeColumns
expr_stmt|;
block|}
specifier|public
name|Collection
argument_list|<
name|IncludeProcedure
argument_list|>
name|getIncludeProcedures
parameter_list|()
block|{
return|return
name|includeProcedures
return|;
block|}
specifier|public
name|void
name|setIncludeProcedures
parameter_list|(
name|Collection
argument_list|<
name|IncludeProcedure
argument_list|>
name|includeProcedures
parameter_list|)
block|{
name|this
operator|.
name|includeProcedures
operator|=
name|includeProcedures
expr_stmt|;
block|}
specifier|public
name|Collection
argument_list|<
name|ExcludeProcedure
argument_list|>
name|getExcludeProcedures
parameter_list|()
block|{
return|return
name|excludeProcedures
return|;
block|}
specifier|public
name|void
name|setExcludeProcedures
parameter_list|(
name|Collection
argument_list|<
name|ExcludeProcedure
argument_list|>
name|excludeProcedures
parameter_list|)
block|{
name|this
operator|.
name|excludeProcedures
operator|=
name|excludeProcedures
expr_stmt|;
block|}
specifier|public
name|void
name|addIncludeColumn
parameter_list|(
name|IncludeColumn
name|includeColumn
parameter_list|)
block|{
name|this
operator|.
name|includeColumns
operator|.
name|add
argument_list|(
name|includeColumn
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addExcludeColumn
parameter_list|(
name|ExcludeColumn
name|excludeColumn
parameter_list|)
block|{
name|this
operator|.
name|excludeColumns
operator|.
name|add
argument_list|(
name|excludeColumn
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addIncludeTable
parameter_list|(
name|IncludeTable
name|includeTable
parameter_list|)
block|{
name|this
operator|.
name|includeTables
operator|.
name|add
argument_list|(
name|includeTable
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addExcludeTable
parameter_list|(
name|ExcludeTable
name|excludeTable
parameter_list|)
block|{
name|this
operator|.
name|excludeTables
operator|.
name|add
argument_list|(
name|excludeTable
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addIncludeProcedure
parameter_list|(
name|IncludeProcedure
name|includeProcedure
parameter_list|)
block|{
name|this
operator|.
name|includeProcedures
operator|.
name|add
argument_list|(
name|includeProcedure
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|addExcludeProcedure
parameter_list|(
name|ExcludeProcedure
name|excludeProcedure
parameter_list|)
block|{
name|this
operator|.
name|excludeProcedures
operator|.
name|add
argument_list|(
name|excludeProcedure
argument_list|)
expr_stmt|;
block|}
specifier|public
name|boolean
name|isEmptyContainer
parameter_list|()
block|{
return|return
name|includeColumns
operator|.
name|isEmpty
argument_list|()
operator|&&
name|excludeColumns
operator|.
name|isEmpty
argument_list|()
operator|&&
name|includeTables
operator|.
name|isEmpty
argument_list|()
operator|&&
name|excludeTables
operator|.
name|isEmpty
argument_list|()
operator|&&
name|includeProcedures
operator|.
name|isEmpty
argument_list|()
operator|&&
name|excludeProcedures
operator|.
name|isEmpty
argument_list|()
return|;
block|}
block|}
end_class

end_unit

