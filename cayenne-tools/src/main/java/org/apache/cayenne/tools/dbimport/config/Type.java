begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|tools
operator|.
name|dbimport
operator|.
name|config
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|util
operator|.
name|ToStringBuilder
import|;
end_import

begin_comment
comment|/**  * @since 4.0.  */
end_comment

begin_class
specifier|public
class|class
name|Type
block|{
specifier|private
name|String
name|jdbc
decl_stmt|;
specifier|private
name|String
name|java
decl_stmt|;
specifier|private
name|Integer
name|length
decl_stmt|;
specifier|private
name|Integer
name|precision
decl_stmt|;
specifier|private
name|Integer
name|scale
decl_stmt|;
specifier|private
name|Boolean
name|notNull
decl_stmt|;
specifier|public
name|String
name|getJdbc
parameter_list|()
block|{
return|return
name|jdbc
return|;
block|}
specifier|public
name|void
name|setJdbc
parameter_list|(
name|String
name|jdbc
parameter_list|)
block|{
name|this
operator|.
name|jdbc
operator|=
name|jdbc
expr_stmt|;
block|}
specifier|public
name|String
name|getJava
parameter_list|()
block|{
return|return
name|java
return|;
block|}
specifier|public
name|void
name|setJava
parameter_list|(
name|String
name|java
parameter_list|)
block|{
name|this
operator|.
name|java
operator|=
name|java
expr_stmt|;
block|}
specifier|public
name|Integer
name|getLength
parameter_list|()
block|{
return|return
name|length
return|;
block|}
specifier|public
name|void
name|setLength
parameter_list|(
name|Integer
name|length
parameter_list|)
block|{
name|this
operator|.
name|length
operator|=
name|length
expr_stmt|;
block|}
specifier|public
name|Integer
name|getPrecision
parameter_list|()
block|{
return|return
name|precision
return|;
block|}
specifier|public
name|void
name|setPrecision
parameter_list|(
name|Integer
name|precision
parameter_list|)
block|{
name|this
operator|.
name|precision
operator|=
name|precision
expr_stmt|;
block|}
specifier|public
name|Integer
name|getScale
parameter_list|()
block|{
return|return
name|scale
return|;
block|}
specifier|public
name|void
name|setScale
parameter_list|(
name|Integer
name|scale
parameter_list|)
block|{
name|this
operator|.
name|scale
operator|=
name|scale
expr_stmt|;
block|}
specifier|public
name|Boolean
name|getNotNull
parameter_list|()
block|{
return|return
name|notNull
return|;
block|}
specifier|public
name|void
name|setNotNull
parameter_list|(
name|Boolean
name|notNull
parameter_list|)
block|{
name|this
operator|.
name|notNull
operator|=
name|notNull
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|boolean
name|equals
parameter_list|(
name|Object
name|o
parameter_list|)
block|{
if|if
condition|(
name|this
operator|==
name|o
condition|)
block|{
return|return
literal|true
return|;
block|}
if|if
condition|(
name|o
operator|==
literal|null
operator|||
name|getClass
argument_list|()
operator|!=
name|o
operator|.
name|getClass
argument_list|()
condition|)
block|{
return|return
literal|false
return|;
block|}
name|Type
name|type
init|=
operator|(
name|Type
operator|)
name|o
decl_stmt|;
if|if
condition|(
name|jdbc
operator|!=
literal|null
condition|?
operator|!
name|jdbc
operator|.
name|equals
argument_list|(
name|type
operator|.
name|jdbc
argument_list|)
else|:
name|type
operator|.
name|jdbc
operator|!=
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|length
operator|.
name|equals
argument_list|(
name|type
operator|.
name|length
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|notNull
operator|.
name|equals
argument_list|(
name|type
operator|.
name|notNull
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|precision
operator|.
name|equals
argument_list|(
name|type
operator|.
name|precision
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
operator|!
name|scale
operator|.
name|equals
argument_list|(
name|type
operator|.
name|scale
argument_list|)
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
literal|true
return|;
block|}
annotation|@
name|Override
specifier|public
name|int
name|hashCode
parameter_list|()
block|{
name|int
name|result
init|=
name|jdbc
operator|!=
literal|null
condition|?
name|jdbc
operator|.
name|hashCode
argument_list|()
else|:
literal|0
decl_stmt|;
name|result
operator|=
literal|31
operator|*
name|result
operator|+
name|length
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|result
operator|=
literal|31
operator|*
name|result
operator|+
name|precision
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|result
operator|=
literal|31
operator|*
name|result
operator|+
name|scale
operator|.
name|hashCode
argument_list|()
expr_stmt|;
name|result
operator|=
literal|31
operator|*
name|result
operator|+
name|notNull
operator|.
name|hashCode
argument_list|()
expr_stmt|;
return|return
name|result
return|;
block|}
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
return|return
operator|new
name|ToStringBuilder
argument_list|(
name|this
argument_list|)
operator|.
name|append
argument_list|(
literal|"jdbc"
argument_list|,
name|jdbc
argument_list|)
operator|.
name|append
argument_list|(
literal|"java"
argument_list|,
name|java
argument_list|)
operator|.
name|append
argument_list|(
literal|"length"
argument_list|,
name|length
argument_list|)
operator|.
name|append
argument_list|(
literal|"precision"
argument_list|,
name|precision
argument_list|)
operator|.
name|append
argument_list|(
literal|"scale"
argument_list|,
name|scale
argument_list|)
operator|.
name|append
argument_list|(
literal|"notNull"
argument_list|,
name|notNull
argument_list|)
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

