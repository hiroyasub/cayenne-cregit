begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|tools
operator|.
name|dbimport
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DataMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|util
operator|.
name|XMLEncoder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|MalformedURLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|*
import|;
end_import

begin_class
specifier|public
class|class
name|DbImportConfigurationTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testCreateDataMap_New
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|outUrl
init|=
name|dataMapUrl
argument_list|(
literal|"testCreateDataMap1.map.xml"
argument_list|)
decl_stmt|;
name|File
name|out
init|=
operator|new
name|File
argument_list|(
name|outUrl
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|out
operator|.
name|delete
argument_list|()
expr_stmt|;
name|assertFalse
argument_list|(
name|out
operator|.
name|isFile
argument_list|()
argument_list|)
expr_stmt|;
name|DbImportConfiguration
name|parameters
init|=
operator|new
name|DbImportConfiguration
argument_list|()
decl_stmt|;
name|parameters
operator|.
name|setDataMapFile
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|DataMap
name|dataMap
init|=
name|parameters
operator|.
name|createDataMap
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"testCreateDataMap1"
argument_list|,
name|dataMap
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|outUrl
argument_list|,
name|dataMap
operator|.
name|getConfigurationSource
argument_list|()
operator|.
name|getURL
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testCreateDataMap_Existing
parameter_list|()
throws|throws
name|Exception
block|{
name|URL
name|outUrl
init|=
name|dataMapUrl
argument_list|(
literal|"testCreateDataMap2.map.xml"
argument_list|)
decl_stmt|;
name|File
name|out
init|=
operator|new
name|File
argument_list|(
name|outUrl
operator|.
name|toURI
argument_list|()
argument_list|)
decl_stmt|;
name|out
operator|.
name|delete
argument_list|()
expr_stmt|;
name|assertFalse
argument_list|(
name|out
operator|.
name|isFile
argument_list|()
argument_list|)
expr_stmt|;
name|DataMap
name|tempMap
init|=
operator|new
name|DataMap
argument_list|()
decl_stmt|;
name|tempMap
operator|.
name|addDbEntity
argument_list|(
operator|new
name|DbEntity
argument_list|(
literal|"X"
argument_list|)
argument_list|)
expr_stmt|;
name|PrintWriter
name|writer
init|=
operator|new
name|PrintWriter
argument_list|(
name|out
argument_list|)
decl_stmt|;
name|tempMap
operator|.
name|encodeAsXML
argument_list|(
operator|new
name|XMLEncoder
argument_list|(
name|writer
argument_list|)
argument_list|)
expr_stmt|;
name|writer
operator|.
name|close
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|out
operator|.
name|isFile
argument_list|()
argument_list|)
expr_stmt|;
name|DbImportConfiguration
name|parameters
init|=
operator|new
name|DbImportConfiguration
argument_list|()
decl_stmt|;
name|parameters
operator|.
name|setDataMapFile
argument_list|(
name|out
argument_list|)
expr_stmt|;
name|DataMap
name|dataMap
init|=
name|parameters
operator|.
name|createDataMap
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"testCreateDataMap2"
argument_list|,
name|dataMap
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|outUrl
argument_list|,
name|dataMap
operator|.
name|getConfigurationSource
argument_list|()
operator|.
name|getURL
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|URL
name|dataMapUrl
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|MalformedURLException
block|{
name|String
name|packagePath
init|=
name|getClass
argument_list|()
operator|.
name|getPackage
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|replace
argument_list|(
literal|'.'
argument_list|,
literal|'/'
argument_list|)
decl_stmt|;
name|URL
name|packageUrl
init|=
name|getClass
argument_list|()
operator|.
name|getClassLoader
argument_list|()
operator|.
name|getResource
argument_list|(
name|packagePath
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|packageUrl
argument_list|)
expr_stmt|;
return|return
operator|new
name|URL
argument_list|(
name|packageUrl
argument_list|,
literal|"dbimport/"
operator|+
name|name
argument_list|)
return|;
block|}
block|}
end_class

end_unit

