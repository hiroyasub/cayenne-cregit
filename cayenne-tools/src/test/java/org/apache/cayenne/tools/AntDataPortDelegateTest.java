begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|tools
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DataMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|regex
operator|.
name|Pattern
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertFalse
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
annotation|@
name|Deprecated
specifier|public
class|class
name|AntDataPortDelegateTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testPassedDataMapFilter
parameter_list|()
block|{
name|AntDataPortDelegate
name|delegate
init|=
operator|new
name|AntDataPortDelegate
argument_list|()
decl_stmt|;
comment|// filtering should be done based on map name
name|DataMap
name|map
init|=
operator|new
name|DataMap
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|delegate
operator|.
name|passedDataMapFilter
argument_list|(
name|map
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|setName
argument_list|(
literal|"A"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|delegate
operator|.
name|passedDataMapFilter
argument_list|(
name|map
argument_list|)
argument_list|)
expr_stmt|;
name|delegate
operator|.
name|mapFilters
operator|=
operator|new
name|Pattern
index|[]
block|{
name|Pattern
operator|.
name|compile
argument_list|(
literal|"B"
argument_list|)
block|}
expr_stmt|;
name|assertFalse
argument_list|(
name|delegate
operator|.
name|passedDataMapFilter
argument_list|(
name|map
argument_list|)
argument_list|)
expr_stmt|;
name|map
operator|.
name|setName
argument_list|(
literal|"BBBB"
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|delegate
operator|.
name|passedDataMapFilter
argument_list|(
name|map
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

