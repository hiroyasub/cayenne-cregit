begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|conf
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|Filter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|FilterChain
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|FilterConfig
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletResponse
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpSession
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|DataContext
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mockrunner
operator|.
name|mock
operator|.
name|web
operator|.
name|MockFilterChain
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mockrunner
operator|.
name|mock
operator|.
name|web
operator|.
name|MockHttpServletRequest
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mockrunner
operator|.
name|mock
operator|.
name|web
operator|.
name|MockHttpServletResponse
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mockrunner
operator|.
name|mock
operator|.
name|web
operator|.
name|MockHttpSession
import|;
end_import

begin_comment
comment|/**  * @author Andrus Adamchik  */
end_comment

begin_class
specifier|public
class|class
name|WebApplicationContextFilterTest
extends|extends
name|TestCase
block|{
specifier|public
name|void
name|testDoFilter
parameter_list|()
throws|throws
name|Exception
block|{
name|WebApplicationContextFilter
name|filter
init|=
operator|new
name|WebApplicationContextFilter
argument_list|()
decl_stmt|;
comment|// assemble session
name|DataContext
name|dataContext
init|=
operator|new
name|DataContext
argument_list|()
decl_stmt|;
name|HttpSession
name|session
init|=
operator|new
name|MockHttpSession
argument_list|()
decl_stmt|;
name|session
operator|.
name|setAttribute
argument_list|(
name|ServletUtil
operator|.
name|DATA_CONTEXT_KEY
argument_list|,
name|dataContext
argument_list|)
expr_stmt|;
name|MockHttpServletRequest
name|request
init|=
operator|new
name|MockHttpServletRequest
argument_list|()
decl_stmt|;
name|request
operator|.
name|setSession
argument_list|(
name|session
argument_list|)
expr_stmt|;
name|MockHttpServletResponse
name|response
init|=
operator|new
name|MockHttpServletResponse
argument_list|()
decl_stmt|;
name|MockFilterChain
name|chain
init|=
operator|new
name|MockFilterChain
argument_list|()
decl_stmt|;
name|TestFilter
name|testFilter
init|=
operator|new
name|TestFilter
argument_list|()
decl_stmt|;
name|chain
operator|.
name|addFilter
argument_list|(
name|filter
argument_list|)
expr_stmt|;
name|chain
operator|.
name|addFilter
argument_list|(
name|testFilter
argument_list|)
expr_stmt|;
comment|// check no thread DC before
try|try
block|{
name|DataContext
operator|.
name|getThreadDataContext
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"There is a DataContext bound to thread already."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|ex
parameter_list|)
block|{
comment|// expected
block|}
name|chain
operator|.
name|doFilter
argument_list|(
name|request
argument_list|,
name|response
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|dataContext
argument_list|,
name|testFilter
operator|.
name|threadContext
argument_list|)
expr_stmt|;
comment|// check no thread DC after
try|try
block|{
name|DataContext
operator|.
name|getThreadDataContext
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"DataContext was not unbound from the thread."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IllegalStateException
name|ex
parameter_list|)
block|{
comment|// expected
block|}
block|}
class|class
name|TestFilter
implements|implements
name|Filter
block|{
name|DataContext
name|threadContext
decl_stmt|;
specifier|public
name|void
name|destroy
parameter_list|()
block|{
block|}
specifier|public
name|void
name|doFilter
parameter_list|(
name|ServletRequest
name|request
parameter_list|,
name|ServletResponse
name|response
parameter_list|,
name|FilterChain
name|chain
parameter_list|)
throws|throws
name|IOException
throws|,
name|ServletException
block|{
name|threadContext
operator|=
name|DataContext
operator|.
name|getThreadDataContext
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|init
parameter_list|(
name|FilterConfig
name|arg0
parameter_list|)
throws|throws
name|ServletException
block|{
block|}
block|}
block|}
end_class

end_unit

