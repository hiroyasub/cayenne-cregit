begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|mt
operator|.
name|auto
package|;
end_package

begin_comment
comment|/** Class _MtTable3 was generated by Cayenne.   * It is probably a good idea to avoid changing this class manually,    * since it may be overwritten next time code is regenerated.    * If you need to make any customizations, please use subclass.    */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|_MtTable3
extends|extends
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|CayenneDataObject
block|{
specifier|public
specifier|static
specifier|final
name|String
name|BINARY_COLUMN_PROPERTY
init|=
literal|"binaryColumn"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|CHAR_COLUMN_PROPERTY
init|=
literal|"charColumn"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|INT_COLUMN_PROPERTY
init|=
literal|"intColumn"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|TABLE3_ID_PK_COLUMN
init|=
literal|"TABLE3_ID"
decl_stmt|;
specifier|public
name|void
name|setBinaryColumn
parameter_list|(
name|byte
index|[]
name|binaryColumn
parameter_list|)
block|{
name|writeProperty
argument_list|(
literal|"binaryColumn"
argument_list|,
name|binaryColumn
argument_list|)
expr_stmt|;
block|}
specifier|public
name|byte
index|[]
name|getBinaryColumn
parameter_list|()
block|{
return|return
operator|(
name|byte
index|[]
operator|)
name|readProperty
argument_list|(
literal|"binaryColumn"
argument_list|)
return|;
block|}
specifier|public
name|void
name|setCharColumn
parameter_list|(
name|String
name|charColumn
parameter_list|)
block|{
name|writeProperty
argument_list|(
literal|"charColumn"
argument_list|,
name|charColumn
argument_list|)
expr_stmt|;
block|}
specifier|public
name|String
name|getCharColumn
parameter_list|()
block|{
return|return
operator|(
name|String
operator|)
name|readProperty
argument_list|(
literal|"charColumn"
argument_list|)
return|;
block|}
specifier|public
name|void
name|setIntColumn
parameter_list|(
name|Integer
name|intColumn
parameter_list|)
block|{
name|writeProperty
argument_list|(
literal|"intColumn"
argument_list|,
name|intColumn
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Integer
name|getIntColumn
parameter_list|()
block|{
return|return
operator|(
name|Integer
operator|)
name|readProperty
argument_list|(
literal|"intColumn"
argument_list|)
return|;
block|}
block|}
end_class

end_unit

