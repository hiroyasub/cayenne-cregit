begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
package|;
end_package

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|art
operator|.
name|Artist
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|DataContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|util
operator|.
name|TestBean
import|;
end_import

begin_class
specifier|public
class|class
name|CayenneDataObjectTest
extends|extends
name|TestCase
block|{
specifier|public
name|void
name|testSetObjectId
parameter_list|()
throws|throws
name|Exception
block|{
name|CayenneDataObject
name|obj
init|=
operator|new
name|CayenneDataObject
argument_list|()
decl_stmt|;
name|ObjectId
name|oid
init|=
operator|new
name|ObjectId
argument_list|(
literal|"T"
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|obj
operator|.
name|getObjectId
argument_list|()
argument_list|)
expr_stmt|;
name|obj
operator|.
name|setObjectId
argument_list|(
name|oid
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|oid
argument_list|,
name|obj
operator|.
name|getObjectId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSetPersistenceState
parameter_list|()
throws|throws
name|Exception
block|{
name|CayenneDataObject
name|obj
init|=
operator|new
name|CayenneDataObject
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|TRANSIENT
argument_list|,
name|obj
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|obj
operator|.
name|setPersistenceState
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|obj
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * @deprecated since 3.0.      */
specifier|public
name|void
name|testSetDataContext
parameter_list|()
throws|throws
name|Exception
block|{
name|CayenneDataObject
name|obj
init|=
operator|new
name|CayenneDataObject
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|obj
operator|.
name|getDataContext
argument_list|()
argument_list|)
expr_stmt|;
name|DataContext
name|c
init|=
operator|new
name|DataContext
argument_list|()
decl_stmt|;
name|obj
operator|.
name|setDataContext
argument_list|(
name|c
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|c
argument_list|,
name|obj
operator|.
name|getDataContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testReadNestedProperty1
parameter_list|()
throws|throws
name|Exception
block|{
name|Artist
name|a
init|=
operator|new
name|Artist
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|a
operator|.
name|readNestedProperty
argument_list|(
literal|"artistName"
argument_list|)
argument_list|)
expr_stmt|;
name|a
operator|.
name|setArtistName
argument_list|(
literal|"aaa"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"aaa"
argument_list|,
name|a
operator|.
name|readNestedProperty
argument_list|(
literal|"artistName"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testReadNestedPropertyNotPersistentString
parameter_list|()
throws|throws
name|Exception
block|{
name|Artist
name|a
init|=
operator|new
name|Artist
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|a
operator|.
name|readNestedProperty
argument_list|(
literal|"someOtherProperty"
argument_list|)
argument_list|)
expr_stmt|;
name|a
operator|.
name|setSomeOtherProperty
argument_list|(
literal|"aaa"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"aaa"
argument_list|,
name|a
operator|.
name|readNestedProperty
argument_list|(
literal|"someOtherProperty"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testReadNestedPropertyNonPersistentNotString
parameter_list|()
throws|throws
name|Exception
block|{
name|Artist
name|a
init|=
operator|new
name|Artist
argument_list|()
decl_stmt|;
name|Object
name|object
init|=
operator|new
name|Object
argument_list|()
decl_stmt|;
name|assertNull
argument_list|(
name|a
operator|.
name|readNestedProperty
argument_list|(
literal|"someOtherObjectProperty"
argument_list|)
argument_list|)
expr_stmt|;
name|a
operator|.
name|setSomeOtherObjectProperty
argument_list|(
name|object
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|object
argument_list|,
name|a
operator|.
name|readNestedProperty
argument_list|(
literal|"someOtherObjectProperty"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testReadNestedPropertyNonDataObjectPath
parameter_list|()
block|{
name|CayenneDataObject
name|o1
init|=
operator|new
name|CayenneDataObject
argument_list|()
decl_stmt|;
name|TestBean
name|o2
init|=
operator|new
name|TestBean
argument_list|()
decl_stmt|;
name|o2
operator|.
name|setInteger
argument_list|(
operator|new
name|Integer
argument_list|(
literal|55
argument_list|)
argument_list|)
expr_stmt|;
name|o1
operator|.
name|writePropertyDirectly
argument_list|(
literal|"o2"
argument_list|,
name|o2
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|o2
argument_list|,
name|o1
operator|.
name|readNestedProperty
argument_list|(
literal|"o2"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|new
name|Integer
argument_list|(
literal|55
argument_list|)
argument_list|,
name|o1
operator|.
name|readNestedProperty
argument_list|(
literal|"o2.integer"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TestBean
operator|.
name|class
argument_list|,
name|o1
operator|.
name|readNestedProperty
argument_list|(
literal|"o2.class"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TestBean
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|o1
operator|.
name|readNestedProperty
argument_list|(
literal|"o2.class.name"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

