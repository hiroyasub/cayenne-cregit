begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dataview
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|ComboBoxModel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|DataObject
import|;
end_import

begin_comment
comment|/**  * A ComboBoxModel to display DataObjects.  *   * @since 1.1  * @author Andriy Shapochka  */
end_comment

begin_class
specifier|public
class|class
name|DOComboBoxModel
extends|extends
name|DOListModel
implements|implements
name|ComboBoxModel
block|{
specifier|protected
name|DataObject
name|selectedObject
decl_stmt|;
specifier|public
name|DOComboBoxModel
parameter_list|()
block|{
block|}
specifier|public
name|void
name|setSelectedDataObject
parameter_list|(
name|DataObject
name|dataObject
parameter_list|)
block|{
if|if
condition|(
operator|(
name|selectedObject
operator|!=
literal|null
operator|&&
operator|!
name|selectedObject
operator|.
name|equals
argument_list|(
name|dataObject
argument_list|)
operator|)
operator|||
name|selectedObject
operator|==
literal|null
operator|&&
name|dataObject
operator|!=
literal|null
condition|)
block|{
name|selectedObject
operator|=
name|dataObject
expr_stmt|;
name|fireContentsChanged
argument_list|(
name|this
argument_list|,
operator|-
literal|1
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|DataObject
name|getSelectedDataObject
parameter_list|()
block|{
return|return
name|selectedObject
return|;
block|}
specifier|public
name|void
name|setSelectedItem
parameter_list|(
name|Object
name|selectedValue
parameter_list|)
block|{
if|if
condition|(
name|viewField
operator|==
literal|null
condition|)
block|{
if|if
condition|(
name|selectedValue
operator|instanceof
name|DataObject
condition|)
name|setSelectedDataObject
argument_list|(
operator|(
name|DataObject
operator|)
name|selectedValue
argument_list|)
expr_stmt|;
else|else
name|setSelectedDataObject
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|LookupCache
name|cache
init|=
name|viewField
operator|.
name|getOwner
argument_list|()
operator|.
name|getOwner
argument_list|()
operator|.
name|getLookupCache
argument_list|()
decl_stmt|;
name|setSelectedDataObject
argument_list|(
name|cache
operator|.
name|getDataObject
argument_list|(
name|viewField
argument_list|,
name|selectedValue
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|Object
name|getSelectedItem
parameter_list|()
block|{
if|if
condition|(
name|viewField
operator|==
literal|null
condition|)
return|return
name|getSelectedDataObject
argument_list|()
return|;
return|return
name|viewField
operator|.
name|getValue
argument_list|(
name|getSelectedDataObject
argument_list|()
argument_list|)
return|;
block|}
block|}
end_class

end_unit

