begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|project
operator|.
name|validator
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|project
operator|.
name|validator
operator|.
name|EJBQLQueryValidator
operator|.
name|PositionException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|EJBQLQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|CayenneCase
import|;
end_import

begin_class
specifier|public
class|class
name|EJBQLQueryValidatorTest
extends|extends
name|CayenneCase
block|{
specifier|public
name|void
name|testValidateEJBQL
parameter_list|()
block|{
name|String
index|[]
name|ejbqlError
init|=
operator|new
name|String
index|[]
block|{
literal|"select g from G g"
block|,
literal|"select Artist FROM Artist"
block|,
literal|"select f from g"
block|,
literal|"dddd"
block|,
literal|"select g.f from g"
block|,
literal|"select Artist.f from Artist"
block|,
literal|"select Artist.f FROM Artist a"
block|,
literal|"select a FROM Artist a WHERE a.artistName = ?1 OR "
block|,
literal|"select b FROM Artist a WHERE a.artistName = ?1 OR a.artistName = :nam"
block|,
literal|"select artistName FROM Artist a WHERE a.artistName = ?1 OR a.artistName = :name"
block|,
literal|"select a FROM Artist a WHERE a.artistName = ?"
block|,
literal|"select a FROM Artist a WHERE  OR a.artistName = :name"
block|,
literal|"select b FROM Artist b WHERE  a.artistName = :name"
block|,
literal|"a FROM Artist a"
block|,
literal|"ubdate a FROM Artist a"
block|,
literal|"update a FROM Artist"
block|}
decl_stmt|;
name|Object
index|[]
name|typeError
init|=
operator|new
name|Object
index|[]
block|{
operator|new
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|CayenneRuntimeException
argument_list|()
block|,
operator|new
name|java
operator|.
name|lang
operator|.
name|NullPointerException
argument_list|()
block|,
operator|new
name|java
operator|.
name|lang
operator|.
name|NullPointerException
argument_list|()
block|,
operator|new
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ejbql
operator|.
name|EJBQLException
argument_list|()
block|,
operator|new
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|CayenneRuntimeException
argument_list|()
block|,
operator|new
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ejbql
operator|.
name|EJBQLException
argument_list|()
block|,
operator|new
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ejbql
operator|.
name|EJBQLException
argument_list|()
block|,
operator|new
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ejbql
operator|.
name|EJBQLException
argument_list|()
block|,
operator|new
name|java
operator|.
name|lang
operator|.
name|NullPointerException
argument_list|()
block|,
operator|new
name|java
operator|.
name|lang
operator|.
name|NullPointerException
argument_list|()
block|,
operator|new
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ejbql
operator|.
name|EJBQLException
argument_list|()
block|,
operator|new
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ejbql
operator|.
name|EJBQLException
argument_list|()
block|,
operator|new
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ejbql
operator|.
name|EJBQLException
argument_list|()
block|,
operator|new
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ejbql
operator|.
name|EJBQLException
argument_list|()
block|,
operator|new
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ejbql
operator|.
name|EJBQLException
argument_list|()
block|,
operator|new
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ejbql
operator|.
name|EJBQLException
argument_list|()
block|}
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|ejbqlError
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|EJBQLQuery
name|queryError
init|=
operator|new
name|EJBQLQuery
argument_list|(
name|ejbqlError
index|[
name|i
index|]
argument_list|)
decl_stmt|;
name|EJBQLQueryValidator
name|ejbqlQueryValidator
init|=
operator|new
name|EJBQLQueryValidator
argument_list|()
decl_stmt|;
name|PositionException
name|s
init|=
name|ejbqlQueryValidator
operator|.
name|validateEJBQL
argument_list|(
name|queryError
argument_list|,
name|getDomain
argument_list|()
operator|.
name|getEntityResolver
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|typeError
index|[
name|i
index|]
operator|.
name|getClass
argument_list|()
argument_list|,
name|s
operator|.
name|getE
argument_list|()
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

