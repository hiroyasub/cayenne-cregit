begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|web
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Binder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Module
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mockrunner
operator|.
name|mock
operator|.
name|web
operator|.
name|MockFilterConfig
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mockrunner
operator|.
name|mock
operator|.
name|web
operator|.
name|MockServletConfig
import|;
end_import

begin_class
specifier|public
class|class
name|WebConfigurationTest
extends|extends
name|TestCase
block|{
specifier|public
name|void
name|testFilterCreateModules_Standard
parameter_list|()
throws|throws
name|Exception
block|{
name|MockFilterConfig
name|config
init|=
operator|new
name|MockFilterConfig
argument_list|()
decl_stmt|;
name|WebConfiguration
name|configuration
init|=
operator|new
name|WebConfiguration
argument_list|(
name|config
argument_list|)
decl_stmt|;
name|Module
name|m1
init|=
operator|new
name|Module
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|(
name|Binder
name|binder
parameter_list|)
block|{
block|}
block|}
decl_stmt|;
name|Module
name|m2
init|=
operator|new
name|Module
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|(
name|Binder
name|binder
parameter_list|)
block|{
block|}
block|}
decl_stmt|;
name|Collection
argument_list|<
name|Module
argument_list|>
name|modules
init|=
name|configuration
operator|.
name|createModules
argument_list|(
name|m1
argument_list|,
name|m2
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|modules
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|Module
argument_list|>
name|it
init|=
name|modules
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|assertSame
argument_list|(
name|m1
argument_list|,
name|it
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|m2
argument_list|,
name|it
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testFilterCreateModules_Extra
parameter_list|()
throws|throws
name|Exception
block|{
name|MockFilterConfig
name|config
init|=
operator|new
name|MockFilterConfig
argument_list|()
decl_stmt|;
name|String
name|exra
init|=
name|String
operator|.
name|format
argument_list|(
literal|"%s, \n%s"
argument_list|,
name|MockModule1
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|MockModule2
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|config
operator|.
name|setInitParameter
argument_list|(
name|WebConfiguration
operator|.
name|EXTRA_MODULES_PARAMETER
argument_list|,
name|exra
argument_list|)
expr_stmt|;
name|WebConfiguration
name|configuration
init|=
operator|new
name|WebConfiguration
argument_list|(
name|config
argument_list|)
decl_stmt|;
name|Module
name|m1
init|=
operator|new
name|Module
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|(
name|Binder
name|binder
parameter_list|)
block|{
block|}
block|}
decl_stmt|;
name|Module
name|m2
init|=
operator|new
name|Module
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|(
name|Binder
name|binder
parameter_list|)
block|{
block|}
block|}
decl_stmt|;
name|Collection
argument_list|<
name|Module
argument_list|>
name|modules
init|=
name|configuration
operator|.
name|createModules
argument_list|(
name|m1
argument_list|,
name|m2
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|modules
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|Module
argument_list|>
name|it
init|=
name|modules
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|assertSame
argument_list|(
name|m1
argument_list|,
name|it
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|m2
argument_list|,
name|it
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|it
operator|.
name|next
argument_list|()
operator|instanceof
name|MockModule1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|it
operator|.
name|next
argument_list|()
operator|instanceof
name|MockModule2
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testServletCreateModules_Extra
parameter_list|()
throws|throws
name|Exception
block|{
name|MockServletConfig
name|config
init|=
operator|new
name|MockServletConfig
argument_list|()
decl_stmt|;
name|String
name|exra
init|=
name|String
operator|.
name|format
argument_list|(
literal|"%s, \n%s"
argument_list|,
name|MockModule1
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|,
name|MockModule2
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|config
operator|.
name|setInitParameter
argument_list|(
name|WebConfiguration
operator|.
name|EXTRA_MODULES_PARAMETER
argument_list|,
name|exra
argument_list|)
expr_stmt|;
name|WebConfiguration
name|configuration
init|=
operator|new
name|WebConfiguration
argument_list|(
name|config
argument_list|)
decl_stmt|;
name|Module
name|m1
init|=
operator|new
name|Module
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|(
name|Binder
name|binder
parameter_list|)
block|{
block|}
block|}
decl_stmt|;
name|Module
name|m2
init|=
operator|new
name|Module
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|(
name|Binder
name|binder
parameter_list|)
block|{
block|}
block|}
decl_stmt|;
name|Collection
argument_list|<
name|Module
argument_list|>
name|modules
init|=
name|configuration
operator|.
name|createModules
argument_list|(
name|m1
argument_list|,
name|m2
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|modules
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|Module
argument_list|>
name|it
init|=
name|modules
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|assertSame
argument_list|(
name|m1
argument_list|,
name|it
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|m2
argument_list|,
name|it
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|it
operator|.
name|next
argument_list|()
operator|instanceof
name|MockModule1
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|it
operator|.
name|next
argument_list|()
operator|instanceof
name|MockModule2
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testFilterConfigurationLocation_Name
parameter_list|()
block|{
name|MockFilterConfig
name|config1
init|=
operator|new
name|MockFilterConfig
argument_list|()
decl_stmt|;
name|config1
operator|.
name|setFilterName
argument_list|(
literal|"cayenne-x"
argument_list|)
expr_stmt|;
name|WebConfiguration
name|configuration1
init|=
operator|new
name|WebConfiguration
argument_list|(
name|config1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"cayenne-x.xml"
argument_list|,
name|configuration1
operator|.
name|getConfigurationLocation
argument_list|()
argument_list|)
expr_stmt|;
name|MockFilterConfig
name|config2
init|=
operator|new
name|MockFilterConfig
argument_list|()
decl_stmt|;
name|config2
operator|.
name|setFilterName
argument_list|(
literal|"cayenne-y.xml"
argument_list|)
expr_stmt|;
name|WebConfiguration
name|configuration2
init|=
operator|new
name|WebConfiguration
argument_list|(
name|config2
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"cayenne-y.xml"
argument_list|,
name|configuration2
operator|.
name|getConfigurationLocation
argument_list|()
argument_list|)
expr_stmt|;
name|MockFilterConfig
name|config3
init|=
operator|new
name|MockFilterConfig
argument_list|()
decl_stmt|;
name|config3
operator|.
name|setFilterName
argument_list|(
literal|"a/b/c/cayenne-z.xml"
argument_list|)
expr_stmt|;
name|WebConfiguration
name|configuration3
init|=
operator|new
name|WebConfiguration
argument_list|(
name|config3
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"a/b/c/cayenne-z.xml"
argument_list|,
name|configuration3
operator|.
name|getConfigurationLocation
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testServletConfigurationLocation_Name
parameter_list|()
block|{
name|MockServletConfig
name|config1
init|=
operator|new
name|MockServletConfig
argument_list|()
decl_stmt|;
name|config1
operator|.
name|setServletName
argument_list|(
literal|"cayenne-x"
argument_list|)
expr_stmt|;
name|WebConfiguration
name|configuration1
init|=
operator|new
name|WebConfiguration
argument_list|(
name|config1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"cayenne-x.xml"
argument_list|,
name|configuration1
operator|.
name|getConfigurationLocation
argument_list|()
argument_list|)
expr_stmt|;
name|MockServletConfig
name|config2
init|=
operator|new
name|MockServletConfig
argument_list|()
decl_stmt|;
name|config2
operator|.
name|setServletName
argument_list|(
literal|"cayenne-y.xml"
argument_list|)
expr_stmt|;
name|WebConfiguration
name|configuration2
init|=
operator|new
name|WebConfiguration
argument_list|(
name|config2
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"cayenne-y.xml"
argument_list|,
name|configuration2
operator|.
name|getConfigurationLocation
argument_list|()
argument_list|)
expr_stmt|;
name|MockServletConfig
name|config3
init|=
operator|new
name|MockServletConfig
argument_list|()
decl_stmt|;
name|config3
operator|.
name|setServletName
argument_list|(
literal|"a/b/c/cayenne-z.xml"
argument_list|)
expr_stmt|;
name|WebConfiguration
name|configuration3
init|=
operator|new
name|WebConfiguration
argument_list|(
name|config3
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"a/b/c/cayenne-z.xml"
argument_list|,
name|configuration3
operator|.
name|getConfigurationLocation
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testFilterConfigurationLocation_Parameter
parameter_list|()
block|{
name|MockFilterConfig
name|config1
init|=
operator|new
name|MockFilterConfig
argument_list|()
decl_stmt|;
name|config1
operator|.
name|setFilterName
argument_list|(
literal|"cayenne-x"
argument_list|)
expr_stmt|;
name|config1
operator|.
name|setInitParameter
argument_list|(
name|WebConfiguration
operator|.
name|CONFIGURATION_LOCATION_PARAMETER
argument_list|,
literal|"cayenne-y.xml"
argument_list|)
expr_stmt|;
name|WebConfiguration
name|configuration1
init|=
operator|new
name|WebConfiguration
argument_list|(
name|config1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"cayenne-y.xml"
argument_list|,
name|configuration1
operator|.
name|getConfigurationLocation
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testServletConfigurationLocation_Parameter
parameter_list|()
block|{
name|MockServletConfig
name|config1
init|=
operator|new
name|MockServletConfig
argument_list|()
decl_stmt|;
name|config1
operator|.
name|setServletName
argument_list|(
literal|"cayenne-x"
argument_list|)
expr_stmt|;
name|config1
operator|.
name|setInitParameter
argument_list|(
name|WebConfiguration
operator|.
name|CONFIGURATION_LOCATION_PARAMETER
argument_list|,
literal|"cayenne-y.xml"
argument_list|)
expr_stmt|;
name|WebConfiguration
name|configuration1
init|=
operator|new
name|WebConfiguration
argument_list|(
name|config1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"cayenne-y.xml"
argument_list|,
name|configuration1
operator|.
name|getConfigurationLocation
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testFilterParameters
parameter_list|()
block|{
name|MockFilterConfig
name|config1
init|=
operator|new
name|MockFilterConfig
argument_list|()
decl_stmt|;
name|config1
operator|.
name|setFilterName
argument_list|(
literal|"cayenne-x"
argument_list|)
expr_stmt|;
name|config1
operator|.
name|setInitParameter
argument_list|(
name|WebConfiguration
operator|.
name|CONFIGURATION_LOCATION_PARAMETER
argument_list|,
literal|"cayenne-y.xml"
argument_list|)
expr_stmt|;
name|config1
operator|.
name|setInitParameter
argument_list|(
literal|"test"
argument_list|,
literal|"xxx"
argument_list|)
expr_stmt|;
name|WebConfiguration
name|configuration1
init|=
operator|new
name|WebConfiguration
argument_list|(
name|config1
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|parameters
init|=
name|configuration1
operator|.
name|getParameters
argument_list|()
decl_stmt|;
name|assertNotSame
argument_list|(
name|parameters
argument_list|,
name|configuration1
operator|.
name|getParameters
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|parameters
argument_list|,
name|configuration1
operator|.
name|getParameters
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|parameters
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"cayenne-y.xml"
argument_list|,
name|parameters
operator|.
name|get
argument_list|(
name|WebConfiguration
operator|.
name|CONFIGURATION_LOCATION_PARAMETER
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"xxx"
argument_list|,
name|parameters
operator|.
name|get
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testFilterOtherParameters
parameter_list|()
block|{
name|MockFilterConfig
name|config1
init|=
operator|new
name|MockFilterConfig
argument_list|()
decl_stmt|;
name|config1
operator|.
name|setFilterName
argument_list|(
literal|"cayenne-x"
argument_list|)
expr_stmt|;
name|config1
operator|.
name|setInitParameter
argument_list|(
name|WebConfiguration
operator|.
name|CONFIGURATION_LOCATION_PARAMETER
argument_list|,
literal|"cayenne-y.xml"
argument_list|)
expr_stmt|;
name|config1
operator|.
name|setInitParameter
argument_list|(
name|WebConfiguration
operator|.
name|EXTRA_MODULES_PARAMETER
argument_list|,
literal|"M1,M2"
argument_list|)
expr_stmt|;
name|config1
operator|.
name|setInitParameter
argument_list|(
literal|"test"
argument_list|,
literal|"xxx"
argument_list|)
expr_stmt|;
name|WebConfiguration
name|configuration1
init|=
operator|new
name|WebConfiguration
argument_list|(
name|config1
argument_list|)
decl_stmt|;
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|parameters
init|=
name|configuration1
operator|.
name|getOtherParameters
argument_list|()
decl_stmt|;
name|assertNotSame
argument_list|(
name|parameters
argument_list|,
name|configuration1
operator|.
name|getOtherParameters
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|parameters
argument_list|,
name|configuration1
operator|.
name|getOtherParameters
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|parameters
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"xxx"
argument_list|,
name|parameters
operator|.
name|get
argument_list|(
literal|"test"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

