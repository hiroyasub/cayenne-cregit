begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
package|;
end_package

begin_import
import|import static
name|java
operator|.
name|util
operator|.
name|Collections
operator|.
name|singletonMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ObjectContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|exp
operator|.
name|Expression
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|test
operator|.
name|jdbc
operator|.
name|DBHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|test
operator|.
name|jdbc
operator|.
name|TableHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|consttest
operator|.
name|Const1Entity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|consttest
operator|.
name|Const1Type
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|server
operator|.
name|ServerCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|server
operator|.
name|UseServerRuntime
import|;
end_import

begin_class
annotation|@
name|UseServerRuntime
argument_list|(
literal|"cayenne-const.xml"
argument_list|)
specifier|public
class|class
name|ConstQueryTest
extends|extends
name|ServerCase
block|{
annotation|@
name|Inject
specifier|protected
name|ObjectContext
name|context
decl_stmt|;
annotation|@
name|Inject
specifier|protected
name|DBHelper
name|dbHelper
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|void
name|setUpAfterInjection
parameter_list|()
throws|throws
name|Exception
block|{
name|dbHelper
operator|.
name|deleteAll
argument_list|(
literal|"CONST1_ENTITY"
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|createConst1EntityDataSet
parameter_list|()
throws|throws
name|Exception
block|{
name|TableHelper
name|tableHelper
init|=
operator|new
name|TableHelper
argument_list|(
name|dbHelper
argument_list|,
literal|"CONST1_ENTITY"
argument_list|)
decl_stmt|;
name|tableHelper
operator|.
name|setColumns
argument_list|(
literal|"ID"
argument_list|,
literal|"NAME"
argument_list|,
literal|"STATUS"
argument_list|,
literal|"TYPE"
argument_list|)
expr_stmt|;
name|tableHelper
operator|.
name|insert
argument_list|(
literal|1
argument_list|,
literal|"entity1"
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|tableHelper
operator|.
name|insert
argument_list|(
literal|2
argument_list|,
literal|"entity2"
argument_list|,
literal|null
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|createConst1EntityDataSetWithEnumName
parameter_list|()
throws|throws
name|Exception
block|{
name|TableHelper
name|tableHelper
init|=
operator|new
name|TableHelper
argument_list|(
name|dbHelper
argument_list|,
literal|"CONST1_ENTITY"
argument_list|)
decl_stmt|;
name|tableHelper
operator|.
name|setColumns
argument_list|(
literal|"ID"
argument_list|,
literal|"NAME"
argument_list|,
literal|"STATUS"
argument_list|,
literal|"TYPE"
argument_list|)
expr_stmt|;
name|tableHelper
operator|.
name|insert
argument_list|(
literal|1
argument_list|,
literal|"entity1"
argument_list|,
literal|1
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|tableHelper
operator|.
name|insert
argument_list|(
literal|2
argument_list|,
literal|"org.apache.cayenne.testdo.consttest.Const1Type.ADMIN"
argument_list|,
literal|null
argument_list|,
literal|1
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSelectByEnumValue
parameter_list|()
throws|throws
name|Exception
block|{
name|createConst1EntityDataSet
argument_list|()
expr_stmt|;
name|Expression
name|expr
init|=
name|Expression
operator|.
name|fromString
argument_list|(
literal|"type = $type"
argument_list|)
decl_stmt|;
name|SelectQuery
name|query
init|=
operator|new
name|SelectQuery
argument_list|(
name|Const1Entity
operator|.
name|class
argument_list|,
name|expr
argument_list|)
operator|.
name|queryWithParameters
argument_list|(
name|singletonMap
argument_list|(
literal|"type"
argument_list|,
name|Const1Type
operator|.
name|ORDINARY
argument_list|)
argument_list|)
decl_stmt|;
name|List
name|users
init|=
name|context
operator|.
name|performQuery
argument_list|(
name|query
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|users
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"entity1"
argument_list|,
operator|(
operator|(
name|Const1Entity
operator|)
name|users
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSelectByEnumValueSpecifiedAsConstant
parameter_list|()
throws|throws
name|Exception
block|{
name|createConst1EntityDataSet
argument_list|()
expr_stmt|;
name|Expression
name|expr
init|=
name|Expression
operator|.
name|fromString
argument_list|(
literal|"type = org.apache.cayenne.testdo.consttest.Const1Type.ADMIN"
argument_list|)
decl_stmt|;
name|SelectQuery
name|query
init|=
operator|new
name|SelectQuery
argument_list|(
name|Const1Entity
operator|.
name|class
argument_list|,
name|expr
argument_list|)
decl_stmt|;
name|List
name|users
init|=
name|context
operator|.
name|performQuery
argument_list|(
name|query
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|users
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"entity2"
argument_list|,
operator|(
operator|(
name|Const1Entity
operator|)
name|users
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSelectByConstValue
parameter_list|()
throws|throws
name|Exception
block|{
name|createConst1EntityDataSet
argument_list|()
expr_stmt|;
name|Expression
name|expr
init|=
name|Expression
operator|.
name|fromString
argument_list|(
literal|"status = org.apache.cayenne.testdo.consttest.Const1Status.DEFAULT"
argument_list|)
decl_stmt|;
name|SelectQuery
name|query
init|=
operator|new
name|SelectQuery
argument_list|(
name|Const1Entity
operator|.
name|class
argument_list|,
name|expr
argument_list|)
decl_stmt|;
name|List
name|users
init|=
name|context
operator|.
name|performQuery
argument_list|(
name|query
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|users
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"entity1"
argument_list|,
operator|(
operator|(
name|Const1Entity
operator|)
name|users
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSelectByString
parameter_list|()
throws|throws
name|Exception
block|{
name|createConst1EntityDataSetWithEnumName
argument_list|()
expr_stmt|;
name|Expression
name|expr
init|=
name|Expression
operator|.
name|fromString
argument_list|(
literal|"name = 'org.apache.cayenne.testdo.consttest.Const1Type.ADMIN'"
argument_list|)
decl_stmt|;
name|SelectQuery
name|query
init|=
operator|new
name|SelectQuery
argument_list|(
name|Const1Entity
operator|.
name|class
argument_list|,
name|expr
argument_list|)
decl_stmt|;
name|List
name|users
init|=
name|context
operator|.
name|performQuery
argument_list|(
name|query
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|users
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cayenne.testdo.consttest.Const1Type.ADMIN"
argument_list|,
operator|(
operator|(
name|Const1Entity
operator|)
name|users
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSelectByEnumValueWithEJBQL
parameter_list|()
throws|throws
name|Exception
block|{
name|createConst1EntityDataSet
argument_list|()
expr_stmt|;
name|EJBQLQuery
name|query
init|=
operator|new
name|EJBQLQuery
argument_list|(
literal|"SELECT e FROM Const1Entity e WHERE e.type = :t"
argument_list|)
decl_stmt|;
name|query
operator|.
name|setParameter
argument_list|(
literal|"t"
argument_list|,
name|Const1Type
operator|.
name|ORDINARY
argument_list|)
expr_stmt|;
name|List
name|entities
init|=
name|context
operator|.
name|performQuery
argument_list|(
name|query
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"entity1"
argument_list|,
operator|(
operator|(
name|Const1Entity
operator|)
name|entities
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSelectByEnumValueSpecifiedAsConstantWithEJBQL
parameter_list|()
throws|throws
name|Exception
block|{
name|createConst1EntityDataSet
argument_list|()
expr_stmt|;
name|EJBQLQuery
name|query
init|=
operator|new
name|EJBQLQuery
argument_list|(
literal|"SELECT e FROM Const1Entity e WHERE e.type = org.apache.cayenne.testdo.consttest.Const1Type.ORDINARY"
argument_list|)
decl_stmt|;
name|List
name|entities
init|=
name|context
operator|.
name|performQuery
argument_list|(
name|query
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|entities
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"entity1"
argument_list|,
operator|(
operator|(
name|Const1Entity
operator|)
name|entities
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

