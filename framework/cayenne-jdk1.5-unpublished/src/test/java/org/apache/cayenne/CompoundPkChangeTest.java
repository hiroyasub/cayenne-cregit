begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|art
operator|.
name|CompoundPkTestEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|DataContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|CayenneCase
import|;
end_import

begin_class
specifier|public
class|class
name|CompoundPkChangeTest
extends|extends
name|CayenneCase
block|{
specifier|private
specifier|static
specifier|final
name|String
name|key1v1
init|=
literal|"-key1-v1-"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|key2v1
init|=
literal|"-key2-v1-"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|key1v2
init|=
literal|"-key1-v2-"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|key2v2
init|=
literal|"-key2-v2-"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|key1v3
init|=
literal|"-key1-v3-"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|key2v3
init|=
literal|"-key2-v3-"
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|deleteTestData
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testCompoundPkChangeSingleElement
parameter_list|()
throws|throws
name|Exception
block|{
name|DataContext
name|context
init|=
name|createDataContext
argument_list|()
decl_stmt|;
name|CompoundPkTestEntity
name|dao
init|=
name|context
operator|.
name|newObject
argument_list|(
name|CompoundPkTestEntity
operator|.
name|class
argument_list|)
decl_stmt|;
name|CompoundPkTestEntity
name|refreshedDao
init|=
literal|null
decl_stmt|;
name|dao
operator|.
name|setKey1
argument_list|(
name|key1v1
argument_list|)
expr_stmt|;
name|dao
operator|.
name|setKey2
argument_list|(
name|key2v1
argument_list|)
expr_stmt|;
name|dao
operator|.
name|setName
argument_list|(
literal|"testing testing"
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|key1v1
argument_list|,
name|dao
operator|.
name|getObjectId
argument_list|()
operator|.
name|getIdSnapshot
argument_list|()
operator|.
name|get
argument_list|(
name|CompoundPkTestEntity
operator|.
name|KEY1_PK_COLUMN
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|key2v1
argument_list|,
name|dao
operator|.
name|getObjectId
argument_list|()
operator|.
name|getIdSnapshot
argument_list|()
operator|.
name|get
argument_list|(
name|CompoundPkTestEntity
operator|.
name|KEY2_PK_COLUMN
argument_list|)
argument_list|)
expr_stmt|;
name|refreshedDao
operator|=
operator|(
name|CompoundPkTestEntity
operator|)
name|context
operator|.
name|refetchObject
argument_list|(
name|dao
operator|.
name|getObjectId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|dao
operator|.
name|getObjectId
argument_list|()
argument_list|,
name|refreshedDao
operator|.
name|getObjectId
argument_list|()
argument_list|)
expr_stmt|;
name|dao
operator|.
name|setKey2
argument_list|(
name|key2v2
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|key1v1
argument_list|,
name|dao
operator|.
name|getObjectId
argument_list|()
operator|.
name|getIdSnapshot
argument_list|()
operator|.
name|get
argument_list|(
name|CompoundPkTestEntity
operator|.
name|KEY1_PK_COLUMN
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|key2v2
argument_list|,
name|dao
operator|.
name|getObjectId
argument_list|()
operator|.
name|getIdSnapshot
argument_list|()
operator|.
name|get
argument_list|(
name|CompoundPkTestEntity
operator|.
name|KEY2_PK_COLUMN
argument_list|)
argument_list|)
expr_stmt|;
name|refreshedDao
operator|=
operator|(
name|CompoundPkTestEntity
operator|)
name|context
operator|.
name|refetchObject
argument_list|(
name|dao
operator|.
name|getObjectId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|dao
operator|.
name|getObjectId
argument_list|()
argument_list|,
name|refreshedDao
operator|.
name|getObjectId
argument_list|()
argument_list|)
expr_stmt|;
name|dao
operator|.
name|setKey2
argument_list|(
name|key2v3
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|key1v1
argument_list|,
name|dao
operator|.
name|getObjectId
argument_list|()
operator|.
name|getIdSnapshot
argument_list|()
operator|.
name|get
argument_list|(
name|CompoundPkTestEntity
operator|.
name|KEY1_PK_COLUMN
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|key2v3
argument_list|,
name|dao
operator|.
name|getObjectId
argument_list|()
operator|.
name|getIdSnapshot
argument_list|()
operator|.
name|get
argument_list|(
name|CompoundPkTestEntity
operator|.
name|KEY2_PK_COLUMN
argument_list|)
argument_list|)
expr_stmt|;
name|refreshedDao
operator|=
operator|(
name|CompoundPkTestEntity
operator|)
name|context
operator|.
name|refetchObject
argument_list|(
name|dao
operator|.
name|getObjectId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|dao
operator|.
name|getObjectId
argument_list|()
argument_list|,
name|refreshedDao
operator|.
name|getObjectId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testCompoundPkChangeAllElements
parameter_list|()
throws|throws
name|Exception
block|{
name|DataContext
name|context
init|=
name|createDataContext
argument_list|()
decl_stmt|;
name|CompoundPkTestEntity
name|dao
init|=
name|context
operator|.
name|newObject
argument_list|(
name|CompoundPkTestEntity
operator|.
name|class
argument_list|)
decl_stmt|;
name|CompoundPkTestEntity
name|refreshedDao
init|=
literal|null
decl_stmt|;
name|dao
operator|.
name|setKey1
argument_list|(
name|key1v1
argument_list|)
expr_stmt|;
name|dao
operator|.
name|setKey2
argument_list|(
name|key2v1
argument_list|)
expr_stmt|;
name|dao
operator|.
name|setName
argument_list|(
literal|"testing testing"
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|key1v1
argument_list|,
name|dao
operator|.
name|getObjectId
argument_list|()
operator|.
name|getIdSnapshot
argument_list|()
operator|.
name|get
argument_list|(
name|CompoundPkTestEntity
operator|.
name|KEY1_PK_COLUMN
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|key2v1
argument_list|,
name|dao
operator|.
name|getObjectId
argument_list|()
operator|.
name|getIdSnapshot
argument_list|()
operator|.
name|get
argument_list|(
name|CompoundPkTestEntity
operator|.
name|KEY2_PK_COLUMN
argument_list|)
argument_list|)
expr_stmt|;
name|refreshedDao
operator|=
operator|(
name|CompoundPkTestEntity
operator|)
name|context
operator|.
name|refetchObject
argument_list|(
name|dao
operator|.
name|getObjectId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|dao
operator|.
name|getObjectId
argument_list|()
argument_list|,
name|refreshedDao
operator|.
name|getObjectId
argument_list|()
argument_list|)
expr_stmt|;
name|dao
operator|.
name|setKey1
argument_list|(
name|key1v2
argument_list|)
expr_stmt|;
name|dao
operator|.
name|setKey2
argument_list|(
name|key2v2
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|key1v2
argument_list|,
name|dao
operator|.
name|getObjectId
argument_list|()
operator|.
name|getIdSnapshot
argument_list|()
operator|.
name|get
argument_list|(
name|CompoundPkTestEntity
operator|.
name|KEY1_PK_COLUMN
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|key2v2
argument_list|,
name|dao
operator|.
name|getObjectId
argument_list|()
operator|.
name|getIdSnapshot
argument_list|()
operator|.
name|get
argument_list|(
name|CompoundPkTestEntity
operator|.
name|KEY2_PK_COLUMN
argument_list|)
argument_list|)
expr_stmt|;
name|refreshedDao
operator|=
operator|(
name|CompoundPkTestEntity
operator|)
name|context
operator|.
name|refetchObject
argument_list|(
name|dao
operator|.
name|getObjectId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|dao
operator|.
name|getObjectId
argument_list|()
argument_list|,
name|refreshedDao
operator|.
name|getObjectId
argument_list|()
argument_list|)
expr_stmt|;
name|dao
operator|.
name|setKey1
argument_list|(
name|key1v3
argument_list|)
expr_stmt|;
name|dao
operator|.
name|setKey2
argument_list|(
name|key2v3
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|key1v3
argument_list|,
name|dao
operator|.
name|getObjectId
argument_list|()
operator|.
name|getIdSnapshot
argument_list|()
operator|.
name|get
argument_list|(
name|CompoundPkTestEntity
operator|.
name|KEY1_PK_COLUMN
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|key2v3
argument_list|,
name|dao
operator|.
name|getObjectId
argument_list|()
operator|.
name|getIdSnapshot
argument_list|()
operator|.
name|get
argument_list|(
name|CompoundPkTestEntity
operator|.
name|KEY2_PK_COLUMN
argument_list|)
argument_list|)
expr_stmt|;
name|refreshedDao
operator|=
operator|(
name|CompoundPkTestEntity
operator|)
name|context
operator|.
name|refetchObject
argument_list|(
name|dao
operator|.
name|getObjectId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|dao
operator|.
name|getObjectId
argument_list|()
argument_list|,
name|refreshedDao
operator|.
name|getObjectId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

