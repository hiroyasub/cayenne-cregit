begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|DataChannel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ObjectContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|QueryResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|event
operator|.
name|EventManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|graph
operator|.
name|GraphDiff
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|EntityResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|Query
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|util
operator|.
name|GenericResponse
import|;
end_import

begin_comment
comment|/**  * Stores all messages passed via this handler.  *   * @author Andrus Adamchik  */
end_comment

begin_class
specifier|public
class|class
name|MockDataChannel
implements|implements
name|DataChannel
block|{
specifier|protected
name|EntityResolver
name|resolver
decl_stmt|;
specifier|protected
name|List
name|requestObjects
init|=
operator|new
name|ArrayList
argument_list|()
decl_stmt|;
specifier|protected
name|GraphDiff
name|commitResponse
decl_stmt|;
specifier|protected
name|QueryResponse
name|response
decl_stmt|;
specifier|public
name|MockDataChannel
parameter_list|()
block|{
block|}
specifier|public
name|MockDataChannel
parameter_list|(
name|GraphDiff
name|commitResponse
parameter_list|)
block|{
name|this
operator|.
name|commitResponse
operator|=
name|commitResponse
expr_stmt|;
block|}
specifier|public
name|MockDataChannel
parameter_list|(
name|List
name|selectResponse
parameter_list|)
block|{
name|this
operator|.
name|response
operator|=
operator|new
name|GenericResponse
argument_list|(
name|selectResponse
argument_list|)
expr_stmt|;
block|}
specifier|public
name|MockDataChannel
parameter_list|(
name|EntityResolver
name|entityResolver
parameter_list|,
name|List
name|selectResponse
parameter_list|)
block|{
name|this
argument_list|(
name|selectResponse
argument_list|)
expr_stmt|;
name|this
operator|.
name|resolver
operator|=
name|entityResolver
expr_stmt|;
block|}
specifier|public
name|MockDataChannel
parameter_list|(
name|EntityResolver
name|entityResolver
parameter_list|,
name|QueryResponse
name|response
parameter_list|)
block|{
name|this
operator|.
name|resolver
operator|=
name|entityResolver
expr_stmt|;
name|this
operator|.
name|response
operator|=
name|response
expr_stmt|;
block|}
specifier|public
name|MockDataChannel
parameter_list|(
name|EntityResolver
name|resolver
parameter_list|)
block|{
name|this
argument_list|(
name|resolver
argument_list|,
operator|new
name|GenericResponse
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|EventManager
name|getEventManager
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|reset
parameter_list|()
block|{
name|requestObjects
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
specifier|public
name|List
name|getRequestObjects
parameter_list|()
block|{
return|return
name|requestObjects
return|;
block|}
specifier|public
name|GraphDiff
name|onSync
parameter_list|(
name|ObjectContext
name|originatingContext
parameter_list|,
name|GraphDiff
name|changes
parameter_list|,
name|int
name|syncType
parameter_list|)
block|{
name|requestObjects
operator|.
name|add
argument_list|(
name|changes
argument_list|)
expr_stmt|;
return|return
name|commitResponse
return|;
block|}
specifier|public
name|QueryResponse
name|onQuery
parameter_list|(
name|ObjectContext
name|context
parameter_list|,
name|Query
name|query
parameter_list|)
block|{
name|requestObjects
operator|.
name|add
argument_list|(
name|query
argument_list|)
expr_stmt|;
return|return
name|response
return|;
block|}
specifier|public
name|EntityResolver
name|getEntityResolver
parameter_list|()
block|{
return|return
name|resolver
return|;
block|}
specifier|public
name|void
name|setEntityResolver
parameter_list|(
name|EntityResolver
name|resolver
parameter_list|)
block|{
name|this
operator|.
name|resolver
operator|=
name|resolver
expr_stmt|;
block|}
block|}
end_class

end_unit

