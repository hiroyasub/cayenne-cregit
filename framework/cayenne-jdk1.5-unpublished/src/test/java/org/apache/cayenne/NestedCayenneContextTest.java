begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|graph
operator|.
name|GraphChangeHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|graph
operator|.
name|GraphDiff
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|ObjectIdQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|SelectQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|SortOrder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|remote
operator|.
name|RemoteCayenneCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|test
operator|.
name|jdbc
operator|.
name|DBHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|mt
operator|.
name|ClientMtTable1
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|mt
operator|.
name|ClientMtTable2
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|mt
operator|.
name|ClientMtTooneDep
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|mt
operator|.
name|ClientMtTooneMaster
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|DataChannelInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|UnitTestClosure
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|client
operator|.
name|ClientCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|server
operator|.
name|UseServerRuntime
import|;
end_import

begin_comment
comment|/**  * Tests nested object contexts  */
end_comment

begin_class
annotation|@
name|UseServerRuntime
argument_list|(
name|ClientCase
operator|.
name|MULTI_TIER_PROJECT
argument_list|)
specifier|public
class|class
name|NestedCayenneContextTest
extends|extends
name|RemoteCayenneCase
block|{
annotation|@
name|Inject
specifier|private
name|DBHelper
name|dbHelper
decl_stmt|;
annotation|@
name|Inject
specifier|private
name|DataChannelInterceptor
name|queryInterceptor
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|setUpAfterInjection
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUpAfterInjection
argument_list|()
expr_stmt|;
name|dbHelper
operator|.
name|deleteAll
argument_list|(
literal|"MT_TABLE2"
argument_list|)
expr_stmt|;
name|dbHelper
operator|.
name|deleteAll
argument_list|(
literal|"MT_TABLE1"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testChannels
parameter_list|()
block|{
name|ObjectContext
name|child
init|=
name|clientContext
operator|.
name|createChildContext
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|child
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|clientContext
argument_list|,
name|child
operator|.
name|getChannel
argument_list|()
argument_list|)
expr_stmt|;
comment|// second level of nesting
name|ObjectContext
name|grandchild
init|=
name|child
operator|.
name|createChildContext
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|grandchild
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|child
argument_list|,
name|grandchild
operator|.
name|getChannel
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testLocalObjectSynchronize
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|ObjectContext
name|child
init|=
name|clientContext
operator|.
name|createChildContext
argument_list|()
decl_stmt|;
specifier|final
name|ClientMtTable1
name|committed
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|ClientMtTable1
name|deleted
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|ClientMtTable1
name|modified
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
decl_stmt|;
name|clientContext
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|clientContext
operator|.
name|deleteObjects
argument_list|(
name|deleted
argument_list|)
expr_stmt|;
name|modified
operator|.
name|setGlobalAttribute1
argument_list|(
literal|"a"
argument_list|)
expr_stmt|;
specifier|final
name|ClientMtTable1
name|_new
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|ClientMtTable1
name|hollow
init|=
operator|(
name|ClientMtTable1
operator|)
name|clientContext
operator|.
name|localObject
argument_list|(
operator|new
name|ObjectId
argument_list|(
literal|"MtTable1"
argument_list|)
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|HOLLOW
argument_list|,
name|hollow
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|committed
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|MODIFIED
argument_list|,
name|modified
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|DELETED
argument_list|,
name|deleted
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|NEW
argument_list|,
name|_new
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|queryInterceptor
operator|.
name|runWithQueriesBlocked
argument_list|(
operator|new
name|UnitTestClosure
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|Persistent
name|newPeer
init|=
name|child
operator|.
name|localObject
argument_list|(
name|_new
operator|.
name|getObjectId
argument_list|()
argument_list|,
name|_new
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|_new
operator|.
name|getObjectId
argument_list|()
argument_list|,
name|newPeer
operator|.
name|getObjectId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|newPeer
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|child
argument_list|,
name|newPeer
operator|.
name|getObjectContext
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|clientContext
argument_list|,
name|_new
operator|.
name|getObjectContext
argument_list|()
argument_list|)
expr_stmt|;
name|Persistent
name|hollowPeer
init|=
name|child
operator|.
name|localObject
argument_list|(
name|hollow
operator|.
name|getObjectId
argument_list|()
argument_list|,
name|hollow
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|HOLLOW
argument_list|,
name|hollowPeer
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|hollow
operator|.
name|getObjectId
argument_list|()
argument_list|,
name|hollowPeer
operator|.
name|getObjectId
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|child
argument_list|,
name|hollowPeer
operator|.
name|getObjectContext
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|clientContext
argument_list|,
name|hollow
operator|.
name|getObjectContext
argument_list|()
argument_list|)
expr_stmt|;
name|Persistent
name|committedPeer
init|=
name|child
operator|.
name|localObject
argument_list|(
name|committed
operator|.
name|getObjectId
argument_list|()
argument_list|,
name|committed
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|committedPeer
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|committed
operator|.
name|getObjectId
argument_list|()
argument_list|,
name|committedPeer
operator|.
name|getObjectId
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|child
argument_list|,
name|committedPeer
operator|.
name|getObjectContext
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|clientContext
argument_list|,
name|committed
operator|.
name|getObjectContext
argument_list|()
argument_list|)
expr_stmt|;
name|ClientMtTable1
name|modifiedPeer
init|=
operator|(
name|ClientMtTable1
operator|)
name|child
operator|.
name|localObject
argument_list|(
name|modified
operator|.
name|getObjectId
argument_list|()
argument_list|,
name|modified
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|modifiedPeer
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|modified
operator|.
name|getObjectId
argument_list|()
argument_list|,
name|modifiedPeer
operator|.
name|getObjectId
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
name|modifiedPeer
operator|.
name|getGlobalAttribute1
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|child
argument_list|,
name|modifiedPeer
operator|.
name|getObjectContext
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|clientContext
argument_list|,
name|modified
operator|.
name|getObjectContext
argument_list|()
argument_list|)
expr_stmt|;
name|Persistent
name|deletedPeer
init|=
name|child
operator|.
name|localObject
argument_list|(
name|deleted
operator|.
name|getObjectId
argument_list|()
argument_list|,
name|deleted
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|deletedPeer
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|deleted
operator|.
name|getObjectId
argument_list|()
argument_list|,
name|deletedPeer
operator|.
name|getObjectId
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|child
argument_list|,
name|deletedPeer
operator|.
name|getObjectContext
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|clientContext
argument_list|,
name|deleted
operator|.
name|getObjectContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testLocalObjectsNoOverride
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|ObjectContext
name|child
init|=
name|clientContext
operator|.
name|createChildContext
argument_list|()
decl_stmt|;
specifier|final
name|ClientMtTable1
name|modified
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
decl_stmt|;
name|clientContext
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
specifier|final
name|ClientMtTable1
name|peerModified
init|=
operator|(
name|ClientMtTable1
operator|)
name|Cayenne
operator|.
name|objectForQuery
argument_list|(
name|child
argument_list|,
operator|new
name|ObjectIdQuery
argument_list|(
name|modified
operator|.
name|getObjectId
argument_list|()
argument_list|)
argument_list|)
decl_stmt|;
name|modified
operator|.
name|setGlobalAttribute1
argument_list|(
literal|"M1"
argument_list|)
expr_stmt|;
name|peerModified
operator|.
name|setGlobalAttribute1
argument_list|(
literal|"M2"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|MODIFIED
argument_list|,
name|modified
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|MODIFIED
argument_list|,
name|peerModified
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|queryInterceptor
operator|.
name|runWithQueriesBlocked
argument_list|(
operator|new
name|UnitTestClosure
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|Persistent
name|peerModified2
init|=
name|child
operator|.
name|localObject
argument_list|(
name|modified
operator|.
name|getObjectId
argument_list|()
argument_list|,
name|modified
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|peerModified
argument_list|,
name|peerModified2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|MODIFIED
argument_list|,
name|peerModified2
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"M2"
argument_list|,
name|peerModified
operator|.
name|getGlobalAttribute1
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"M1"
argument_list|,
name|modified
operator|.
name|getGlobalAttribute1
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testLocalObjectRelationship
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|ObjectContext
name|child
init|=
name|clientContext
operator|.
name|createChildContext
argument_list|()
decl_stmt|;
name|ClientMtTable1
name|_new
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
decl_stmt|;
specifier|final
name|ClientMtTable2
name|_new2
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable2
operator|.
name|class
argument_list|)
decl_stmt|;
name|_new
operator|.
name|addToTable2Array
argument_list|(
name|_new2
argument_list|)
expr_stmt|;
name|queryInterceptor
operator|.
name|runWithQueriesBlocked
argument_list|(
operator|new
name|UnitTestClosure
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|ClientMtTable2
name|child2
init|=
operator|(
name|ClientMtTable2
operator|)
name|child
operator|.
name|localObject
argument_list|(
name|_new2
operator|.
name|getObjectId
argument_list|()
argument_list|,
name|_new2
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|child2
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|child2
operator|.
name|getTable1
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|child2
operator|.
name|getTable1
argument_list|()
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSelect
parameter_list|()
throws|throws
name|Exception
block|{
name|ObjectContext
name|child
init|=
name|clientContext
operator|.
name|createChildContext
argument_list|()
decl_stmt|;
name|ClientMtTable1
name|committed
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
decl_stmt|;
name|ClientMtTable1
name|deleted
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
decl_stmt|;
name|ClientMtTable1
name|modified
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
decl_stmt|;
name|clientContext
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|int
name|modifiedid
init|=
name|Cayenne
operator|.
name|intPKForObject
argument_list|(
name|modified
argument_list|)
decl_stmt|;
comment|// test how different object states appear in the child on select
name|clientContext
operator|.
name|deleteObjects
argument_list|(
name|deleted
argument_list|)
expr_stmt|;
name|modified
operator|.
name|setGlobalAttribute1
argument_list|(
literal|"a"
argument_list|)
expr_stmt|;
name|ClientMtTable1
name|_new
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|committed
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|MODIFIED
argument_list|,
name|modified
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|DELETED
argument_list|,
name|deleted
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|NEW
argument_list|,
name|_new
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
argument_list|>
name|objects
init|=
name|child
operator|.
name|performQuery
argument_list|(
operator|new
name|SelectQuery
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"All but NEW object must have been included"
argument_list|,
literal|3
argument_list|,
name|objects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|?
argument_list|>
name|it
init|=
name|objects
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|it
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|ClientMtTable1
name|next
init|=
operator|(
name|ClientMtTable1
operator|)
name|it
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|next
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|int
name|id
init|=
name|Cayenne
operator|.
name|intPKForObject
argument_list|(
name|next
argument_list|)
decl_stmt|;
if|if
condition|(
name|id
operator|==
name|modifiedid
condition|)
block|{
name|assertEquals
argument_list|(
literal|"a"
argument_list|,
name|next
operator|.
name|getGlobalAttribute1
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|public
name|void
name|testPrefetchingToOne
parameter_list|()
throws|throws
name|Exception
block|{
specifier|final
name|ClientMtTable1
name|mt11
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
decl_stmt|;
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
expr_stmt|;
name|ClientMtTable2
name|mt21
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable2
operator|.
name|class
argument_list|)
decl_stmt|;
name|ClientMtTable2
name|mt22
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable2
operator|.
name|class
argument_list|)
decl_stmt|;
name|mt21
operator|.
name|setTable1
argument_list|(
name|mt11
argument_list|)
expr_stmt|;
name|mt22
operator|.
name|setTable1
argument_list|(
name|mt11
argument_list|)
expr_stmt|;
name|clientContext
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
specifier|final
name|ObjectContext
name|child
init|=
name|clientContext
operator|.
name|createChildContext
argument_list|()
decl_stmt|;
name|SelectQuery
name|q
init|=
operator|new
name|SelectQuery
argument_list|(
name|ClientMtTable2
operator|.
name|class
argument_list|)
decl_stmt|;
name|q
operator|.
name|addPrefetch
argument_list|(
name|ClientMtTable2
operator|.
name|TABLE1_PROPERTY
argument_list|)
expr_stmt|;
specifier|final
name|List
argument_list|<
name|?
argument_list|>
name|results
init|=
name|child
operator|.
name|performQuery
argument_list|(
name|q
argument_list|)
decl_stmt|;
name|queryInterceptor
operator|.
name|runWithQueriesBlocked
argument_list|(
operator|new
name|UnitTestClosure
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|results
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|?
argument_list|>
name|it
init|=
name|results
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|it
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|ClientMtTable2
name|o
init|=
operator|(
name|ClientMtTable2
operator|)
name|it
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|o
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|child
argument_list|,
name|o
operator|.
name|getObjectContext
argument_list|()
argument_list|)
expr_stmt|;
name|ClientMtTable1
name|o1
init|=
name|o
operator|.
name|getTable1
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|o1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|o1
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|child
argument_list|,
name|o1
operator|.
name|getObjectContext
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|mt11
operator|.
name|getObjectId
argument_list|()
argument_list|,
name|o1
operator|.
name|getObjectId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testPrefetchingToMany
parameter_list|()
throws|throws
name|Exception
block|{
name|ClientMtTable1
name|mt11
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
decl_stmt|;
name|mt11
operator|.
name|setGlobalAttribute1
argument_list|(
literal|"1"
argument_list|)
expr_stmt|;
name|ClientMtTable1
name|mt12
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
decl_stmt|;
name|mt12
operator|.
name|setGlobalAttribute1
argument_list|(
literal|"2"
argument_list|)
expr_stmt|;
name|ClientMtTable2
name|mt21
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable2
operator|.
name|class
argument_list|)
decl_stmt|;
name|ClientMtTable2
name|mt22
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable2
operator|.
name|class
argument_list|)
decl_stmt|;
name|mt21
operator|.
name|setTable1
argument_list|(
name|mt11
argument_list|)
expr_stmt|;
name|mt22
operator|.
name|setTable1
argument_list|(
name|mt11
argument_list|)
expr_stmt|;
name|clientContext
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
specifier|final
name|ObjectContext
name|child
init|=
name|clientContext
operator|.
name|createChildContext
argument_list|()
decl_stmt|;
name|SelectQuery
name|q
init|=
operator|new
name|SelectQuery
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
decl_stmt|;
name|q
operator|.
name|addOrdering
argument_list|(
literal|"globalAttribute1"
argument_list|,
name|SortOrder
operator|.
name|ASCENDING
argument_list|)
expr_stmt|;
name|q
operator|.
name|addPrefetch
argument_list|(
name|ClientMtTable1
operator|.
name|TABLE2ARRAY_PROPERTY
argument_list|)
expr_stmt|;
specifier|final
name|List
argument_list|<
name|?
argument_list|>
name|results
init|=
name|child
operator|.
name|performQuery
argument_list|(
name|q
argument_list|)
decl_stmt|;
name|queryInterceptor
operator|.
name|runWithQueriesBlocked
argument_list|(
operator|new
name|UnitTestClosure
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|ClientMtTable1
name|o1
init|=
operator|(
name|ClientMtTable1
operator|)
name|results
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|o1
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|child
argument_list|,
name|o1
operator|.
name|getObjectContext
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|ClientMtTable2
argument_list|>
name|children1
init|=
name|o1
operator|.
name|getTable2Array
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|children1
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|ClientMtTable2
argument_list|>
name|it
init|=
name|children1
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|it
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|ClientMtTable2
name|o
init|=
name|it
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|o
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|child
argument_list|,
name|o
operator|.
name|getObjectContext
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|o1
argument_list|,
name|o
operator|.
name|getTable1
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|ClientMtTable1
name|o2
init|=
operator|(
name|ClientMtTable1
operator|)
name|results
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|o2
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|child
argument_list|,
name|o2
operator|.
name|getObjectContext
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|?
argument_list|>
name|children2
init|=
name|o2
operator|.
name|getTable2Array
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|children2
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testDeleteNew
parameter_list|()
throws|throws
name|Exception
block|{
name|ObjectContext
name|child
init|=
name|clientContext
operator|.
name|createChildContext
argument_list|()
decl_stmt|;
name|ClientMtTable1
name|a
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
decl_stmt|;
name|clientContext
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|ClientMtTable2
name|p
init|=
name|child
operator|.
name|newObject
argument_list|(
name|ClientMtTable2
operator|.
name|class
argument_list|)
decl_stmt|;
name|ClientMtTable1
name|aChild
init|=
operator|(
name|ClientMtTable1
operator|)
name|Cayenne
operator|.
name|objectForPK
argument_list|(
name|child
argument_list|,
name|a
operator|.
name|getObjectId
argument_list|()
argument_list|)
decl_stmt|;
name|p
operator|.
name|setGlobalAttribute
argument_list|(
literal|"X"
argument_list|)
expr_stmt|;
name|aChild
operator|.
name|addToTable2Array
argument_list|(
name|p
argument_list|)
expr_stmt|;
name|child
operator|.
name|commitChangesToParent
argument_list|()
expr_stmt|;
name|child
operator|.
name|deleteObjects
argument_list|(
name|p
argument_list|)
expr_stmt|;
name|aChild
operator|.
name|removeFromTable2Array
argument_list|(
name|p
argument_list|)
expr_stmt|;
name|child
operator|.
name|commitChangesToParent
argument_list|()
expr_stmt|;
block|}
comment|/**      * A test case for CAY-698 bug.      */
specifier|public
name|void
name|testNullifyToOne
parameter_list|()
throws|throws
name|Exception
block|{
name|ClientMtTable1
name|a
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
decl_stmt|;
name|ClientMtTable2
name|b
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable2
operator|.
name|class
argument_list|)
decl_stmt|;
name|a
operator|.
name|addToTable2Array
argument_list|(
name|b
argument_list|)
expr_stmt|;
name|clientContext
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
specifier|final
name|ObjectContext
name|child
init|=
name|clientContext
operator|.
name|createChildContext
argument_list|()
decl_stmt|;
name|ObjectContext
name|childPeer
init|=
name|clientContext
operator|.
name|createChildContext
argument_list|()
decl_stmt|;
specifier|final
name|ClientMtTable2
name|childP1
init|=
operator|(
name|ClientMtTable2
operator|)
name|Cayenne
operator|.
name|objectForPK
argument_list|(
name|child
argument_list|,
name|b
operator|.
name|getObjectId
argument_list|()
argument_list|)
decl_stmt|;
comment|// trigger object creation in the peer nested DC
name|Cayenne
operator|.
name|objectForPK
argument_list|(
name|childPeer
argument_list|,
name|b
operator|.
name|getObjectId
argument_list|()
argument_list|)
expr_stmt|;
name|childP1
operator|.
name|setTable1
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|queryInterceptor
operator|.
name|runWithQueriesBlocked
argument_list|(
operator|new
name|UnitTestClosure
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|child
operator|.
name|commitChangesToParent
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|childP1
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|ClientMtTable2
name|parentP1
init|=
operator|(
name|ClientMtTable2
operator|)
name|clientContext
operator|.
name|getGraphManager
argument_list|()
operator|.
name|getNode
argument_list|(
name|childP1
operator|.
name|getObjectId
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|parentP1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|MODIFIED
argument_list|,
name|parentP1
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|parentP1
operator|.
name|getTable1
argument_list|()
argument_list|)
expr_stmt|;
comment|// check that arc changes got recorded in the parent context
name|GraphDiff
name|diffs
init|=
name|clientContext
operator|.
name|internalGraphManager
argument_list|()
operator|.
name|getDiffs
argument_list|()
decl_stmt|;
specifier|final
name|int
index|[]
name|arcDiffs
init|=
operator|new
name|int
index|[
literal|1
index|]
decl_stmt|;
name|diffs
operator|.
name|apply
argument_list|(
operator|new
name|GraphChangeHandler
argument_list|()
block|{
specifier|public
name|void
name|arcCreated
parameter_list|(
name|Object
name|nodeId
parameter_list|,
name|Object
name|targetNodeId
parameter_list|,
name|Object
name|arcId
parameter_list|)
block|{
name|arcDiffs
index|[
literal|0
index|]
operator|++
expr_stmt|;
block|}
specifier|public
name|void
name|arcDeleted
parameter_list|(
name|Object
name|nodeId
parameter_list|,
name|Object
name|targetNodeId
parameter_list|,
name|Object
name|arcId
parameter_list|)
block|{
name|arcDiffs
index|[
literal|0
index|]
operator|--
expr_stmt|;
block|}
specifier|public
name|void
name|nodeCreated
parameter_list|(
name|Object
name|nodeId
parameter_list|)
block|{
block|}
specifier|public
name|void
name|nodeIdChanged
parameter_list|(
name|Object
name|nodeId
parameter_list|,
name|Object
name|newId
parameter_list|)
block|{
block|}
specifier|public
name|void
name|nodePropertyChanged
parameter_list|(
name|Object
name|nodeId
parameter_list|,
name|String
name|property
parameter_list|,
name|Object
name|oldValue
parameter_list|,
name|Object
name|newValue
parameter_list|)
block|{
block|}
specifier|public
name|void
name|nodeRemoved
parameter_list|(
name|Object
name|nodeId
parameter_list|)
block|{
block|}
block|}
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
operator|-
literal|2
argument_list|,
name|arcDiffs
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testCommitChangesToParent
parameter_list|()
throws|throws
name|Exception
block|{
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
expr_stmt|;
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
expr_stmt|;
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
expr_stmt|;
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
expr_stmt|;
name|clientContext
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
specifier|final
name|ObjectContext
name|child
init|=
name|clientContext
operator|.
name|createChildContext
argument_list|()
decl_stmt|;
name|SelectQuery
name|query
init|=
operator|new
name|SelectQuery
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|?
argument_list|>
name|objects
init|=
name|child
operator|.
name|performQuery
argument_list|(
name|query
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|objects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
specifier|final
name|ClientMtTable1
name|childNew
init|=
name|child
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
decl_stmt|;
name|childNew
operator|.
name|setGlobalAttribute1
argument_list|(
literal|"NNN"
argument_list|)
expr_stmt|;
specifier|final
name|ClientMtTable1
name|childModified
init|=
operator|(
name|ClientMtTable1
operator|)
name|objects
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|childModified
operator|.
name|setGlobalAttribute1
argument_list|(
literal|"MMM"
argument_list|)
expr_stmt|;
specifier|final
name|ClientMtTable1
name|childCommitted
init|=
operator|(
name|ClientMtTable1
operator|)
name|objects
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
specifier|final
name|ClientMtTable1
name|childHollow
init|=
operator|(
name|ClientMtTable1
operator|)
name|objects
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|child
operator|.
name|invalidateObjects
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|childHollow
argument_list|)
argument_list|)
expr_stmt|;
name|queryInterceptor
operator|.
name|runWithQueriesBlocked
argument_list|(
operator|new
name|UnitTestClosure
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|child
operator|.
name|commitChangesToParent
argument_list|()
expr_stmt|;
comment|// * all modified child objects must be in committed state now
comment|// * all modifications should be propagated to the parent
comment|// * no actual commit should occur.
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|childNew
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|childModified
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|childCommitted
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|HOLLOW
argument_list|,
name|childHollow
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|ClientMtTable1
name|parentNew
init|=
operator|(
name|ClientMtTable1
operator|)
name|clientContext
operator|.
name|getGraphManager
argument_list|()
operator|.
name|getNode
argument_list|(
name|childNew
operator|.
name|getObjectId
argument_list|()
argument_list|)
decl_stmt|;
specifier|final
name|ClientMtTable1
name|parentModified
init|=
operator|(
name|ClientMtTable1
operator|)
name|clientContext
operator|.
name|getGraphManager
argument_list|()
operator|.
name|getNode
argument_list|(
name|childModified
operator|.
name|getObjectId
argument_list|()
argument_list|)
decl_stmt|;
name|ClientMtTable1
name|parentCommitted
init|=
operator|(
name|ClientMtTable1
operator|)
name|clientContext
operator|.
name|getGraphManager
argument_list|()
operator|.
name|getNode
argument_list|(
name|childCommitted
operator|.
name|getObjectId
argument_list|()
argument_list|)
decl_stmt|;
name|ClientMtTable1
name|parentHollow
init|=
operator|(
name|ClientMtTable1
operator|)
name|clientContext
operator|.
name|getGraphManager
argument_list|()
operator|.
name|getNode
argument_list|(
name|childHollow
operator|.
name|getObjectId
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|parentNew
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|NEW
argument_list|,
name|parentNew
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"NNN"
argument_list|,
name|parentNew
operator|.
name|getGlobalAttribute1
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|parentModified
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|MODIFIED
argument_list|,
name|parentModified
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"MMM"
argument_list|,
name|parentModified
operator|.
name|getGlobalAttribute1
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|parentCommitted
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|parentCommitted
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|parentHollow
argument_list|)
expr_stmt|;
comment|// check that arc changes got recorded in the parent context
name|GraphDiff
name|diffs
init|=
name|clientContext
operator|.
name|internalGraphManager
argument_list|()
operator|.
name|getDiffs
argument_list|()
decl_stmt|;
specifier|final
name|int
index|[]
name|modifiedProperties
init|=
operator|new
name|int
index|[
literal|1
index|]
decl_stmt|;
name|diffs
operator|.
name|apply
argument_list|(
operator|new
name|GraphChangeHandler
argument_list|()
block|{
specifier|public
name|void
name|arcCreated
parameter_list|(
name|Object
name|nodeId
parameter_list|,
name|Object
name|targetNodeId
parameter_list|,
name|Object
name|arcId
parameter_list|)
block|{
block|}
specifier|public
name|void
name|arcDeleted
parameter_list|(
name|Object
name|nodeId
parameter_list|,
name|Object
name|targetNodeId
parameter_list|,
name|Object
name|arcId
parameter_list|)
block|{
block|}
specifier|public
name|void
name|nodeCreated
parameter_list|(
name|Object
name|nodeId
parameter_list|)
block|{
block|}
specifier|public
name|void
name|nodeIdChanged
parameter_list|(
name|Object
name|nodeId
parameter_list|,
name|Object
name|newId
parameter_list|)
block|{
block|}
specifier|public
name|void
name|nodePropertyChanged
parameter_list|(
name|Object
name|nodeId
parameter_list|,
name|String
name|property
parameter_list|,
name|Object
name|oldValue
parameter_list|,
name|Object
name|newValue
parameter_list|)
block|{
if|if
condition|(
name|nodeId
operator|.
name|equals
argument_list|(
name|parentModified
operator|.
name|getObjectId
argument_list|()
argument_list|)
condition|)
block|{
name|modifiedProperties
index|[
literal|0
index|]
operator|++
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|nodeRemoved
parameter_list|(
name|Object
name|nodeId
parameter_list|)
block|{
block|}
block|}
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|modifiedProperties
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testCommitChangesToParentDeleted
parameter_list|()
throws|throws
name|Exception
block|{
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
expr_stmt|;
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
expr_stmt|;
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
expr_stmt|;
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
expr_stmt|;
name|clientContext
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|ObjectContext
name|child
init|=
name|clientContext
operator|.
name|createChildContext
argument_list|()
decl_stmt|;
comment|// make sure we fetch in predictable order
name|SelectQuery
name|query
init|=
operator|new
name|SelectQuery
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|?
argument_list|>
name|objects
init|=
name|child
operator|.
name|performQuery
argument_list|(
name|query
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|objects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
comment|// delete AND modify
name|ClientMtTable1
name|childDeleted
init|=
operator|(
name|ClientMtTable1
operator|)
name|objects
operator|.
name|get
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|child
operator|.
name|deleteObjects
argument_list|(
name|childDeleted
argument_list|)
expr_stmt|;
name|childDeleted
operator|.
name|setGlobalAttribute1
argument_list|(
literal|"DDD"
argument_list|)
expr_stmt|;
comment|// don't block queries - on delete Cayenne may need to resolve delete rules via
comment|// fetch
name|child
operator|.
name|commitChangesToParent
argument_list|()
expr_stmt|;
comment|// * all modified child objects must be in committed state now
comment|// * all modifications should be propagated to the parent
comment|// * no actual commit should occur.
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|TRANSIENT
argument_list|,
name|childDeleted
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|ClientMtTable1
name|parentDeleted
init|=
operator|(
name|ClientMtTable1
operator|)
name|clientContext
operator|.
name|getGraphManager
argument_list|()
operator|.
name|getNode
argument_list|(
name|childDeleted
operator|.
name|getObjectId
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|parentDeleted
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|DELETED
argument_list|,
name|parentDeleted
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"DDD"
argument_list|,
name|parentDeleted
operator|.
name|getGlobalAttribute1
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testCommitChanges
parameter_list|()
throws|throws
name|Exception
block|{
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
expr_stmt|;
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
expr_stmt|;
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
expr_stmt|;
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
expr_stmt|;
name|clientContext
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|ObjectContext
name|child
init|=
name|clientContext
operator|.
name|createChildContext
argument_list|()
decl_stmt|;
comment|// make sure we fetch in predictable order
name|SelectQuery
name|query
init|=
operator|new
name|SelectQuery
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
decl_stmt|;
name|List
argument_list|<
name|?
argument_list|>
name|objects
init|=
name|child
operator|.
name|performQuery
argument_list|(
name|query
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|objects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|ClientMtTable1
name|childNew
init|=
name|child
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
decl_stmt|;
name|childNew
operator|.
name|setGlobalAttribute1
argument_list|(
literal|"NNN"
argument_list|)
expr_stmt|;
name|ClientMtTable1
name|childModified
init|=
operator|(
name|ClientMtTable1
operator|)
name|objects
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|childModified
operator|.
name|setGlobalAttribute1
argument_list|(
literal|"MMM"
argument_list|)
expr_stmt|;
name|ClientMtTable1
name|childCommitted
init|=
operator|(
name|ClientMtTable1
operator|)
name|objects
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
comment|// delete AND modify
name|ClientMtTable1
name|childDeleted
init|=
operator|(
name|ClientMtTable1
operator|)
name|objects
operator|.
name|get
argument_list|(
literal|2
argument_list|)
decl_stmt|;
name|child
operator|.
name|deleteObjects
argument_list|(
name|childDeleted
argument_list|)
expr_stmt|;
name|childDeleted
operator|.
name|setGlobalAttribute1
argument_list|(
literal|"DDD"
argument_list|)
expr_stmt|;
name|ClientMtTable1
name|childHollow
init|=
operator|(
name|ClientMtTable1
operator|)
name|objects
operator|.
name|get
argument_list|(
literal|3
argument_list|)
decl_stmt|;
name|child
operator|.
name|invalidateObjects
argument_list|(
name|Collections
operator|.
name|singleton
argument_list|(
name|childHollow
argument_list|)
argument_list|)
expr_stmt|;
name|child
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|childNew
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|childModified
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|childCommitted
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|TRANSIENT
argument_list|,
name|childDeleted
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|HOLLOW
argument_list|,
name|childHollow
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|ClientMtTable1
name|parentNew
init|=
operator|(
name|ClientMtTable1
operator|)
name|clientContext
operator|.
name|getGraphManager
argument_list|()
operator|.
name|getNode
argument_list|(
name|childNew
operator|.
name|getObjectId
argument_list|()
argument_list|)
decl_stmt|;
name|ClientMtTable1
name|parentModified
init|=
operator|(
name|ClientMtTable1
operator|)
name|clientContext
operator|.
name|getGraphManager
argument_list|()
operator|.
name|getNode
argument_list|(
name|childModified
operator|.
name|getObjectId
argument_list|()
argument_list|)
decl_stmt|;
name|ClientMtTable1
name|parentCommitted
init|=
operator|(
name|ClientMtTable1
operator|)
name|clientContext
operator|.
name|getGraphManager
argument_list|()
operator|.
name|getNode
argument_list|(
name|childCommitted
operator|.
name|getObjectId
argument_list|()
argument_list|)
decl_stmt|;
name|ClientMtTable1
name|parentDeleted
init|=
operator|(
name|ClientMtTable1
operator|)
name|clientContext
operator|.
name|getGraphManager
argument_list|()
operator|.
name|getNode
argument_list|(
name|childDeleted
operator|.
name|getObjectId
argument_list|()
argument_list|)
decl_stmt|;
name|ClientMtTable1
name|parentHollow
init|=
operator|(
name|ClientMtTable1
operator|)
name|clientContext
operator|.
name|getGraphManager
argument_list|()
operator|.
name|getNode
argument_list|(
name|childHollow
operator|.
name|getObjectId
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|parentNew
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|parentNew
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"NNN"
argument_list|,
name|parentNew
operator|.
name|getGlobalAttribute1
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|parentModified
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|parentModified
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"MMM"
argument_list|,
name|parentModified
operator|.
name|getGlobalAttribute1
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
literal|"Deleted object should not be registered."
argument_list|,
name|parentDeleted
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|parentCommitted
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|parentCommitted
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|parentHollow
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testAddRemove
parameter_list|()
throws|throws
name|Exception
block|{
name|ObjectContext
name|child
init|=
name|clientContext
operator|.
name|createChildContext
argument_list|()
decl_stmt|;
name|ClientMtTable1
name|a
init|=
name|child
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
decl_stmt|;
name|a
operator|.
name|setGlobalAttribute1
argument_list|(
literal|"X"
argument_list|)
expr_stmt|;
name|child
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|ClientMtTable2
name|p1
init|=
name|child
operator|.
name|newObject
argument_list|(
name|ClientMtTable2
operator|.
name|class
argument_list|)
decl_stmt|;
name|p1
operator|.
name|setGlobalAttribute
argument_list|(
literal|"P1"
argument_list|)
expr_stmt|;
name|a
operator|.
name|addToTable2Array
argument_list|(
name|p1
argument_list|)
expr_stmt|;
name|ClientMtTable2
name|p2
init|=
name|child
operator|.
name|newObject
argument_list|(
name|ClientMtTable2
operator|.
name|class
argument_list|)
decl_stmt|;
name|p2
operator|.
name|setGlobalAttribute
argument_list|(
literal|"P2"
argument_list|)
expr_stmt|;
name|a
operator|.
name|addToTable2Array
argument_list|(
name|p2
argument_list|)
expr_stmt|;
name|a
operator|.
name|removeFromTable2Array
argument_list|(
name|p2
argument_list|)
expr_stmt|;
comment|// this causes an error on commit
name|child
operator|.
name|deleteObjects
argument_list|(
name|p2
argument_list|)
expr_stmt|;
name|child
operator|.
name|commitChangesToParent
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testChangeRel
parameter_list|()
throws|throws
name|Exception
block|{
name|ObjectContext
name|child
init|=
name|clientContext
operator|.
name|createChildContext
argument_list|()
decl_stmt|;
name|ClientMtTable1
name|a
init|=
name|child
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
decl_stmt|;
name|ClientMtTable2
name|b
init|=
name|child
operator|.
name|newObject
argument_list|(
name|ClientMtTable2
operator|.
name|class
argument_list|)
decl_stmt|;
name|child
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|a
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|a
operator|.
name|addToTable2Array
argument_list|(
name|b
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|MODIFIED
argument_list|,
name|a
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|child
operator|.
name|commitChangesToParent
argument_list|()
expr_stmt|;
name|ClientMtTable1
name|parentA
init|=
operator|(
name|ClientMtTable1
operator|)
name|clientContext
operator|.
name|getGraphManager
argument_list|()
operator|.
name|getNode
argument_list|(
name|a
operator|.
name|getObjectId
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|a
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|MODIFIED
argument_list|,
name|parentA
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|parentA
operator|.
name|getTable2Array
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|clientContext
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|parentA
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|a
operator|.
name|removeFromTable2Array
argument_list|(
name|b
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|MODIFIED
argument_list|,
name|a
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|child
operator|.
name|commitChangesToParent
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|a
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|MODIFIED
argument_list|,
name|parentA
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|parentA
operator|.
name|getTable2Array
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testCAY1183
parameter_list|()
throws|throws
name|Exception
block|{
name|ClientMtTable1
name|parentMt
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
decl_stmt|;
name|clientContext
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|ObjectContext
name|child
init|=
name|clientContext
operator|.
name|createChildContext
argument_list|()
decl_stmt|;
name|ClientMtTable1
name|childMt
init|=
operator|(
name|ClientMtTable1
operator|)
name|Cayenne
operator|.
name|objectForPK
argument_list|(
name|child
argument_list|,
name|parentMt
operator|.
name|getObjectId
argument_list|()
argument_list|)
decl_stmt|;
name|childMt
operator|.
name|setGlobalAttribute1
argument_list|(
literal|"1183"
argument_list|)
expr_stmt|;
name|ClientMtTable2
name|childMt2
init|=
name|child
operator|.
name|newObject
argument_list|(
name|ClientMtTable2
operator|.
name|class
argument_list|)
decl_stmt|;
name|childMt2
operator|.
name|setGlobalAttribute
argument_list|(
literal|"1183"
argument_list|)
expr_stmt|;
name|childMt2
operator|.
name|setTable1
argument_list|(
name|childMt
argument_list|)
expr_stmt|;
name|child
operator|.
name|commitChangesToParent
argument_list|()
expr_stmt|;
comment|// fetching other relationship... this fails per CAY-1183
name|childMt2
operator|.
name|getTable3
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testCAY1194
parameter_list|()
throws|throws
name|Exception
block|{
name|ClientMtTable1
name|parentMt
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
decl_stmt|;
name|ObjectContext
name|child
init|=
name|clientContext
operator|.
name|createChildContext
argument_list|()
decl_stmt|;
name|ClientMtTable2
name|childMt2
init|=
name|child
operator|.
name|newObject
argument_list|(
name|ClientMtTable2
operator|.
name|class
argument_list|)
decl_stmt|;
name|childMt2
operator|.
name|setGlobalAttribute
argument_list|(
literal|"222"
argument_list|)
expr_stmt|;
name|ClientMtTable1
name|localParentMt
init|=
operator|(
name|ClientMtTable1
operator|)
name|child
operator|.
name|localObject
argument_list|(
name|parentMt
operator|.
name|getObjectId
argument_list|()
argument_list|,
literal|null
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|parentMt
operator|.
name|getTable2Array
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|localParentMt
operator|.
name|getTable2Array
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|childMt2
operator|.
name|setTable1
argument_list|(
name|localParentMt
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|parentMt
operator|.
name|getTable2Array
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|localParentMt
operator|.
name|getTable2Array
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|localParentMt
operator|.
name|getTable2Array
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getObjectContext
argument_list|()
argument_list|,
name|child
argument_list|)
expr_stmt|;
name|child
operator|.
name|commitChangesToParent
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|parentMt
operator|.
name|getTable2Array
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|parentMt
operator|.
name|getTable2Array
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getObjectContext
argument_list|()
argument_list|,
name|clientContext
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testCommitChangesToParentOneToMany
parameter_list|()
throws|throws
name|Exception
block|{
name|ObjectContext
name|child
init|=
name|clientContext
operator|.
name|createChildContext
argument_list|()
decl_stmt|;
name|ClientMtTable1
name|master
init|=
name|child
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
decl_stmt|;
name|ClientMtTable2
name|dep
init|=
name|child
operator|.
name|newObject
argument_list|(
name|ClientMtTable2
operator|.
name|class
argument_list|)
decl_stmt|;
name|master
operator|.
name|addToTable2Array
argument_list|(
name|dep
argument_list|)
expr_stmt|;
name|child
operator|.
name|commitChangesToParent
argument_list|()
expr_stmt|;
name|ClientMtTable1
name|masterParent
init|=
operator|(
name|ClientMtTable1
operator|)
name|clientContext
operator|.
name|getGraphManager
argument_list|()
operator|.
name|getNode
argument_list|(
name|master
operator|.
name|getObjectId
argument_list|()
argument_list|)
decl_stmt|;
name|ClientMtTable2
name|depParent
init|=
operator|(
name|ClientMtTable2
operator|)
name|clientContext
operator|.
name|getGraphManager
argument_list|()
operator|.
name|getNode
argument_list|(
name|dep
operator|.
name|getObjectId
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|masterParent
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|depParent
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|masterParent
argument_list|,
name|depParent
operator|.
name|getTable1
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|masterParent
operator|.
name|getTable2Array
argument_list|()
operator|.
name|contains
argument_list|(
name|depParent
argument_list|)
argument_list|)
expr_stmt|;
comment|// check that arc changes got recorded in the parent context
name|GraphDiff
name|diffs
init|=
name|clientContext
operator|.
name|internalGraphManager
argument_list|()
operator|.
name|getDiffs
argument_list|()
decl_stmt|;
specifier|final
name|int
index|[]
name|arcDiffs
init|=
operator|new
name|int
index|[
literal|1
index|]
decl_stmt|;
specifier|final
name|int
index|[]
name|newNodes
init|=
operator|new
name|int
index|[
literal|1
index|]
decl_stmt|;
name|diffs
operator|.
name|apply
argument_list|(
operator|new
name|GraphChangeHandler
argument_list|()
block|{
specifier|public
name|void
name|arcCreated
parameter_list|(
name|Object
name|nodeId
parameter_list|,
name|Object
name|targetNodeId
parameter_list|,
name|Object
name|arcId
parameter_list|)
block|{
name|arcDiffs
index|[
literal|0
index|]
operator|++
expr_stmt|;
block|}
specifier|public
name|void
name|arcDeleted
parameter_list|(
name|Object
name|nodeId
parameter_list|,
name|Object
name|targetNodeId
parameter_list|,
name|Object
name|arcId
parameter_list|)
block|{
name|arcDiffs
index|[
literal|0
index|]
operator|--
expr_stmt|;
block|}
specifier|public
name|void
name|nodeCreated
parameter_list|(
name|Object
name|nodeId
parameter_list|)
block|{
name|newNodes
index|[
literal|0
index|]
operator|++
expr_stmt|;
block|}
specifier|public
name|void
name|nodeIdChanged
parameter_list|(
name|Object
name|nodeId
parameter_list|,
name|Object
name|newId
parameter_list|)
block|{
block|}
specifier|public
name|void
name|nodePropertyChanged
parameter_list|(
name|Object
name|nodeId
parameter_list|,
name|String
name|property
parameter_list|,
name|Object
name|oldValue
parameter_list|,
name|Object
name|newValue
parameter_list|)
block|{
block|}
specifier|public
name|void
name|nodeRemoved
parameter_list|(
name|Object
name|nodeId
parameter_list|)
block|{
name|newNodes
index|[
literal|0
index|]
operator|--
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|newNodes
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|arcDiffs
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testCommitChangesToParentOneToOne
parameter_list|()
throws|throws
name|Exception
block|{
name|ObjectContext
name|child
init|=
name|clientContext
operator|.
name|createChildContext
argument_list|()
decl_stmt|;
name|ClientMtTooneMaster
name|master
init|=
name|child
operator|.
name|newObject
argument_list|(
name|ClientMtTooneMaster
operator|.
name|class
argument_list|)
decl_stmt|;
name|ClientMtTooneDep
name|dep
init|=
name|child
operator|.
name|newObject
argument_list|(
name|ClientMtTooneDep
operator|.
name|class
argument_list|)
decl_stmt|;
name|master
operator|.
name|setToDependent
argument_list|(
name|dep
argument_list|)
expr_stmt|;
name|child
operator|.
name|commitChangesToParent
argument_list|()
expr_stmt|;
name|ClientMtTooneMaster
name|masterParent
init|=
operator|(
name|ClientMtTooneMaster
operator|)
name|clientContext
operator|.
name|getGraphManager
argument_list|()
operator|.
name|getNode
argument_list|(
name|master
operator|.
name|getObjectId
argument_list|()
argument_list|)
decl_stmt|;
name|ClientMtTooneDep
name|depParent
init|=
operator|(
name|ClientMtTooneDep
operator|)
name|clientContext
operator|.
name|getGraphManager
argument_list|()
operator|.
name|getNode
argument_list|(
name|dep
operator|.
name|getObjectId
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|masterParent
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|depParent
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|masterParent
argument_list|,
name|depParent
operator|.
name|getToMaster
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|depParent
argument_list|,
name|masterParent
operator|.
name|getToDependent
argument_list|()
argument_list|)
expr_stmt|;
comment|// check that arc changes got recorded in the parent context
name|GraphDiff
name|diffs
init|=
name|clientContext
operator|.
name|internalGraphManager
argument_list|()
operator|.
name|getDiffs
argument_list|()
decl_stmt|;
specifier|final
name|int
index|[]
name|arcDiffs
init|=
operator|new
name|int
index|[
literal|1
index|]
decl_stmt|;
specifier|final
name|int
index|[]
name|newNodes
init|=
operator|new
name|int
index|[
literal|1
index|]
decl_stmt|;
name|diffs
operator|.
name|apply
argument_list|(
operator|new
name|GraphChangeHandler
argument_list|()
block|{
specifier|public
name|void
name|arcCreated
parameter_list|(
name|Object
name|nodeId
parameter_list|,
name|Object
name|targetNodeId
parameter_list|,
name|Object
name|arcId
parameter_list|)
block|{
name|arcDiffs
index|[
literal|0
index|]
operator|++
expr_stmt|;
block|}
specifier|public
name|void
name|arcDeleted
parameter_list|(
name|Object
name|nodeId
parameter_list|,
name|Object
name|targetNodeId
parameter_list|,
name|Object
name|arcId
parameter_list|)
block|{
name|arcDiffs
index|[
literal|0
index|]
operator|--
expr_stmt|;
block|}
specifier|public
name|void
name|nodeCreated
parameter_list|(
name|Object
name|nodeId
parameter_list|)
block|{
name|newNodes
index|[
literal|0
index|]
operator|++
expr_stmt|;
block|}
specifier|public
name|void
name|nodeIdChanged
parameter_list|(
name|Object
name|nodeId
parameter_list|,
name|Object
name|newId
parameter_list|)
block|{
block|}
specifier|public
name|void
name|nodePropertyChanged
parameter_list|(
name|Object
name|nodeId
parameter_list|,
name|String
name|property
parameter_list|,
name|Object
name|oldValue
parameter_list|,
name|Object
name|newValue
parameter_list|)
block|{
block|}
specifier|public
name|void
name|nodeRemoved
parameter_list|(
name|Object
name|nodeId
parameter_list|)
block|{
name|newNodes
index|[
literal|0
index|]
operator|--
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|newNodes
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|arcDiffs
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

