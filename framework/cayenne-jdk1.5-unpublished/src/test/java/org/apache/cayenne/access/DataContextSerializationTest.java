begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|art
operator|.
name|Artist
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|PersistenceState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|CayenneCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|util
operator|.
name|Cayenne
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|util
operator|.
name|Util
import|;
end_import

begin_comment
comment|/**  */
end_comment

begin_class
specifier|public
class|class
name|DataContextSerializationTest
extends|extends
name|CayenneCase
block|{
annotation|@
name|Override
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|fixSharedConfiguration
argument_list|()
expr_stmt|;
name|deleteTestData
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|fixSharedConfiguration
parameter_list|()
block|{
comment|// for context to deserialize properly,
comment|// Configuration singleton must have the right default domain
name|Configuration
name|config
init|=
name|Configuration
operator|.
name|getSharedConfiguration
argument_list|()
decl_stmt|;
if|if
condition|(
name|getDomain
argument_list|()
operator|!=
name|config
operator|.
name|getDomain
argument_list|()
condition|)
block|{
if|if
condition|(
name|config
operator|.
name|getDomain
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|config
operator|.
name|removeDomain
argument_list|(
name|config
operator|.
name|getDomain
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|config
operator|.
name|addDomain
argument_list|(
name|getDomain
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testSerializeResolver
parameter_list|()
throws|throws
name|Exception
block|{
name|DataContext
name|context
init|=
name|createDataContextWithSharedCache
argument_list|()
decl_stmt|;
name|DataContext
name|deserializedContext
init|=
operator|(
name|DataContext
operator|)
name|Util
operator|.
name|cloneViaSerialization
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|deserializedContext
operator|.
name|getEntityResolver
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|context
operator|.
name|getEntityResolver
argument_list|()
argument_list|,
name|deserializedContext
operator|.
name|getEntityResolver
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSerializeChannel
parameter_list|()
throws|throws
name|Exception
block|{
name|DataContext
name|context
init|=
name|createDataContextWithSharedCache
argument_list|()
decl_stmt|;
name|DataContext
name|deserializedContext
init|=
operator|(
name|DataContext
operator|)
name|Util
operator|.
name|cloneViaSerialization
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|deserializedContext
operator|.
name|getChannel
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|context
operator|.
name|getChannel
argument_list|()
argument_list|,
name|deserializedContext
operator|.
name|getChannel
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSerializeWithSharedCache
parameter_list|()
throws|throws
name|Exception
block|{
name|createTestData
argument_list|(
literal|"prepare"
argument_list|)
expr_stmt|;
name|DataContext
name|context
init|=
name|createDataContextWithSharedCache
argument_list|()
decl_stmt|;
name|DataContext
name|deserializedContext
init|=
operator|(
name|DataContext
operator|)
name|Util
operator|.
name|cloneViaSerialization
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|assertNotSame
argument_list|(
name|context
argument_list|,
name|deserializedContext
argument_list|)
expr_stmt|;
name|assertNotSame
argument_list|(
name|context
operator|.
name|getObjectStore
argument_list|()
argument_list|,
name|deserializedContext
operator|.
name|getObjectStore
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|context
operator|.
name|getParentDataDomain
argument_list|()
argument_list|,
name|deserializedContext
operator|.
name|getParentDataDomain
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|context
operator|.
name|getObjectStore
argument_list|()
operator|.
name|getDataRowCache
argument_list|()
argument_list|,
name|deserializedContext
operator|.
name|getObjectStore
argument_list|()
operator|.
name|getDataRowCache
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|deserializedContext
operator|.
name|getParentDataDomain
argument_list|()
operator|.
name|getSharedSnapshotCache
argument_list|()
argument_list|,
name|deserializedContext
operator|.
name|getObjectStore
argument_list|()
operator|.
name|getDataRowCache
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|deserializedContext
operator|.
name|getEntityResolver
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|context
operator|.
name|getEntityResolver
argument_list|()
argument_list|,
name|deserializedContext
operator|.
name|getEntityResolver
argument_list|()
argument_list|)
expr_stmt|;
name|Artist
name|a
init|=
name|Cayenne
operator|.
name|objectForPK
argument_list|(
name|deserializedContext
argument_list|,
name|Artist
operator|.
name|class
argument_list|,
literal|33001
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|a
argument_list|)
expr_stmt|;
name|a
operator|.
name|setArtistName
argument_list|(
name|a
operator|.
name|getArtistName
argument_list|()
operator|+
literal|"___"
argument_list|)
expr_stmt|;
name|deserializedContext
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testSerializeWithLocalCache
parameter_list|()
throws|throws
name|Exception
block|{
name|createTestData
argument_list|(
literal|"prepare"
argument_list|)
expr_stmt|;
name|DataContext
name|context
init|=
name|createDataContextWithDedicatedCache
argument_list|()
decl_stmt|;
name|assertNotSame
argument_list|(
name|context
operator|.
name|getParentDataDomain
argument_list|()
operator|.
name|getSharedSnapshotCache
argument_list|()
argument_list|,
name|context
operator|.
name|getObjectStore
argument_list|()
operator|.
name|getDataRowCache
argument_list|()
argument_list|)
expr_stmt|;
name|DataContext
name|deserializedContext
init|=
operator|(
name|DataContext
operator|)
name|Util
operator|.
name|cloneViaSerialization
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|assertNotSame
argument_list|(
name|context
argument_list|,
name|deserializedContext
argument_list|)
expr_stmt|;
name|assertNotSame
argument_list|(
name|context
operator|.
name|getObjectStore
argument_list|()
argument_list|,
name|deserializedContext
operator|.
name|getObjectStore
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|context
operator|.
name|getParentDataDomain
argument_list|()
argument_list|,
name|deserializedContext
operator|.
name|getParentDataDomain
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotSame
argument_list|(
name|context
operator|.
name|getObjectStore
argument_list|()
operator|.
name|getDataRowCache
argument_list|()
argument_list|,
name|deserializedContext
operator|.
name|getObjectStore
argument_list|()
operator|.
name|getDataRowCache
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotSame
argument_list|(
name|deserializedContext
operator|.
name|getParentDataDomain
argument_list|()
operator|.
name|getSharedSnapshotCache
argument_list|()
argument_list|,
name|deserializedContext
operator|.
name|getObjectStore
argument_list|()
operator|.
name|getDataRowCache
argument_list|()
argument_list|)
expr_stmt|;
name|Artist
name|a
init|=
name|Cayenne
operator|.
name|objectForPK
argument_list|(
name|deserializedContext
argument_list|,
name|Artist
operator|.
name|class
argument_list|,
literal|33001
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|a
argument_list|)
expr_stmt|;
name|a
operator|.
name|setArtistName
argument_list|(
name|a
operator|.
name|getArtistName
argument_list|()
operator|+
literal|"___"
argument_list|)
expr_stmt|;
comment|// this blows per CAY-796
name|deserializedContext
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testSerializeNew
parameter_list|()
throws|throws
name|Exception
block|{
name|DataContext
name|context
init|=
name|createDataContextWithSharedCache
argument_list|()
decl_stmt|;
name|Artist
name|artist
init|=
operator|(
name|Artist
operator|)
name|context
operator|.
name|newObject
argument_list|(
literal|"Artist"
argument_list|)
decl_stmt|;
name|artist
operator|.
name|setArtistName
argument_list|(
literal|"artist1"
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|artist
operator|.
name|getObjectId
argument_list|()
argument_list|)
expr_stmt|;
name|DataContext
name|deserializedContext
init|=
operator|(
name|DataContext
operator|)
name|Util
operator|.
name|cloneViaSerialization
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|context
operator|.
name|getParentDataDomain
argument_list|()
argument_list|,
name|deserializedContext
operator|.
name|getParentDataDomain
argument_list|()
argument_list|)
expr_stmt|;
comment|// there should be only one object registered
name|Artist
name|deserializedArtist
init|=
operator|(
name|Artist
operator|)
name|deserializedContext
operator|.
name|getObjectStore
argument_list|()
operator|.
name|getObjectIterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|deserializedArtist
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|NEW
argument_list|,
name|deserializedArtist
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|deserializedArtist
operator|.
name|getObjectId
argument_list|()
operator|.
name|isTemporary
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"artist1"
argument_list|,
name|deserializedArtist
operator|.
name|getArtistName
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|deserializedContext
argument_list|,
name|deserializedArtist
operator|.
name|getObjectContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSerializeCommitted
parameter_list|()
throws|throws
name|Exception
block|{
name|DataContext
name|context
init|=
name|createDataContextWithSharedCache
argument_list|()
decl_stmt|;
name|Artist
name|artist
init|=
operator|(
name|Artist
operator|)
name|context
operator|.
name|newObject
argument_list|(
literal|"Artist"
argument_list|)
decl_stmt|;
name|artist
operator|.
name|setArtistName
argument_list|(
literal|"artist1"
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|artist
operator|.
name|getObjectId
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|DataContext
name|deserializedContext
init|=
operator|(
name|DataContext
operator|)
name|Util
operator|.
name|cloneViaSerialization
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|context
operator|.
name|getParentDataDomain
argument_list|()
argument_list|,
name|deserializedContext
operator|.
name|getParentDataDomain
argument_list|()
argument_list|)
expr_stmt|;
comment|// there should be only one object registered
name|Artist
name|deserializedArtist
init|=
operator|(
name|Artist
operator|)
name|deserializedContext
operator|.
name|getObjectStore
argument_list|()
operator|.
name|getObjectIterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|deserializedArtist
argument_list|)
expr_stmt|;
comment|// deserialized as hollow...
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|HOLLOW
argument_list|,
name|deserializedArtist
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|deserializedArtist
operator|.
name|getObjectId
argument_list|()
operator|.
name|isTemporary
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"artist1"
argument_list|,
name|deserializedArtist
operator|.
name|getArtistName
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|deserializedContext
argument_list|,
name|deserializedArtist
operator|.
name|getObjectContext
argument_list|()
argument_list|)
expr_stmt|;
comment|// test that to-many relationships are initialized
name|List
name|paintings
init|=
name|deserializedArtist
operator|.
name|getPaintingArray
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|paintings
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|paintings
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSerializeModified
parameter_list|()
throws|throws
name|Exception
block|{
name|DataContext
name|context
init|=
name|createDataContextWithSharedCache
argument_list|()
decl_stmt|;
name|Artist
name|artist
init|=
operator|(
name|Artist
operator|)
name|context
operator|.
name|newObject
argument_list|(
literal|"Artist"
argument_list|)
decl_stmt|;
name|artist
operator|.
name|setArtistName
argument_list|(
literal|"artist1"
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|artist
operator|.
name|getObjectId
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|artist
operator|.
name|setArtistName
argument_list|(
literal|"artist2"
argument_list|)
expr_stmt|;
name|DataContext
name|deserializedContext
init|=
operator|(
name|DataContext
operator|)
name|Util
operator|.
name|cloneViaSerialization
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|context
operator|.
name|getParentDataDomain
argument_list|()
argument_list|,
name|deserializedContext
operator|.
name|getParentDataDomain
argument_list|()
argument_list|)
expr_stmt|;
comment|// there should be only one object registered
name|Artist
name|deserializedArtist
init|=
operator|(
name|Artist
operator|)
name|deserializedContext
operator|.
name|getObjectStore
argument_list|()
operator|.
name|getObjectIterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|deserializedArtist
argument_list|)
expr_stmt|;
comment|// deserialized as hollow...
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|MODIFIED
argument_list|,
name|deserializedArtist
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|deserializedArtist
operator|.
name|getObjectId
argument_list|()
operator|.
name|isTemporary
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"artist2"
argument_list|,
name|deserializedArtist
operator|.
name|getArtistName
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|deserializedContext
argument_list|,
name|deserializedArtist
operator|.
name|getObjectContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

