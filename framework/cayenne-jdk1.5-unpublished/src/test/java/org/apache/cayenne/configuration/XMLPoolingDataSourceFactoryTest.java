begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|sql
operator|.
name|DataSource
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|conn
operator|.
name|DataSourceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|resource
operator|.
name|URLResource
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mockrunner
operator|.
name|mock
operator|.
name|jdbc
operator|.
name|MockDataSource
import|;
end_import

begin_class
specifier|public
class|class
name|XMLPoolingDataSourceFactoryTest
extends|extends
name|TestCase
block|{
specifier|public
name|void
name|testGetDataSource
parameter_list|()
throws|throws
name|Exception
block|{
name|String
name|baseUrl
init|=
name|getClass
argument_list|()
operator|.
name|getPackage
argument_list|()
operator|.
name|getName
argument_list|()
operator|.
name|replace
argument_list|(
literal|'.'
argument_list|,
literal|'/'
argument_list|)
decl_stmt|;
name|URL
name|url
init|=
name|getClass
argument_list|()
operator|.
name|getClassLoader
argument_list|()
operator|.
name|getResource
argument_list|(
name|baseUrl
operator|+
literal|"/testNode1.driver.xml"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|url
argument_list|)
expr_stmt|;
name|DataNodeDescriptor
name|nodeDescriptor
init|=
operator|new
name|DataNodeDescriptor
argument_list|()
decl_stmt|;
name|nodeDescriptor
operator|.
name|setConfigurationSource
argument_list|(
operator|new
name|URLResource
argument_list|(
name|url
argument_list|)
argument_list|)
expr_stmt|;
specifier|final
name|DataSource
name|dataSource
init|=
operator|new
name|MockDataSource
argument_list|()
decl_stmt|;
name|XMLPoolingDataSourceFactory
name|factory
init|=
operator|new
name|XMLPoolingDataSourceFactory
argument_list|()
block|{
comment|// override super to make test assertions and to prevent DB connection
annotation|@
name|Override
specifier|protected
name|DataSource
name|createDataSource
parameter_list|(
name|DataSourceInfo
name|dataSourceDescriptor
parameter_list|)
throws|throws
name|Exception
block|{
name|assertEquals
argument_list|(
literal|"jdbcDriver"
argument_list|,
name|dataSourceDescriptor
operator|.
name|getJdbcDriver
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"jdbcUrl"
argument_list|,
name|dataSourceDescriptor
operator|.
name|getDataSourceUrl
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|dataSourceDescriptor
operator|.
name|getMinConnections
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|dataSourceDescriptor
operator|.
name|getMaxConnections
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"jdbcUserName"
argument_list|,
name|dataSourceDescriptor
operator|.
name|getUserName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"jdbcPassword"
argument_list|,
name|dataSourceDescriptor
operator|.
name|getPassword
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|dataSource
return|;
block|}
block|}
decl_stmt|;
name|DataSource
name|newDataSource
init|=
name|factory
operator|.
name|getDataSource
argument_list|(
name|nodeDescriptor
argument_list|)
decl_stmt|;
name|assertSame
argument_list|(
name|dataSource
argument_list|,
name|newDataSource
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

