begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|server
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|sql
operator|.
name|DataSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ObjectContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|DataContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|DataNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|jdbc
operator|.
name|BatchQueryBuilderFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|server
operator|.
name|ServerRuntime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|conn
operator|.
name|DataSourceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|DbAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Binder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Module
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|spi
operator|.
name|DefaultScope
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|log
operator|.
name|CommonsJdbcEventLogger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|log
operator|.
name|JdbcEventLogger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|EntityResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|test
operator|.
name|jdbc
operator|.
name|DBHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|AccessStackAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|CayenneResources
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|DataChannelInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|UnitTestLifecycleManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|util
operator|.
name|SQLTemplateCustomizer
import|;
end_import

begin_class
specifier|public
class|class
name|ServerCaseModule
implements|implements
name|Module
block|{
specifier|protected
name|CayenneResources
name|resources
decl_stmt|;
specifier|protected
name|DefaultScope
name|testScope
decl_stmt|;
specifier|public
name|ServerCaseModule
parameter_list|(
name|CayenneResources
name|resources
parameter_list|,
name|DefaultScope
name|testScope
parameter_list|)
block|{
name|this
operator|.
name|resources
operator|=
name|resources
expr_stmt|;
name|this
operator|.
name|testScope
operator|=
name|testScope
expr_stmt|;
block|}
specifier|public
name|void
name|configure
parameter_list|(
name|Binder
name|binder
parameter_list|)
block|{
name|ServerCaseDataSourceFactory
name|dataSourceFactory
init|=
operator|new
name|ServerCaseDataSourceFactory
argument_list|(
name|resources
operator|.
name|getConnectionInfo
argument_list|()
argument_list|,
literal|"map-db1"
argument_list|,
literal|"map-db2"
argument_list|)
decl_stmt|;
comment|// these are the objects injectable in unit tests that subclass from
comment|// ServerCase. Note that ServerRuntimeProvider creates ServerRuntime
comment|// instances complete with their own DI injectors, independent from the
comment|// unit test injector. ServerRuntime injector contents are customized
comment|// inside ServerRuntimeProvider.
name|binder
operator|.
name|bind
argument_list|(
name|JdbcEventLogger
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|CommonsJdbcEventLogger
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// singleton objects
name|binder
operator|.
name|bind
argument_list|(
name|UnitTestLifecycleManager
operator|.
name|class
argument_list|)
operator|.
name|toInstance
argument_list|(
operator|new
name|ServerCaseLifecycleManager
argument_list|(
name|testScope
argument_list|)
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|DataSourceInfo
operator|.
name|class
argument_list|)
operator|.
name|toInstance
argument_list|(
name|resources
operator|.
name|getConnectionInfo
argument_list|()
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|DataSource
operator|.
name|class
argument_list|)
operator|.
name|toProviderInstance
argument_list|(
operator|new
name|ServerCaseSharedDataSourceProvider
argument_list|(
name|dataSourceFactory
argument_list|)
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|DbAdapter
operator|.
name|class
argument_list|)
operator|.
name|toProviderInstance
argument_list|(
operator|new
name|CayenneResourcesDbAdapterProvider
argument_list|(
name|resources
argument_list|)
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|AccessStackAdapter
operator|.
name|class
argument_list|)
operator|.
name|toProviderInstance
argument_list|(
operator|new
name|CayenneResourcesAccessStackAdapterProvider
argument_list|(
name|resources
argument_list|)
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|BatchQueryBuilderFactory
operator|.
name|class
argument_list|)
operator|.
name|toProvider
argument_list|(
name|ServerCaseBatchQueryBuilderFactoryProvider
operator|.
name|class
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|DataChannelInterceptor
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|ServerCaseDataChannelInterceptor
operator|.
name|class
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|SQLTemplateCustomizer
operator|.
name|class
argument_list|)
operator|.
name|toProvider
argument_list|(
name|SQLTemplateCustomizerProvider
operator|.
name|class
argument_list|)
expr_stmt|;
comment|// test-scoped objects
name|binder
operator|.
name|bind
argument_list|(
name|EntityResolver
operator|.
name|class
argument_list|)
operator|.
name|toProvider
argument_list|(
name|ServerCaseEntityResolverProvider
operator|.
name|class
argument_list|)
operator|.
name|in
argument_list|(
name|testScope
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|DataNode
operator|.
name|class
argument_list|)
operator|.
name|toProvider
argument_list|(
name|ServerCaseDataNodeProvider
operator|.
name|class
argument_list|)
operator|.
name|in
argument_list|(
name|testScope
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|ServerCaseProperties
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|ServerCaseProperties
operator|.
name|class
argument_list|)
operator|.
name|in
argument_list|(
name|testScope
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|ServerRuntime
operator|.
name|class
argument_list|)
operator|.
name|toProviderInstance
argument_list|(
operator|new
name|ServerRuntimeProvider
argument_list|(
name|resources
argument_list|,
name|dataSourceFactory
argument_list|)
argument_list|)
operator|.
name|in
argument_list|(
name|testScope
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|ObjectContext
operator|.
name|class
argument_list|)
operator|.
name|toProvider
argument_list|(
name|ServerCaseObjectContextProvider
operator|.
name|class
argument_list|)
operator|.
name|withoutScope
argument_list|()
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|DataContext
operator|.
name|class
argument_list|)
operator|.
name|toProvider
argument_list|(
name|ServerCaseDataContextProvider
operator|.
name|class
argument_list|)
operator|.
name|withoutScope
argument_list|()
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|DBHelper
operator|.
name|class
argument_list|)
operator|.
name|toProvider
argument_list|(
name|FlavoredDBHelperProvider
operator|.
name|class
argument_list|)
operator|.
name|in
argument_list|(
name|testScope
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

