begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DataMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|CayenneCase
import|;
end_import

begin_comment
comment|/**  * Test cases for DbGenerator.  *   * @author Andrus Adamchik  */
end_comment

begin_class
specifier|public
class|class
name|DbGeneratorTest
extends|extends
name|CayenneCase
block|{
specifier|protected
name|DbGenerator
name|gen
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|gen
operator|=
operator|new
name|DbGenerator
argument_list|(
name|getNode
argument_list|()
operator|.
name|getAdapter
argument_list|()
argument_list|,
name|getDomain
argument_list|()
operator|.
name|getMap
argument_list|(
literal|"testmap"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testAdapter
parameter_list|()
throws|throws
name|Exception
block|{
name|assertSame
argument_list|(
name|getNode
argument_list|()
operator|.
name|getAdapter
argument_list|()
argument_list|,
name|gen
operator|.
name|getAdapter
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testPkFilteringLogic
parameter_list|()
throws|throws
name|Exception
block|{
name|DataMap
name|map
init|=
name|getDomain
argument_list|()
operator|.
name|getMap
argument_list|(
literal|"testmap"
argument_list|)
decl_stmt|;
name|DbEntity
name|artistExhibit
init|=
name|map
operator|.
name|getDbEntity
argument_list|(
literal|"ARTIST_EXHIBIT"
argument_list|)
decl_stmt|;
name|DbEntity
name|exhibit
init|=
name|map
operator|.
name|getDbEntity
argument_list|(
literal|"EXHIBIT"
argument_list|)
decl_stmt|;
comment|// sanity check
name|assertNotNull
argument_list|(
name|artistExhibit
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|exhibit
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|gen
operator|.
name|dbEntitiesRequiringAutoPK
argument_list|)
expr_stmt|;
comment|// real test
name|assertTrue
argument_list|(
name|gen
operator|.
name|dbEntitiesRequiringAutoPK
operator|.
name|contains
argument_list|(
name|exhibit
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|gen
operator|.
name|dbEntitiesRequiringAutoPK
operator|.
name|contains
argument_list|(
name|artistExhibit
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testCreatePkSupport
parameter_list|()
throws|throws
name|Exception
block|{
name|assertTrue
argument_list|(
name|gen
operator|.
name|shouldCreatePKSupport
argument_list|()
argument_list|)
expr_stmt|;
name|gen
operator|.
name|setShouldCreatePKSupport
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|gen
operator|.
name|shouldCreatePKSupport
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testShouldCreateTables
parameter_list|()
throws|throws
name|Exception
block|{
name|assertTrue
argument_list|(
name|gen
operator|.
name|shouldCreateTables
argument_list|()
argument_list|)
expr_stmt|;
name|gen
operator|.
name|setShouldCreateTables
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|gen
operator|.
name|shouldCreateTables
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testDropPkSupport
parameter_list|()
throws|throws
name|Exception
block|{
name|assertFalse
argument_list|(
name|gen
operator|.
name|shouldDropPKSupport
argument_list|()
argument_list|)
expr_stmt|;
name|gen
operator|.
name|setShouldDropPKSupport
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|gen
operator|.
name|shouldDropPKSupport
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testShouldDropTables
parameter_list|()
throws|throws
name|Exception
block|{
name|assertFalse
argument_list|(
name|gen
operator|.
name|shouldDropTables
argument_list|()
argument_list|)
expr_stmt|;
name|gen
operator|.
name|setShouldDropTables
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|gen
operator|.
name|shouldDropTables
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

