begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|db1
operator|.
name|CrossdbM1E1
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|db2
operator|.
name|CrossdbM2E1
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|db2
operator|.
name|CrossdbM2E2
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|server
operator|.
name|ServerCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|server
operator|.
name|UseServerRuntime
import|;
end_import

begin_class
annotation|@
name|UseServerRuntime
argument_list|(
name|ServerCase
operator|.
name|MULTINODE_PROJECT
argument_list|)
specifier|public
class|class
name|DataContextCrossDBTest
extends|extends
name|ServerCase
block|{
annotation|@
name|Inject
specifier|private
name|DataContext
name|context
decl_stmt|;
specifier|public
name|void
name|testMultiDBUpdate
parameter_list|()
block|{
comment|// for now testing that no exceptions are thrown... wouldn't hurt to check the
comment|// data as well???
comment|// insert
name|CrossdbM1E1
name|o1
init|=
name|context
operator|.
name|newObject
argument_list|(
name|CrossdbM1E1
operator|.
name|class
argument_list|)
decl_stmt|;
name|o1
operator|.
name|setName
argument_list|(
literal|"o1"
argument_list|)
expr_stmt|;
name|CrossdbM2E1
name|o2
init|=
name|context
operator|.
name|newObject
argument_list|(
name|CrossdbM2E1
operator|.
name|class
argument_list|)
decl_stmt|;
name|o2
operator|.
name|setName
argument_list|(
literal|"o2"
argument_list|)
expr_stmt|;
name|CrossdbM2E2
name|o3
init|=
name|context
operator|.
name|newObject
argument_list|(
name|CrossdbM2E2
operator|.
name|class
argument_list|)
decl_stmt|;
name|o3
operator|.
name|setName
argument_list|(
literal|"o3"
argument_list|)
expr_stmt|;
name|o3
operator|.
name|setToM1E1
argument_list|(
name|o1
argument_list|)
expr_stmt|;
name|o3
operator|.
name|setToM2E1
argument_list|(
name|o2
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
comment|// update
name|CrossdbM1E1
name|o11
init|=
name|context
operator|.
name|newObject
argument_list|(
name|CrossdbM1E1
operator|.
name|class
argument_list|)
decl_stmt|;
name|o11
operator|.
name|setName
argument_list|(
literal|"o11"
argument_list|)
expr_stmt|;
name|o3
operator|.
name|setToM1E1
argument_list|(
name|o11
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
comment|// update with existing
name|o3
operator|.
name|setToM1E1
argument_list|(
name|o1
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

