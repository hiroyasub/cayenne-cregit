begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|reflect
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|exp
operator|.
name|Expression
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjEntity
import|;
end_import

begin_class
specifier|public
class|class
name|MockClassDescriptor
implements|implements
name|ClassDescriptor
block|{
specifier|public
name|Object
name|createObject
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|ObjEntity
name|getEntity
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
comment|/**      * @since 3.0      */
specifier|public
name|Collection
argument_list|<
name|DbEntity
argument_list|>
name|getRootDbEntities
parameter_list|()
block|{
return|return
name|Collections
operator|.
name|emptyList
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|isFault
parameter_list|(
name|Object
name|object
parameter_list|)
block|{
return|return
literal|false
return|;
block|}
comment|/**      * @deprecated since 3.0. Use {@link #visitProperties(PropertyVisitor)} method      *             instead.      */
specifier|public
name|Iterator
argument_list|<
name|Property
argument_list|>
name|getProperties
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|Expression
name|getEntityQualifier
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|Iterator
argument_list|<
name|Property
argument_list|>
name|getIdProperties
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|Iterator
argument_list|<
name|DbAttribute
argument_list|>
name|getDiscriminatorColumns
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|Iterator
argument_list|<
name|ArcProperty
argument_list|>
name|getMapArcProperties
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|ClassDescriptor
name|getSubclassDescriptor
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|objectClass
parameter_list|)
block|{
return|return
name|this
return|;
block|}
specifier|public
name|Accessor
name|getObjectContextProperty
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|Accessor
name|getObjectIdProperty
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|Accessor
name|getPersistenceStateProperty
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|injectValueHolders
parameter_list|(
name|Object
name|object
parameter_list|)
throws|throws
name|PropertyException
block|{
block|}
specifier|public
name|void
name|shallowMerge
parameter_list|(
name|Object
name|from
parameter_list|,
name|Object
name|to
parameter_list|)
throws|throws
name|PropertyException
block|{
block|}
specifier|public
name|Property
name|getDeclaredProperty
parameter_list|(
name|String
name|propertyName
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|Class
argument_list|<
name|?
argument_list|>
name|getObjectClass
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|Property
name|getProperty
parameter_list|(
name|String
name|propertyName
parameter_list|)
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|ClassDescriptor
name|getSuperclassDescriptor
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|boolean
name|visitProperties
parameter_list|(
name|PropertyVisitor
name|visitor
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|boolean
name|visitAllProperties
parameter_list|(
name|PropertyVisitor
name|visitor
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|boolean
name|visitDeclaredProperties
parameter_list|(
name|PropertyVisitor
name|visitor
parameter_list|)
block|{
return|return
literal|true
return|;
block|}
block|}
end_class

end_unit

