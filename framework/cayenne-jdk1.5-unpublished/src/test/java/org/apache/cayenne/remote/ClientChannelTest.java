begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|remote
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|CayenneContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|CayenneRuntimeException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|MockPersistentObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ObjectId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|PersistenceState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|Persistent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|QueryResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|event
operator|.
name|CayenneEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|event
operator|.
name|DefaultEventManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|event
operator|.
name|EventBridge
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DataMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|EntityResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|SelectQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|CayenneCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|util
operator|.
name|GenericResponse
import|;
end_import

begin_class
specifier|public
class|class
name|ClientChannelTest
extends|extends
name|CayenneCase
block|{
specifier|public
name|void
name|testOnQuerySelect
parameter_list|()
block|{
specifier|final
name|MockPersistentObject
name|o1
init|=
operator|new
name|MockPersistentObject
argument_list|()
decl_stmt|;
name|ObjectId
name|oid1
init|=
operator|new
name|ObjectId
argument_list|(
literal|"test_entity"
argument_list|)
decl_stmt|;
name|o1
operator|.
name|setObjectId
argument_list|(
name|oid1
argument_list|)
expr_stmt|;
name|MockClientConnection
name|connection
init|=
operator|new
name|MockClientConnection
argument_list|(
operator|new
name|GenericResponse
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|o1
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|ClientChannel
name|channel
init|=
operator|new
name|ClientChannel
argument_list|(
name|connection
argument_list|)
decl_stmt|;
name|CayenneContext
name|context
init|=
operator|new
name|CayenneContext
argument_list|(
name|channel
argument_list|)
decl_stmt|;
name|ObjEntity
name|entity
init|=
operator|new
name|ObjEntity
argument_list|(
literal|"test_entity"
argument_list|)
decl_stmt|;
name|entity
operator|.
name|setClassName
argument_list|(
name|MockPersistentObject
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|DataMap
name|dataMap
init|=
operator|new
name|DataMap
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|dataMap
operator|.
name|addObjEntity
argument_list|(
name|entity
argument_list|)
expr_stmt|;
name|Collection
name|entities
init|=
name|Collections
operator|.
name|singleton
argument_list|(
name|dataMap
argument_list|)
decl_stmt|;
name|context
operator|.
name|setEntityResolver
argument_list|(
operator|new
name|EntityResolver
argument_list|(
name|entities
argument_list|)
argument_list|)
expr_stmt|;
name|QueryResponse
name|response
init|=
name|channel
operator|.
name|onQuery
argument_list|(
name|context
argument_list|,
operator|new
name|SelectQuery
argument_list|(
literal|"test_entity"
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|List
name|list
init|=
name|response
operator|.
name|firstList
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|list
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|list
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Persistent
name|o1_1
init|=
operator|(
name|Persistent
operator|)
name|list
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|o1
operator|.
name|getObjectId
argument_list|()
argument_list|,
name|o1_1
operator|.
name|getObjectId
argument_list|()
argument_list|)
expr_stmt|;
comment|// ObjectContext must be injected
name|assertEquals
argument_list|(
name|context
argument_list|,
name|o1_1
operator|.
name|getObjectContext
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|o1_1
argument_list|,
name|context
operator|.
name|getGraphManager
argument_list|()
operator|.
name|getNode
argument_list|(
name|oid1
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testOnQuerySelectOverrideCached
parameter_list|()
block|{
name|ObjEntity
name|entity
init|=
operator|new
name|ObjEntity
argument_list|(
literal|"test_entity"
argument_list|)
decl_stmt|;
name|entity
operator|.
name|setClassName
argument_list|(
name|MockPersistentObject
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|DataMap
name|dataMap
init|=
operator|new
name|DataMap
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|dataMap
operator|.
name|addObjEntity
argument_list|(
name|entity
argument_list|)
expr_stmt|;
name|Collection
name|entities
init|=
name|Collections
operator|.
name|singleton
argument_list|(
name|dataMap
argument_list|)
decl_stmt|;
name|EntityResolver
name|resolver
init|=
operator|new
name|EntityResolver
argument_list|(
name|entities
argument_list|)
decl_stmt|;
name|CayenneContext
name|context
init|=
operator|new
name|CayenneContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|setEntityResolver
argument_list|(
name|resolver
argument_list|)
expr_stmt|;
name|ObjectId
name|oid
init|=
operator|new
name|ObjectId
argument_list|(
literal|"test_entity"
argument_list|,
literal|"x"
argument_list|,
literal|"y"
argument_list|)
decl_stmt|;
name|MockPersistentObject
name|o1
init|=
operator|new
name|MockPersistentObject
argument_list|(
name|oid
argument_list|)
decl_stmt|;
name|context
operator|.
name|getGraphManager
argument_list|()
operator|.
name|registerNode
argument_list|(
name|oid
argument_list|,
name|o1
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|o1
argument_list|,
name|context
operator|.
name|getGraphManager
argument_list|()
operator|.
name|getNode
argument_list|(
name|oid
argument_list|)
argument_list|)
expr_stmt|;
comment|// another object with the same GID ... we must merge it with cached and return
comment|// cached object instead of the one fetched
name|MockPersistentObject
name|o2
init|=
operator|new
name|MockPersistentObject
argument_list|(
name|oid
argument_list|)
decl_stmt|;
name|MockClientConnection
name|connection
init|=
operator|new
name|MockClientConnection
argument_list|(
operator|new
name|GenericResponse
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|o2
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|ClientChannel
name|channel
init|=
operator|new
name|ClientChannel
argument_list|(
name|connection
argument_list|)
decl_stmt|;
name|context
operator|.
name|setChannel
argument_list|(
name|channel
argument_list|)
expr_stmt|;
name|QueryResponse
name|response
init|=
name|channel
operator|.
name|onQuery
argument_list|(
name|context
argument_list|,
operator|new
name|SelectQuery
argument_list|(
literal|"test_entity"
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|List
name|list
init|=
name|response
operator|.
name|firstList
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|list
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|list
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Expected cached object, got: "
operator|+
name|list
argument_list|,
name|list
operator|.
name|contains
argument_list|(
name|o1
argument_list|)
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|o1
argument_list|,
name|context
operator|.
name|getGraphManager
argument_list|()
operator|.
name|getNode
argument_list|(
name|oid
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testOnQuerySelectOverrideModifiedCached
parameter_list|()
block|{
name|ObjEntity
name|entity
init|=
operator|new
name|ObjEntity
argument_list|(
literal|"test_entity"
argument_list|)
decl_stmt|;
name|entity
operator|.
name|setClassName
argument_list|(
name|MockPersistentObject
operator|.
name|class
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|DataMap
name|dataMap
init|=
operator|new
name|DataMap
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
name|dataMap
operator|.
name|addObjEntity
argument_list|(
name|entity
argument_list|)
expr_stmt|;
name|Collection
name|entities
init|=
name|Collections
operator|.
name|singleton
argument_list|(
name|dataMap
argument_list|)
decl_stmt|;
name|EntityResolver
name|resolver
init|=
operator|new
name|EntityResolver
argument_list|(
name|entities
argument_list|)
decl_stmt|;
name|CayenneContext
name|context
init|=
operator|new
name|CayenneContext
argument_list|()
decl_stmt|;
name|context
operator|.
name|setEntityResolver
argument_list|(
name|resolver
argument_list|)
expr_stmt|;
name|ObjectId
name|oid
init|=
operator|new
name|ObjectId
argument_list|(
literal|"test_entity"
argument_list|,
literal|"x"
argument_list|,
literal|"y"
argument_list|)
decl_stmt|;
name|MockPersistentObject
name|o1
init|=
operator|new
name|MockPersistentObject
argument_list|(
name|oid
argument_list|)
decl_stmt|;
name|o1
operator|.
name|setPersistenceState
argument_list|(
name|PersistenceState
operator|.
name|MODIFIED
argument_list|)
expr_stmt|;
name|context
operator|.
name|getGraphManager
argument_list|()
operator|.
name|registerNode
argument_list|(
name|oid
argument_list|,
name|o1
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|o1
argument_list|,
name|context
operator|.
name|getGraphManager
argument_list|()
operator|.
name|getNode
argument_list|(
name|oid
argument_list|)
argument_list|)
expr_stmt|;
comment|// another object with the same GID ... we must merge it with cached and return
comment|// cached object instead of the one fetched
name|MockPersistentObject
name|o2
init|=
operator|new
name|MockPersistentObject
argument_list|(
name|oid
argument_list|)
decl_stmt|;
name|MockClientConnection
name|connection
init|=
operator|new
name|MockClientConnection
argument_list|(
operator|new
name|GenericResponse
argument_list|(
name|Arrays
operator|.
name|asList
argument_list|(
name|o2
argument_list|)
argument_list|)
argument_list|)
decl_stmt|;
name|ClientChannel
name|channel
init|=
operator|new
name|ClientChannel
argument_list|(
name|connection
argument_list|)
decl_stmt|;
name|context
operator|.
name|setChannel
argument_list|(
name|channel
argument_list|)
expr_stmt|;
name|QueryResponse
name|response
init|=
name|channel
operator|.
name|onQuery
argument_list|(
name|context
argument_list|,
operator|new
name|SelectQuery
argument_list|(
literal|"test_entity"
argument_list|)
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|response
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|response
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
name|list
init|=
name|response
operator|.
name|firstList
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|list
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|list
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Expected cached object, got: "
operator|+
name|list
argument_list|,
name|list
operator|.
name|contains
argument_list|(
name|o1
argument_list|)
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|o1
argument_list|,
name|context
operator|.
name|getGraphManager
argument_list|()
operator|.
name|getNode
argument_list|(
name|oid
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testEventBridgeFailure
parameter_list|()
throws|throws
name|Exception
block|{
name|MockClientConnection
name|connection
init|=
operator|new
name|MockClientConnection
argument_list|()
block|{
annotation|@
name|Override
specifier|public
name|EventBridge
name|getServerEventBridge
parameter_list|()
throws|throws
name|CayenneRuntimeException
block|{
return|return
operator|new
name|EventBridge
argument_list|(
name|Collections
operator|.
name|EMPTY_LIST
argument_list|,
literal|"ext"
argument_list|)
block|{
annotation|@
name|Override
specifier|protected
name|void
name|sendExternalEvent
parameter_list|(
name|CayenneEvent
name|localEvent
parameter_list|)
throws|throws
name|Exception
block|{
block|}
annotation|@
name|Override
specifier|protected
name|void
name|shutdownExternal
parameter_list|()
throws|throws
name|Exception
block|{
block|}
annotation|@
name|Override
specifier|protected
name|void
name|startupExternal
parameter_list|()
throws|throws
name|Exception
block|{
comment|// intentionally throw an exception
throw|throw
operator|new
name|CayenneRuntimeException
argument_list|(
literal|"Test failure"
argument_list|)
throw|;
block|}
block|}
return|;
block|}
block|}
decl_stmt|;
comment|// default constructor must fail
try|try
block|{
operator|new
name|ClientChannel
argument_list|(
name|connection
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Channel didn't throw on broken EventBridge"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CayenneRuntimeException
name|e
parameter_list|)
block|{
comment|// expected
block|}
try|try
block|{
operator|new
name|ClientChannel
argument_list|(
name|connection
argument_list|,
literal|false
argument_list|,
operator|new
name|DefaultEventManager
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|false
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Channel didn't throw on broken EventBridge"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CayenneRuntimeException
name|e
parameter_list|)
block|{
comment|// expected
block|}
try|try
block|{
operator|new
name|ClientChannel
argument_list|(
name|connection
argument_list|,
literal|false
argument_list|,
operator|new
name|DefaultEventManager
argument_list|(
literal|2
argument_list|)
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CayenneRuntimeException
name|e
parameter_list|)
block|{
name|fail
argument_list|(
literal|"Channel threw on broken EventBridge"
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

