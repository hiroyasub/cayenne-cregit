begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|enhancer
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ObjectContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ObjectId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|PersistenceState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|Persistent
import|;
end_import

begin_class
specifier|public
class|class
name|MockPojo3Enhanced
implements|implements
name|Persistent
block|{
specifier|protected
name|ObjectId
name|$cay_objectId
decl_stmt|;
specifier|protected
name|int
name|$cay_persistenceState
init|=
name|PersistenceState
operator|.
name|TRANSIENT
decl_stmt|;
specifier|protected
specifier|transient
name|ObjectContext
name|$cay_objectContext
decl_stmt|;
specifier|protected
name|List
argument_list|<
name|MockPojo2
argument_list|>
name|toMany
decl_stmt|;
specifier|public
name|int
name|getPersistenceState
parameter_list|()
block|{
return|return
name|$cay_persistenceState
return|;
block|}
specifier|public
name|void
name|setPersistenceState
parameter_list|(
name|int
name|persistenceState
parameter_list|)
block|{
name|this
operator|.
name|$cay_persistenceState
operator|=
name|persistenceState
expr_stmt|;
block|}
specifier|public
name|ObjectContext
name|getObjectContext
parameter_list|()
block|{
return|return
name|$cay_objectContext
return|;
block|}
specifier|public
name|void
name|setObjectContext
parameter_list|(
name|ObjectContext
name|objectContext
parameter_list|)
block|{
name|this
operator|.
name|$cay_objectContext
operator|=
name|objectContext
expr_stmt|;
block|}
specifier|public
name|ObjectId
name|getObjectId
parameter_list|()
block|{
return|return
name|$cay_objectId
return|;
block|}
specifier|public
name|void
name|setObjectId
parameter_list|(
name|ObjectId
name|objectId
parameter_list|)
block|{
name|this
operator|.
name|$cay_objectId
operator|=
name|objectId
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|MockPojo2
argument_list|>
name|getToMany
parameter_list|()
block|{
if|if
condition|(
name|$cay_objectContext
operator|!=
literal|null
condition|)
block|{
name|$cay_objectContext
operator|.
name|prepareForAccess
argument_list|(
name|this
argument_list|,
literal|"toMany"
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
return|return
name|toMany
return|;
block|}
specifier|public
name|void
name|setToMany
parameter_list|(
name|List
argument_list|<
name|MockPojo2
argument_list|>
name|toMany
parameter_list|)
block|{
name|this
operator|.
name|toMany
operator|=
name|toMany
expr_stmt|;
block|}
block|}
end_class

end_unit

