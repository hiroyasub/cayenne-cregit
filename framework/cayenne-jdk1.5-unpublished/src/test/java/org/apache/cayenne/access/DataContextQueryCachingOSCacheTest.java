begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|cache
operator|.
name|OSQueryCacheFactory
import|;
end_import

begin_class
specifier|public
class|class
name|DataContextQueryCachingOSCacheTest
extends|extends
name|DataContextQueryCachingTest
block|{
specifier|public
name|void
name|testLocalCacheDataObjectsNoRefresh
parameter_list|()
throws|throws
name|Exception
block|{
name|runTest
argument_list|(
operator|new
name|TestRun
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
throws|throws
name|Exception
block|{
name|DataContextQueryCachingOSCacheTest
operator|.
name|super
operator|.
name|testLocalCacheDataObjectsNoRefresh
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testLocalCacheDataObjectsRefresh
parameter_list|()
throws|throws
name|Exception
block|{
name|runTest
argument_list|(
operator|new
name|TestRun
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
throws|throws
name|Exception
block|{
name|DataContextQueryCachingOSCacheTest
operator|.
name|super
operator|.
name|testLocalCacheDataObjectsRefresh
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testLocalCacheDataRowsNoRefresh
parameter_list|()
throws|throws
name|Exception
block|{
name|runTest
argument_list|(
operator|new
name|TestRun
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
throws|throws
name|Exception
block|{
name|DataContextQueryCachingOSCacheTest
operator|.
name|super
operator|.
name|testLocalCacheDataRowsNoRefresh
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testLocalCacheDataRowsRefresh
parameter_list|()
throws|throws
name|Exception
block|{
name|runTest
argument_list|(
operator|new
name|TestRun
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
throws|throws
name|Exception
block|{
name|DataContextQueryCachingOSCacheTest
operator|.
name|super
operator|.
name|testLocalCacheDataRowsRefresh
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testLocalCacheRefreshObjectsRefresh
parameter_list|()
throws|throws
name|Exception
block|{
name|runTest
argument_list|(
operator|new
name|TestRun
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
throws|throws
name|Exception
block|{
name|DataContextQueryCachingOSCacheTest
operator|.
name|super
operator|.
name|testLocalCacheRefreshObjectsRefresh
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSharedCacheDataObjectsNoRefresh
parameter_list|()
throws|throws
name|Exception
block|{
name|runTest
argument_list|(
operator|new
name|TestRun
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
throws|throws
name|Exception
block|{
name|DataContextQueryCachingOSCacheTest
operator|.
name|super
operator|.
name|testSharedCacheDataObjectsNoRefresh
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSharedCacheDataRowsNoRefresh
parameter_list|()
throws|throws
name|Exception
block|{
name|runTest
argument_list|(
operator|new
name|TestRun
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
throws|throws
name|Exception
block|{
name|DataContextQueryCachingOSCacheTest
operator|.
name|super
operator|.
name|testSharedCacheDataRowsNoRefresh
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSharedCacheDataRowsRefresh
parameter_list|()
throws|throws
name|Exception
block|{
name|runTest
argument_list|(
operator|new
name|TestRun
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
throws|throws
name|Exception
block|{
name|DataContextQueryCachingOSCacheTest
operator|.
name|super
operator|.
name|testSharedCacheDataRowsRefresh
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|runTest
parameter_list|(
name|TestRun
name|test
parameter_list|)
throws|throws
name|Exception
block|{
name|context
operator|.
name|queryCache
operator|=
literal|null
expr_stmt|;
name|getDomain
argument_list|()
operator|.
name|setQueryCacheFactory
argument_list|(
operator|new
name|OSQueryCacheFactory
argument_list|()
argument_list|)
expr_stmt|;
name|getDomain
argument_list|()
operator|.
name|queryCache
operator|=
literal|null
expr_stmt|;
try|try
block|{
name|test
operator|.
name|execute
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
name|getDomain
argument_list|()
operator|.
name|setQueryCacheFactory
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|getDomain
argument_list|()
operator|.
name|queryCache
operator|=
literal|null
expr_stmt|;
block|}
block|}
interface|interface
name|TestRun
block|{
name|void
name|execute
parameter_list|()
throws|throws
name|Exception
function_decl|;
block|}
block|}
end_class

end_unit

