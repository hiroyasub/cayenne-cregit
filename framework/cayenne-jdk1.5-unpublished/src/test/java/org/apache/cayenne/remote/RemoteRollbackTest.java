begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|remote
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|PersistenceState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|mt
operator|.
name|ClientMtTable1
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|mt
operator|.
name|ClientMtTable2
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|client
operator|.
name|ClientCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|server
operator|.
name|UseServerRuntime
import|;
end_import

begin_comment
comment|/**  * This is a test primarily for CAY-1103  */
end_comment

begin_class
annotation|@
name|UseServerRuntime
argument_list|(
name|ClientCase
operator|.
name|MULTI_TIER_PROJECT
argument_list|)
specifier|public
class|class
name|RemoteRollbackTest
extends|extends
name|RemoteCayenneCase
block|{
specifier|public
name|void
name|testRollbackNew
parameter_list|()
block|{
name|ClientMtTable1
name|o1
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
decl_stmt|;
name|o1
operator|.
name|setGlobalAttribute1
argument_list|(
literal|"a"
argument_list|)
expr_stmt|;
name|ClientMtTable2
name|p1
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable2
operator|.
name|class
argument_list|)
decl_stmt|;
name|p1
operator|.
name|setGlobalAttribute
argument_list|(
literal|"p1"
argument_list|)
expr_stmt|;
name|p1
operator|.
name|setTable1
argument_list|(
name|o1
argument_list|)
expr_stmt|;
name|ClientMtTable2
name|p2
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable2
operator|.
name|class
argument_list|)
decl_stmt|;
name|p2
operator|.
name|setGlobalAttribute
argument_list|(
literal|"p2"
argument_list|)
expr_stmt|;
name|p2
operator|.
name|setTable1
argument_list|(
name|o1
argument_list|)
expr_stmt|;
name|ClientMtTable2
name|p3
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable2
operator|.
name|class
argument_list|)
decl_stmt|;
name|p3
operator|.
name|setGlobalAttribute
argument_list|(
literal|"p3"
argument_list|)
expr_stmt|;
name|p3
operator|.
name|setTable1
argument_list|(
name|o1
argument_list|)
expr_stmt|;
comment|// before:
name|assertEquals
argument_list|(
name|o1
argument_list|,
name|p1
operator|.
name|getTable1
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|o1
operator|.
name|getTable2Array
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|clientContext
operator|.
name|rollbackChanges
argument_list|()
expr_stmt|;
comment|// after:
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|TRANSIENT
argument_list|,
name|o1
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
comment|// TODO: should we expect relationships to be unset?
comment|// assertNull(p1.getToClientMtTable1());
comment|// assertEquals(0, o1.getClientMtTable2Array().size());
block|}
specifier|public
name|void
name|testRollbackNewObject
parameter_list|()
block|{
name|String
name|o1Name
init|=
literal|"revertTestClientMtTable1"
decl_stmt|;
name|ClientMtTable1
name|o1
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
decl_stmt|;
name|o1
operator|.
name|setGlobalAttribute1
argument_list|(
name|o1Name
argument_list|)
expr_stmt|;
name|clientContext
operator|.
name|rollbackChanges
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|TRANSIENT
argument_list|,
name|o1
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|clientContext
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
block|}
comment|// Catches a bug where new objects were unregistered within an object iterator, thus
comment|// modifying the
comment|// collection the iterator was iterating over (ConcurrentModificationException)
specifier|public
name|void
name|testRollbackWithMultipleNewObjects
parameter_list|()
block|{
name|String
name|o1Name
init|=
literal|"rollbackTestClientMtTable1"
decl_stmt|;
name|String
name|o2Title
init|=
literal|"rollbackTestClientMtTable2"
decl_stmt|;
name|ClientMtTable1
name|o1
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
decl_stmt|;
name|o1
operator|.
name|setGlobalAttribute1
argument_list|(
name|o1Name
argument_list|)
expr_stmt|;
name|ClientMtTable2
name|o2
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable2
operator|.
name|class
argument_list|)
decl_stmt|;
name|o2
operator|.
name|setGlobalAttribute
argument_list|(
name|o2Title
argument_list|)
expr_stmt|;
name|o2
operator|.
name|setTable1
argument_list|(
name|o1
argument_list|)
expr_stmt|;
try|try
block|{
name|clientContext
operator|.
name|rollbackChanges
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
name|e
operator|.
name|printStackTrace
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"rollbackChanges should not have caused the exception "
operator|+
name|e
operator|.
name|getMessage
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|TRANSIENT
argument_list|,
name|o1
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testRollbackRelationshipModification
parameter_list|()
block|{
name|String
name|o1Name
init|=
literal|"relationshipModClientMtTable1"
decl_stmt|;
name|String
name|o2Title
init|=
literal|"relationshipTestClientMtTable2"
decl_stmt|;
name|ClientMtTable1
name|o1
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
decl_stmt|;
name|o1
operator|.
name|setGlobalAttribute1
argument_list|(
name|o1Name
argument_list|)
expr_stmt|;
name|ClientMtTable2
name|o2
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable2
operator|.
name|class
argument_list|)
decl_stmt|;
name|o2
operator|.
name|setGlobalAttribute
argument_list|(
name|o2Title
argument_list|)
expr_stmt|;
name|o2
operator|.
name|setTable1
argument_list|(
name|o1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|o1
operator|.
name|getTable2Array
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|clientContext
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|o1
operator|.
name|getTable2Array
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|o2
operator|.
name|setTable1
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|o1
operator|.
name|getTable2Array
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|clientContext
operator|.
name|rollbackChanges
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|o1
operator|.
name|getTable2Array
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|o1
argument_list|,
name|o2
operator|.
name|getTable1
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testRollbackDeletedObject
parameter_list|()
block|{
name|String
name|o1Name
init|=
literal|"deleteTestClientMtTable1"
decl_stmt|;
name|ClientMtTable1
name|o1
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
decl_stmt|;
name|o1
operator|.
name|setGlobalAttribute1
argument_list|(
name|o1Name
argument_list|)
expr_stmt|;
name|clientContext
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
comment|// Save... cayenne doesn't yet handle deleting objects that are uncommitted
name|clientContext
operator|.
name|deleteObject
argument_list|(
name|o1
argument_list|)
expr_stmt|;
name|clientContext
operator|.
name|rollbackChanges
argument_list|()
expr_stmt|;
comment|//TODO: The state is committed for Cayenne context, but Hollow for DataContext?!
comment|// Now check everything is as it should be
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|o1
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testRollbackModifiedObject
parameter_list|()
block|{
name|String
name|o1Name
init|=
literal|"initialTestClientMtTable1"
decl_stmt|;
name|ClientMtTable1
name|o1
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
decl_stmt|;
name|o1
operator|.
name|setGlobalAttribute1
argument_list|(
name|o1Name
argument_list|)
expr_stmt|;
name|clientContext
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|o1
operator|.
name|setGlobalAttribute1
argument_list|(
literal|"a new value"
argument_list|)
expr_stmt|;
name|clientContext
operator|.
name|rollbackChanges
argument_list|()
expr_stmt|;
comment|// Make sure the inmemory changes have been rolled back
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|o1
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|o1Name
argument_list|,
name|o1
operator|.
name|getGlobalAttribute1
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

