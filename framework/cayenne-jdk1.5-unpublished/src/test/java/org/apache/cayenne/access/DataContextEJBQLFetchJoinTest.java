begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
package|;
end_package

begin_import
import|import
name|java
operator|.
name|math
operator|.
name|BigDecimal
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Connection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|PreparedStatement
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|SQLException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|art
operator|.
name|Artist
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|art
operator|.
name|ArtistExhibit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|art
operator|.
name|Gallery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|art
operator|.
name|Painting
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|PersistenceState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ValueHolder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|EJBQLQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|CayenneCase
import|;
end_import

begin_class
specifier|public
class|class
name|DataContextEJBQLFetchJoinTest
extends|extends
name|CayenneCase
block|{
specifier|public
specifier|static
specifier|final
name|String
name|INSERT_ARTIST
init|=
literal|"INSERT INTO ARTIST (ARTIST_ID, ARTIST_NAME) VALUES (?,?)"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|INSERT_PAINTING
init|=
literal|"INSERT INTO PAINTING (PAINTING_ID, PAINTING_TITLE, ARTIST_ID, ESTIMATED_PRICE) VALUES (?, ?, ?, ?)"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|INSERT_GALLERY
init|=
literal|"INSERT INTO GALLERY (GALLERY_ID, GALLERY_NAME) VALUES (?,?)"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|INSERT_EXIBIT
init|=
literal|"INSERT INTO EXHIBIT (EXHIBIT_ID, GALLERY_ID, CLOSING_DATE, OPENING_DATE) VALUES (?, ?, ?, ?)"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|INSERT_ARTIST_EXIBIT
init|=
literal|"INSERT INTO ARTIST_EXHIBIT (ARTIST_ID, EXHIBIT_ID) VALUES (?, ?)"
decl_stmt|;
name|Connection
name|conn
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|deleteTestData
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|populateTables
parameter_list|(
name|TestData
name|data
parameter_list|)
throws|throws
name|Exception
block|{
name|Object
index|[]
index|[]
name|artistsData
init|=
block|{
block|{
literal|1
block|,
literal|"A1"
block|}
block|,
block|{
literal|2
block|,
literal|"A2"
block|}
block|,
block|{
literal|3
block|,
literal|"A3"
block|}
block|}
decl_stmt|;
name|Object
index|[]
index|[]
name|paintingsData
init|=
block|{
block|{
literal|1
block|,
literal|"P11"
block|,
literal|1
block|,
operator|new
name|BigDecimal
argument_list|(
literal|3000d
argument_list|)
block|}
block|,
block|{
literal|2
block|,
literal|"P2"
block|,
literal|2
block|,
operator|new
name|BigDecimal
argument_list|(
literal|5000d
argument_list|)
block|}
block|,
block|{
literal|3
block|,
literal|"P12"
block|,
literal|1
block|,
operator|new
name|BigDecimal
argument_list|(
literal|3000d
argument_list|)
block|}
block|}
decl_stmt|;
name|Object
index|[]
index|[]
name|galleriesData
init|=
block|{
block|{
literal|1
block|,
literal|"gallery1"
block|}
block|,
block|{
literal|2
block|,
literal|"gallery2"
block|}
block|}
decl_stmt|;
name|Object
index|[]
index|[]
name|exibitsData
init|=
block|{
block|{
literal|1
block|,
literal|1
block|,
operator|new
name|Date
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|+
literal|1000
operator|*
literal|60
operator|*
literal|60
operator|*
literal|24
operator|*
literal|1
argument_list|)
block|,
operator|new
name|Date
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|+
literal|1000
operator|*
literal|60
operator|*
literal|60
operator|*
literal|24
operator|*
literal|2
argument_list|)
block|}
block|,
block|{
literal|2
block|,
literal|1
block|,
operator|new
name|Date
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|+
literal|1000
operator|*
literal|60
operator|*
literal|60
operator|*
literal|24
operator|*
literal|3
argument_list|)
block|,
operator|new
name|Date
argument_list|(
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|+
literal|1000
operator|*
literal|60
operator|*
literal|60
operator|*
literal|24
operator|*
literal|4
argument_list|)
block|}
block|}
decl_stmt|;
name|Object
index|[]
index|[]
name|artistExibitsData
init|=
block|{
block|{
literal|1
block|,
literal|1
block|}
block|,
block|{
literal|1
block|,
literal|2
block|}
block|}
decl_stmt|;
name|conn
operator|=
name|getConnection
argument_list|()
expr_stmt|;
try|try
block|{
name|conn
operator|.
name|setAutoCommit
argument_list|(
literal|false
argument_list|)
expr_stmt|;
switch|switch
condition|(
name|data
condition|)
block|{
case|case
name|ONE_ENTITY_FETCH_JOIN
case|:
name|insertArtists
argument_list|(
name|artistsData
argument_list|)
expr_stmt|;
name|insertPaintings
argument_list|(
name|paintingsData
argument_list|)
expr_stmt|;
break|break;
case|case
name|SEVERAL_FETCH_JOINS
case|:
name|insertArtists
argument_list|(
name|artistsData
argument_list|)
expr_stmt|;
name|insertPaintings
argument_list|(
name|paintingsData
argument_list|)
expr_stmt|;
name|insertGalleries
argument_list|(
name|galleriesData
argument_list|)
expr_stmt|;
name|insertExibits
argument_list|(
name|exibitsData
argument_list|)
expr_stmt|;
name|insertArtistExibits
argument_list|(
name|artistExibitsData
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
finally|finally
block|{
name|conn
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testFetchJoinForOneEntity
parameter_list|()
throws|throws
name|Exception
block|{
name|populateTables
argument_list|(
name|TestData
operator|.
name|ONE_ENTITY_FETCH_JOIN
argument_list|)
expr_stmt|;
name|String
name|ejbql
init|=
literal|"SELECT a FROM Artist a JOIN FETCH a.paintingArray "
decl_stmt|;
name|EJBQLQuery
name|query
init|=
operator|new
name|EJBQLQuery
argument_list|(
name|ejbql
argument_list|)
decl_stmt|;
name|DataContext
name|context
init|=
name|createDataContext
argument_list|()
decl_stmt|;
name|List
name|objects
init|=
name|context
operator|.
name|performQuery
argument_list|(
name|query
argument_list|)
decl_stmt|;
name|blockQueries
argument_list|()
expr_stmt|;
try|try
block|{
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|objects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
name|it
init|=
name|objects
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|it
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Artist
name|a
init|=
operator|(
name|Artist
operator|)
name|it
operator|.
name|next
argument_list|()
decl_stmt|;
name|List
name|list
init|=
name|a
operator|.
name|getPaintingArray
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|list
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|(
operator|(
name|ValueHolder
operator|)
name|list
operator|)
operator|.
name|isFault
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
name|children
init|=
name|list
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|children
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Painting
name|p
init|=
operator|(
name|Painting
operator|)
name|children
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|p
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
comment|// make sure properties are not null..
name|assertNotNull
argument_list|(
name|p
operator|.
name|getPaintingTitle
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
finally|finally
block|{
name|unblockQueries
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testSeveralFetchJoins
parameter_list|()
throws|throws
name|Exception
block|{
name|populateTables
argument_list|(
name|TestData
operator|.
name|SEVERAL_FETCH_JOINS
argument_list|)
expr_stmt|;
name|String
name|ejbql
init|=
literal|"SELECT a "
operator|+
literal|"FROM Artist a JOIN FETCH a.paintingArray JOIN FETCH a.artistExhibitArray "
operator|+
literal|"WHERE a.artistName = 'A1'"
decl_stmt|;
name|EJBQLQuery
name|query
init|=
operator|new
name|EJBQLQuery
argument_list|(
name|ejbql
argument_list|)
decl_stmt|;
name|DataContext
name|context
init|=
name|createDataContext
argument_list|()
decl_stmt|;
name|List
name|objects
init|=
name|context
operator|.
name|performQuery
argument_list|(
name|query
argument_list|)
decl_stmt|;
name|blockQueries
argument_list|()
expr_stmt|;
try|try
block|{
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|objects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Artist
name|a
init|=
operator|(
name|Artist
operator|)
name|objects
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"A1"
argument_list|,
name|a
operator|.
name|getArtistName
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Painting
argument_list|>
name|paintings
init|=
name|a
operator|.
name|getPaintingArray
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|paintings
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|(
operator|(
name|ValueHolder
operator|)
name|paintings
operator|)
operator|.
name|isFault
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|paintings
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|expectedPaintingsNames
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|expectedPaintingsNames
operator|.
name|add
argument_list|(
literal|"P11"
argument_list|)
expr_stmt|;
name|expectedPaintingsNames
operator|.
name|add
argument_list|(
literal|"P12"
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|Painting
argument_list|>
name|paintingsIterator
init|=
name|paintings
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|paintingsIterator
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Painting
name|p
init|=
name|paintingsIterator
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|p
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|p
operator|.
name|getPaintingTitle
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|expectedPaintingsNames
operator|.
name|contains
argument_list|(
name|p
operator|.
name|getPaintingTitle
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|List
argument_list|<
name|ArtistExhibit
argument_list|>
name|exibits
init|=
name|a
operator|.
name|getArtistExhibitArray
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|exibits
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|(
operator|(
name|ValueHolder
operator|)
name|exibits
operator|)
operator|.
name|isFault
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exibits
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|ArtistExhibit
argument_list|>
name|exibitsIterator
init|=
name|exibits
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|exibitsIterator
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|ArtistExhibit
name|ae
init|=
name|exibitsIterator
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|ae
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|ae
operator|.
name|getObjectId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
finally|finally
block|{
name|unblockQueries
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testSeveralEntitiesFetchJoins
parameter_list|()
throws|throws
name|Exception
block|{
name|populateTables
argument_list|(
name|TestData
operator|.
name|SEVERAL_FETCH_JOINS
argument_list|)
expr_stmt|;
name|String
name|ejbql
init|=
literal|"SELECT DISTINCT a , g "
operator|+
literal|"FROM Artist a JOIN FETCH a.paintingArray , Gallery g JOIN FETCH g.exhibitArray "
operator|+
literal|"WHERE a.artistName='A1' AND g.galleryName='gallery1'"
decl_stmt|;
name|EJBQLQuery
name|query
init|=
operator|new
name|EJBQLQuery
argument_list|(
name|ejbql
argument_list|)
decl_stmt|;
name|DataContext
name|context
init|=
name|createDataContext
argument_list|()
decl_stmt|;
name|List
name|objects
init|=
name|context
operator|.
name|performQuery
argument_list|(
name|query
argument_list|)
decl_stmt|;
name|blockQueries
argument_list|()
expr_stmt|;
try|try
block|{
name|assertNotNull
argument_list|(
name|objects
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|objects
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|objects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|unblockQueries
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testSeveralEntitiesAndScalarFetchInnerJoins
parameter_list|()
throws|throws
name|Exception
block|{
name|populateTables
argument_list|(
name|TestData
operator|.
name|SEVERAL_FETCH_JOINS
argument_list|)
expr_stmt|;
name|String
name|ejbql
init|=
literal|"SELECT DISTINCT a, a.artistName , g "
operator|+
literal|"FROM Artist a JOIN FETCH a.paintingArray, Gallery g JOIN FETCH g.exhibitArray "
operator|+
literal|"ORDER BY a.artistName"
decl_stmt|;
name|EJBQLQuery
name|query
init|=
operator|new
name|EJBQLQuery
argument_list|(
name|ejbql
argument_list|)
decl_stmt|;
name|DataContext
name|context
init|=
name|createDataContext
argument_list|()
decl_stmt|;
name|List
name|objects
init|=
name|context
operator|.
name|performQuery
argument_list|(
name|query
argument_list|)
decl_stmt|;
name|blockQueries
argument_list|()
expr_stmt|;
try|try
block|{
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|objects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Object
index|[]
name|firstRow
init|=
operator|(
name|Object
index|[]
operator|)
name|objects
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Artist
name|a
init|=
operator|(
name|Artist
operator|)
name|firstRow
index|[
literal|0
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"A1"
argument_list|,
name|a
operator|.
name|getArtistName
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Painting
argument_list|>
name|paintings
init|=
name|a
operator|.
name|getPaintingArray
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|paintings
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|(
operator|(
name|ValueHolder
operator|)
name|paintings
operator|)
operator|.
name|isFault
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|paintings
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|expectedPaintingsNames
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|expectedPaintingsNames
operator|.
name|add
argument_list|(
literal|"P11"
argument_list|)
expr_stmt|;
name|expectedPaintingsNames
operator|.
name|add
argument_list|(
literal|"P12"
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|Painting
argument_list|>
name|paintingsIterator
init|=
name|paintings
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|paintingsIterator
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Painting
name|p
init|=
name|paintingsIterator
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|p
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|p
operator|.
name|getPaintingTitle
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|expectedPaintingsNames
operator|.
name|contains
argument_list|(
name|p
operator|.
name|getPaintingTitle
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|String
name|artistName
init|=
operator|(
name|String
operator|)
name|firstRow
index|[
literal|1
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"A1"
argument_list|,
name|artistName
argument_list|)
expr_stmt|;
name|Gallery
name|g1
init|=
operator|(
name|Gallery
operator|)
name|firstRow
index|[
literal|2
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"gallery1"
argument_list|,
name|g1
operator|.
name|getGalleryName
argument_list|()
argument_list|)
expr_stmt|;
name|List
name|exibits
init|=
name|g1
operator|.
name|getExhibitArray
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|exibits
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|(
operator|(
name|ValueHolder
operator|)
name|exibits
operator|)
operator|.
name|isFault
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exibits
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Object
index|[]
name|secondRow
init|=
operator|(
name|Object
index|[]
operator|)
name|objects
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|a
operator|=
operator|(
name|Artist
operator|)
name|secondRow
index|[
literal|0
index|]
expr_stmt|;
name|assertEquals
argument_list|(
literal|"A2"
argument_list|,
name|a
operator|.
name|getArtistName
argument_list|()
argument_list|)
expr_stmt|;
name|paintings
operator|=
name|a
operator|.
name|getPaintingArray
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|paintings
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|(
operator|(
name|ValueHolder
operator|)
name|paintings
operator|)
operator|.
name|isFault
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|paintings
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|expectedPaintingsNames
operator|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
name|expectedPaintingsNames
operator|.
name|add
argument_list|(
literal|"P2"
argument_list|)
expr_stmt|;
name|paintingsIterator
operator|=
name|paintings
operator|.
name|iterator
argument_list|()
expr_stmt|;
while|while
condition|(
name|paintingsIterator
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Painting
name|p
init|=
name|paintingsIterator
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|p
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|p
operator|.
name|getPaintingTitle
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|expectedPaintingsNames
operator|.
name|contains
argument_list|(
name|p
operator|.
name|getPaintingTitle
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|artistName
operator|=
operator|(
name|String
operator|)
name|secondRow
index|[
literal|1
index|]
expr_stmt|;
name|assertEquals
argument_list|(
literal|"A2"
argument_list|,
name|artistName
argument_list|)
expr_stmt|;
name|Gallery
name|g2
init|=
operator|(
name|Gallery
operator|)
name|secondRow
index|[
literal|2
index|]
decl_stmt|;
name|assertEquals
argument_list|(
name|g1
argument_list|,
name|g2
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|unblockQueries
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testSeveralEntitiesAndScalarFetchOuterJoins
parameter_list|()
throws|throws
name|Exception
block|{
name|populateTables
argument_list|(
name|TestData
operator|.
name|SEVERAL_FETCH_JOINS
argument_list|)
expr_stmt|;
name|String
name|ejbql
init|=
literal|"SELECT DISTINCT a, a.artistName , g "
operator|+
literal|"FROM Artist a LEFT JOIN FETCH a.paintingArray, Gallery g LEFT JOIN FETCH g.exhibitArray "
operator|+
literal|"ORDER BY a.artistName"
decl_stmt|;
name|EJBQLQuery
name|query
init|=
operator|new
name|EJBQLQuery
argument_list|(
name|ejbql
argument_list|)
decl_stmt|;
name|DataContext
name|context
init|=
name|createDataContext
argument_list|()
decl_stmt|;
name|List
name|objects
init|=
name|context
operator|.
name|performQuery
argument_list|(
name|query
argument_list|)
decl_stmt|;
name|blockQueries
argument_list|()
expr_stmt|;
try|try
block|{
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|objects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Object
index|[]
name|row
init|=
operator|(
name|Object
index|[]
operator|)
name|objects
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Artist
name|a1
init|=
operator|(
name|Artist
operator|)
name|row
index|[
literal|0
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"A1"
argument_list|,
name|a1
operator|.
name|getArtistName
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Painting
argument_list|>
name|paintings
init|=
name|a1
operator|.
name|getPaintingArray
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|paintings
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|(
operator|(
name|ValueHolder
operator|)
name|paintings
operator|)
operator|.
name|isFault
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|paintings
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|expectedPaintingsNames
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|expectedPaintingsNames
operator|.
name|add
argument_list|(
literal|"P11"
argument_list|)
expr_stmt|;
name|expectedPaintingsNames
operator|.
name|add
argument_list|(
literal|"P12"
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|Painting
argument_list|>
name|paintingsIterator
init|=
name|paintings
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|paintingsIterator
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Painting
name|p
init|=
name|paintingsIterator
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|p
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|p
operator|.
name|getPaintingTitle
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|expectedPaintingsNames
operator|.
name|contains
argument_list|(
name|p
operator|.
name|getPaintingTitle
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|String
name|artistName1
init|=
operator|(
name|String
operator|)
name|row
index|[
literal|1
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"A1"
argument_list|,
name|artistName1
argument_list|)
expr_stmt|;
name|Gallery
name|g1
init|=
operator|(
name|Gallery
operator|)
name|row
index|[
literal|2
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"gallery1"
argument_list|,
name|g1
operator|.
name|getGalleryName
argument_list|()
argument_list|)
expr_stmt|;
name|List
name|exibits
init|=
name|g1
operator|.
name|getExhibitArray
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|exibits
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|(
operator|(
name|ValueHolder
operator|)
name|exibits
operator|)
operator|.
name|isFault
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exibits
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|=
operator|(
name|Object
index|[]
operator|)
name|objects
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|a1
argument_list|,
operator|(
name|Artist
operator|)
name|row
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|artistName1
argument_list|,
name|row
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|Gallery
name|g2
init|=
operator|(
name|Gallery
operator|)
name|row
index|[
literal|2
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"gallery2"
argument_list|,
name|g2
operator|.
name|getGalleryName
argument_list|()
argument_list|)
expr_stmt|;
name|exibits
operator|=
name|g2
operator|.
name|getExhibitArray
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|exibits
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|=
operator|(
name|Object
index|[]
operator|)
name|objects
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|Artist
name|a2
init|=
operator|(
name|Artist
operator|)
name|row
index|[
literal|0
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"A2"
argument_list|,
name|a2
operator|.
name|getArtistName
argument_list|()
argument_list|)
expr_stmt|;
name|paintings
operator|=
name|a2
operator|.
name|getPaintingArray
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|paintings
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|paintings
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Painting
name|p
init|=
name|paintings
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|p
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|p
operator|.
name|getPaintingTitle
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"P2"
argument_list|,
name|p
operator|.
name|getPaintingTitle
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|artistName2
init|=
operator|(
name|String
operator|)
name|row
index|[
literal|1
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"A2"
argument_list|,
name|artistName2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|g2
argument_list|,
name|row
index|[
literal|2
index|]
argument_list|)
expr_stmt|;
name|row
operator|=
operator|(
name|Object
index|[]
operator|)
name|objects
operator|.
name|get
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|a2
argument_list|,
operator|(
name|Artist
operator|)
name|row
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|artistName2
argument_list|,
name|row
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|g1
argument_list|,
name|row
index|[
literal|2
index|]
argument_list|)
expr_stmt|;
name|row
operator|=
operator|(
name|Object
index|[]
operator|)
name|objects
operator|.
name|get
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|Artist
name|a3
init|=
operator|(
name|Artist
operator|)
name|row
index|[
literal|0
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"A3"
argument_list|,
name|a3
operator|.
name|getArtistName
argument_list|()
argument_list|)
expr_stmt|;
name|paintings
operator|=
name|a3
operator|.
name|getPaintingArray
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|paintings
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|artistName3
init|=
operator|(
name|String
operator|)
name|row
index|[
literal|1
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"A3"
argument_list|,
name|artistName3
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|g1
argument_list|,
name|row
index|[
literal|2
index|]
argument_list|)
expr_stmt|;
name|row
operator|=
operator|(
name|Object
index|[]
operator|)
name|objects
operator|.
name|get
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|a3
argument_list|,
operator|(
name|Artist
operator|)
name|row
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|artistName3
argument_list|,
name|row
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|g2
argument_list|,
name|row
index|[
literal|2
index|]
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|unblockQueries
argument_list|()
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|insertArtists
parameter_list|(
name|Object
index|[]
index|[]
name|artistsData
parameter_list|)
throws|throws
name|SQLException
block|{
name|PreparedStatement
name|stmt
init|=
name|conn
operator|.
name|prepareStatement
argument_list|(
name|INSERT_ARTIST
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|artistsData
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|stmt
operator|.
name|setInt
argument_list|(
literal|1
argument_list|,
operator|(
name|Integer
operator|)
name|artistsData
index|[
name|i
index|]
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|stmt
operator|.
name|setString
argument_list|(
literal|2
argument_list|,
operator|(
name|String
operator|)
name|artistsData
index|[
name|i
index|]
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|stmt
operator|.
name|executeUpdate
argument_list|()
expr_stmt|;
block|}
name|stmt
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|insertPaintings
parameter_list|(
name|Object
index|[]
index|[]
name|paintingsData
parameter_list|)
throws|throws
name|SQLException
block|{
name|PreparedStatement
name|stmt
init|=
name|conn
operator|.
name|prepareStatement
argument_list|(
name|INSERT_PAINTING
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|paintingsData
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|stmt
operator|.
name|setInt
argument_list|(
literal|1
argument_list|,
operator|(
name|Integer
operator|)
name|paintingsData
index|[
name|i
index|]
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|stmt
operator|.
name|setString
argument_list|(
literal|2
argument_list|,
operator|(
name|String
operator|)
name|paintingsData
index|[
name|i
index|]
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|stmt
operator|.
name|setInt
argument_list|(
literal|3
argument_list|,
operator|(
name|Integer
operator|)
name|paintingsData
index|[
name|i
index|]
index|[
literal|2
index|]
argument_list|)
expr_stmt|;
name|stmt
operator|.
name|setBigDecimal
argument_list|(
literal|4
argument_list|,
operator|(
name|BigDecimal
operator|)
name|paintingsData
index|[
name|i
index|]
index|[
literal|3
index|]
argument_list|)
expr_stmt|;
name|stmt
operator|.
name|executeUpdate
argument_list|()
expr_stmt|;
block|}
name|stmt
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|insertGalleries
parameter_list|(
name|Object
index|[]
index|[]
name|galleriesData
parameter_list|)
throws|throws
name|SQLException
block|{
name|PreparedStatement
name|stmt
init|=
name|conn
operator|.
name|prepareStatement
argument_list|(
name|INSERT_GALLERY
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|galleriesData
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|stmt
operator|.
name|setInt
argument_list|(
literal|1
argument_list|,
operator|(
name|Integer
operator|)
name|galleriesData
index|[
name|i
index|]
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|stmt
operator|.
name|setString
argument_list|(
literal|2
argument_list|,
operator|(
name|String
operator|)
name|galleriesData
index|[
name|i
index|]
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|stmt
operator|.
name|executeUpdate
argument_list|()
expr_stmt|;
block|}
name|stmt
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|insertExibits
parameter_list|(
name|Object
index|[]
index|[]
name|exibitsData
parameter_list|)
throws|throws
name|SQLException
block|{
name|PreparedStatement
name|stmt
init|=
name|conn
operator|.
name|prepareStatement
argument_list|(
name|INSERT_EXIBIT
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|exibitsData
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|stmt
operator|.
name|setInt
argument_list|(
literal|1
argument_list|,
operator|(
name|Integer
operator|)
name|exibitsData
index|[
name|i
index|]
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|stmt
operator|.
name|setInt
argument_list|(
literal|2
argument_list|,
operator|(
name|Integer
operator|)
name|exibitsData
index|[
name|i
index|]
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|stmt
operator|.
name|setDate
argument_list|(
literal|3
argument_list|,
operator|(
name|Date
operator|)
name|exibitsData
index|[
name|i
index|]
index|[
literal|2
index|]
argument_list|)
expr_stmt|;
name|stmt
operator|.
name|setDate
argument_list|(
literal|4
argument_list|,
operator|(
name|Date
operator|)
name|exibitsData
index|[
name|i
index|]
index|[
literal|3
index|]
argument_list|)
expr_stmt|;
name|stmt
operator|.
name|executeUpdate
argument_list|()
expr_stmt|;
block|}
name|stmt
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|insertArtistExibits
parameter_list|(
name|Object
index|[]
index|[]
name|artistExibitsData
parameter_list|)
throws|throws
name|SQLException
block|{
name|PreparedStatement
name|stmt
init|=
name|conn
operator|.
name|prepareStatement
argument_list|(
name|INSERT_ARTIST_EXIBIT
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|artistExibitsData
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|stmt
operator|.
name|setInt
argument_list|(
literal|1
argument_list|,
operator|(
name|Integer
operator|)
name|artistExibitsData
index|[
name|i
index|]
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|stmt
operator|.
name|setInt
argument_list|(
literal|2
argument_list|,
operator|(
name|Integer
operator|)
name|artistExibitsData
index|[
name|i
index|]
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|stmt
operator|.
name|executeUpdate
argument_list|()
expr_stmt|;
block|}
name|stmt
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
enum|enum
name|TestData
block|{
name|ONE_ENTITY_FETCH_JOIN
block|,
name|SEVERAL_FETCH_JOINS
block|}
block|}
end_class

end_unit

