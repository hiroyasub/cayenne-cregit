begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
package|;
end_package

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ObjectContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|PersistenceState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ValueHolder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|EJBQLQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|test
operator|.
name|jdbc
operator|.
name|DBHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|test
operator|.
name|jdbc
operator|.
name|TableHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|testmap
operator|.
name|Artist
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|testmap
operator|.
name|ArtistExhibit
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|testmap
operator|.
name|Gallery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|testmap
operator|.
name|Painting
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|UnitTestClosure
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|server
operator|.
name|DataChannelQueryInterceptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|server
operator|.
name|ServerCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|server
operator|.
name|UseServerRuntime
import|;
end_import

begin_class
annotation|@
name|UseServerRuntime
argument_list|(
name|ServerCase
operator|.
name|TESTMAP_PROJECT
argument_list|)
specifier|public
class|class
name|DataContextEJBQLFetchJoinTest
extends|extends
name|ServerCase
block|{
annotation|@
name|Inject
specifier|protected
name|ObjectContext
name|context
decl_stmt|;
annotation|@
name|Inject
specifier|protected
name|DBHelper
name|dbHelper
decl_stmt|;
annotation|@
name|Inject
specifier|protected
name|DataChannelQueryInterceptor
name|queryBlocker
decl_stmt|;
specifier|protected
name|TableHelper
name|tArtist
decl_stmt|;
specifier|protected
name|TableHelper
name|tPainting
decl_stmt|;
specifier|protected
name|TableHelper
name|tGallery
decl_stmt|;
specifier|protected
name|TableHelper
name|tExhibit
decl_stmt|;
specifier|protected
name|TableHelper
name|tArtistExhibit
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|void
name|setUpAfterInjection
parameter_list|()
throws|throws
name|Exception
block|{
name|dbHelper
operator|.
name|deleteAll
argument_list|(
literal|"PAINTING_INFO"
argument_list|)
expr_stmt|;
name|dbHelper
operator|.
name|deleteAll
argument_list|(
literal|"PAINTING"
argument_list|)
expr_stmt|;
name|dbHelper
operator|.
name|deleteAll
argument_list|(
literal|"ARTIST_EXHIBIT"
argument_list|)
expr_stmt|;
name|dbHelper
operator|.
name|deleteAll
argument_list|(
literal|"ARTIST"
argument_list|)
expr_stmt|;
name|dbHelper
operator|.
name|deleteAll
argument_list|(
literal|"EXHIBIT"
argument_list|)
expr_stmt|;
name|dbHelper
operator|.
name|deleteAll
argument_list|(
literal|"GALLERY"
argument_list|)
expr_stmt|;
name|tArtist
operator|=
operator|new
name|TableHelper
argument_list|(
name|dbHelper
argument_list|,
literal|"ARTIST"
argument_list|)
expr_stmt|;
name|tArtist
operator|.
name|setColumns
argument_list|(
literal|"ARTIST_ID"
argument_list|,
literal|"ARTIST_NAME"
argument_list|)
expr_stmt|;
name|tPainting
operator|=
operator|new
name|TableHelper
argument_list|(
name|dbHelper
argument_list|,
literal|"PAINTING"
argument_list|)
expr_stmt|;
name|tPainting
operator|.
name|setColumns
argument_list|(
literal|"PAINTING_ID"
argument_list|,
literal|"ARTIST_ID"
argument_list|,
literal|"PAINTING_TITLE"
argument_list|,
literal|"ESTIMATED_PRICE"
argument_list|)
expr_stmt|;
name|tGallery
operator|=
operator|new
name|TableHelper
argument_list|(
name|dbHelper
argument_list|,
literal|"GALLERY"
argument_list|)
expr_stmt|;
name|tGallery
operator|.
name|setColumns
argument_list|(
literal|"GALLERY_ID"
argument_list|,
literal|"GALLERY_NAME"
argument_list|)
expr_stmt|;
name|tExhibit
operator|=
operator|new
name|TableHelper
argument_list|(
name|dbHelper
argument_list|,
literal|"EXHIBIT"
argument_list|)
expr_stmt|;
name|tExhibit
operator|.
name|setColumns
argument_list|(
literal|"EXHIBIT_ID"
argument_list|,
literal|"GALLERY_ID"
argument_list|,
literal|"CLOSING_DATE"
argument_list|,
literal|"OPENING_DATE"
argument_list|)
expr_stmt|;
name|tArtistExhibit
operator|=
operator|new
name|TableHelper
argument_list|(
name|dbHelper
argument_list|,
literal|"ARTIST_EXHIBIT"
argument_list|)
expr_stmt|;
name|tArtistExhibit
operator|.
name|setColumns
argument_list|(
literal|"ARTIST_ID"
argument_list|,
literal|"EXHIBIT_ID"
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|createOneFetchJoinDataSet
parameter_list|()
throws|throws
name|Exception
block|{
name|tArtist
operator|.
name|insert
argument_list|(
literal|1
argument_list|,
literal|"A1"
argument_list|)
expr_stmt|;
name|tArtist
operator|.
name|insert
argument_list|(
literal|2
argument_list|,
literal|"A2"
argument_list|)
expr_stmt|;
name|tArtist
operator|.
name|insert
argument_list|(
literal|3
argument_list|,
literal|"A3"
argument_list|)
expr_stmt|;
name|tPainting
operator|.
name|insert
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
literal|"P11"
argument_list|,
literal|3000d
argument_list|)
expr_stmt|;
name|tPainting
operator|.
name|insert
argument_list|(
literal|2
argument_list|,
literal|2
argument_list|,
literal|"P2"
argument_list|,
literal|5000d
argument_list|)
expr_stmt|;
name|tPainting
operator|.
name|insert
argument_list|(
literal|3
argument_list|,
literal|1
argument_list|,
literal|"P12"
argument_list|,
literal|3000d
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|createMultipleFetchJoinsDataSet
parameter_list|()
throws|throws
name|Exception
block|{
name|createOneFetchJoinDataSet
argument_list|()
expr_stmt|;
name|tGallery
operator|.
name|insert
argument_list|(
literal|1
argument_list|,
literal|"gallery1"
argument_list|)
expr_stmt|;
name|tGallery
operator|.
name|insert
argument_list|(
literal|2
argument_list|,
literal|"gallery2"
argument_list|)
expr_stmt|;
name|long
name|t
init|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
decl_stmt|;
name|tExhibit
operator|.
name|insert
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|,
operator|new
name|Date
argument_list|(
literal|1
operator|+
literal|10000
argument_list|)
argument_list|,
operator|new
name|Date
argument_list|(
name|t
operator|+
literal|20000
argument_list|)
argument_list|)
expr_stmt|;
name|tExhibit
operator|.
name|insert
argument_list|(
literal|2
argument_list|,
literal|1
argument_list|,
operator|new
name|Date
argument_list|(
literal|1
operator|+
literal|30000
argument_list|)
argument_list|,
operator|new
name|Date
argument_list|(
name|t
operator|+
literal|40000
argument_list|)
argument_list|)
expr_stmt|;
name|tArtistExhibit
operator|.
name|insert
argument_list|(
literal|1
argument_list|,
literal|1
argument_list|)
expr_stmt|;
name|tArtistExhibit
operator|.
name|insert
argument_list|(
literal|1
argument_list|,
literal|2
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testFetchJoinForOneEntity
parameter_list|()
throws|throws
name|Exception
block|{
name|createOneFetchJoinDataSet
argument_list|()
expr_stmt|;
name|String
name|ejbql
init|=
literal|"SELECT a FROM Artist a JOIN FETCH a.paintingArray "
decl_stmt|;
name|EJBQLQuery
name|query
init|=
operator|new
name|EJBQLQuery
argument_list|(
name|ejbql
argument_list|)
decl_stmt|;
specifier|final
name|List
name|objects
init|=
name|context
operator|.
name|performQuery
argument_list|(
name|query
argument_list|)
decl_stmt|;
name|queryBlocker
operator|.
name|runWithQueriesBlocked
argument_list|(
operator|new
name|UnitTestClosure
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|objects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
name|it
init|=
name|objects
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|it
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Artist
name|a
init|=
operator|(
name|Artist
operator|)
name|it
operator|.
name|next
argument_list|()
decl_stmt|;
name|List
name|list
init|=
name|a
operator|.
name|getPaintingArray
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|list
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|(
operator|(
name|ValueHolder
operator|)
name|list
operator|)
operator|.
name|isFault
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
name|children
init|=
name|list
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|children
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Painting
name|p
init|=
operator|(
name|Painting
operator|)
name|children
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|p
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
comment|// make sure properties are not null..
name|assertNotNull
argument_list|(
name|p
operator|.
name|getPaintingTitle
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSeveralFetchJoins
parameter_list|()
throws|throws
name|Exception
block|{
name|createMultipleFetchJoinsDataSet
argument_list|()
expr_stmt|;
name|String
name|ejbql
init|=
literal|"SELECT a "
operator|+
literal|"FROM Artist a JOIN FETCH a.paintingArray JOIN FETCH a.artistExhibitArray "
operator|+
literal|"WHERE a.artistName = 'A1'"
decl_stmt|;
name|EJBQLQuery
name|query
init|=
operator|new
name|EJBQLQuery
argument_list|(
name|ejbql
argument_list|)
decl_stmt|;
specifier|final
name|List
name|objects
init|=
name|context
operator|.
name|performQuery
argument_list|(
name|query
argument_list|)
decl_stmt|;
name|queryBlocker
operator|.
name|runWithQueriesBlocked
argument_list|(
operator|new
name|UnitTestClosure
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|objects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Artist
name|a
init|=
operator|(
name|Artist
operator|)
name|objects
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"A1"
argument_list|,
name|a
operator|.
name|getArtistName
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Painting
argument_list|>
name|paintings
init|=
name|a
operator|.
name|getPaintingArray
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|paintings
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|(
operator|(
name|ValueHolder
operator|)
name|paintings
operator|)
operator|.
name|isFault
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|paintings
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|expectedPaintingsNames
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|expectedPaintingsNames
operator|.
name|add
argument_list|(
literal|"P11"
argument_list|)
expr_stmt|;
name|expectedPaintingsNames
operator|.
name|add
argument_list|(
literal|"P12"
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|Painting
argument_list|>
name|paintingsIterator
init|=
name|paintings
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|paintingsIterator
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Painting
name|p
init|=
name|paintingsIterator
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|p
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|p
operator|.
name|getPaintingTitle
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|expectedPaintingsNames
operator|.
name|contains
argument_list|(
name|p
operator|.
name|getPaintingTitle
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|List
argument_list|<
name|ArtistExhibit
argument_list|>
name|exibits
init|=
name|a
operator|.
name|getArtistExhibitArray
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|exibits
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|(
operator|(
name|ValueHolder
operator|)
name|exibits
operator|)
operator|.
name|isFault
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exibits
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|ArtistExhibit
argument_list|>
name|exibitsIterator
init|=
name|exibits
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|exibitsIterator
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|ArtistExhibit
name|ae
init|=
name|exibitsIterator
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|ae
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|ae
operator|.
name|getObjectId
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSeveralEntitiesFetchJoins
parameter_list|()
throws|throws
name|Exception
block|{
name|createMultipleFetchJoinsDataSet
argument_list|()
expr_stmt|;
name|String
name|ejbql
init|=
literal|"SELECT DISTINCT a , g "
operator|+
literal|"FROM Artist a JOIN FETCH a.paintingArray , Gallery g JOIN FETCH g.exhibitArray "
operator|+
literal|"WHERE a.artistName='A1' AND g.galleryName='gallery1'"
decl_stmt|;
name|EJBQLQuery
name|query
init|=
operator|new
name|EJBQLQuery
argument_list|(
name|ejbql
argument_list|)
decl_stmt|;
specifier|final
name|List
name|objects
init|=
name|context
operator|.
name|performQuery
argument_list|(
name|query
argument_list|)
decl_stmt|;
name|queryBlocker
operator|.
name|runWithQueriesBlocked
argument_list|(
operator|new
name|UnitTestClosure
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|assertNotNull
argument_list|(
name|objects
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|objects
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|objects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSeveralEntitiesAndScalarFetchInnerJoins
parameter_list|()
throws|throws
name|Exception
block|{
name|createMultipleFetchJoinsDataSet
argument_list|()
expr_stmt|;
name|String
name|ejbql
init|=
literal|"SELECT DISTINCT a, a.artistName , g "
operator|+
literal|"FROM Artist a JOIN FETCH a.paintingArray, Gallery g JOIN FETCH g.exhibitArray "
operator|+
literal|"ORDER BY a.artistName"
decl_stmt|;
name|EJBQLQuery
name|query
init|=
operator|new
name|EJBQLQuery
argument_list|(
name|ejbql
argument_list|)
decl_stmt|;
specifier|final
name|List
name|objects
init|=
name|context
operator|.
name|performQuery
argument_list|(
name|query
argument_list|)
decl_stmt|;
name|queryBlocker
operator|.
name|runWithQueriesBlocked
argument_list|(
operator|new
name|UnitTestClosure
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|objects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Object
index|[]
name|firstRow
init|=
operator|(
name|Object
index|[]
operator|)
name|objects
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Artist
name|a
init|=
operator|(
name|Artist
operator|)
name|firstRow
index|[
literal|0
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"A1"
argument_list|,
name|a
operator|.
name|getArtistName
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Painting
argument_list|>
name|paintings
init|=
name|a
operator|.
name|getPaintingArray
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|paintings
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|(
operator|(
name|ValueHolder
operator|)
name|paintings
operator|)
operator|.
name|isFault
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|paintings
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|expectedPaintingsNames
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|expectedPaintingsNames
operator|.
name|add
argument_list|(
literal|"P11"
argument_list|)
expr_stmt|;
name|expectedPaintingsNames
operator|.
name|add
argument_list|(
literal|"P12"
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|Painting
argument_list|>
name|paintingsIterator
init|=
name|paintings
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|paintingsIterator
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Painting
name|p
init|=
name|paintingsIterator
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|p
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|p
operator|.
name|getPaintingTitle
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|expectedPaintingsNames
operator|.
name|contains
argument_list|(
name|p
operator|.
name|getPaintingTitle
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|String
name|artistName
init|=
operator|(
name|String
operator|)
name|firstRow
index|[
literal|1
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"A1"
argument_list|,
name|artistName
argument_list|)
expr_stmt|;
name|Gallery
name|g1
init|=
operator|(
name|Gallery
operator|)
name|firstRow
index|[
literal|2
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"gallery1"
argument_list|,
name|g1
operator|.
name|getGalleryName
argument_list|()
argument_list|)
expr_stmt|;
name|List
name|exibits
init|=
name|g1
operator|.
name|getExhibitArray
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|exibits
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|(
operator|(
name|ValueHolder
operator|)
name|exibits
operator|)
operator|.
name|isFault
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exibits
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Object
index|[]
name|secondRow
init|=
operator|(
name|Object
index|[]
operator|)
name|objects
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|a
operator|=
operator|(
name|Artist
operator|)
name|secondRow
index|[
literal|0
index|]
expr_stmt|;
name|assertEquals
argument_list|(
literal|"A2"
argument_list|,
name|a
operator|.
name|getArtistName
argument_list|()
argument_list|)
expr_stmt|;
name|paintings
operator|=
name|a
operator|.
name|getPaintingArray
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|paintings
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|(
operator|(
name|ValueHolder
operator|)
name|paintings
operator|)
operator|.
name|isFault
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|paintings
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|expectedPaintingsNames
operator|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
name|expectedPaintingsNames
operator|.
name|add
argument_list|(
literal|"P2"
argument_list|)
expr_stmt|;
name|paintingsIterator
operator|=
name|paintings
operator|.
name|iterator
argument_list|()
expr_stmt|;
while|while
condition|(
name|paintingsIterator
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Painting
name|p
init|=
name|paintingsIterator
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|p
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|p
operator|.
name|getPaintingTitle
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|expectedPaintingsNames
operator|.
name|contains
argument_list|(
name|p
operator|.
name|getPaintingTitle
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|artistName
operator|=
operator|(
name|String
operator|)
name|secondRow
index|[
literal|1
index|]
expr_stmt|;
name|assertEquals
argument_list|(
literal|"A2"
argument_list|,
name|artistName
argument_list|)
expr_stmt|;
name|Gallery
name|g2
init|=
operator|(
name|Gallery
operator|)
name|secondRow
index|[
literal|2
index|]
decl_stmt|;
name|assertEquals
argument_list|(
name|g1
argument_list|,
name|g2
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSeveralEntitiesAndScalarFetchOuterJoins
parameter_list|()
throws|throws
name|Exception
block|{
name|createMultipleFetchJoinsDataSet
argument_list|()
expr_stmt|;
name|String
name|ejbql
init|=
literal|"SELECT DISTINCT a, a.artistName , g "
operator|+
literal|"FROM Artist a LEFT JOIN FETCH a.paintingArray, Gallery g LEFT JOIN FETCH g.exhibitArray "
operator|+
literal|"ORDER BY a.artistName, g.galleryName"
decl_stmt|;
name|EJBQLQuery
name|query
init|=
operator|new
name|EJBQLQuery
argument_list|(
name|ejbql
argument_list|)
decl_stmt|;
specifier|final
name|List
name|objects
init|=
name|context
operator|.
name|performQuery
argument_list|(
name|query
argument_list|)
decl_stmt|;
name|queryBlocker
operator|.
name|runWithQueriesBlocked
argument_list|(
operator|new
name|UnitTestClosure
argument_list|()
block|{
specifier|public
name|void
name|execute
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|6
argument_list|,
name|objects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Object
index|[]
name|row
init|=
operator|(
name|Object
index|[]
operator|)
name|objects
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|Artist
name|a1
init|=
operator|(
name|Artist
operator|)
name|row
index|[
literal|0
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"A1"
argument_list|,
name|a1
operator|.
name|getArtistName
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|Painting
argument_list|>
name|paintings
init|=
name|a1
operator|.
name|getPaintingArray
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|paintings
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|(
operator|(
name|ValueHolder
operator|)
name|paintings
operator|)
operator|.
name|isFault
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|paintings
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|String
argument_list|>
name|expectedPaintingsNames
init|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
decl_stmt|;
name|expectedPaintingsNames
operator|.
name|add
argument_list|(
literal|"P11"
argument_list|)
expr_stmt|;
name|expectedPaintingsNames
operator|.
name|add
argument_list|(
literal|"P12"
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|Painting
argument_list|>
name|paintingsIterator
init|=
name|paintings
operator|.
name|iterator
argument_list|()
decl_stmt|;
while|while
condition|(
name|paintingsIterator
operator|.
name|hasNext
argument_list|()
condition|)
block|{
name|Painting
name|p
init|=
name|paintingsIterator
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|p
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|p
operator|.
name|getPaintingTitle
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|expectedPaintingsNames
operator|.
name|contains
argument_list|(
name|p
operator|.
name|getPaintingTitle
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|String
name|artistName1
init|=
operator|(
name|String
operator|)
name|row
index|[
literal|1
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"A1"
argument_list|,
name|artistName1
argument_list|)
expr_stmt|;
name|Gallery
name|g1
init|=
operator|(
name|Gallery
operator|)
name|row
index|[
literal|2
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"gallery1"
argument_list|,
name|g1
operator|.
name|getGalleryName
argument_list|()
argument_list|)
expr_stmt|;
name|List
name|exibits
init|=
name|g1
operator|.
name|getExhibitArray
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|exibits
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
operator|(
operator|(
name|ValueHolder
operator|)
name|exibits
operator|)
operator|.
name|isFault
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|exibits
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|=
operator|(
name|Object
index|[]
operator|)
name|objects
operator|.
name|get
argument_list|(
literal|1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|a1
argument_list|,
name|row
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|artistName1
argument_list|,
name|row
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|Gallery
name|g2
init|=
operator|(
name|Gallery
operator|)
name|row
index|[
literal|2
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"gallery2"
argument_list|,
name|g2
operator|.
name|getGalleryName
argument_list|()
argument_list|)
expr_stmt|;
name|exibits
operator|=
name|g2
operator|.
name|getExhibitArray
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|exibits
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|row
operator|=
operator|(
name|Object
index|[]
operator|)
name|objects
operator|.
name|get
argument_list|(
literal|2
argument_list|)
expr_stmt|;
name|Artist
name|a2
init|=
operator|(
name|Artist
operator|)
name|row
index|[
literal|0
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"A2"
argument_list|,
name|a2
operator|.
name|getArtistName
argument_list|()
argument_list|)
expr_stmt|;
name|paintings
operator|=
name|a2
operator|.
name|getPaintingArray
argument_list|()
expr_stmt|;
name|assertNotNull
argument_list|(
name|paintings
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|paintings
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Painting
name|p
init|=
name|paintings
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|p
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|p
operator|.
name|getPaintingTitle
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"P2"
argument_list|,
name|p
operator|.
name|getPaintingTitle
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|artistName2
init|=
operator|(
name|String
operator|)
name|row
index|[
literal|1
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"A2"
argument_list|,
name|artistName2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|g1
argument_list|,
name|row
index|[
literal|2
index|]
argument_list|)
expr_stmt|;
name|row
operator|=
operator|(
name|Object
index|[]
operator|)
name|objects
operator|.
name|get
argument_list|(
literal|3
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|a2
argument_list|,
name|row
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|artistName2
argument_list|,
name|row
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|g2
argument_list|,
name|row
index|[
literal|2
index|]
argument_list|)
expr_stmt|;
name|row
operator|=
operator|(
name|Object
index|[]
operator|)
name|objects
operator|.
name|get
argument_list|(
literal|4
argument_list|)
expr_stmt|;
name|Artist
name|a3
init|=
operator|(
name|Artist
operator|)
name|row
index|[
literal|0
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"A3"
argument_list|,
name|a3
operator|.
name|getArtistName
argument_list|()
argument_list|)
expr_stmt|;
name|paintings
operator|=
name|a3
operator|.
name|getPaintingArray
argument_list|()
expr_stmt|;
name|assertTrue
argument_list|(
name|paintings
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|String
name|artistName3
init|=
operator|(
name|String
operator|)
name|row
index|[
literal|1
index|]
decl_stmt|;
name|assertEquals
argument_list|(
literal|"A3"
argument_list|,
name|artistName3
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|g1
argument_list|,
name|row
index|[
literal|2
index|]
argument_list|)
expr_stmt|;
name|row
operator|=
operator|(
name|Object
index|[]
operator|)
name|objects
operator|.
name|get
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|a3
argument_list|,
name|row
index|[
literal|0
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|artistName3
argument_list|,
name|row
index|[
literal|1
index|]
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|g2
argument_list|,
name|row
index|[
literal|2
index|]
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

