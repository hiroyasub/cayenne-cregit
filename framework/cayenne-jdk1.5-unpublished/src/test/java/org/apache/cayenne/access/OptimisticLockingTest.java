begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|Ordering
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|SelectQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|locking
operator|.
name|RelLockingTestEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|locking
operator|.
name|SimpleLockingTestEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|LockingCase
import|;
end_import

begin_comment
comment|/**  */
end_comment

begin_class
specifier|public
class|class
name|OptimisticLockingTest
extends|extends
name|LockingCase
block|{
specifier|protected
name|DataContext
name|context
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|context
operator|=
name|createDataContext
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testSuccessSimpleLockingOnDelete
parameter_list|()
throws|throws
name|Exception
block|{
name|createTestData
argument_list|(
literal|"testSimpleLocking"
argument_list|)
expr_stmt|;
name|List
name|allObjects
init|=
name|context
operator|.
name|performQuery
argument_list|(
operator|new
name|SelectQuery
argument_list|(
name|SimpleLockingTestEntity
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|allObjects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|SimpleLockingTestEntity
name|object
init|=
operator|(
name|SimpleLockingTestEntity
operator|)
name|allObjects
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
comment|// change description and save... no optimistic lock failure expected
name|object
operator|.
name|setDescription
argument_list|(
literal|"first update"
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|context
operator|.
name|deleteObject
argument_list|(
name|object
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testSuccessSimpleLockingOnDeleteFollowedByInvalidate
parameter_list|()
throws|throws
name|Exception
block|{
name|createTestData
argument_list|(
literal|"testSimpleLocking"
argument_list|)
expr_stmt|;
name|List
name|allObjects
init|=
name|context
operator|.
name|performQuery
argument_list|(
operator|new
name|SelectQuery
argument_list|(
name|SimpleLockingTestEntity
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|allObjects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|SimpleLockingTestEntity
name|object
init|=
operator|(
name|SimpleLockingTestEntity
operator|)
name|allObjects
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
comment|// change description and save... no optimistic lock failure expected
name|object
operator|.
name|setDescription
argument_list|(
literal|"first update"
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|context
operator|.
name|deleteObject
argument_list|(
name|object
argument_list|)
expr_stmt|;
name|context
operator|.
name|invalidateObjects
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|object
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testSuccessSimpleLockingOnDeleteFollowedByForgetSnapshot
parameter_list|()
throws|throws
name|Exception
block|{
name|createTestData
argument_list|(
literal|"testSimpleLocking"
argument_list|)
expr_stmt|;
name|List
name|allObjects
init|=
name|context
operator|.
name|performQuery
argument_list|(
operator|new
name|SelectQuery
argument_list|(
name|SimpleLockingTestEntity
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|allObjects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|SimpleLockingTestEntity
name|object
init|=
operator|(
name|SimpleLockingTestEntity
operator|)
name|allObjects
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
comment|// change description and save... no optimistic lock failure expected
name|object
operator|.
name|setDescription
argument_list|(
literal|"first update"
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|context
operator|.
name|deleteObject
argument_list|(
name|object
argument_list|)
expr_stmt|;
name|context
operator|.
name|getObjectStore
argument_list|()
operator|.
name|getDataRowCache
argument_list|()
operator|.
name|forgetSnapshot
argument_list|(
name|object
operator|.
name|getObjectId
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testSuccessSimpleLockingOnDeletePrecededByInvalidate
parameter_list|()
throws|throws
name|Exception
block|{
name|createTestData
argument_list|(
literal|"testSimpleLocking"
argument_list|)
expr_stmt|;
name|List
name|allObjects
init|=
name|context
operator|.
name|performQuery
argument_list|(
operator|new
name|SelectQuery
argument_list|(
name|SimpleLockingTestEntity
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|allObjects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|SimpleLockingTestEntity
name|object
init|=
operator|(
name|SimpleLockingTestEntity
operator|)
name|allObjects
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
comment|// change description and save... no optimistic lock failure expected
name|object
operator|.
name|setDescription
argument_list|(
literal|"first update"
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|context
operator|.
name|invalidateObjects
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|object
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|deleteObject
argument_list|(
name|object
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testSuccessSimpleLockingOnDeletePrecededByForgetSnapshot
parameter_list|()
throws|throws
name|Exception
block|{
name|createTestData
argument_list|(
literal|"testSimpleLocking"
argument_list|)
expr_stmt|;
name|List
name|allObjects
init|=
name|context
operator|.
name|performQuery
argument_list|(
operator|new
name|SelectQuery
argument_list|(
name|SimpleLockingTestEntity
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|allObjects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|SimpleLockingTestEntity
name|object
init|=
operator|(
name|SimpleLockingTestEntity
operator|)
name|allObjects
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
comment|// change description and save... no optimistic lock failure expected
name|object
operator|.
name|setDescription
argument_list|(
literal|"first update"
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|context
operator|.
name|getObjectStore
argument_list|()
operator|.
name|getDataRowCache
argument_list|()
operator|.
name|forgetSnapshot
argument_list|(
name|object
operator|.
name|getObjectId
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|deleteObject
argument_list|(
name|object
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testFailSimpleLockingOnDelete
parameter_list|()
throws|throws
name|Exception
block|{
name|createTestData
argument_list|(
literal|"testSimpleLocking"
argument_list|)
expr_stmt|;
name|List
name|allObjects
init|=
name|context
operator|.
name|performQuery
argument_list|(
operator|new
name|SelectQuery
argument_list|(
name|SimpleLockingTestEntity
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|allObjects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|SimpleLockingTestEntity
name|object
init|=
operator|(
name|SimpleLockingTestEntity
operator|)
name|allObjects
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
comment|// change description and save... no optimistic lock failure expected
name|object
operator|.
name|setDescription
argument_list|(
literal|"second update"
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
comment|// change row underneath, delete and save... optimistic lock failure expected
name|createTestData
argument_list|(
literal|"SimpleLockUpdate"
argument_list|)
expr_stmt|;
name|context
operator|.
name|deleteObject
argument_list|(
name|object
argument_list|)
expr_stmt|;
try|try
block|{
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Optimistic lock failure expected."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|OptimisticLockException
name|ex
parameter_list|)
block|{
comment|// optimistic lock failure expected...
block|}
block|}
specifier|public
name|void
name|testSuccessSimpleLockingOnUpdate
parameter_list|()
throws|throws
name|Exception
block|{
name|createTestData
argument_list|(
literal|"testSimpleLocking"
argument_list|)
expr_stmt|;
name|List
name|allObjects
init|=
name|context
operator|.
name|performQuery
argument_list|(
operator|new
name|SelectQuery
argument_list|(
name|SimpleLockingTestEntity
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|allObjects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|SimpleLockingTestEntity
name|object
init|=
operator|(
name|SimpleLockingTestEntity
operator|)
name|allObjects
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
comment|// change description and save... no optimistic lock failure expected
name|object
operator|.
name|setDescription
argument_list|(
literal|"first update"
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|object
operator|.
name|setDescription
argument_list|(
literal|"second update"
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testSuccessSimpleLockingOnUpdateFollowedByInvalidate
parameter_list|()
throws|throws
name|Exception
block|{
name|createTestData
argument_list|(
literal|"testSimpleLocking"
argument_list|)
expr_stmt|;
name|List
name|allObjects
init|=
name|context
operator|.
name|performQuery
argument_list|(
operator|new
name|SelectQuery
argument_list|(
name|SimpleLockingTestEntity
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|allObjects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|SimpleLockingTestEntity
name|object
init|=
operator|(
name|SimpleLockingTestEntity
operator|)
name|allObjects
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
comment|// change description and save... no optimistic lock failure expected
name|object
operator|.
name|setDescription
argument_list|(
literal|"first update"
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|object
operator|.
name|setDescription
argument_list|(
literal|"second update"
argument_list|)
expr_stmt|;
name|context
operator|.
name|invalidateObjects
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|object
argument_list|)
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testSuccessSimpleLockingOnUpdatePrecededByInvalidate
parameter_list|()
throws|throws
name|Exception
block|{
name|createTestData
argument_list|(
literal|"testSimpleLocking"
argument_list|)
expr_stmt|;
name|List
name|allObjects
init|=
name|context
operator|.
name|performQuery
argument_list|(
operator|new
name|SelectQuery
argument_list|(
name|SimpleLockingTestEntity
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|allObjects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|SimpleLockingTestEntity
name|object
init|=
operator|(
name|SimpleLockingTestEntity
operator|)
name|allObjects
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
comment|// change description and save... no optimistic lock failure expected
name|object
operator|.
name|setDescription
argument_list|(
literal|"first update"
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|context
operator|.
name|invalidateObjects
argument_list|(
name|Collections
operator|.
name|singletonList
argument_list|(
name|object
argument_list|)
argument_list|)
expr_stmt|;
name|object
operator|.
name|setDescription
argument_list|(
literal|"second update"
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testSuccessSimpleLockingOnUpdateFollowedByForgetSnapshot
parameter_list|()
throws|throws
name|Exception
block|{
name|createTestData
argument_list|(
literal|"testSimpleLocking"
argument_list|)
expr_stmt|;
name|List
name|allObjects
init|=
name|context
operator|.
name|performQuery
argument_list|(
operator|new
name|SelectQuery
argument_list|(
name|SimpleLockingTestEntity
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|allObjects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|SimpleLockingTestEntity
name|object
init|=
operator|(
name|SimpleLockingTestEntity
operator|)
name|allObjects
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
comment|// change description and save... no optimistic lock failure expected
name|object
operator|.
name|setDescription
argument_list|(
literal|"first update"
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|object
operator|.
name|setDescription
argument_list|(
literal|"second update"
argument_list|)
expr_stmt|;
name|context
operator|.
name|getObjectStore
argument_list|()
operator|.
name|getDataRowCache
argument_list|()
operator|.
name|forgetSnapshot
argument_list|(
name|object
operator|.
name|getObjectId
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testSuccessSimpleLockingOnUpdatePrecededByForgetSnapshot
parameter_list|()
throws|throws
name|Exception
block|{
name|createTestData
argument_list|(
literal|"testSimpleLocking"
argument_list|)
expr_stmt|;
name|List
name|allObjects
init|=
name|context
operator|.
name|performQuery
argument_list|(
operator|new
name|SelectQuery
argument_list|(
name|SimpleLockingTestEntity
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|allObjects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|SimpleLockingTestEntity
name|object
init|=
operator|(
name|SimpleLockingTestEntity
operator|)
name|allObjects
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
comment|// change description and save... no optimistic lock failure expected
name|object
operator|.
name|setDescription
argument_list|(
literal|"first update"
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|context
operator|.
name|getObjectStore
argument_list|()
operator|.
name|getDataRowCache
argument_list|()
operator|.
name|forgetSnapshot
argument_list|(
name|object
operator|.
name|getObjectId
argument_list|()
argument_list|)
expr_stmt|;
name|object
operator|.
name|setDescription
argument_list|(
literal|"second update"
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testFailSimpleLocking
parameter_list|()
throws|throws
name|Exception
block|{
name|createTestData
argument_list|(
literal|"testSimpleLocking"
argument_list|)
expr_stmt|;
name|List
name|allObjects
init|=
name|context
operator|.
name|performQuery
argument_list|(
operator|new
name|SelectQuery
argument_list|(
name|SimpleLockingTestEntity
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|allObjects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|SimpleLockingTestEntity
name|object
init|=
operator|(
name|SimpleLockingTestEntity
operator|)
name|allObjects
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
comment|// change description and save... no optimistic lock failure expected
name|object
operator|.
name|setDescription
argument_list|(
literal|"first update"
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
comment|// change row underneath, change description and save... optimistic lock failure
comment|// expected
name|createTestData
argument_list|(
literal|"SimpleLockUpdate"
argument_list|)
expr_stmt|;
name|object
operator|.
name|setDescription
argument_list|(
literal|"second update"
argument_list|)
expr_stmt|;
try|try
block|{
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Optimistic lock failure expected."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|OptimisticLockException
name|ex
parameter_list|)
block|{
comment|// optimistic lock failure expected...
block|}
block|}
specifier|public
name|void
name|testFailLockingOnNull
parameter_list|()
throws|throws
name|Exception
block|{
name|createTestData
argument_list|(
literal|"testLockingOnNull"
argument_list|)
expr_stmt|;
name|List
name|allObjects
init|=
name|context
operator|.
name|performQuery
argument_list|(
operator|new
name|SelectQuery
argument_list|(
name|SimpleLockingTestEntity
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|allObjects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|SimpleLockingTestEntity
name|object
init|=
operator|(
name|SimpleLockingTestEntity
operator|)
name|allObjects
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
comment|// change description and save... no optimistic lock failure expected...
name|object
operator|.
name|setDescription
argument_list|(
literal|"first update"
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
comment|// change row underneath, change description and save... optimistic lock failure
comment|// expected
name|createTestData
argument_list|(
literal|"SimpleLockUpdate"
argument_list|)
expr_stmt|;
name|object
operator|.
name|setDescription
argument_list|(
literal|"second update"
argument_list|)
expr_stmt|;
try|try
block|{
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Optimistic lock failure expected."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|OptimisticLockException
name|ex
parameter_list|)
block|{
comment|// optimistic lock failure expected...
block|}
block|}
specifier|public
name|void
name|testSuccessLockingOnMixed
parameter_list|()
throws|throws
name|Exception
block|{
name|createTestData
argument_list|(
literal|"testLockingOnMixed"
argument_list|)
expr_stmt|;
name|SelectQuery
name|query
init|=
operator|new
name|SelectQuery
argument_list|(
name|SimpleLockingTestEntity
operator|.
name|class
argument_list|)
decl_stmt|;
name|query
operator|.
name|addOrdering
argument_list|(
operator|new
name|Ordering
argument_list|(
literal|"db:LOCKING_TEST_ID"
argument_list|,
name|Ordering
operator|.
name|ASC
argument_list|)
argument_list|)
expr_stmt|;
name|List
name|allObjects
init|=
name|context
operator|.
name|performQuery
argument_list|(
name|query
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|allObjects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|SimpleLockingTestEntity
name|object1
init|=
operator|(
name|SimpleLockingTestEntity
operator|)
name|allObjects
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|SimpleLockingTestEntity
name|object2
init|=
operator|(
name|SimpleLockingTestEntity
operator|)
name|allObjects
operator|.
name|get
argument_list|(
literal|1
argument_list|)
decl_stmt|;
name|SimpleLockingTestEntity
name|object3
init|=
operator|(
name|SimpleLockingTestEntity
operator|)
name|allObjects
operator|.
name|get
argument_list|(
literal|2
argument_list|)
decl_stmt|;
comment|// change description and save... no optimistic lock failure expected...
name|object1
operator|.
name|setDescription
argument_list|(
literal|"first update for object1"
argument_list|)
expr_stmt|;
name|object2
operator|.
name|setDescription
argument_list|(
literal|"first update for object2"
argument_list|)
expr_stmt|;
name|object3
operator|.
name|setName
argument_list|(
literal|"object3 - new name"
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
comment|// TODO: it would be nice to pick inside DataContext to see that 3 batches where
comment|// generated...
comment|// this requires refactoring of ContextCommit.
block|}
specifier|public
name|void
name|testFailLockingOnToOne
parameter_list|()
throws|throws
name|Exception
block|{
name|createTestData
argument_list|(
literal|"testLockingOnToOne"
argument_list|)
expr_stmt|;
name|List
name|allObjects
init|=
name|context
operator|.
name|performQuery
argument_list|(
operator|new
name|SelectQuery
argument_list|(
name|RelLockingTestEntity
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|allObjects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|RelLockingTestEntity
name|object
init|=
operator|(
name|RelLockingTestEntity
operator|)
name|allObjects
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
comment|// change name and save... no optimistic lock failure expected
name|object
operator|.
name|setName
argument_list|(
literal|"first update"
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
comment|// change relationship and save... no optimistic lock failure expected
name|SimpleLockingTestEntity
name|object1
init|=
name|context
operator|.
name|newObject
argument_list|(
name|SimpleLockingTestEntity
operator|.
name|class
argument_list|)
decl_stmt|;
name|object
operator|.
name|setToSimpleLockingTest
argument_list|(
name|object1
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
comment|// change row underneath, change description and save... optimistic lock failure
comment|// expected
name|createTestData
argument_list|(
literal|"RelLockUpdate"
argument_list|)
expr_stmt|;
name|object
operator|.
name|setName
argument_list|(
literal|"third update"
argument_list|)
expr_stmt|;
try|try
block|{
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Optimistic lock failure expected."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|OptimisticLockException
name|ex
parameter_list|)
block|{
comment|// optimistic lock failure expected...
block|}
block|}
specifier|public
name|void
name|testFailRetrieveRow
parameter_list|()
throws|throws
name|Exception
block|{
name|createTestData
argument_list|(
literal|"testSimpleLocking"
argument_list|)
expr_stmt|;
name|List
name|allObjects
init|=
name|context
operator|.
name|performQuery
argument_list|(
operator|new
name|SelectQuery
argument_list|(
name|SimpleLockingTestEntity
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|allObjects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|SimpleLockingTestEntity
name|object
init|=
operator|(
name|SimpleLockingTestEntity
operator|)
name|allObjects
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|object
operator|.
name|setDescription
argument_list|(
literal|"first update"
argument_list|)
expr_stmt|;
comment|// change row underneath, change description and save... optimistic lock failure
comment|// expected
name|createTestData
argument_list|(
literal|"SimpleLockUpdate"
argument_list|)
expr_stmt|;
try|try
block|{
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Optimistic lock failure expected."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|OptimisticLockException
name|ex
parameter_list|)
block|{
name|Map
name|freshFailedRow
init|=
name|ex
operator|.
name|getFreshSnapshot
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|freshFailedRow
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"LockTest1Updated"
argument_list|,
name|freshFailedRow
operator|.
name|get
argument_list|(
literal|"NAME"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testFailRetrieveDeletedRow
parameter_list|()
throws|throws
name|Exception
block|{
name|createTestData
argument_list|(
literal|"testSimpleLocking"
argument_list|)
expr_stmt|;
name|List
name|allObjects
init|=
name|context
operator|.
name|performQuery
argument_list|(
operator|new
name|SelectQuery
argument_list|(
name|SimpleLockingTestEntity
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|allObjects
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|SimpleLockingTestEntity
name|object
init|=
operator|(
name|SimpleLockingTestEntity
operator|)
name|allObjects
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|object
operator|.
name|setDescription
argument_list|(
literal|"first update"
argument_list|)
expr_stmt|;
comment|// delete row underneath, change description and save... optimistic lock failure
comment|// expected
name|createTestData
argument_list|(
literal|"SimpleLockDelete"
argument_list|)
expr_stmt|;
try|try
block|{
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|fail
argument_list|(
literal|"Optimistic lock failure expected."
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|OptimisticLockException
name|ex
parameter_list|)
block|{
name|Map
name|freshFailedRow
init|=
name|ex
operator|.
name|getFreshSnapshot
argument_list|(
name|context
argument_list|)
decl_stmt|;
name|assertNull
argument_list|(
name|freshFailedRow
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

