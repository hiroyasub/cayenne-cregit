begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|InheritanceCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|horizontalinherit
operator|.
name|SubEntity1
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|horizontalinherit
operator|.
name|AbstractSuperEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|horizontalinherit
operator|.
name|SubEntity2
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|SelectQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|SQLTemplate
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_comment
comment|/**  * Tests for horizontal inheritance implementation.  *   * @author Dzmitry Rusak  */
end_comment

begin_class
specifier|public
class|class
name|HorizontalInheritanceTest
extends|extends
name|InheritanceCase
block|{
specifier|protected
name|DataContext
name|context
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|deleteTestData
argument_list|()
expr_stmt|;
name|context
operator|=
name|createDataContext
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testAbstractSuperEntity
parameter_list|()
block|{
name|SubEntity1
name|subEntity1
init|=
name|context
operator|.
name|newObject
argument_list|(
name|SubEntity1
operator|.
name|class
argument_list|)
decl_stmt|;
name|subEntity1
operator|.
name|setSuperIntAttr
argument_list|(
literal|666
argument_list|)
expr_stmt|;
name|subEntity1
operator|.
name|setSuperStringAttr
argument_list|(
literal|"stringValue"
argument_list|)
expr_stmt|;
name|subEntity1
operator|.
name|setSubEntityStringAttr
argument_list|(
literal|"anotherStringValue"
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|SelectQuery
name|concreteSelect
init|=
operator|new
name|SelectQuery
argument_list|(
name|SubEntity1
operator|.
name|class
argument_list|)
decl_stmt|;
name|List
name|result
init|=
name|context
operator|.
name|performQuery
argument_list|(
name|concreteSelect
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|result
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|SubEntity2
name|subEntity2
init|=
name|context
operator|.
name|newObject
argument_list|(
name|SubEntity2
operator|.
name|class
argument_list|)
decl_stmt|;
name|subEntity2
operator|.
name|setSuperIntAttr
argument_list|(
literal|666
argument_list|)
expr_stmt|;
name|subEntity2
operator|.
name|setSuperStringAttr
argument_list|(
literal|"stringValue"
argument_list|)
expr_stmt|;
name|subEntity2
operator|.
name|setSubEntityIntAttr
argument_list|(
literal|13
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|SelectQuery
name|abstractSelect
init|=
operator|new
name|SelectQuery
argument_list|(
name|AbstractSuperEntity
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// this fails for now
comment|// List result1 = context.performQuery(abstractSelect);
comment|// assertNotNull(result1);
comment|// assertEquals(2, result1.size());
block|}
specifier|public
name|void
name|testUnions
parameter_list|()
block|{
name|SubEntity1
name|subEntity1
init|=
name|context
operator|.
name|newObject
argument_list|(
name|SubEntity1
operator|.
name|class
argument_list|)
decl_stmt|;
name|subEntity1
operator|.
name|setSuperIntAttr
argument_list|(
literal|666
argument_list|)
expr_stmt|;
name|subEntity1
operator|.
name|setSuperStringAttr
argument_list|(
literal|"stringValue"
argument_list|)
expr_stmt|;
name|subEntity1
operator|.
name|setSubEntityStringAttr
argument_list|(
literal|"anotherStringValue"
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|SQLTemplate
name|insertSql
init|=
operator|new
name|SQLTemplate
argument_list|(
name|SubEntity1
operator|.
name|class
argument_list|,
literal|" INSERT INTO DbEntity4 VALUES (13, 'Inserted value 1', 666, 'Inserted value 2')"
argument_list|)
decl_stmt|;
name|context
operator|.
name|performQuery
argument_list|(
name|insertSql
argument_list|)
expr_stmt|;
name|SQLTemplate
name|unionSql
init|=
operator|new
name|SQLTemplate
argument_list|(
name|SubEntity1
operator|.
name|class
argument_list|,
literal|" SELECT ID_1 as ID, SUBENTITY_STRING_DB_ATTR_1 as SUBENTITY_STRING_DB_ATTR, SUPER_INT_DB_ATTR_1 as SUPER_INT_DB_ATTR, SUPER_STRING_DB_ATTR_1 as SUPER_STRING_DB_ATTR FROM DbEntity4"
operator|+
literal|" UNION ALL"
operator|+
literal|" SELECT * FROM DbEntity1"
argument_list|)
decl_stmt|;
name|List
name|result
init|=
name|context
operator|.
name|performQuery
argument_list|(
name|unionSql
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|result
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|result
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

