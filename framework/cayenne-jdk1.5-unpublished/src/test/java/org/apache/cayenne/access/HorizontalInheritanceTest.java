begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|PersistenceState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|QueryChain
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|SQLTemplate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|SelectQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|horizontalinherit
operator|.
name|SubEntity1
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|InheritanceCase
import|;
end_import

begin_comment
comment|/**  * Tests for horizontal inheritance implementation.  */
end_comment

begin_class
specifier|public
class|class
name|HorizontalInheritanceTest
extends|extends
name|InheritanceCase
block|{
annotation|@
name|Override
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUp
argument_list|()
expr_stmt|;
name|deleteTestData
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testDatabaseUnionCapabilities
parameter_list|()
block|{
name|QueryChain
name|inserts
init|=
operator|new
name|QueryChain
argument_list|()
decl_stmt|;
name|inserts
operator|.
name|addQuery
argument_list|(
operator|new
name|SQLTemplate
argument_list|(
name|SubEntity1
operator|.
name|class
argument_list|,
literal|"INSERT INTO INHERITANCE_SUB_ENTITY1 "
operator|+
literal|"(ID, SUBENTITY_STRING_DB_ATTR, SUPER_INT_DB_ATTR, SUPER_STRING_DB_ATTR) "
operator|+
literal|"VALUES (1, 'V11', 1, 'V21')"
argument_list|)
argument_list|)
expr_stmt|;
name|inserts
operator|.
name|addQuery
argument_list|(
operator|new
name|SQLTemplate
argument_list|(
name|SubEntity1
operator|.
name|class
argument_list|,
literal|"INSERT INTO INHERITANCE_SUB_ENTITY2 "
operator|+
literal|"(ID, OVERRIDDEN_STRING_DB_ATTR, SUPER_INT_DB_ATTR, SUBENTITY_INT_DB_ATTR) "
operator|+
literal|"VALUES (1, 'VX11', 101, 201)"
argument_list|)
argument_list|)
expr_stmt|;
name|createDataContext
argument_list|()
operator|.
name|performGenericQuery
argument_list|(
name|inserts
argument_list|)
expr_stmt|;
name|SQLTemplate
name|unionSql
init|=
operator|new
name|SQLTemplate
argument_list|(
name|SubEntity1
operator|.
name|class
argument_list|,
literal|"SELECT ID, SUBENTITY_STRING_DB_ATTR, SUPER_STRING_DB_ATTR, SUPER_INT_DB_ATTR, 0, 'INHERITANCE_SUB_ENTITY1'"
operator|+
literal|" FROM INHERITANCE_SUB_ENTITY1"
operator|+
literal|" UNION ALL"
operator|+
literal|" SELECT ID, OVERRIDDEN_STRING_DB_ATTR, '', SUBENTITY_INT_DB_ATTR, SUBENTITY_INT_DB_ATTR, 'INHERITANCE_SUB_ENTITY2'"
operator|+
literal|" FROM INHERITANCE_SUB_ENTITY2"
argument_list|)
decl_stmt|;
name|unionSql
operator|.
name|setFetchingDataRows
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|createDataContext
argument_list|()
operator|.
name|performQuery
argument_list|(
name|unionSql
argument_list|)
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSelectQueryOnConcreteLeafEntity
parameter_list|()
block|{
name|QueryChain
name|inserts
init|=
operator|new
name|QueryChain
argument_list|()
decl_stmt|;
name|inserts
operator|.
name|addQuery
argument_list|(
operator|new
name|SQLTemplate
argument_list|(
name|SubEntity1
operator|.
name|class
argument_list|,
literal|"INSERT INTO INHERITANCE_SUB_ENTITY1 "
operator|+
literal|"(ID, SUBENTITY_STRING_DB_ATTR, SUPER_INT_DB_ATTR, SUPER_STRING_DB_ATTR) "
operator|+
literal|"VALUES (1, 'V11', 1, 'V21')"
argument_list|)
argument_list|)
expr_stmt|;
name|inserts
operator|.
name|addQuery
argument_list|(
operator|new
name|SQLTemplate
argument_list|(
name|SubEntity1
operator|.
name|class
argument_list|,
literal|"INSERT INTO INHERITANCE_SUB_ENTITY1 "
operator|+
literal|"(ID, SUBENTITY_STRING_DB_ATTR, SUPER_INT_DB_ATTR, SUPER_STRING_DB_ATTR) "
operator|+
literal|"VALUES (2, 'V12', 2, 'V22')"
argument_list|)
argument_list|)
expr_stmt|;
name|createDataContext
argument_list|()
operator|.
name|performGenericQuery
argument_list|(
name|inserts
argument_list|)
expr_stmt|;
name|SelectQuery
name|select
init|=
operator|new
name|SelectQuery
argument_list|(
name|SubEntity1
operator|.
name|class
argument_list|)
decl_stmt|;
name|select
operator|.
name|addOrdering
argument_list|(
name|SubEntity1
operator|.
name|SUB_ENTITY_STRING_ATTR_PROPERTY
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|SubEntity1
argument_list|>
name|result
init|=
name|createDataContext
argument_list|()
operator|.
name|performQuery
argument_list|(
name|select
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|result
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|result
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"V11"
argument_list|,
name|result
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getSubEntityStringAttr
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|result
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"V12"
argument_list|,
name|result
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getSubEntityStringAttr
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

