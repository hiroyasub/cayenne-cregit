begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|art
operator|.
name|Artist
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|art
operator|.
name|Painting
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|art
operator|.
name|PaintingInfo
import|;
end_import

begin_class
specifier|public
class|class
name|CDOOne2OneDepTest
extends|extends
name|CayenneDOTestBase
block|{
specifier|public
name|void
name|testRollbackDependent
parameter_list|()
block|{
name|Artist
name|a1
init|=
name|newArtist
argument_list|()
decl_stmt|;
name|Painting
name|p1
init|=
name|newPainting
argument_list|()
decl_stmt|;
comment|// needed to save without errors
name|p1
operator|.
name|setToArtist
argument_list|(
name|a1
argument_list|)
expr_stmt|;
name|ctxt
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|PaintingInfo
name|info
init|=
name|ctxt
operator|.
name|newObject
argument_list|(
name|PaintingInfo
operator|.
name|class
argument_list|)
decl_stmt|;
name|info
operator|.
name|setTextReview
argument_list|(
literal|"XXX"
argument_list|)
expr_stmt|;
name|p1
operator|.
name|setToPaintingInfo
argument_list|(
name|info
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|info
argument_list|,
name|p1
operator|.
name|getToPaintingInfo
argument_list|()
argument_list|)
expr_stmt|;
name|ctxt
operator|.
name|rollbackChanges
argument_list|()
expr_stmt|;
name|assertNull
argument_list|(
name|p1
operator|.
name|getToPaintingInfo
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|test2Null
parameter_list|()
throws|throws
name|Exception
block|{
name|Artist
name|a1
init|=
name|newArtist
argument_list|()
decl_stmt|;
name|Painting
name|p1
init|=
name|newPainting
argument_list|()
decl_stmt|;
comment|// needed to save without errors
name|p1
operator|.
name|setToArtist
argument_list|(
name|a1
argument_list|)
expr_stmt|;
name|ctxt
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|ctxt
operator|=
name|createDataContext
argument_list|()
expr_stmt|;
comment|// test database data
name|Painting
name|p2
init|=
name|fetchPainting
argument_list|()
decl_stmt|;
comment|// *** TESTING THIS ***
name|assertNull
argument_list|(
name|p2
operator|.
name|getToPaintingInfo
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testReplaceNull
parameter_list|()
throws|throws
name|Exception
block|{
name|Artist
name|a1
init|=
name|newArtist
argument_list|()
decl_stmt|;
name|Painting
name|p1
init|=
name|newPainting
argument_list|()
decl_stmt|;
comment|// needed to save without errors
name|p1
operator|.
name|setToArtist
argument_list|(
name|a1
argument_list|)
expr_stmt|;
name|ctxt
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|ctxt
operator|=
name|createDataContext
argument_list|()
expr_stmt|;
comment|// test database data
name|Painting
name|p2
init|=
name|fetchPainting
argument_list|()
decl_stmt|;
comment|// *** TESTING THIS ***
name|p2
operator|.
name|setToPaintingInfo
argument_list|(
literal|null
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|p2
operator|.
name|getToPaintingInfo
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testNewAdd
parameter_list|()
throws|throws
name|Exception
block|{
name|Artist
name|a1
init|=
name|newArtist
argument_list|()
decl_stmt|;
name|PaintingInfo
name|pi1
init|=
name|newPaintingInfo
argument_list|()
decl_stmt|;
name|Painting
name|p1
init|=
name|newPainting
argument_list|()
decl_stmt|;
comment|// needed to save without errors
name|p1
operator|.
name|setToArtist
argument_list|(
name|a1
argument_list|)
expr_stmt|;
comment|// *** TESTING THIS ***
name|p1
operator|.
name|setToPaintingInfo
argument_list|(
name|pi1
argument_list|)
expr_stmt|;
comment|// test before save
name|assertSame
argument_list|(
name|pi1
argument_list|,
name|p1
operator|.
name|getToPaintingInfo
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|p1
argument_list|,
name|pi1
operator|.
name|getPainting
argument_list|()
argument_list|)
expr_stmt|;
comment|// do save
name|ctxt
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|ctxt
operator|=
name|createDataContext
argument_list|()
expr_stmt|;
comment|// test database data
name|Painting
name|p2
init|=
name|fetchPainting
argument_list|()
decl_stmt|;
name|PaintingInfo
name|pi2
init|=
name|p2
operator|.
name|getToPaintingInfo
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|pi2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|textReview
argument_list|,
name|pi2
operator|.
name|getTextReview
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testTakeObjectSnapshotDependentFault
parameter_list|()
throws|throws
name|Exception
block|{
comment|// prepare data
name|Artist
name|a1
init|=
name|newArtist
argument_list|()
decl_stmt|;
name|PaintingInfo
name|pi1
init|=
name|newPaintingInfo
argument_list|()
decl_stmt|;
name|Painting
name|p1
init|=
name|newPainting
argument_list|()
decl_stmt|;
name|p1
operator|.
name|setToArtist
argument_list|(
name|a1
argument_list|)
expr_stmt|;
name|p1
operator|.
name|setToPaintingInfo
argument_list|(
name|pi1
argument_list|)
expr_stmt|;
name|ctxt
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|ctxt
operator|=
name|createDataContext
argument_list|()
expr_stmt|;
name|Painting
name|painting
init|=
name|fetchPainting
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|painting
operator|.
name|readPropertyDirectly
argument_list|(
literal|"toPaintingInfo"
argument_list|)
operator|instanceof
name|Fault
argument_list|)
expr_stmt|;
comment|// test that taking a snapshot does not trigger a fault, and generally works well
name|Map
name|snapshot
init|=
name|ctxt
operator|.
name|currentSnapshot
argument_list|(
name|painting
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|paintingName
argument_list|,
name|snapshot
operator|.
name|get
argument_list|(
literal|"PAINTING_TITLE"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|painting
operator|.
name|readPropertyDirectly
argument_list|(
literal|"toPaintingInfo"
argument_list|)
operator|instanceof
name|Fault
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

