begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|types
package|;
end_package

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Types
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|validation
operator|.
name|ValidationResult
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mockrunner
operator|.
name|mock
operator|.
name|jdbc
operator|.
name|MockConnection
import|;
end_import

begin_import
import|import
name|com
operator|.
name|mockrunner
operator|.
name|mock
operator|.
name|jdbc
operator|.
name|MockPreparedStatement
import|;
end_import

begin_comment
comment|/**  */
end_comment

begin_class
specifier|public
class|class
name|AbstractTypeTest
extends|extends
name|TestCase
block|{
comment|/**      * @deprecated since 3.0 as validation should not be done at the DataNode level.      */
specifier|public
name|void
name|testValidateProperty
parameter_list|()
block|{
comment|// should always return true... not sure how else to test it?
name|MockAbstractType
name|type
init|=
operator|new
name|MockAbstractType
argument_list|(
literal|"testclass"
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
name|type
operator|.
name|validateProperty
argument_list|(
operator|new
name|Object
argument_list|()
argument_list|,
literal|"dummy"
argument_list|,
operator|new
name|Object
argument_list|()
argument_list|,
operator|new
name|DbAttribute
argument_list|(
literal|"test"
argument_list|)
argument_list|,
operator|new
name|ValidationResult
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testToString
parameter_list|()
block|{
name|MockAbstractType
name|type
init|=
operator|new
name|MockAbstractType
argument_list|(
literal|"testclass"
argument_list|)
decl_stmt|;
name|String
name|string
init|=
name|type
operator|.
name|toString
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|string
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|string
operator|.
name|indexOf
argument_list|(
literal|"testclass"
argument_list|)
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSetJdbcObject
parameter_list|()
throws|throws
name|Exception
block|{
name|MockConnection
name|c
init|=
operator|new
name|MockConnection
argument_list|()
decl_stmt|;
name|MockPreparedStatement
name|st
init|=
operator|new
name|MockPreparedStatement
argument_list|(
name|c
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|Object
name|value
init|=
operator|new
name|Object
argument_list|()
decl_stmt|;
name|MockAbstractType
name|type
init|=
operator|new
name|MockAbstractType
argument_list|(
literal|"testclass"
argument_list|)
decl_stmt|;
name|type
operator|.
name|setJdbcObject
argument_list|(
name|st
argument_list|,
name|value
argument_list|,
literal|35
argument_list|,
name|Types
operator|.
name|INTEGER
argument_list|,
operator|-
literal|1
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|value
argument_list|,
name|st
operator|.
name|getParameter
argument_list|(
literal|35
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

