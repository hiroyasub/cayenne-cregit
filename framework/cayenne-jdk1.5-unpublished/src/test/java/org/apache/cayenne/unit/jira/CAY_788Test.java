begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|jira
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|art
operator|.
name|Painting
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|art
operator|.
name|PaintingInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|PersistenceState
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|DataContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|SelectQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|SelectQueryBase
import|;
end_import

begin_class
specifier|public
class|class
name|CAY_788Test
extends|extends
name|SelectQueryBase
block|{
specifier|public
name|void
name|testPrefetchToOne
parameter_list|()
block|{
name|DataContext
name|ctxt
init|=
name|createDataContext
argument_list|()
decl_stmt|;
name|SelectQuery
name|query
init|=
operator|new
name|SelectQuery
argument_list|(
name|Painting
operator|.
name|class
argument_list|)
decl_stmt|;
name|query
operator|.
name|addPrefetch
argument_list|(
name|Painting
operator|.
name|TO_PAINTING_INFO_PROPERTY
argument_list|)
expr_stmt|;
name|List
name|daos
init|=
name|ctxt
operator|.
name|performQuery
argument_list|(
name|query
argument_list|)
decl_stmt|;
name|assertTrue
argument_list|(
operator|!
name|daos
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
for|for
control|(
name|Iterator
name|it
init|=
name|daos
operator|.
name|iterator
argument_list|()
init|;
name|it
operator|.
name|hasNext
argument_list|()
condition|;
control|)
block|{
name|Painting
name|p
init|=
operator|(
name|Painting
operator|)
name|it
operator|.
name|next
argument_list|()
decl_stmt|;
name|PaintingInfo
name|pi
init|=
name|p
operator|.
name|getToPaintingInfo
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"persistence state"
argument_list|,
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|p
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"persistence state"
argument_list|,
name|PersistenceState
operator|.
name|COMMITTED
argument_list|,
name|pi
operator|.
name|getPersistenceState
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|populateTables
parameter_list|()
throws|throws
name|Exception
block|{
name|DataContext
name|ctxt
init|=
name|createDataContext
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
literal|10
condition|;
name|i
operator|++
control|)
block|{
name|Painting
name|p
init|=
name|ctxt
operator|.
name|newObject
argument_list|(
name|Painting
operator|.
name|class
argument_list|)
decl_stmt|;
name|p
operator|.
name|setPaintingTitle
argument_list|(
literal|"Painting title #"
operator|+
name|i
argument_list|)
expr_stmt|;
name|p
operator|.
name|setPaintingDescription
argument_list|(
literal|"Painting desc #"
operator|+
name|i
argument_list|)
expr_stmt|;
name|PaintingInfo
name|pi
init|=
name|ctxt
operator|.
name|newObject
argument_list|(
name|PaintingInfo
operator|.
name|class
argument_list|)
decl_stmt|;
name|pi
operator|.
name|setTextReview
argument_list|(
literal|"Review #"
operator|+
name|i
argument_list|)
expr_stmt|;
name|p
operator|.
name|setToPaintingInfo
argument_list|(
name|pi
argument_list|)
expr_stmt|;
block|}
name|ctxt
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

