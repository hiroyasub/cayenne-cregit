begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|conf
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|PrintWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|StringWriter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|conn
operator|.
name|DataSourceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|project
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|CayenneCase
import|;
end_import

begin_comment
comment|/**  * Test cases for DomainHelper class.  *   */
end_comment

begin_class
specifier|public
class|class
name|ConfigSaverTest
extends|extends
name|CayenneCase
block|{
specifier|protected
name|ConfigSaver
name|saver
decl_stmt|;
specifier|public
name|void
name|testStoreFullDataNode
parameter_list|()
throws|throws
name|Exception
block|{
name|DataSourceInfo
name|info
init|=
operator|new
name|DataSourceInfo
argument_list|()
decl_stmt|;
name|info
operator|.
name|setDataSourceUrl
argument_list|(
literal|"s1"
argument_list|)
expr_stmt|;
name|info
operator|.
name|setJdbcDriver
argument_list|(
literal|"s2"
argument_list|)
expr_stmt|;
name|info
operator|.
name|setPassword
argument_list|(
literal|"s3"
argument_list|)
expr_stmt|;
name|info
operator|.
name|setUserName
argument_list|(
literal|"s4"
argument_list|)
expr_stmt|;
name|info
operator|.
name|setMaxConnections
argument_list|(
literal|35
argument_list|)
expr_stmt|;
name|info
operator|.
name|setMinConnections
argument_list|(
literal|22
argument_list|)
expr_stmt|;
name|assertSaved
argument_list|(
name|info
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testStoreDataNodeNoUserName
parameter_list|()
throws|throws
name|Exception
block|{
name|DataSourceInfo
name|info
init|=
operator|new
name|DataSourceInfo
argument_list|()
decl_stmt|;
name|info
operator|.
name|setDataSourceUrl
argument_list|(
literal|"s1"
argument_list|)
expr_stmt|;
name|info
operator|.
name|setJdbcDriver
argument_list|(
literal|"s2"
argument_list|)
expr_stmt|;
name|info
operator|.
name|setPassword
argument_list|(
literal|"s3"
argument_list|)
expr_stmt|;
name|info
operator|.
name|setMaxConnections
argument_list|(
literal|35
argument_list|)
expr_stmt|;
name|info
operator|.
name|setMinConnections
argument_list|(
literal|22
argument_list|)
expr_stmt|;
name|assertSaved
argument_list|(
name|info
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testStoreDataNodeNoPassword
parameter_list|()
throws|throws
name|Exception
block|{
name|DataSourceInfo
name|info
init|=
operator|new
name|DataSourceInfo
argument_list|()
decl_stmt|;
name|info
operator|.
name|setDataSourceUrl
argument_list|(
literal|"s1"
argument_list|)
expr_stmt|;
name|info
operator|.
name|setJdbcDriver
argument_list|(
literal|"s2"
argument_list|)
expr_stmt|;
name|info
operator|.
name|setUserName
argument_list|(
literal|"s4"
argument_list|)
expr_stmt|;
name|info
operator|.
name|setMaxConnections
argument_list|(
literal|35
argument_list|)
expr_stmt|;
name|info
operator|.
name|setMinConnections
argument_list|(
literal|22
argument_list|)
expr_stmt|;
name|assertSaved
argument_list|(
name|info
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|assertSaved
parameter_list|(
name|DataSourceInfo
name|info
parameter_list|)
throws|throws
name|Exception
block|{
name|StringWriter
name|str
init|=
operator|new
name|StringWriter
argument_list|()
decl_stmt|;
name|PrintWriter
name|out
init|=
operator|new
name|PrintWriter
argument_list|(
name|str
argument_list|)
decl_stmt|;
name|saver
operator|.
name|storeDataNode
argument_list|(
name|out
argument_list|,
literal|null
argument_list|,
name|info
argument_list|)
expr_stmt|;
name|out
operator|.
name|close
argument_list|()
expr_stmt|;
name|str
operator|.
name|close
argument_list|()
expr_stmt|;
name|StringBuffer
name|buf
init|=
name|str
operator|.
name|getBuffer
argument_list|()
decl_stmt|;
comment|// perform assertions
if|if
condition|(
name|info
operator|.
name|getDataSourceUrl
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|assertTrue
argument_list|(
literal|"URL not saved: "
operator|+
name|info
operator|.
name|getDataSourceUrl
argument_list|()
argument_list|,
name|buf
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"<url value=\""
operator|+
name|info
operator|.
name|getDataSourceUrl
argument_list|()
operator|+
literal|"\"/>"
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|info
operator|.
name|getJdbcDriver
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|assertTrue
argument_list|(
literal|"Driver not saved: "
operator|+
name|info
operator|.
name|getJdbcDriver
argument_list|()
argument_list|,
name|buf
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"<driver project-version=\""
operator|+
name|Project
operator|.
name|CURRENT_PROJECT_VERSION
operator|+
literal|"\" class=\""
operator|+
name|info
operator|.
name|getJdbcDriver
argument_list|()
operator|+
literal|"\">"
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|info
operator|.
name|getUserName
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|assertTrue
argument_list|(
literal|"User name not saved: "
operator|+
name|info
operator|.
name|getUserName
argument_list|()
argument_list|,
name|buf
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"userName=\""
operator|+
name|info
operator|.
name|getUserName
argument_list|()
operator|+
literal|"\""
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|info
operator|.
name|getPassword
argument_list|()
operator|!=
literal|null
condition|)
block|{
name|assertTrue
argument_list|(
literal|"Password not saved: "
operator|+
name|info
operator|.
name|getPassword
argument_list|()
argument_list|,
name|buf
operator|.
name|toString
argument_list|()
operator|.
name|contains
argument_list|(
literal|"password=\""
operator|+
name|info
operator|.
name|getPassword
argument_list|()
operator|+
literal|"\""
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * @see junit.framework.TestCase#setUp()      */
annotation|@
name|Override
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|saver
operator|=
operator|new
name|ConfigSaver
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

