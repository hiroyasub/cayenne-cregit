begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileWriter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_class
specifier|public
class|class
name|ResourceLocatorTest
extends|extends
name|TestCase
block|{
specifier|private
name|File
name|fTmpFileInCurrentDir
decl_stmt|;
specifier|private
name|String
name|fTmpFileName
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|void
name|setUp
parameter_list|()
throws|throws
name|java
operator|.
name|lang
operator|.
name|Exception
block|{
name|fTmpFileName
operator|=
name|System
operator|.
name|currentTimeMillis
argument_list|()
operator|+
literal|".tmp"
expr_stmt|;
name|fTmpFileInCurrentDir
operator|=
operator|new
name|File
argument_list|(
literal|"."
operator|+
name|File
operator|.
name|separator
operator|+
name|fTmpFileName
argument_list|)
expr_stmt|;
comment|// right some garbage to the temp file, so that it is not empty
name|FileWriter
name|fout
init|=
operator|new
name|FileWriter
argument_list|(
name|fTmpFileInCurrentDir
argument_list|)
decl_stmt|;
name|fout
operator|.
name|write
argument_list|(
literal|"This is total garbage.."
argument_list|)
expr_stmt|;
name|fout
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|tearDown
parameter_list|()
throws|throws
name|java
operator|.
name|lang
operator|.
name|Exception
block|{
if|if
condition|(
operator|!
name|fTmpFileInCurrentDir
operator|.
name|delete
argument_list|()
condition|)
throw|throw
operator|new
name|Exception
argument_list|(
literal|"Error deleting temporary file: "
operator|+
name|fTmpFileInCurrentDir
argument_list|)
throw|;
block|}
comment|/**      * @deprecated since 3.0 unused      */
specifier|public
name|void
name|testFindResourceInCurrentDirectory
parameter_list|()
throws|throws
name|java
operator|.
name|lang
operator|.
name|Exception
block|{
name|InputStream
name|in
init|=
name|ResourceLocator
operator|.
name|findResourceInFileSystem
argument_list|(
name|fTmpFileName
argument_list|)
decl_stmt|;
try|try
block|{
name|assertNotNull
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|in
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
comment|/**      * @deprecated since 3.0      */
specifier|public
name|void
name|testClassBaseUrl
parameter_list|()
throws|throws
name|java
operator|.
name|lang
operator|.
name|Exception
block|{
name|String
name|me
init|=
name|ResourceLocator
operator|.
name|classBaseUrl
argument_list|(
name|this
operator|.
name|getClass
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|me
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
literal|"Expected 'jar:' or 'file:' URL, got "
operator|+
name|me
argument_list|,
name|me
operator|.
name|startsWith
argument_list|(
literal|"jar:"
argument_list|)
operator|||
name|me
operator|.
name|startsWith
argument_list|(
literal|"file:"
argument_list|)
argument_list|)
expr_stmt|;
block|}
comment|/**      * @deprecated since 3.0 unused      */
specifier|public
name|void
name|testFindResourceInClasspath
parameter_list|()
throws|throws
name|java
operator|.
name|lang
operator|.
name|Exception
block|{
name|InputStream
name|in
init|=
name|ResourceLocator
operator|.
name|findResourceInClasspath
argument_list|(
literal|"testfile1.txt"
argument_list|)
decl_stmt|;
try|try
block|{
name|assertNotNull
argument_list|(
name|in
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|in
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testFindResourceWithCustomClassPath
parameter_list|()
throws|throws
name|java
operator|.
name|lang
operator|.
name|Exception
block|{
name|ResourceLocator
name|l
init|=
operator|new
name|ResourceLocator
argument_list|()
decl_stmt|;
name|l
operator|.
name|setSkipAbsolutePath
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|l
operator|.
name|setSkipCurrentDirectory
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|l
operator|.
name|setSkipHomeDirectory
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|l
operator|.
name|findResource
argument_list|(
literal|"testfile1.txt"
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

