begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|art
operator|.
name|auto
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|art
operator|.
name|Artist
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|art
operator|.
name|Gallery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|art
operator|.
name|Painting
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ObjectContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|NamedQuery
import|;
end_import

begin_comment
comment|/**  * This class was generated by Cayenne.  * It is probably a good idea to avoid changing this class manually,  * since it may be overwritten next time code is regenerated.  * If you need to make any customizations, please use subclass.  */
end_comment

begin_class
specifier|public
class|class
name|_Testmap
block|{
specifier|public
specifier|static
specifier|final
name|String
name|EJBQL_QUERY_TEST_QUERYNAME
init|=
literal|"EjbqlQueryTest"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|NON_SELECTING_QUERY_QUERYNAME
init|=
literal|"NonSelectingQuery"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|OBJECT_QUERY_QUERYNAME
init|=
literal|"ObjectQuery"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|PARAMETERIZED_NON_SELECTING_QUERY_QUERYNAME
init|=
literal|"ParameterizedNonSelectingQuery"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|PARAMETERIZED_QUERY_WITH_LOCAL_CACHE_QUERYNAME
init|=
literal|"ParameterizedQueryWithLocalCache"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|PARAMETERIZED_QUERY_WITH_SHARED_CACHE_QUERYNAME
init|=
literal|"ParameterizedQueryWithSharedCache"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|PROCEDURE_QUERY_QUERYNAME
init|=
literal|"ProcedureQuery"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|QUERY_WITH_LOCAL_CACHE_QUERYNAME
init|=
literal|"QueryWithLocalCache"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|QUERY_WITH_ORDERING_QUERYNAME
init|=
literal|"QueryWithOrdering"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|QUERY_WITH_PREFETCH_QUERYNAME
init|=
literal|"QueryWithPrefetch"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|QUERY_WITH_QUALIFIER_QUERYNAME
init|=
literal|"QueryWithQualifier"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|QUERY_WITH_SHARED_CACHE_QUERYNAME
init|=
literal|"QueryWithSharedCache"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|SELECT_DATE_TEST_QUERYNAME
init|=
literal|"SelectDateTest"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|SELECT_RETURN_TYPES_MAP1_QUERYNAME
init|=
literal|"SelectReturnTypesMap1"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|SELECT_RETURN_TYPES_MAP2_QUERYNAME
init|=
literal|"SelectReturnTypesMap2"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|SELECT_TEST_LOWER_QUERYNAME
init|=
literal|"SelectTestLower"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|SELECT_TEST_UPPER_QUERYNAME
init|=
literal|"SelectTestUpper"
decl_stmt|;
specifier|public
name|List
argument_list|<
name|Painting
argument_list|>
name|performObjectQuery
parameter_list|(
name|ObjectContext
name|context
parameter_list|,
name|Artist
name|artist
parameter_list|)
block|{
name|String
index|[]
name|parameters
init|=
block|{
literal|"artist"
block|,         }
decl_stmt|;
name|Object
index|[]
name|values
init|=
block|{
name|artist
block|,         }
decl_stmt|;
return|return
name|context
operator|.
name|performQuery
argument_list|(
operator|new
name|NamedQuery
argument_list|(
literal|"ObjectQuery"
argument_list|,
name|parameters
argument_list|,
name|values
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|Artist
argument_list|>
name|performParameterizedQueryWithLocalCache
parameter_list|(
name|ObjectContext
name|context
parameter_list|,
name|String
name|name
parameter_list|)
block|{
name|String
index|[]
name|parameters
init|=
block|{
literal|"name"
block|,         }
decl_stmt|;
name|Object
index|[]
name|values
init|=
block|{
name|name
block|,         }
decl_stmt|;
return|return
name|context
operator|.
name|performQuery
argument_list|(
operator|new
name|NamedQuery
argument_list|(
literal|"ParameterizedQueryWithLocalCache"
argument_list|,
name|parameters
argument_list|,
name|values
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|Artist
argument_list|>
name|performParameterizedQueryWithSharedCache
parameter_list|(
name|ObjectContext
name|context
parameter_list|,
name|String
name|name
parameter_list|)
block|{
name|String
index|[]
name|parameters
init|=
block|{
literal|"name"
block|,         }
decl_stmt|;
name|Object
index|[]
name|values
init|=
block|{
name|name
block|,         }
decl_stmt|;
return|return
name|context
operator|.
name|performQuery
argument_list|(
operator|new
name|NamedQuery
argument_list|(
literal|"ParameterizedQueryWithSharedCache"
argument_list|,
name|parameters
argument_list|,
name|values
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|Artist
argument_list|>
name|performQueryWithLocalCache
parameter_list|(
name|ObjectContext
name|context
parameter_list|)
block|{
return|return
name|context
operator|.
name|performQuery
argument_list|(
operator|new
name|NamedQuery
argument_list|(
literal|"QueryWithLocalCache"
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|Artist
argument_list|>
name|performQueryWithOrdering
parameter_list|(
name|ObjectContext
name|context
parameter_list|)
block|{
return|return
name|context
operator|.
name|performQuery
argument_list|(
operator|new
name|NamedQuery
argument_list|(
literal|"QueryWithOrdering"
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|Gallery
argument_list|>
name|performQueryWithPrefetch
parameter_list|(
name|ObjectContext
name|context
parameter_list|)
block|{
return|return
name|context
operator|.
name|performQuery
argument_list|(
operator|new
name|NamedQuery
argument_list|(
literal|"QueryWithPrefetch"
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|Artist
argument_list|>
name|performQueryWithQualifier
parameter_list|(
name|ObjectContext
name|context
parameter_list|,
name|String
name|param1
parameter_list|)
block|{
name|String
index|[]
name|parameters
init|=
block|{
literal|"param1"
block|,         }
decl_stmt|;
name|Object
index|[]
name|values
init|=
block|{
name|param1
block|,         }
decl_stmt|;
return|return
name|context
operator|.
name|performQuery
argument_list|(
operator|new
name|NamedQuery
argument_list|(
literal|"QueryWithQualifier"
argument_list|,
name|parameters
argument_list|,
name|values
argument_list|)
argument_list|)
return|;
block|}
specifier|public
name|List
argument_list|<
name|Artist
argument_list|>
name|performQueryWithSharedCache
parameter_list|(
name|ObjectContext
name|context
parameter_list|)
block|{
return|return
name|context
operator|.
name|performQuery
argument_list|(
operator|new
name|NamedQuery
argument_list|(
literal|"QueryWithSharedCache"
argument_list|)
argument_list|)
return|;
block|}
block|}
end_class

end_unit

