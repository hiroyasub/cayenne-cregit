begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|remote
operator|.
name|hessian
operator|.
name|service
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Enumeration
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletConfig
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|remote
operator|.
name|hessian
operator|.
name|EnumSerializerProxy
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|remote
operator|.
name|hessian
operator|.
name|HessianConfig
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|remote
operator|.
name|service
operator|.
name|HttpRemoteService
import|;
end_import

begin_import
import|import
name|com
operator|.
name|caucho
operator|.
name|hessian
operator|.
name|io
operator|.
name|SerializerFactory
import|;
end_import

begin_import
import|import
name|com
operator|.
name|caucho
operator|.
name|services
operator|.
name|server
operator|.
name|Service
import|;
end_import

begin_import
import|import
name|com
operator|.
name|caucho
operator|.
name|services
operator|.
name|server
operator|.
name|ServiceContext
import|;
end_import

begin_comment
comment|/**  * An implementation of RemoteService using binary Hessian protocol. For more info on  * Hessian see http://www.caucho.com/resin-3.0/protocols/hessian.xtp.  *   * @see org.apache.cayenne.remote.hessian.service.HessianServlet  * @see org.apache.cayenne.remote.RemoteService  * @since 1.2  * @author Andrus Adamchik  */
end_comment

begin_class
specifier|public
class|class
name|HessianService
extends|extends
name|HttpRemoteService
implements|implements
name|Service
block|{
specifier|public
specifier|static
specifier|final
name|String
index|[]
name|SERVER_SERIALIZER_FACTORIES
init|=
operator|new
name|String
index|[]
block|{
name|EnumSerializerProxy
operator|.
name|class
operator|.
name|getName
argument_list|()
block|,
name|ServerSerializerFactory
operator|.
name|class
operator|.
name|getName
argument_list|()
block|}
decl_stmt|;
comment|/**      * Extracts parameters from ServletConfig and initializes the service.      */
specifier|public
name|void
name|init
parameter_list|(
name|ServletConfig
name|config
parameter_list|)
throws|throws
name|ServletException
block|{
name|Map
name|properties
init|=
operator|new
name|HashMap
argument_list|()
decl_stmt|;
name|Enumeration
name|en
init|=
name|config
operator|.
name|getInitParameterNames
argument_list|()
decl_stmt|;
while|while
condition|(
name|en
operator|.
name|hasMoreElements
argument_list|()
condition|)
block|{
name|String
name|name
init|=
operator|(
name|String
operator|)
name|en
operator|.
name|nextElement
argument_list|()
decl_stmt|;
name|properties
operator|.
name|put
argument_list|(
name|name
argument_list|,
name|config
operator|.
name|getInitParameter
argument_list|(
name|name
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|initService
argument_list|(
name|properties
argument_list|)
expr_stmt|;
block|}
comment|/**      * Creates a Hessian SerializerFactory with Cayenne extensions.      */
name|SerializerFactory
name|createSerializerFactory
parameter_list|()
block|{
return|return
name|HessianConfig
operator|.
name|createFactory
argument_list|(
name|SERVER_SERIALIZER_FACTORIES
argument_list|,
name|getRootChannel
argument_list|()
operator|.
name|getEntityResolver
argument_list|()
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|HttpSession
name|getSession
parameter_list|(
name|boolean
name|create
parameter_list|)
block|{
name|HttpServletRequest
name|request
init|=
operator|(
name|HttpServletRequest
operator|)
name|ServiceContext
operator|.
name|getContextRequest
argument_list|()
decl_stmt|;
if|if
condition|(
name|request
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Attempt to access HttpSession outside the request scope."
argument_list|)
throw|;
block|}
return|return
name|request
operator|.
name|getSession
argument_list|(
name|create
argument_list|)
return|;
block|}
specifier|public
name|void
name|destroy
parameter_list|()
block|{
name|destroyService
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

