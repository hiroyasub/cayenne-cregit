begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|remote
operator|.
name|hessian
operator|.
name|service
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|ObjectContextFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|remote
operator|.
name|service
operator|.
name|HttpRemoteService
import|;
end_import

begin_import
import|import
name|com
operator|.
name|caucho
operator|.
name|services
operator|.
name|server
operator|.
name|ServiceContext
import|;
end_import

begin_comment
comment|/**  * An implementation of RemoteService for work within Caucho Hessian environment.  *   * @since 3.1 the service API is reworked to initialize via Cayenne DI.  */
end_comment

begin_class
specifier|public
class|class
name|HessianService
extends|extends
name|HttpRemoteService
block|{
specifier|public
specifier|static
specifier|final
name|String
index|[]
name|SERVER_SERIALIZER_FACTORIES
init|=
operator|new
name|String
index|[]
block|{
name|ServerSerializerFactory
operator|.
name|class
operator|.
name|getName
argument_list|()
block|}
decl_stmt|;
comment|/**      * @since 3.1      */
specifier|public
name|HessianService
parameter_list|(
annotation|@
name|Inject
name|ObjectContextFactory
name|contextFactory
parameter_list|,
annotation|@
name|Inject
argument_list|(
name|Constants
operator|.
name|SERVER_ROP_EVENT_BRIDGE_PROPERTIES_MAP
argument_list|)
name|Map
argument_list|<
name|String
argument_list|,
name|String
argument_list|>
name|eventBridgeProperties
parameter_list|)
block|{
name|super
argument_list|(
name|contextFactory
argument_list|,
name|eventBridgeProperties
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|HttpSession
name|getSession
parameter_list|(
name|boolean
name|create
parameter_list|)
block|{
name|HttpServletRequest
name|request
init|=
operator|(
name|HttpServletRequest
operator|)
name|ServiceContext
operator|.
name|getContextRequest
argument_list|()
decl_stmt|;
if|if
condition|(
name|request
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Attempt to access HttpSession outside the request scope."
argument_list|)
throw|;
block|}
return|return
name|request
operator|.
name|getSession
argument_list|(
name|create
argument_list|)
return|;
block|}
block|}
end_class

end_unit

