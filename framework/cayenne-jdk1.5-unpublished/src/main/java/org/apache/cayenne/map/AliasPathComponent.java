begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_comment
comment|/**  * Represents an alias for the relationship path.  *   * @since 3.0  * @author Andrus Adamchik  */
end_comment

begin_class
class|class
name|AliasPathComponent
parameter_list|<
name|T
extends|extends
name|Attribute
parameter_list|,
name|U
extends|extends
name|Relationship
parameter_list|>
implements|implements
name|PathComponent
argument_list|<
name|T
argument_list|,
name|U
argument_list|>
block|{
specifier|private
name|Entity
name|root
decl_stmt|;
specifier|private
name|String
name|alias
decl_stmt|;
specifier|private
name|String
name|path
decl_stmt|;
specifier|private
name|boolean
name|last
decl_stmt|;
name|AliasPathComponent
parameter_list|(
name|Entity
name|root
parameter_list|,
name|String
name|alias
parameter_list|,
name|String
name|path
parameter_list|,
name|boolean
name|last
parameter_list|)
block|{
name|this
operator|.
name|root
operator|=
name|root
expr_stmt|;
name|this
operator|.
name|alias
operator|=
name|alias
expr_stmt|;
name|this
operator|.
name|path
operator|=
name|path
expr_stmt|;
name|this
operator|.
name|last
operator|=
name|last
expr_stmt|;
block|}
specifier|public
name|Iterable
argument_list|<
name|PathComponent
argument_list|<
name|T
argument_list|,
name|U
argument_list|>
argument_list|>
name|getAliasedPath
parameter_list|()
block|{
return|return
operator|new
name|Iterable
argument_list|<
name|PathComponent
argument_list|<
name|T
argument_list|,
name|U
argument_list|>
argument_list|>
argument_list|()
block|{
comment|// suppress warning until we parameterize Entity as Entity<T extends
comment|// Attribute, U extends Relationship>
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|public
name|Iterator
name|iterator
parameter_list|()
block|{
return|return
operator|new
name|PathComponentIterator
argument_list|(
name|root
argument_list|,
name|path
argument_list|,
name|Collections
operator|.
expr|<
name|String
argument_list|,
name|String
operator|>
name|emptyMap
argument_list|()
argument_list|)
return|;
block|}
block|}
return|;
block|}
specifier|public
name|T
name|getAttribute
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|JoinType
name|getJoinType
parameter_list|()
block|{
return|return
name|JoinType
operator|.
name|UNDEFINED
return|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|alias
return|;
block|}
specifier|public
name|U
name|getRelationship
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|boolean
name|isAlias
parameter_list|()
block|{
return|return
literal|true
return|;
block|}
specifier|public
name|boolean
name|isLast
parameter_list|()
block|{
return|return
name|last
return|;
block|}
block|}
end_class

end_unit

