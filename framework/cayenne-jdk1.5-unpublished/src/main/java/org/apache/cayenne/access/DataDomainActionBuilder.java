begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|jdbc
operator|.
name|BatchAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|BatchQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|EJBQLQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|ProcedureQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|Query
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|SQLAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|SQLActionVisitor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|SQLTemplate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|SelectQuery
import|;
end_import

begin_comment
comment|/**  * Class for creating DataDomain-specific actions  */
end_comment

begin_class
class|class
name|DataDomainActionBuilder
implements|implements
name|SQLActionVisitor
block|{
name|DataDomain
name|domain
decl_stmt|;
name|SQLActionVisitor
name|delegate
decl_stmt|;
specifier|public
name|DataDomainActionBuilder
parameter_list|(
name|DataDomain
name|domain
parameter_list|,
name|SQLActionVisitor
name|delegate
parameter_list|)
block|{
name|this
operator|.
name|domain
operator|=
name|domain
expr_stmt|;
name|this
operator|.
name|delegate
operator|=
name|delegate
expr_stmt|;
block|}
specifier|public
name|DataDomain
name|getDomain
parameter_list|()
block|{
return|return
name|domain
return|;
block|}
specifier|public
name|SQLAction
name|batchAction
parameter_list|(
name|BatchQuery
name|query
parameter_list|)
block|{
name|SQLAction
name|action
init|=
name|delegate
operator|.
name|batchAction
argument_list|(
name|query
argument_list|)
decl_stmt|;
if|if
condition|(
name|action
operator|instanceof
name|BatchAction
condition|)
block|{
operator|(
operator|(
name|BatchAction
operator|)
name|action
operator|)
operator|.
name|setQueryBuilderFactory
argument_list|(
name|domain
operator|.
name|getQueryBuilderFactory
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|action
return|;
block|}
specifier|public
name|SQLAction
name|ejbqlAction
parameter_list|(
name|EJBQLQuery
name|query
parameter_list|)
block|{
return|return
name|delegate
operator|.
name|ejbqlAction
argument_list|(
name|query
argument_list|)
return|;
block|}
specifier|public
name|SQLAction
name|objectSelectAction
parameter_list|(
name|SelectQuery
name|query
parameter_list|)
block|{
return|return
name|delegate
operator|.
name|objectSelectAction
argument_list|(
name|query
argument_list|)
return|;
block|}
specifier|public
name|SQLAction
name|procedureAction
parameter_list|(
name|ProcedureQuery
name|query
parameter_list|)
block|{
return|return
name|delegate
operator|.
name|procedureAction
argument_list|(
name|query
argument_list|)
return|;
block|}
specifier|public
name|SQLAction
name|sqlAction
parameter_list|(
name|SQLTemplate
name|query
parameter_list|)
block|{
return|return
name|delegate
operator|.
name|sqlAction
argument_list|(
name|query
argument_list|)
return|;
block|}
specifier|public
name|SQLAction
name|updateAction
parameter_list|(
name|Query
name|query
parameter_list|)
block|{
return|return
name|delegate
operator|.
name|updateAction
argument_list|(
name|query
argument_list|)
return|;
block|}
block|}
end_class

end_unit

