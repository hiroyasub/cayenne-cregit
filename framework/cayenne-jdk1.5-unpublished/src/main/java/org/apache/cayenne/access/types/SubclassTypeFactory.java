begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|types
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|util
operator|.
name|Util
import|;
end_import

begin_comment
comment|/**  * A {@link ExtendedTypeFactory} that makes a {@link ExtendedType} usable for subclasses  * of the className in the {@link ExtendedType}.  *   * @since 3.0  * @author halset  */
end_comment

begin_class
class|class
name|SubclassTypeFactory
implements|implements
name|ExtendedTypeFactory
block|{
specifier|private
name|ExtendedType
name|type
decl_stmt|;
specifier|private
name|Class
argument_list|<
name|?
argument_list|>
name|javaClass
decl_stmt|;
name|SubclassTypeFactory
parameter_list|(
name|ExtendedType
name|type
parameter_list|)
block|{
name|this
operator|.
name|type
operator|=
name|type
expr_stmt|;
try|try
block|{
name|javaClass
operator|=
name|Util
operator|.
name|getJavaClass
argument_list|(
name|type
operator|.
name|getClassName
argument_list|()
argument_list|)
expr_stmt|;
comment|// some classes that should not be handled here..
if|if
condition|(
name|javaClass
operator|.
name|isArray
argument_list|()
operator|||
name|javaClass
operator|.
name|equals
argument_list|(
name|Object
operator|.
name|class
argument_list|)
operator|||
name|javaClass
operator|.
name|isPrimitive
argument_list|()
condition|)
block|{
name|javaClass
operator|=
literal|null
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|ClassNotFoundException
name|e
parameter_list|)
block|{
comment|// ignore.
block|}
block|}
specifier|public
name|ExtendedType
name|getType
parameter_list|(
name|Class
argument_list|<
name|?
argument_list|>
name|objectClass
parameter_list|)
block|{
if|if
condition|(
operator|(
name|javaClass
operator|!=
literal|null
operator|)
operator|&&
name|javaClass
operator|.
name|isAssignableFrom
argument_list|(
name|objectClass
argument_list|)
condition|)
block|{
return|return
name|type
return|;
block|}
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

