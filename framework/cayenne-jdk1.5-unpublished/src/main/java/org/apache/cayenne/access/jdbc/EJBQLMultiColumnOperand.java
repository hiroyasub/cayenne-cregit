begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|jdbc
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ejbql
operator|.
name|EJBQLException
import|;
end_import

begin_comment
comment|/**  * A holder of multi-column match condition operand.  *   * @author Andrus Adamchik  * @since 3.0  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|EJBQLMultiColumnOperand
block|{
specifier|static
name|EJBQLMultiColumnOperand
name|getPathOperand
parameter_list|(
name|EJBQLTranslationContext
name|context
parameter_list|,
name|Map
name|pathMap
parameter_list|)
block|{
return|return
operator|new
name|PathMultiColumnOperand
argument_list|(
name|context
argument_list|,
name|pathMap
argument_list|)
return|;
block|}
specifier|static
name|EJBQLMultiColumnOperand
name|getObjectOperand
parameter_list|(
name|EJBQLTranslationContext
name|context
parameter_list|,
name|Map
name|object
parameter_list|)
block|{
return|return
operator|new
name|ObjectMultiColumnOperand
argument_list|(
name|context
argument_list|,
name|object
argument_list|)
return|;
block|}
name|EJBQLTranslationContext
name|context
decl_stmt|;
name|Map
name|map
decl_stmt|;
name|Collection
name|getKeys
parameter_list|()
block|{
return|return
name|map
operator|.
name|keySet
argument_list|()
return|;
block|}
specifier|abstract
name|void
name|appendValue
parameter_list|(
name|Object
name|key
parameter_list|)
function_decl|;
specifier|private
specifier|static
class|class
name|PathMultiColumnOperand
extends|extends
name|EJBQLMultiColumnOperand
block|{
name|PathMultiColumnOperand
parameter_list|(
name|EJBQLTranslationContext
name|context
parameter_list|,
name|Map
name|pathMap
parameter_list|)
block|{
name|this
operator|.
name|context
operator|=
name|context
expr_stmt|;
name|this
operator|.
name|map
operator|=
name|pathMap
expr_stmt|;
block|}
name|void
name|appendValue
parameter_list|(
name|Object
name|key
parameter_list|)
block|{
name|Object
name|column
init|=
name|map
operator|.
name|get
argument_list|(
name|key
argument_list|)
decl_stmt|;
if|if
condition|(
name|column
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|EJBQLException
argument_list|(
literal|"Invalid match path, no match for ID column "
operator|+
name|key
argument_list|)
throw|;
block|}
name|context
operator|.
name|append
argument_list|(
literal|' '
argument_list|)
operator|.
name|append
argument_list|(
name|column
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
class|class
name|ObjectMultiColumnOperand
extends|extends
name|EJBQLMultiColumnOperand
block|{
name|ObjectMultiColumnOperand
parameter_list|(
name|EJBQLTranslationContext
name|context
parameter_list|,
name|Map
name|pathMap
parameter_list|)
block|{
name|this
operator|.
name|context
operator|=
name|context
expr_stmt|;
name|this
operator|.
name|map
operator|=
name|pathMap
expr_stmt|;
block|}
name|void
name|appendValue
parameter_list|(
name|Object
name|key
parameter_list|)
block|{
name|Object
name|value
init|=
name|map
operator|.
name|get
argument_list|(
name|key
argument_list|)
decl_stmt|;
if|if
condition|(
name|value
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|EJBQLException
argument_list|(
literal|"Invalid object, no match for ID column "
operator|+
name|key
argument_list|)
throw|;
block|}
name|String
name|var
init|=
name|context
operator|.
name|bindParameter
argument_list|(
name|value
argument_list|)
decl_stmt|;
name|context
operator|.
name|append
argument_list|(
literal|" #bind($"
argument_list|)
operator|.
name|append
argument_list|(
name|var
argument_list|)
operator|.
name|append
argument_list|(
literal|')'
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

