begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|Persistent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|reflect
operator|.
name|ArcProperty
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|util
operator|.
name|ObjectContextGraphAction
import|;
end_import

begin_comment
comment|/**  * An action object that processes graph change calls from Persistent objects. It handles  * GraphManager notifications and bi-directional graph consistency. The main difference  * with CayenneContextGraph action is that reverse relationships are handled by the  * objects themselves.  *   * @since 3.0  * @author Andrus Adamchik  */
end_comment

begin_class
class|class
name|DataContextGraphAction
extends|extends
name|ObjectContextGraphAction
block|{
name|DataContextGraphAction
parameter_list|(
name|DataContext
name|context
parameter_list|)
block|{
name|super
argument_list|(
name|context
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|handleArcPropertyChange
parameter_list|(
name|Persistent
name|object
parameter_list|,
name|ArcProperty
name|property
parameter_list|,
name|Object
name|oldValue
parameter_list|,
name|Object
name|newValue
parameter_list|)
block|{
if|if
condition|(
name|oldValue
operator|!=
name|newValue
condition|)
block|{
name|markAsDirty
argument_list|(
name|object
argument_list|)
expr_stmt|;
if|if
condition|(
name|oldValue
operator|instanceof
name|Persistent
condition|)
block|{
name|context
operator|.
name|getGraphManager
argument_list|()
operator|.
name|arcDeleted
argument_list|(
name|object
operator|.
name|getObjectId
argument_list|()
argument_list|,
operator|(
operator|(
name|Persistent
operator|)
name|oldValue
operator|)
operator|.
name|getObjectId
argument_list|()
argument_list|,
name|property
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|newValue
operator|instanceof
name|Persistent
condition|)
block|{
name|context
operator|.
name|getGraphManager
argument_list|()
operator|.
name|arcCreated
argument_list|(
name|object
operator|.
name|getObjectId
argument_list|()
argument_list|,
operator|(
operator|(
name|Persistent
operator|)
name|newValue
operator|)
operator|.
name|getObjectId
argument_list|()
argument_list|,
name|property
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

