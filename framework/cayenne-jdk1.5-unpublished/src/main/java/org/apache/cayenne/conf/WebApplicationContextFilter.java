begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|conf
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|Filter
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|FilterChain
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|FilterConfig
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletResponse
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpServletRequest
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|DataContext
import|;
end_import

begin_comment
comment|/**  * A Servlet Filter that binds session DataContext to the current request thread. During  * the request application code without any knowledge of the servlet environment can  * access DataContext via {@link DataContext#getThreadDataContext()} method.<p/> To  * enable the filter add XML similar to this in the<code>web.xml</code> descriptor of a  * web application:  *   *<pre>  *&lt;filter&gt;  *&lt;filter-name&gt;CayenneFilter&lt;/filter-name&gt;  *&lt;filter-class&gt;org.apache.cayenne.conf.WebApplicationContextFilter&lt;/filter-class&gt;  *&lt;/filter&gt;  *&lt;filter-mapping&gt;  *&lt;filter-name&gt;CayenneFilter&lt;/filter-name&gt;  *&lt;url-pattern&gt;/*&lt;/url-pattern&gt;  *&lt;/filter-mapping&gt;  *</pre>  *   * @since 1.2  */
end_comment

begin_class
specifier|public
class|class
name|WebApplicationContextFilter
implements|implements
name|Filter
block|{
specifier|public
name|void
name|init
parameter_list|(
name|FilterConfig
name|filterConfig
parameter_list|)
throws|throws
name|ServletException
block|{
name|ServletUtil
operator|.
name|initializeSharedConfiguration
argument_list|(
name|filterConfig
operator|.
name|getServletContext
argument_list|()
argument_list|)
expr_stmt|;
block|}
comment|/**      * Cleanup callback method that does nothing, as the filter doesn't store any state.      */
comment|// TODO: andrus 9/17/2006 - should we shut down Cayenne stack? I.e. should it be
comment|// complimentary to "init"?
specifier|public
name|void
name|destroy
parameter_list|()
block|{
comment|// noop
block|}
comment|/**      * The main worker method that binds a DataContext to the current thread on entry and      * unbinds it on exit (regardless of whether any exceptions occured in the request).      */
specifier|public
name|void
name|doFilter
parameter_list|(
name|ServletRequest
name|request
parameter_list|,
name|ServletResponse
name|response
parameter_list|,
name|FilterChain
name|chain
parameter_list|)
throws|throws
name|IOException
throws|,
name|ServletException
block|{
name|boolean
name|reset
init|=
literal|false
decl_stmt|;
if|if
condition|(
name|request
operator|instanceof
name|HttpServletRequest
condition|)
block|{
name|reset
operator|=
literal|true
expr_stmt|;
name|HttpSession
name|session
init|=
operator|(
operator|(
name|HttpServletRequest
operator|)
name|request
operator|)
operator|.
name|getSession
argument_list|(
literal|true
argument_list|)
decl_stmt|;
name|DataContext
name|context
init|=
name|ServletUtil
operator|.
name|getSessionContext
argument_list|(
name|session
argument_list|)
decl_stmt|;
name|DataContext
operator|.
name|bindThreadDataContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
block|}
try|try
block|{
name|chain
operator|.
name|doFilter
argument_list|(
name|request
argument_list|,
name|response
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
if|if
condition|(
name|reset
condition|)
block|{
name|DataContext
operator|.
name|bindThreadDataContext
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

