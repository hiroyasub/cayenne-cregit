begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|gen
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|PersistentObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjEntity
import|;
end_import

begin_comment
comment|/**  * @since 3.0  * @author Andrus Adamchik  */
end_comment

begin_class
specifier|public
class|class
name|ClientClassGenerationAction
extends|extends
name|ClassGenerationAction
block|{
specifier|public
specifier|static
specifier|final
name|String
name|SUBCLASS_TEMPLATE
init|=
literal|"dotemplates/v1_2/client-subclass.vm"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|SUPERCLASS_TEMPLATE
init|=
literal|"dotemplates/v1_2/client-superclass.vm"
decl_stmt|;
annotation|@
name|Override
specifier|protected
name|String
name|defaultSingleClassTemplateName
parameter_list|()
block|{
throw|throw
operator|new
name|IllegalStateException
argument_list|(
literal|"Default generation for single classes on the client is not supported."
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|protected
name|String
name|defaultSubclassTemplateName
parameter_list|()
block|{
return|return
name|ClientClassGenerationAction
operator|.
name|SUBCLASS_TEMPLATE
return|;
block|}
annotation|@
name|Override
specifier|protected
name|String
name|defaultSuperclassTemplateName
parameter_list|()
block|{
return|return
name|ClientClassGenerationAction
operator|.
name|SUPERCLASS_TEMPLATE
return|;
block|}
annotation|@
name|Override
specifier|protected
name|GenerationMetadata
name|initContext
parameter_list|(
name|ObjEntity
name|entity
parameter_list|)
block|{
name|StringUtils
name|stringUtils
init|=
name|StringUtils
operator|.
name|getInstance
argument_list|()
decl_stmt|;
comment|// use client name, and if not specified use regular class name
name|String
name|fqnSubClass
init|=
name|entity
operator|.
name|getClientClassName
argument_list|()
decl_stmt|;
if|if
condition|(
name|fqnSubClass
operator|==
literal|null
condition|)
block|{
name|fqnSubClass
operator|=
name|entity
operator|.
name|getClassName
argument_list|()
expr_stmt|;
block|}
comment|// use PersistentObject instead of CayenneDataObject as base ...
name|String
name|fqnBaseClass
init|=
operator|(
name|entity
operator|.
name|getClientSuperClassName
argument_list|()
operator|!=
literal|null
operator|)
condition|?
name|entity
operator|.
name|getClientSuperClassName
argument_list|()
else|:
name|PersistentObject
operator|.
name|class
operator|.
name|getName
argument_list|()
decl_stmt|;
name|String
name|subPackageName
init|=
name|stringUtils
operator|.
name|stripClass
argument_list|(
name|fqnSubClass
argument_list|)
decl_stmt|;
name|String
name|superClassName
init|=
name|getSuperclassPrefix
argument_list|()
operator|+
name|stringUtils
operator|.
name|stripPackageName
argument_list|(
name|fqnSubClass
argument_list|)
decl_stmt|;
name|String
name|superPackageName
init|=
name|this
operator|.
name|superPkg
decl_stmt|;
if|if
condition|(
name|superPackageName
operator|==
literal|null
condition|)
block|{
name|superPackageName
operator|=
name|subPackageName
expr_stmt|;
block|}
name|String
name|fqnSuperClass
init|=
name|superPackageName
operator|+
literal|"."
operator|+
name|superClassName
decl_stmt|;
name|EntityUtils
name|metadata
init|=
operator|new
name|EntityUtils
argument_list|(
name|dataMap
argument_list|,
name|entity
argument_list|,
name|fqnBaseClass
argument_list|,
name|fqnSuperClass
argument_list|,
name|fqnSubClass
argument_list|)
decl_stmt|;
name|context
operator|.
name|put
argument_list|(
literal|"objEntity"
argument_list|,
name|entity
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
literal|"stringUtils"
argument_list|,
name|StringUtils
operator|.
name|getInstance
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
literal|"entityUtils"
argument_list|,
name|metadata
argument_list|)
expr_stmt|;
name|context
operator|.
name|put
argument_list|(
literal|"importUtils"
argument_list|,
operator|new
name|ImportUtils
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|metadata
return|;
block|}
block|}
end_class

end_unit

