begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|exp
operator|.
name|Expression
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjEntity
import|;
end_import

begin_comment
comment|/**  * Object encapsulating an UPDATE statement. Note that updated attributes are expressed in  * terms of DbAttribute names.  *   * @deprecated since 3.0. Should be replaced either with EJBQL update query or SQLTemplate.  */
end_comment

begin_class
specifier|public
class|class
name|UpdateQuery
extends|extends
name|QualifiedQuery
block|{
specifier|protected
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|updAttributes
init|=
operator|new
name|HashMap
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
argument_list|()
decl_stmt|;
comment|/** Creates empty UpdateQuery. */
specifier|public
name|UpdateQuery
parameter_list|()
block|{
block|}
specifier|private
name|void
name|init
parameter_list|(
name|Object
name|root
parameter_list|,
name|Expression
name|qualifier
parameter_list|)
block|{
name|setRoot
argument_list|(
name|root
argument_list|)
expr_stmt|;
name|setQualifier
argument_list|(
name|qualifier
argument_list|)
expr_stmt|;
block|}
comment|/**      * Creates a UpdateQuery with null qualifier, for the specifed ObjEntity      *       * @param root the ObjEntity this UpdateQuery is for.      */
specifier|public
name|UpdateQuery
parameter_list|(
name|ObjEntity
name|root
parameter_list|)
block|{
name|this
argument_list|(
name|root
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
comment|/**      * Creates a UpdateQuery for the specifed ObjEntity with the given qualifier      *       * @param root the ObjEntity this UpdateQuery is for.      * @param qualifier an Expression indicating which objects will be updated      */
specifier|public
name|UpdateQuery
parameter_list|(
name|ObjEntity
name|root
parameter_list|,
name|Expression
name|qualifier
parameter_list|)
block|{
name|init
argument_list|(
name|root
argument_list|,
name|qualifier
argument_list|)
expr_stmt|;
block|}
comment|/**      * Creates a UpdateQuery with null qualifier, for the entity which uses the given      * class.      *       * @param rootClass the Class of objects this UpdateQuery is for.      */
specifier|public
name|UpdateQuery
parameter_list|(
name|Class
name|rootClass
parameter_list|)
block|{
name|this
argument_list|(
name|rootClass
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
comment|/**      * Creates a UpdateQuery for the entity which uses the given class, with the given      * qualifier.      *       * @param rootClass the Class of objects this UpdateQuery is for.      * @param qualifier an Expression indicating which objects will be updated      */
specifier|public
name|UpdateQuery
parameter_list|(
name|Class
name|rootClass
parameter_list|,
name|Expression
name|qualifier
parameter_list|)
block|{
name|init
argument_list|(
name|rootClass
argument_list|,
name|qualifier
argument_list|)
expr_stmt|;
block|}
comment|/** Creates UpdateQuery with<code>objEntityName</code> parameter. */
specifier|public
name|UpdateQuery
parameter_list|(
name|String
name|objEntityName
parameter_list|)
block|{
name|this
argument_list|(
name|objEntityName
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
comment|/**      * Creates UpdateQuery with<code>objEntityName</code> and<code>qualifier</code>      * parameters.      */
specifier|public
name|UpdateQuery
parameter_list|(
name|String
name|objEntityName
parameter_list|,
name|Expression
name|qualifier
parameter_list|)
block|{
name|init
argument_list|(
name|objEntityName
argument_list|,
name|qualifier
argument_list|)
expr_stmt|;
block|}
comment|/**      * Calls "makeUpdate" on the visitor.      *       * @since 1.2      */
annotation|@
name|Override
specifier|public
name|SQLAction
name|createSQLAction
parameter_list|(
name|SQLActionVisitor
name|visitor
parameter_list|)
block|{
return|return
name|visitor
operator|.
name|updateAction
argument_list|(
name|this
argument_list|)
return|;
block|}
specifier|public
name|void
name|addUpdAttribute
parameter_list|(
name|String
name|attrName
parameter_list|,
name|Object
name|updatedValue
parameter_list|)
block|{
name|updAttributes
operator|.
name|put
argument_list|(
name|attrName
argument_list|,
name|updatedValue
argument_list|)
expr_stmt|;
block|}
comment|/** Returns a map of updated attributes */
specifier|public
name|Map
argument_list|<
name|String
argument_list|,
name|Object
argument_list|>
name|getUpdAttributes
parameter_list|()
block|{
return|return
name|updAttributes
return|;
block|}
block|}
end_class

end_unit

