begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|conf
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|ServletContext
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|servlet
operator|.
name|http
operator|.
name|HttpSession
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|DataContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|util
operator|.
name|ResourceLocator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|util
operator|.
name|WebApplicationResourceLocator
import|;
end_import

begin_comment
comment|/**  * Configuration class that uses ServletContext to locate resources. This class is  * intended for use in J2EE servlet containers. It is compatible with containers following  * servlet specification version 2.2 and newer (e.g. Tomcat can be used starting from  * version 3).  *<p>  * ServletConfiguration resolves configuration file locations relative to the web  * application "WEB-INF" directory, and does not require them to be in the CLASSPATH  * (though CLASSPATH locations such as "/WEB-INF/classes" and "/WEB-INF/lib/some.jar" are  * supported as well). By default search for cayenne.xml is done in /WEB-INF/ folder. To  * specify an arbitrary context path in the web application (e.g. "/WEB-INF/cayenne"), use  *<code>cayenne.configuration.path</code> context parameters in<code>web.xml</code>.  *</p>  *   * @author Andrus Adamchik  * @author Scott Finnerty  * @since 1.2  */
end_comment

begin_class
specifier|public
class|class
name|ServletUtil
block|{
comment|/**      * A name of the web application initialization parameter used to specify extra paths      * where Cayenne XML files might be located. E.g. "/WEB-INF/cayenne".      */
specifier|public
specifier|static
specifier|final
name|String
name|CONFIGURATION_PATH_KEY
init|=
literal|"cayenne.configuration.path"
decl_stmt|;
comment|/**      * Used by BasicServletConfiguration as a session attribute for DataContext.      */
specifier|public
specifier|static
specifier|final
name|String
name|DATA_CONTEXT_KEY
init|=
literal|"cayenne.datacontext"
decl_stmt|;
comment|/**      * Creates a new ServletConfiguration and sets is as a Configuration signleton.      */
specifier|public
specifier|synchronized
specifier|static
name|Configuration
name|initializeSharedConfiguration
parameter_list|(
name|ServletContext
name|context
parameter_list|)
block|{
comment|// check if this web application is already configured
comment|// don't use static getter, since it will do initialization on demand!!!
name|Configuration
name|oldConfig
init|=
name|Configuration
operator|.
name|sharedConfiguration
decl_stmt|;
if|if
condition|(
name|oldConfig
operator|instanceof
name|DefaultConfiguration
condition|)
block|{
name|ResourceFinder
name|locator
init|=
name|oldConfig
operator|.
name|getResourceFinder
argument_list|()
decl_stmt|;
if|if
condition|(
name|locator
operator|instanceof
name|WebApplicationResourceLocator
condition|)
block|{
if|if
condition|(
operator|(
operator|(
name|WebApplicationResourceLocator
operator|)
name|locator
operator|)
operator|.
name|getServletContext
argument_list|()
operator|==
name|context
condition|)
block|{
return|return
name|oldConfig
return|;
block|}
block|}
block|}
comment|// create new shared configuration
name|DefaultConfiguration
name|conf
init|=
operator|new
name|DefaultConfiguration
argument_list|(
name|Configuration
operator|.
name|DEFAULT_DOMAIN_FILE
argument_list|,
name|createLocator
argument_list|(
name|context
argument_list|)
argument_list|)
decl_stmt|;
name|Configuration
operator|.
name|initializeSharedConfiguration
argument_list|(
name|conf
argument_list|)
expr_stmt|;
return|return
name|conf
return|;
block|}
comment|/**      * A helper method to create default ResourceLocator.      */
specifier|protected
specifier|static
name|ResourceLocator
name|createLocator
parameter_list|(
name|ServletContext
name|context
parameter_list|)
block|{
name|WebApplicationResourceLocator
name|locator
init|=
operator|new
name|WebApplicationResourceLocator
argument_list|()
decl_stmt|;
name|locator
operator|.
name|setSkipAbsolutePath
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|locator
operator|.
name|setSkipClasspath
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|locator
operator|.
name|setSkipCurrentDirectory
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|locator
operator|.
name|setSkipHomeDirectory
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|locator
operator|.
name|setServletContext
argument_list|(
name|context
argument_list|)
expr_stmt|;
name|String
name|configurationPath
init|=
name|context
operator|.
name|getInitParameter
argument_list|(
name|CONFIGURATION_PATH_KEY
argument_list|)
decl_stmt|;
if|if
condition|(
name|configurationPath
operator|!=
literal|null
operator|&&
name|configurationPath
operator|.
name|trim
argument_list|()
operator|.
name|length
argument_list|()
operator|>
literal|0
condition|)
block|{
name|locator
operator|.
name|addFilesystemPath
argument_list|(
name|configurationPath
operator|.
name|trim
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|locator
return|;
block|}
comment|/**      * Returns default Cayenne DataContext associated with the HttpSession, creating it on      * the fly and storing in the session if needed.      */
specifier|public
specifier|static
name|DataContext
name|getSessionContext
parameter_list|(
name|HttpSession
name|session
parameter_list|)
block|{
synchronized|synchronized
init|(
name|session
init|)
block|{
name|DataContext
name|ctxt
init|=
operator|(
name|DataContext
operator|)
name|session
operator|.
name|getAttribute
argument_list|(
name|DATA_CONTEXT_KEY
argument_list|)
decl_stmt|;
if|if
condition|(
name|ctxt
operator|==
literal|null
condition|)
block|{
name|ctxt
operator|=
name|DataContext
operator|.
name|createDataContext
argument_list|()
expr_stmt|;
name|session
operator|.
name|setAttribute
argument_list|(
name|ServletUtil
operator|.
name|DATA_CONTEXT_KEY
argument_list|,
name|ctxt
argument_list|)
expr_stmt|;
block|}
return|return
name|ctxt
return|;
block|}
block|}
block|}
end_class

end_unit

