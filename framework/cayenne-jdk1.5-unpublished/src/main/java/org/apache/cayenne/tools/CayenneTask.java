begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|tools
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tools
operator|.
name|ant
operator|.
name|Task
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tools
operator|.
name|ant
operator|.
name|types
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|tools
operator|.
name|ant
operator|.
name|types
operator|.
name|Reference
import|;
end_import

begin_comment
comment|/**  * Base task for all Cayenne ant tasks, providing support for common configuration items.  *  * @since 1.2  */
end_comment

begin_class
specifier|public
class|class
name|CayenneTask
extends|extends
name|Task
block|{
specifier|protected
name|Path
name|classpath
decl_stmt|;
comment|/**      * Sets the classpath used by the task.      *      * @param path The classpath to set.      */
specifier|public
name|void
name|setClasspath
parameter_list|(
name|Path
name|path
parameter_list|)
block|{
name|createClasspath
argument_list|()
operator|.
name|append
argument_list|(
name|path
argument_list|)
expr_stmt|;
block|}
comment|/**      * Sets the classpath reference used by the task.      *      * @param reference The classpath reference to set.      */
specifier|public
name|void
name|setClasspathRef
parameter_list|(
name|Reference
name|reference
parameter_list|)
block|{
name|createClasspath
argument_list|()
operator|.
name|setRefid
argument_list|(
name|reference
argument_list|)
expr_stmt|;
block|}
comment|/**      * Convenience method for creating a classpath instance to be used for the task.      *      * @return The new classpath.      */
specifier|private
name|Path
name|createClasspath
parameter_list|()
block|{
if|if
condition|(
literal|null
operator|==
name|classpath
condition|)
block|{
name|classpath
operator|=
operator|new
name|Path
argument_list|(
name|getProject
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|classpath
operator|.
name|createPath
argument_list|()
return|;
block|}
block|}
end_class

end_unit

