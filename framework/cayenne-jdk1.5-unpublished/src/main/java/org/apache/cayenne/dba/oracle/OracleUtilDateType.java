begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|oracle
package|;
end_package

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|CallableStatement
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|ResultSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Types
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|types
operator|.
name|UtilDateType
import|;
end_import

begin_comment
comment|/**  * @author Andrus Adamchik  */
end_comment

begin_class
specifier|public
class|class
name|OracleUtilDateType
extends|extends
name|UtilDateType
block|{
annotation|@
name|Override
specifier|public
name|Object
name|materializeObject
parameter_list|(
name|CallableStatement
name|cs
parameter_list|,
name|int
name|index
parameter_list|,
name|int
name|type
parameter_list|)
throws|throws
name|Exception
block|{
name|Object
name|date
init|=
name|super
operator|.
name|materializeObject
argument_list|(
name|cs
argument_list|,
name|index
argument_list|,
name|type
argument_list|)
decl_stmt|;
if|if
condition|(
name|date
operator|==
literal|null
operator|||
name|type
operator|!=
name|Types
operator|.
name|TIME
condition|)
block|{
return|return
name|date
return|;
block|}
else|else
block|{
return|return
name|normalizeDate
argument_list|(
operator|(
name|Date
operator|)
name|date
argument_list|)
return|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|Object
name|materializeObject
parameter_list|(
name|ResultSet
name|rs
parameter_list|,
name|int
name|index
parameter_list|,
name|int
name|type
parameter_list|)
throws|throws
name|Exception
block|{
name|Object
name|date
init|=
name|super
operator|.
name|materializeObject
argument_list|(
name|rs
argument_list|,
name|index
argument_list|,
name|type
argument_list|)
decl_stmt|;
if|if
condition|(
name|date
operator|==
literal|null
operator|||
name|type
operator|!=
name|Types
operator|.
name|TIME
condition|)
block|{
return|return
name|date
return|;
block|}
else|else
block|{
return|return
name|normalizeDate
argument_list|(
operator|(
name|Date
operator|)
name|date
argument_list|)
return|;
block|}
block|}
comment|/** 	 * Offsets date component to be January 1, 1970, 	 * since Oracle adapter returns time based on January 1, 1900. 	 */
specifier|protected
name|Date
name|normalizeDate
parameter_list|(
name|Date
name|time
parameter_list|)
block|{
comment|// this may need serious optimization - Calendar is slow...
name|Calendar
name|calendar
init|=
name|Calendar
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|calendar
operator|.
name|setTime
argument_list|(
name|time
argument_list|)
expr_stmt|;
name|calendar
operator|.
name|set
argument_list|(
name|Calendar
operator|.
name|YEAR
argument_list|,
literal|1970
argument_list|)
expr_stmt|;
name|calendar
operator|.
name|set
argument_list|(
name|Calendar
operator|.
name|MONTH
argument_list|,
literal|0
argument_list|)
expr_stmt|;
name|calendar
operator|.
name|set
argument_list|(
name|Calendar
operator|.
name|DAY_OF_MONTH
argument_list|,
literal|1
argument_list|)
expr_stmt|;
return|return
name|calendar
operator|.
name|getTime
argument_list|()
return|;
block|}
block|}
end_class

end_unit

