begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|DataNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|conn
operator|.
name|DataSourceInfo
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|util
operator|.
name|XMLEncoder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|util
operator|.
name|XMLSerializable
import|;
end_import

begin_comment
comment|/**  * A descriptor of a {@link DataNode}.  *   * @since 3.1  */
end_comment

begin_class
specifier|public
class|class
name|DataNodeDescriptor
implements|implements
name|XMLSerializable
block|{
specifier|protected
name|DataChannelDescriptor
name|parent
decl_stmt|;
specifier|protected
name|String
name|name
decl_stmt|;
specifier|protected
name|Collection
argument_list|<
name|String
argument_list|>
name|dataMapNames
decl_stmt|;
specifier|protected
name|String
name|parameters
decl_stmt|;
specifier|protected
name|String
name|adapterType
decl_stmt|;
specifier|protected
name|String
name|dataSourceFactoryType
decl_stmt|;
specifier|protected
name|String
name|schemaUpdateStrategyType
decl_stmt|;
specifier|protected
name|DataSourceInfo
name|dataSourceDescriptor
decl_stmt|;
specifier|public
name|DataNodeDescriptor
parameter_list|()
block|{
name|this
argument_list|(
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|DataNodeDescriptor
parameter_list|(
name|DataChannelDescriptor
name|parent
parameter_list|)
block|{
name|this
operator|.
name|parent
operator|=
name|parent
expr_stmt|;
name|this
operator|.
name|dataMapNames
operator|=
operator|new
name|ArrayList
argument_list|<
name|String
argument_list|>
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|encodeAsXML
parameter_list|(
name|XMLEncoder
name|encoder
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"TODO"
argument_list|)
throw|;
block|}
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
name|name
return|;
block|}
specifier|public
name|void
name|setName
parameter_list|(
name|String
name|name
parameter_list|)
block|{
name|this
operator|.
name|name
operator|=
name|name
expr_stmt|;
block|}
specifier|public
name|Collection
argument_list|<
name|String
argument_list|>
name|getDataMapNames
parameter_list|()
block|{
return|return
name|dataMapNames
return|;
block|}
comment|/**      * Returns extra DataNodeDescriptor parameters. This property is often used by custom      * {@link DataSourceFactory} to configure a DataSource. E.g. JNDIDataSoirceFactory may      * treat parameters String as a JNDI location of the DataSource, etc.      */
specifier|public
name|String
name|getParameters
parameter_list|()
block|{
return|return
name|parameters
return|;
block|}
comment|/**      * Sets extra DataNodeDescriptor parameters. This property is often used by custom      * {@link DataSourceFactory} to configure a DataSource. E.g. JNDIDataSoirceFactory may      * treat parameters String as a JNDI location of the DataSource, etc.      */
specifier|public
name|void
name|setParameters
parameter_list|(
name|String
name|location
parameter_list|)
block|{
name|this
operator|.
name|parameters
operator|=
name|location
expr_stmt|;
block|}
specifier|public
name|String
name|getAdapterType
parameter_list|()
block|{
return|return
name|adapterType
return|;
block|}
specifier|public
name|void
name|setAdapterType
parameter_list|(
name|String
name|adapter
parameter_list|)
block|{
name|this
operator|.
name|adapterType
operator|=
name|adapter
expr_stmt|;
block|}
specifier|public
name|String
name|getDataSourceFactoryType
parameter_list|()
block|{
return|return
name|dataSourceFactoryType
return|;
block|}
specifier|public
name|void
name|setDataSourceFactoryType
parameter_list|(
name|String
name|dataSourceFactory
parameter_list|)
block|{
name|this
operator|.
name|dataSourceFactoryType
operator|=
name|dataSourceFactory
expr_stmt|;
block|}
specifier|public
name|String
name|getSchemaUpdateStrategyType
parameter_list|()
block|{
return|return
name|schemaUpdateStrategyType
return|;
block|}
specifier|public
name|void
name|setSchemaUpdateStrategyType
parameter_list|(
name|String
name|schemaUpdateStrategyClass
parameter_list|)
block|{
name|this
operator|.
name|schemaUpdateStrategyType
operator|=
name|schemaUpdateStrategyClass
expr_stmt|;
block|}
specifier|public
name|DataSourceInfo
name|getDataSourceDescriptor
parameter_list|()
block|{
return|return
name|dataSourceDescriptor
return|;
block|}
specifier|public
name|void
name|setDataSourceDescriptor
parameter_list|(
name|DataSourceInfo
name|dataSourceDescriptor
parameter_list|)
block|{
name|this
operator|.
name|dataSourceDescriptor
operator|=
name|dataSourceDescriptor
expr_stmt|;
block|}
specifier|public
name|DataChannelDescriptor
name|getParent
parameter_list|()
block|{
return|return
name|parent
return|;
block|}
specifier|public
name|void
name|setParent
parameter_list|(
name|DataChannelDescriptor
name|parent
parameter_list|)
block|{
name|this
operator|.
name|parent
operator|=
name|parent
expr_stmt|;
block|}
block|}
end_class

end_unit

