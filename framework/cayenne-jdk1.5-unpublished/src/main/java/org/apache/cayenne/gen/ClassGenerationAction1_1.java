begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|gen
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|Writer
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|CayenneRuntimeException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DataMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|Embeddable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|velocity
operator|.
name|Template
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|velocity
operator|.
name|VelocityContext
import|;
end_import

begin_comment
comment|/**  * A backwards compatible class generation action that delegates to the deprecated  * {@link DefaultClassGenerator}.  *   * @since 3.0  * @author Andrus Adamchik  * @deprecated since 3.0  */
end_comment

begin_class
specifier|public
class|class
name|ClassGenerationAction1_1
extends|extends
name|ClassGenerationAction
block|{
specifier|public
specifier|static
specifier|final
name|String
name|SINGLE_CLASS_TEMPLATE
init|=
name|MapClassGenerator
operator|.
name|SINGLE_CLASS_TEMPLATE_1_1
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|SUBCLASS_TEMPLATE
init|=
name|MapClassGenerator
operator|.
name|SUBCLASS_TEMPLATE_1_1
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|SUPERCLASS_TEMPLATE
init|=
name|MapClassGenerator
operator|.
name|SUPERCLASS_TEMPLATE_1_1
decl_stmt|;
specifier|protected
name|DefaultClassGenerator
name|generator
decl_stmt|;
specifier|protected
name|List
argument_list|<
name|ObjEntity
argument_list|>
name|entities
decl_stmt|;
specifier|protected
name|Log
name|logger
decl_stmt|;
specifier|public
name|ClassGenerationAction1_1
parameter_list|()
block|{
name|this
operator|.
name|generator
operator|=
operator|new
name|LoggingGenerator
argument_list|()
expr_stmt|;
name|this
operator|.
name|generator
operator|.
name|setVersionString
argument_list|(
name|ClassGenerator
operator|.
name|VERSION_1_1
argument_list|)
expr_stmt|;
name|this
operator|.
name|entities
operator|=
operator|new
name|ArrayList
argument_list|<
name|ObjEntity
argument_list|>
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|addEmbeddables
parameter_list|(
name|Collection
argument_list|<
name|Embeddable
argument_list|>
name|embeddables
parameter_list|)
block|{
comment|// noop - no embeddables support
block|}
annotation|@
name|Override
specifier|public
name|void
name|addEntities
parameter_list|(
name|Collection
argument_list|<
name|ObjEntity
argument_list|>
name|entities
parameter_list|)
block|{
if|if
condition|(
name|entities
operator|!=
literal|null
condition|)
block|{
name|this
operator|.
name|entities
operator|.
name|addAll
argument_list|(
name|entities
argument_list|)
expr_stmt|;
name|generator
operator|.
name|setObjEntities
argument_list|(
name|this
operator|.
name|entities
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|protected
name|String
name|customTemplateName
parameter_list|(
name|TemplateType
name|type
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in 1.1 mode"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|protected
name|String
name|defaultTemplateName
parameter_list|(
name|TemplateType
name|type
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in 1.1 mode"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|execute
parameter_list|()
throws|throws
name|Exception
block|{
name|generator
operator|.
name|execute
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|execute
parameter_list|(
name|Artifact
name|artifact
parameter_list|)
throws|throws
name|Exception
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in 1.1 mode"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|protected
name|File
name|fileForClass
parameter_list|()
throws|throws
name|Exception
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in 1.1 mode"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|protected
name|File
name|fileForSuperclass
parameter_list|()
throws|throws
name|Exception
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in 1.1 mode"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|protected
name|String
name|getSuperclassPrefix
parameter_list|()
block|{
return|return
name|super
operator|.
name|getSuperclassPrefix
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|protected
name|Template
name|getTemplate
parameter_list|(
name|TemplateType
name|type
parameter_list|)
throws|throws
name|Exception
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in 1.1 mode"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|resetContextForArtifact
parameter_list|(
name|Artifact
name|artifact
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in 1.1 mode"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|protected
name|boolean
name|isOld
parameter_list|(
name|File
name|file
parameter_list|)
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in 1.1 mode"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|protected
name|File
name|mkpath
parameter_list|(
name|File
name|dest
parameter_list|,
name|String
name|pkgName
parameter_list|)
throws|throws
name|Exception
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in 1.1 mode"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|protected
name|Writer
name|openWriter
parameter_list|(
name|TemplateType
name|templateType
parameter_list|)
throws|throws
name|Exception
block|{
throw|throw
operator|new
name|UnsupportedOperationException
argument_list|(
literal|"Not supported in 1.1 mode"
argument_list|)
throw|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setArtifactsGenerationMode
parameter_list|(
name|String
name|mode
parameter_list|)
block|{
name|generator
operator|.
name|setMode
argument_list|(
name|mode
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setContext
parameter_list|(
name|VelocityContext
name|context
parameter_list|)
block|{
comment|// noop...
block|}
annotation|@
name|Override
specifier|public
name|void
name|setDataMap
parameter_list|(
name|DataMap
name|dataMap
parameter_list|)
block|{
name|generator
operator|.
name|setDataMap
argument_list|(
name|dataMap
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setDestDir
parameter_list|(
name|File
name|destDir
parameter_list|)
block|{
name|generator
operator|.
name|setDestDir
argument_list|(
name|destDir
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setEmbeddableSuperTemplate
parameter_list|(
name|String
name|embeddableSuperTemplate
parameter_list|)
block|{
comment|// noop
block|}
annotation|@
name|Override
specifier|public
name|void
name|setEmbeddableTemplate
parameter_list|(
name|String
name|embeddableTemplate
parameter_list|)
block|{
comment|// noop
block|}
annotation|@
name|Override
specifier|public
name|void
name|setEncoding
parameter_list|(
name|String
name|encoding
parameter_list|)
block|{
name|generator
operator|.
name|setEncoding
argument_list|(
name|encoding
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setLogger
parameter_list|(
name|Log
name|logger
parameter_list|)
block|{
name|this
operator|.
name|logger
operator|=
name|logger
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setMakePairs
parameter_list|(
name|boolean
name|makePairs
parameter_list|)
block|{
name|generator
operator|.
name|setMakePairs
argument_list|(
name|makePairs
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setOutputPattern
parameter_list|(
name|String
name|outputPattern
parameter_list|)
block|{
name|generator
operator|.
name|setOutputPattern
argument_list|(
name|outputPattern
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setOverwrite
parameter_list|(
name|boolean
name|overwrite
parameter_list|)
block|{
name|generator
operator|.
name|setOverwrite
argument_list|(
name|overwrite
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setSuperPkg
parameter_list|(
name|String
name|superPkg
parameter_list|)
block|{
name|generator
operator|.
name|setSuperPkg
argument_list|(
name|superPkg
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setSuperTemplate
parameter_list|(
name|String
name|superTemplate
parameter_list|)
block|{
name|generator
operator|.
name|setSuperTemplate
argument_list|(
name|superTemplate
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setTemplate
parameter_list|(
name|String
name|template
parameter_list|)
block|{
name|generator
operator|.
name|setTemplate
argument_list|(
name|template
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setTimestamp
parameter_list|(
name|long
name|timestamp
parameter_list|)
block|{
name|generator
operator|.
name|setTimestamp
argument_list|(
name|timestamp
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setUsePkgPath
parameter_list|(
name|boolean
name|usePkgPath
parameter_list|)
block|{
name|generator
operator|.
name|setUsePkgPath
argument_list|(
name|usePkgPath
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|validateAttributes
parameter_list|()
block|{
try|try
block|{
name|generator
operator|.
name|validateAttributes
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|CayenneRuntimeException
argument_list|(
name|e
argument_list|)
throw|;
block|}
block|}
specifier|final
class|class
name|LoggingGenerator
extends|extends
name|DefaultClassGenerator
block|{
annotation|@
name|Override
specifier|protected
name|File
name|fileForClass
parameter_list|(
name|String
name|pkgName
parameter_list|,
name|String
name|className
parameter_list|)
throws|throws
name|Exception
block|{
name|File
name|outFile
init|=
name|super
operator|.
name|fileForClass
argument_list|(
name|pkgName
argument_list|,
name|className
argument_list|)
decl_stmt|;
if|if
condition|(
name|outFile
operator|!=
literal|null
operator|&&
name|logger
operator|!=
literal|null
condition|)
block|{
name|logger
operator|.
name|info
argument_list|(
literal|"Generating class file: "
operator|+
name|outFile
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|outFile
return|;
block|}
annotation|@
name|Override
specifier|protected
name|File
name|fileForSuperclass
parameter_list|(
name|String
name|pkgName
parameter_list|,
name|String
name|className
parameter_list|)
throws|throws
name|Exception
block|{
name|File
name|outFile
init|=
name|super
operator|.
name|fileForSuperclass
argument_list|(
name|pkgName
argument_list|,
name|className
argument_list|)
decl_stmt|;
if|if
condition|(
name|outFile
operator|!=
literal|null
operator|&&
name|logger
operator|!=
literal|null
condition|)
block|{
name|logger
operator|.
name|info
argument_list|(
literal|"Generating superclass file: "
operator|+
name|outFile
operator|.
name|getCanonicalPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|outFile
return|;
block|}
block|}
block|}
end_class

end_unit

