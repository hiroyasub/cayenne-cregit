begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|validation
package|;
end_package

begin_comment
comment|/**  * Represents a generic validation failure that contains  * failed object and a message describing the failure.  *   * @since 1.1  * @author Andrus Adamchik  */
end_comment

begin_class
specifier|public
class|class
name|SimpleValidationFailure
implements|implements
name|ValidationFailure
block|{
specifier|protected
name|Object
name|source
decl_stmt|;
specifier|protected
name|Object
name|error
decl_stmt|;
specifier|public
name|SimpleValidationFailure
parameter_list|(
name|Object
name|source
parameter_list|,
name|Object
name|error
parameter_list|)
block|{
name|this
operator|.
name|source
operator|=
name|source
expr_stmt|;
name|this
operator|.
name|error
operator|=
name|error
expr_stmt|;
block|}
comment|/**      * Returns the error converted to String.      */
specifier|public
name|String
name|getDescription
parameter_list|()
block|{
return|return
name|String
operator|.
name|valueOf
argument_list|(
name|error
argument_list|)
return|;
block|}
comment|/**      * Returns object that failed the validation.      */
specifier|public
name|Object
name|getSource
parameter_list|()
block|{
return|return
name|source
return|;
block|}
specifier|public
name|Object
name|getError
parameter_list|()
block|{
return|return
name|error
return|;
block|}
comment|/**      * Returns a String representation of the failure.      */
annotation|@
name|Override
specifier|public
name|String
name|toString
parameter_list|()
block|{
name|StringBuffer
name|buffer
init|=
operator|new
name|StringBuffer
argument_list|()
decl_stmt|;
name|buffer
operator|.
name|append
argument_list|(
literal|"Validation failure for "
argument_list|)
expr_stmt|;
name|Object
name|source
init|=
name|getSource
argument_list|()
decl_stmt|;
if|if
condition|(
name|source
operator|==
literal|null
condition|)
block|{
name|buffer
operator|.
name|append
argument_list|(
literal|"[General]"
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|String
name|sourceLabel
init|=
operator|(
name|source
operator|instanceof
name|String
operator|)
condition|?
name|source
operator|.
name|toString
argument_list|()
else|:
name|source
operator|.
name|getClass
argument_list|()
operator|.
name|getName
argument_list|()
decl_stmt|;
name|buffer
operator|.
name|append
argument_list|(
name|sourceLabel
argument_list|)
expr_stmt|;
block|}
name|buffer
operator|.
name|append
argument_list|(
literal|": "
argument_list|)
expr_stmt|;
name|buffer
operator|.
name|append
argument_list|(
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
return|return
name|buffer
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

