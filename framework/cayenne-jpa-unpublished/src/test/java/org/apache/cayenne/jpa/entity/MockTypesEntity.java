begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|entity
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Calendar
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Entity
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|EnumType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Enumerated
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Temporal
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|TemporalType
import|;
end_import

begin_class
annotation|@
name|Entity
specifier|public
class|class
name|MockTypesEntity
block|{
specifier|protected
name|Calendar
name|defaultCalendar
decl_stmt|;
annotation|@
name|Temporal
argument_list|(
name|value
operator|=
name|TemporalType
operator|.
name|TIME
argument_list|)
specifier|protected
name|Calendar
name|timeCalendar
decl_stmt|;
annotation|@
name|Temporal
argument_list|(
name|value
operator|=
name|TemporalType
operator|.
name|DATE
argument_list|)
specifier|protected
name|Calendar
name|dateCalendar
decl_stmt|;
annotation|@
name|Temporal
argument_list|(
name|value
operator|=
name|TemporalType
operator|.
name|TIMESTAMP
argument_list|)
specifier|protected
name|Calendar
name|timestampCalendar
decl_stmt|;
specifier|protected
name|MockEnum
name|defaultEnum
decl_stmt|;
annotation|@
name|Enumerated
argument_list|(
name|value
operator|=
name|EnumType
operator|.
name|ORDINAL
argument_list|)
specifier|protected
name|MockEnum
name|ordinalEnum
decl_stmt|;
annotation|@
name|Enumerated
argument_list|(
name|value
operator|=
name|EnumType
operator|.
name|STRING
argument_list|)
specifier|protected
name|MockEnum
name|stringEnum
decl_stmt|;
specifier|protected
name|byte
index|[]
name|byteArray
decl_stmt|;
block|}
end_class

end_unit

