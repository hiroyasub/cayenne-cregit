begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|conf
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|spi
operator|.
name|PersistenceUnitTransactionType
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|Provider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|InputSource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXParseException
import|;
end_import

begin_class
specifier|public
class|class
name|UnitDescriptorParserTest
extends|extends
name|TestCase
block|{
specifier|public
name|void
name|testSample1
parameter_list|()
throws|throws
name|Exception
block|{
name|UnitDescriptorParser
name|parser
init|=
operator|new
name|UnitDescriptorParser
argument_list|()
decl_stmt|;
name|URL
name|root
init|=
operator|new
name|URL
argument_list|(
literal|"file:///xyz"
argument_list|)
decl_stmt|;
name|InputStream
name|in
init|=
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|getContextClassLoader
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"xml-samples/persistence1.xml"
argument_list|)
decl_stmt|;
name|Collection
name|units
init|=
name|parser
operator|.
name|getPersistenceUnits
argument_list|(
operator|new
name|InputSource
argument_list|(
name|in
argument_list|)
argument_list|,
name|root
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|units
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|JpaUnit
name|info
init|=
operator|(
name|JpaUnit
operator|)
name|units
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"OrderManagement"
argument_list|,
name|info
operator|.
name|getPersistenceUnitName
argument_list|()
argument_list|)
expr_stmt|;
comment|// JTA is the default when type is ommitted
name|assertEquals
argument_list|(
name|PersistenceUnitTransactionType
operator|.
name|JTA
argument_list|,
name|info
operator|.
name|getTransactionType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|root
argument_list|,
name|info
operator|.
name|getPersistenceUnitRootUrl
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|info
operator|.
name|getDescription
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"This unit manages orders"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"jdbc/MyOrderDB"
argument_list|,
name|info
operator|.
name|getProperties
argument_list|()
operator|.
name|getProperty
argument_list|(
name|Provider
operator|.
name|JTA_DATA_SOURCE_PROPERTY
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|info
operator|.
name|getMappingFileNames
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|info
operator|.
name|getMappingFileNames
argument_list|()
operator|.
name|contains
argument_list|(
literal|"ormap.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|info
operator|.
name|getManagedClassNames
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|info
operator|.
name|getManagedClassNames
argument_list|()
operator|.
name|contains
argument_list|(
literal|"com.widgets.Order"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|info
operator|.
name|getManagedClassNames
argument_list|()
operator|.
name|contains
argument_list|(
literal|"com.widgets.Customer"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSampleSchemaHeadersValidating
parameter_list|()
throws|throws
name|Exception
block|{
name|UnitDescriptorParser
name|parser
init|=
operator|new
name|UnitDescriptorParser
argument_list|(
literal|null
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|URL
name|root
init|=
operator|new
name|URL
argument_list|(
literal|"file:///xyz"
argument_list|)
decl_stmt|;
name|InputStream
name|in
init|=
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|getContextClassLoader
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"xml-samples/persistence-schema-headers.xml"
argument_list|)
decl_stmt|;
name|Collection
name|units
init|=
name|parser
operator|.
name|getPersistenceUnits
argument_list|(
operator|new
name|InputSource
argument_list|(
name|in
argument_list|)
argument_list|,
name|root
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|units
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|JpaUnit
name|info
init|=
operator|(
name|JpaUnit
operator|)
name|units
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"OrderManagement"
argument_list|,
name|info
operator|.
name|getPersistenceUnitName
argument_list|()
argument_list|)
expr_stmt|;
comment|// JTA is the default when type is ommitted
name|assertEquals
argument_list|(
name|PersistenceUnitTransactionType
operator|.
name|JTA
argument_list|,
name|info
operator|.
name|getTransactionType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|root
argument_list|,
name|info
operator|.
name|getPersistenceUnitRootUrl
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|info
operator|.
name|getDescription
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"This unit manages orders"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"jdbc/MyOrderDB"
argument_list|,
name|info
operator|.
name|getProperties
argument_list|()
operator|.
name|getProperty
argument_list|(
name|Provider
operator|.
name|JTA_DATA_SOURCE_PROPERTY
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|info
operator|.
name|getMappingFileNames
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|info
operator|.
name|getMappingFileNames
argument_list|()
operator|.
name|contains
argument_list|(
literal|"ormap.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|info
operator|.
name|getManagedClassNames
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|info
operator|.
name|getManagedClassNames
argument_list|()
operator|.
name|contains
argument_list|(
literal|"com.widgets.Order"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|info
operator|.
name|getManagedClassNames
argument_list|()
operator|.
name|contains
argument_list|(
literal|"com.widgets.Customer"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSample2
parameter_list|()
throws|throws
name|Exception
block|{
name|UnitDescriptorParser
name|parser
init|=
operator|new
name|UnitDescriptorParser
argument_list|()
decl_stmt|;
name|URL
name|root
init|=
operator|new
name|URL
argument_list|(
literal|"file:///xyz"
argument_list|)
decl_stmt|;
name|InputStream
name|in
init|=
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|getContextClassLoader
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"xml-samples/persistence2.xml"
argument_list|)
decl_stmt|;
name|Collection
name|units
init|=
name|parser
operator|.
name|getPersistenceUnits
argument_list|(
operator|new
name|InputSource
argument_list|(
name|in
argument_list|)
argument_list|,
name|root
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|units
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
name|it
init|=
name|units
operator|.
name|iterator
argument_list|()
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|1
init|;
name|i
operator|<=
literal|3
condition|;
name|i
operator|++
control|)
block|{
name|JpaUnit
name|info
init|=
operator|(
name|JpaUnit
operator|)
name|it
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"Unit"
operator|+
name|i
argument_list|,
name|info
operator|.
name|getPersistenceUnitName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|root
argument_list|,
name|info
operator|.
name|getPersistenceUnitRootUrl
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|info
operator|.
name|getDescription
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|info
operator|.
name|getProperties
argument_list|()
operator|.
name|isEmpty
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|info
operator|.
name|getMappingFileNames
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|info
operator|.
name|getManagedClassNames
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testSample3
parameter_list|()
throws|throws
name|Exception
block|{
name|UnitDescriptorParser
name|parser
init|=
operator|new
name|UnitDescriptorParser
argument_list|()
decl_stmt|;
name|URL
name|root
init|=
operator|new
name|URL
argument_list|(
literal|"file:///xyz"
argument_list|)
decl_stmt|;
name|InputStream
name|in
init|=
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|getContextClassLoader
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"xml-samples/persistence3.xml"
argument_list|)
decl_stmt|;
name|Collection
name|units
init|=
name|parser
operator|.
name|getPersistenceUnits
argument_list|(
operator|new
name|InputSource
argument_list|(
name|in
argument_list|)
argument_list|,
name|root
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|units
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|JpaUnit
name|info
init|=
operator|(
name|JpaUnit
operator|)
name|units
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"OrderManagement4"
argument_list|,
name|info
operator|.
name|getPersistenceUnitName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|PersistenceUnitTransactionType
operator|.
name|RESOURCE_LOCAL
argument_list|,
name|info
operator|.
name|getTransactionType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|root
argument_list|,
name|info
operator|.
name|getPersistenceUnitRootUrl
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"jdbc/MyDB"
argument_list|,
name|info
operator|.
name|getProperties
argument_list|()
operator|.
name|getProperty
argument_list|(
name|Provider
operator|.
name|NON_JTA_DATA_SOURCE_PROPERTY
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|info
operator|.
name|getMappingFileNames
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|info
operator|.
name|getMappingFileNames
argument_list|()
operator|.
name|contains
argument_list|(
literal|"order-mappings.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|info
operator|.
name|getManagedClassNames
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|info
operator|.
name|getManagedClassNames
argument_list|()
operator|.
name|contains
argument_list|(
literal|"com.acme.Order"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|info
operator|.
name|getManagedClassNames
argument_list|()
operator|.
name|contains
argument_list|(
literal|"com.acme.Customer"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|info
operator|.
name|getManagedClassNames
argument_list|()
operator|.
name|contains
argument_list|(
literal|"com.acme.Item"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|info
operator|.
name|excludeUnlistedClasses
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testSampleSchemaHeaders
parameter_list|()
throws|throws
name|Exception
block|{
name|UnitDescriptorParser
name|parser
init|=
operator|new
name|UnitDescriptorParser
argument_list|()
decl_stmt|;
name|URL
name|root
init|=
operator|new
name|URL
argument_list|(
literal|"file:///xyz"
argument_list|)
decl_stmt|;
name|InputStream
name|in
init|=
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|getContextClassLoader
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"xml-samples/persistence-schema-headers.xml"
argument_list|)
decl_stmt|;
name|Collection
name|units
init|=
name|parser
operator|.
name|getPersistenceUnits
argument_list|(
operator|new
name|InputSource
argument_list|(
name|in
argument_list|)
argument_list|,
name|root
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|units
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|JpaUnit
name|info
init|=
operator|(
name|JpaUnit
operator|)
name|units
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"OrderManagement"
argument_list|,
name|info
operator|.
name|getPersistenceUnitName
argument_list|()
argument_list|)
expr_stmt|;
comment|// JTA is the default when type is ommitted
name|assertEquals
argument_list|(
name|PersistenceUnitTransactionType
operator|.
name|JTA
argument_list|,
name|info
operator|.
name|getTransactionType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|root
argument_list|,
name|info
operator|.
name|getPersistenceUnitRootUrl
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|info
operator|.
name|getDescription
argument_list|()
operator|.
name|startsWith
argument_list|(
literal|"This unit manages orders"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"jdbc/MyOrderDB"
argument_list|,
name|info
operator|.
name|getProperties
argument_list|()
operator|.
name|getProperty
argument_list|(
name|Provider
operator|.
name|JTA_DATA_SOURCE_PROPERTY
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|info
operator|.
name|getMappingFileNames
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|info
operator|.
name|getMappingFileNames
argument_list|()
operator|.
name|contains
argument_list|(
literal|"ormap.xml"
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|info
operator|.
name|getManagedClassNames
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|info
operator|.
name|getManagedClassNames
argument_list|()
operator|.
name|contains
argument_list|(
literal|"com.widgets.Order"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|info
operator|.
name|getManagedClassNames
argument_list|()
operator|.
name|contains
argument_list|(
literal|"com.widgets.Customer"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testInvalidSample1
parameter_list|()
throws|throws
name|Exception
block|{
name|UnitDescriptorParser
name|parser
init|=
operator|new
name|UnitDescriptorParser
argument_list|(
literal|null
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|URL
name|root
init|=
operator|new
name|URL
argument_list|(
literal|"file:///xyz"
argument_list|)
decl_stmt|;
name|InputStream
name|in
init|=
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|getContextClassLoader
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"xml-samples/persistence-invalid1.xml"
argument_list|)
decl_stmt|;
try|try
block|{
name|parser
operator|.
name|getPersistenceUnits
argument_list|(
operator|new
name|InputSource
argument_list|(
name|in
argument_list|)
argument_list|,
name|root
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Validation did not detect errors"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SAXParseException
name|e
parameter_list|)
block|{
comment|// expected
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|indexOf
argument_list|(
literal|"invalidtag"
argument_list|)
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|testInvalidSample2
parameter_list|()
throws|throws
name|Exception
block|{
name|UnitDescriptorParser
name|parser
init|=
operator|new
name|UnitDescriptorParser
argument_list|(
literal|null
argument_list|,
literal|true
argument_list|)
decl_stmt|;
name|URL
name|root
init|=
operator|new
name|URL
argument_list|(
literal|"file:///xyz"
argument_list|)
decl_stmt|;
name|InputStream
name|in
init|=
name|Thread
operator|.
name|currentThread
argument_list|()
operator|.
name|getContextClassLoader
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
literal|"xml-samples/persistence-invalid2.xml"
argument_list|)
decl_stmt|;
try|try
block|{
name|parser
operator|.
name|getPersistenceUnits
argument_list|(
operator|new
name|InputSource
argument_list|(
name|in
argument_list|)
argument_list|,
name|root
argument_list|)
expr_stmt|;
name|fail
argument_list|(
literal|"Validation did not detect errors"
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|SAXParseException
name|e
parameter_list|)
block|{
comment|// expected
name|assertTrue
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
operator|.
name|indexOf
argument_list|(
literal|"persistence-unit"
argument_list|)
operator|>
literal|0
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

