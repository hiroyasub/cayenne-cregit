begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|entity
operator|.
name|cayenne
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Date
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|CascadeType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Column
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Entity
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|FetchType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Id
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|IdClass
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|ManyToMany
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|ManyToOne
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|NamedQueries
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|NamedQuery
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|OneToMany
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|OneToOne
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|QueryHint
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Temporal
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|TemporalType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Transient
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Version
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|entity
operator|.
name|MockTargetEntity2
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|CayenneDataObject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ObjectId
import|;
end_import

begin_class
annotation|@
name|Entity
annotation|@
name|Table
argument_list|(
name|name
operator|=
literal|"mock_persistent_1"
argument_list|,
name|catalog
operator|=
literal|"catalog1"
argument_list|,
name|schema
operator|=
literal|"schema1"
argument_list|)
annotation|@
name|NamedQueries
argument_list|(
block|{
annotation|@
name|NamedQuery
argument_list|(
name|name
operator|=
literal|"entityQuery1"
argument_list|,
name|query
operator|=
literal|"select x"
argument_list|,
name|hints
operator|=
block|{
annotation|@
name|QueryHint
argument_list|(
name|name
operator|=
literal|"hint1"
argument_list|,
name|value
operator|=
literal|"value1"
argument_list|)
block|,
annotation|@
name|QueryHint
argument_list|(
name|name
operator|=
literal|"hint2"
argument_list|,
name|value
operator|=
literal|"value2"
argument_list|)
block|}
argument_list|)
block|,
annotation|@
name|NamedQuery
argument_list|(
name|name
operator|=
literal|"entityQuery2"
argument_list|,
name|query
operator|=
literal|"select y"
argument_list|)
block|}
argument_list|)
annotation|@
name|IdClass
argument_list|(
name|ObjectId
operator|.
name|class
argument_list|)
specifier|public
class|class
name|MockCayenneEntity1
extends|extends
name|CayenneDataObject
block|{
annotation|@
name|Id
specifier|protected
name|int
name|id
decl_stmt|;
specifier|protected
name|String
name|attribute1
decl_stmt|;
annotation|@
name|Version
specifier|protected
name|int
name|attribute2
decl_stmt|;
annotation|@
name|OneToOne
argument_list|(
name|targetEntity
operator|=
name|MockCayenneTargetEntity1
operator|.
name|class
argument_list|,
name|fetch
operator|=
name|FetchType
operator|.
name|LAZY
argument_list|,
name|optional
operator|=
literal|true
argument_list|,
name|mappedBy
operator|=
literal|"mb1"
argument_list|,
name|cascade
operator|=
block|{
name|CascadeType
operator|.
name|MERGE
block|,
name|CascadeType
operator|.
name|PERSIST
block|}
argument_list|)
specifier|protected
name|int
name|attribute3
decl_stmt|;
annotation|@
name|OneToMany
argument_list|(
name|targetEntity
operator|=
name|MockCayenneTargetEntity2
operator|.
name|class
argument_list|,
name|fetch
operator|=
name|FetchType
operator|.
name|LAZY
argument_list|,
name|mappedBy
operator|=
literal|"entity1"
argument_list|,
name|cascade
operator|=
block|{
name|CascadeType
operator|.
name|MERGE
block|,
name|CascadeType
operator|.
name|PERSIST
block|}
argument_list|)
specifier|protected
name|Collection
argument_list|<
name|MockTargetEntity2
argument_list|>
name|attribute4
decl_stmt|;
annotation|@
name|ManyToOne
argument_list|(
name|targetEntity
operator|=
name|MockCayenneTargetEntity2
operator|.
name|class
argument_list|,
name|fetch
operator|=
name|FetchType
operator|.
name|LAZY
argument_list|,
name|optional
operator|=
literal|true
argument_list|,
name|cascade
operator|=
block|{
name|CascadeType
operator|.
name|MERGE
block|,
name|CascadeType
operator|.
name|PERSIST
block|}
argument_list|)
specifier|protected
name|int
name|attribute5
decl_stmt|;
annotation|@
name|ManyToMany
argument_list|(
name|targetEntity
operator|=
name|MockCayenneTargetEntity1
operator|.
name|class
argument_list|,
name|fetch
operator|=
name|FetchType
operator|.
name|LAZY
argument_list|,
name|mappedBy
operator|=
literal|"mb4"
argument_list|,
name|cascade
operator|=
block|{
name|CascadeType
operator|.
name|MERGE
block|,
name|CascadeType
operator|.
name|PERSIST
block|}
argument_list|)
specifier|protected
name|int
name|attribute6
decl_stmt|;
annotation|@
name|Transient
specifier|protected
name|int
name|attribute8
decl_stmt|;
annotation|@
name|Column
argument_list|(
name|name
operator|=
literal|"column9"
argument_list|)
annotation|@
name|Temporal
argument_list|(
name|TemporalType
operator|.
name|DATE
argument_list|)
specifier|protected
name|Date
name|attribute9
decl_stmt|;
specifier|public
name|String
name|getAttribute1
parameter_list|()
block|{
return|return
name|attribute1
return|;
block|}
specifier|public
name|void
name|setAttribute1
parameter_list|(
name|String
name|attribute1
parameter_list|)
block|{
name|this
operator|.
name|attribute1
operator|=
name|attribute1
expr_stmt|;
block|}
specifier|public
name|int
name|getAttribute2
parameter_list|()
block|{
return|return
name|attribute2
return|;
block|}
specifier|public
name|void
name|setAttribute2
parameter_list|(
name|int
name|attribute2
parameter_list|)
block|{
name|this
operator|.
name|attribute2
operator|=
name|attribute2
expr_stmt|;
block|}
specifier|public
name|int
name|getAttribute3
parameter_list|()
block|{
return|return
name|attribute3
return|;
block|}
specifier|public
name|void
name|setAttribute3
parameter_list|(
name|int
name|attribute3
parameter_list|)
block|{
name|this
operator|.
name|attribute3
operator|=
name|attribute3
expr_stmt|;
block|}
block|}
end_class

end_unit

