begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|conf
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Iterator
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|CascadeType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|DiscriminatorType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|FetchType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|GenerationType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|InheritanceType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|TemporalType
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaAttributeOverride
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaAttributes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaBasic
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaColumn
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaColumnResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaEmbeddable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaEmbeddedId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaEntityListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaEntityListeners
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaEntityMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaEntityResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaFieldResult
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaJoinColumn
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaMappedSuperclass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaNamedNativeQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaNamedQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaOneToMany
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaOneToOne
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaPrimaryKeyJoinColumn
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaQueryHint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaSecondaryTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaSequenceGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaSqlResultSetMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaTableGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaTransient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaUniqueConstraint
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaVersion
import|;
end_import

begin_comment
comment|/**  * A helper test class that checks loaded entity map for processed annotations.  *   * @author Andrus Adamchik  */
end_comment

begin_class
specifier|public
class|class
name|MappingAssertion
extends|extends
name|Assert
block|{
specifier|public
name|void
name|testEntityMap
parameter_list|(
name|JpaEntityMap
name|entityMap
parameter_list|)
throws|throws
name|Exception
block|{
name|assertNotNull
argument_list|(
name|entityMap
operator|.
name|getEntities
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|entityMap
operator|.
name|getEntities
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|JpaEntity
argument_list|>
name|entityIt
init|=
name|entityMap
operator|.
name|getEntities
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|assertEntity1
argument_list|(
name|entityIt
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEntity2
argument_list|(
name|entityIt
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEntity3
argument_list|(
name|entityIt
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEntity4
argument_list|(
name|entityIt
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEntity5
argument_list|(
name|entityIt
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entityMap
operator|.
name|getEmbeddables
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|entityMap
operator|.
name|getEmbeddables
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|JpaEmbeddable
argument_list|>
name|embedIt
init|=
name|entityMap
operator|.
name|getEmbeddables
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|assertEmbeddable1
argument_list|(
name|embedIt
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entityMap
operator|.
name|getMappedSuperclasses
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|entityMap
operator|.
name|getMappedSuperclasses
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|JpaMappedSuperclass
argument_list|>
name|mappedSuperclassIt
init|=
name|entityMap
operator|.
name|getMappedSuperclasses
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|assertMappedSuperclass1
argument_list|(
name|mappedSuperclassIt
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertMappedSuperclass2
argument_list|(
name|mappedSuperclassIt
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertMappedSuperclass3
argument_list|(
name|mappedSuperclassIt
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|entityMap
operator|.
name|getNamedQueries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|JpaNamedQuery
argument_list|>
name|namedQueryIt
init|=
name|entityMap
operator|.
name|getNamedQueries
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|assertNamedQuery1
argument_list|(
name|namedQueryIt
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertNamedQuery2
argument_list|(
name|namedQueryIt
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|entityMap
operator|.
name|getNamedNativeQueries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|JpaNamedNativeQuery
argument_list|>
name|namedNativeQueryIt
init|=
name|entityMap
operator|.
name|getNamedNativeQueries
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|assertNativeNamedQuery3
argument_list|(
name|namedNativeQueryIt
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertNativeNamedQuery4
argument_list|(
name|namedNativeQueryIt
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|entityMap
operator|.
name|getSqlResultSetMappings
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertSqlResultSetMapping
argument_list|(
name|entityMap
operator|.
name|getSqlResultSetMappings
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|entityMap
operator|.
name|getSequenceGenerators
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertSequenceGenerator1
argument_list|(
name|entityMap
operator|.
name|getSequenceGenerators
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|entityMap
operator|.
name|getTableGenerators
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTableGenerator
argument_list|(
name|entityMap
operator|.
name|getTableGenerators
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|assertEmbeddable1
parameter_list|(
name|JpaEmbeddable
name|embeddable1
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"org.apache.cayenne.jpa.entity.MockEmbed1"
argument_list|,
name|embeddable1
operator|.
name|getClassName
argument_list|()
argument_list|)
expr_stmt|;
name|JpaAttributes
name|attributes
init|=
name|embeddable1
operator|.
name|getAttributes
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|attributes
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|attributes
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|attributes
operator|.
name|getBasicAttributes
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|JpaBasic
name|a1
init|=
name|attributes
operator|.
name|getBasicAttribute
argument_list|(
literal|"ea1"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"ea1"
argument_list|,
name|a1
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|a1
operator|.
name|isOptional
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|FetchType
operator|.
name|EAGER
argument_list|,
name|a1
operator|.
name|getFetch
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|a1
operator|.
name|isLob
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|a1
operator|.
name|getColumn
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"column9"
argument_list|,
name|a1
operator|.
name|getColumn
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|attributes
operator|.
name|getTransientAttributes
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|JpaTransient
name|a2
init|=
name|attributes
operator|.
name|getTransientAttribute
argument_list|(
literal|"ea2"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"ea2"
argument_list|,
name|a2
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|assertEntity1
parameter_list|(
name|JpaEntity
name|entity1
parameter_list|)
block|{
name|assertNotNull
argument_list|(
name|entity1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"MockEntity1"
argument_list|,
name|entity1
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cayenne.jpa.entity.MockEntity1"
argument_list|,
name|entity1
operator|.
name|getClassName
argument_list|()
argument_list|)
expr_stmt|;
name|assertTable
argument_list|(
name|entity1
operator|.
name|getTable
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|entity1
operator|.
name|getSecondaryTables
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|JpaSecondaryTable
argument_list|>
name|secondaryTableIt
init|=
name|entity1
operator|.
name|getSecondaryTables
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|assertSecondaryTable1
argument_list|(
name|secondaryTableIt
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|JpaSecondaryTable
name|secondaryTable2
init|=
name|secondaryTableIt
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"secondary2"
argument_list|,
name|secondaryTable2
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entity1
operator|.
name|getIdClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cayenne.jpa.entity.MockIdClass"
argument_list|,
name|entity1
operator|.
name|getIdClass
argument_list|()
operator|.
name|getClassName
argument_list|()
argument_list|)
expr_stmt|;
name|assertSequenceGenerator1
argument_list|(
name|entity1
operator|.
name|getSequenceGenerator
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entity1
operator|.
name|getTableGenerator
argument_list|()
argument_list|)
expr_stmt|;
name|assertTableGenerator
argument_list|(
name|entity1
operator|.
name|getTableGenerator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|entity1
operator|.
name|getNamedQueries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|JpaNamedQuery
argument_list|>
name|namedQueryIt
init|=
name|entity1
operator|.
name|getNamedQueries
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|assertNamedQuery1
argument_list|(
name|namedQueryIt
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertNamedQuery2
argument_list|(
name|namedQueryIt
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|entity1
operator|.
name|getNamedNativeQueries
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|JpaNamedNativeQuery
argument_list|>
name|namedNativeQueryIt
init|=
name|entity1
operator|.
name|getNamedNativeQueries
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|assertNativeNamedQuery3
argument_list|(
name|namedNativeQueryIt
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertNativeNamedQuery4
argument_list|(
name|namedNativeQueryIt
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertSqlResultSetMapping
argument_list|(
name|entity1
operator|.
name|getSqlResultSetMappings
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|entity1
operator|.
name|isExcludeDefaultListeners
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|entity1
operator|.
name|isExcludeSuperclassListeners
argument_list|()
argument_list|)
expr_stmt|;
name|assertEntityListeners
argument_list|(
name|entity1
operator|.
name|getEntityListeners
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entity1
operator|.
name|getPrePersist
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"eprePersist"
argument_list|,
name|entity1
operator|.
name|getPrePersist
argument_list|()
operator|.
name|getMethodName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entity1
operator|.
name|getPostPersist
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"epostPersist"
argument_list|,
name|entity1
operator|.
name|getPostPersist
argument_list|()
operator|.
name|getMethodName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entity1
operator|.
name|getPreUpdate
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"epreUpdate"
argument_list|,
name|entity1
operator|.
name|getPreUpdate
argument_list|()
operator|.
name|getMethodName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entity1
operator|.
name|getPostUpdate
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"epostUpdate"
argument_list|,
name|entity1
operator|.
name|getPostUpdate
argument_list|()
operator|.
name|getMethodName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entity1
operator|.
name|getPreRemove
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"epreRemove"
argument_list|,
name|entity1
operator|.
name|getPreRemove
argument_list|()
operator|.
name|getMethodName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entity1
operator|.
name|getPostRemove
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"epostRemove"
argument_list|,
name|entity1
operator|.
name|getPostRemove
argument_list|()
operator|.
name|getMethodName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entity1
operator|.
name|getPostLoad
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"epostLoad"
argument_list|,
name|entity1
operator|.
name|getPostLoad
argument_list|()
operator|.
name|getMethodName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|entity1
operator|.
name|getAttributes
argument_list|()
operator|.
name|getIds
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertId
argument_list|(
name|entity1
operator|.
name|getAttributes
argument_list|()
operator|.
name|getIds
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|entity1
operator|.
name|getInheritance
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|assertEntity2
parameter_list|(
name|JpaEntity
name|entity2
parameter_list|)
block|{
name|assertNotNull
argument_list|(
name|entity2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cayenne.jpa.entity.MockEntity2"
argument_list|,
name|entity2
operator|.
name|getClassName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"MockEntity2"
argument_list|,
name|entity2
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|entity2
operator|.
name|getPrimaryKeyJoinColumns
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|JpaPrimaryKeyJoinColumn
argument_list|>
name|pkJoinColumnIt
init|=
name|entity2
operator|.
name|getPrimaryKeyJoinColumns
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|JpaPrimaryKeyJoinColumn
name|pk1
init|=
name|pkJoinColumnIt
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"pk_column1"
argument_list|,
name|pk1
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count(1)"
argument_list|,
name|pk1
operator|.
name|getColumnDefinition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"super_column1"
argument_list|,
name|pk1
operator|.
name|getReferencedColumnName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entity2
operator|.
name|getInheritance
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|InheritanceType
operator|.
name|JOINED
argument_list|,
name|entity2
operator|.
name|getInheritance
argument_list|()
operator|.
name|getStrategy
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|entity2
operator|.
name|getAttributeOverrides
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|JpaAttributeOverride
argument_list|>
name|overrides
init|=
operator|new
name|ArrayList
argument_list|<
name|JpaAttributeOverride
argument_list|>
argument_list|(
name|entity2
operator|.
name|getAttributeOverrides
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"attribute1"
argument_list|,
name|overrides
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|JpaColumn
name|c1
init|=
name|overrides
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getColumn
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"ao_column1"
argument_list|,
name|c1
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count(1)"
argument_list|,
name|c1
operator|.
name|getColumnDefinition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ao_table1"
argument_list|,
name|c1
operator|.
name|getTable
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|c1
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|c1
operator|.
name|getPrecision
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|c1
operator|.
name|getScale
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|c1
operator|.
name|isInsertable
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|c1
operator|.
name|isNullable
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|c1
operator|.
name|isUnique
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|c1
operator|.
name|isUpdatable
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"attribute2"
argument_list|,
name|overrides
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|assertEntity3
parameter_list|(
name|JpaEntity
name|entity3
parameter_list|)
block|{
name|assertNotNull
argument_list|(
name|entity3
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cayenne.jpa.entity.MockEntity3"
argument_list|,
name|entity3
operator|.
name|getClassName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"MockEntity3"
argument_list|,
name|entity3
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entity3
operator|.
name|getInheritance
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|InheritanceType
operator|.
name|SINGLE_TABLE
argument_list|,
name|entity3
operator|.
name|getInheritance
argument_list|()
operator|.
name|getStrategy
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"DV"
argument_list|,
name|entity3
operator|.
name|getDiscriminatorValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entity3
operator|.
name|getDiscriminatorColumn
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"column1"
argument_list|,
name|entity3
operator|.
name|getDiscriminatorColumn
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DiscriminatorType
operator|.
name|CHAR
argument_list|,
name|entity3
operator|.
name|getDiscriminatorColumn
argument_list|()
operator|.
name|getDiscriminatorType
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count(1)"
argument_list|,
name|entity3
operator|.
name|getDiscriminatorColumn
argument_list|()
operator|.
name|getColumnDefinition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|entity3
operator|.
name|getDiscriminatorColumn
argument_list|()
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|assertEntity4
parameter_list|(
name|JpaEntity
name|entity4
parameter_list|)
block|{
name|assertNotNull
argument_list|(
name|entity4
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cayenne.jpa.entity.MockEntity4"
argument_list|,
name|entity4
operator|.
name|getClassName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"MockEntity4"
argument_list|,
name|entity4
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEmbeddedId
argument_list|(
name|entity4
operator|.
name|getAttributes
argument_list|()
operator|.
name|getEmbeddedId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|assertEntity5
parameter_list|(
name|JpaEntity
name|entity5
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"MockEntity5"
argument_list|,
name|entity5
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|entity5
operator|.
name|getAttributes
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|16
argument_list|,
name|entity5
operator|.
name|getAttributes
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertAttributes
argument_list|(
name|entity5
operator|.
name|getAttributes
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|assertSequenceGenerator1
parameter_list|(
name|JpaSequenceGenerator
name|generator
parameter_list|)
block|{
name|assertNotNull
argument_list|(
name|generator
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"sg-name"
argument_list|,
name|generator
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"seq-name"
argument_list|,
name|generator
operator|.
name|getSequenceName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|10
argument_list|,
name|generator
operator|.
name|getAllocationSize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|generator
operator|.
name|getInitialValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|assertTable
parameter_list|(
name|JpaTable
name|table
parameter_list|)
block|{
name|assertNotNull
argument_list|(
name|table
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"mock_persistent_1"
argument_list|,
name|table
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"catalog1"
argument_list|,
name|table
operator|.
name|getCatalog
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"schema1"
argument_list|,
name|table
operator|.
name|getSchema
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|table
operator|.
name|getUniqueConstraints
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|JpaUniqueConstraint
argument_list|>
name|constraintsIt
init|=
name|table
operator|.
name|getUniqueConstraints
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|JpaUniqueConstraint
name|c1
init|=
name|constraintsIt
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|c1
operator|.
name|getColumnNames
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|c1
operator|.
name|getColumnNames
argument_list|()
operator|.
name|contains
argument_list|(
literal|"column1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|c1
operator|.
name|getColumnNames
argument_list|()
operator|.
name|contains
argument_list|(
literal|"column2"
argument_list|)
argument_list|)
expr_stmt|;
name|JpaUniqueConstraint
name|c2
init|=
name|constraintsIt
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|c2
operator|.
name|getColumnNames
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|c2
operator|.
name|getColumnNames
argument_list|()
operator|.
name|contains
argument_list|(
literal|"column3"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|assertSecondaryTable1
parameter_list|(
name|JpaSecondaryTable
name|secondaryTable1
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"secondary1"
argument_list|,
name|secondaryTable1
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"catalog1"
argument_list|,
name|secondaryTable1
operator|.
name|getCatalog
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"schema1"
argument_list|,
name|secondaryTable1
operator|.
name|getSchema
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|secondaryTable1
operator|.
name|getPrimaryKeyJoinColumns
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|JpaPrimaryKeyJoinColumn
argument_list|>
name|pkJoinColumnIt
init|=
name|secondaryTable1
operator|.
name|getPrimaryKeyJoinColumns
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|JpaPrimaryKeyJoinColumn
name|pk1
init|=
name|pkJoinColumnIt
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"secondary_column1"
argument_list|,
name|pk1
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"count(1)"
argument_list|,
name|pk1
operator|.
name|getColumnDefinition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"column1"
argument_list|,
name|pk1
operator|.
name|getReferencedColumnName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|secondaryTable1
operator|.
name|getUniqueConstraints
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|JpaUniqueConstraint
argument_list|>
name|constraintsIt
init|=
name|secondaryTable1
operator|.
name|getUniqueConstraints
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|JpaUniqueConstraint
name|c1
init|=
name|constraintsIt
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|c1
operator|.
name|getColumnNames
argument_list|()
operator|.
name|contains
argument_list|(
literal|"column1"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|c1
operator|.
name|getColumnNames
argument_list|()
operator|.
name|contains
argument_list|(
literal|"column2"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|assertTableGenerator
parameter_list|(
name|JpaTableGenerator
name|generator
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"table-generator"
argument_list|,
name|generator
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"auto_pk_table"
argument_list|,
name|generator
operator|.
name|getTable
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"catalog1"
argument_list|,
name|generator
operator|.
name|getCatalog
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"schema1"
argument_list|,
name|generator
operator|.
name|getSchema
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"next_id"
argument_list|,
name|generator
operator|.
name|getPkColumnName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"x"
argument_list|,
name|generator
operator|.
name|getValueColumnName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"y"
argument_list|,
name|generator
operator|.
name|getPkColumnValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|generator
operator|.
name|getInitialValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|20
argument_list|,
name|generator
operator|.
name|getAllocationSize
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|generator
operator|.
name|getUniqueConstraints
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|JpaUniqueConstraint
argument_list|>
name|constraintsIt
init|=
name|generator
operator|.
name|getUniqueConstraints
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|JpaUniqueConstraint
name|c1
init|=
name|constraintsIt
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertTrue
argument_list|(
name|c1
operator|.
name|getColumnNames
argument_list|()
operator|.
name|contains
argument_list|(
literal|"pk1"
argument_list|)
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|assertNamedQuery1
parameter_list|(
name|JpaNamedQuery
name|namedQuery
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"query1"
argument_list|,
name|namedQuery
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"select x"
argument_list|,
name|namedQuery
operator|.
name|getQuery
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|namedQuery
operator|.
name|getHints
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|JpaQueryHint
argument_list|>
name|hintIt
init|=
name|namedQuery
operator|.
name|getHints
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|JpaQueryHint
name|h1
init|=
name|hintIt
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"hint1"
argument_list|,
name|h1
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"value1"
argument_list|,
name|h1
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|JpaQueryHint
name|h2
init|=
name|hintIt
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"hint2"
argument_list|,
name|h2
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"value2"
argument_list|,
name|h2
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|assertNamedQuery2
parameter_list|(
name|JpaNamedQuery
name|namedQuery
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"query2"
argument_list|,
name|namedQuery
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"select y"
argument_list|,
name|namedQuery
operator|.
name|getQuery
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|namedQuery
operator|.
name|getHints
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|assertNativeNamedQuery3
parameter_list|(
name|JpaNamedNativeQuery
name|namedQuery
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"query3"
argument_list|,
name|namedQuery
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"select z"
argument_list|,
name|namedQuery
operator|.
name|getQuery
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cayenne.jpa.entity.MockResultClass"
argument_list|,
name|namedQuery
operator|.
name|getResultClassName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"rs-mapping1"
argument_list|,
name|namedQuery
operator|.
name|getResultSetMapping
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|namedQuery
operator|.
name|getHints
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|JpaQueryHint
argument_list|>
name|hintIt
init|=
name|namedQuery
operator|.
name|getHints
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|JpaQueryHint
name|h1
init|=
name|hintIt
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"hint3"
argument_list|,
name|h1
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"value3"
argument_list|,
name|h1
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
name|JpaQueryHint
name|h2
init|=
name|hintIt
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"hint4"
argument_list|,
name|h2
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"value4"
argument_list|,
name|h2
operator|.
name|getValue
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|assertNativeNamedQuery4
parameter_list|(
name|JpaNamedNativeQuery
name|namedQuery
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"query4"
argument_list|,
name|namedQuery
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"select a"
argument_list|,
name|namedQuery
operator|.
name|getQuery
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|0
argument_list|,
name|namedQuery
operator|.
name|getHints
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|assertSqlResultSetMapping
parameter_list|(
name|JpaSqlResultSetMapping
name|mapping
parameter_list|)
block|{
name|assertNotNull
argument_list|(
name|mapping
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"result-map1"
argument_list|,
name|mapping
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|mapping
operator|.
name|getEntityResults
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|JpaEntityResult
argument_list|>
name|erIt
init|=
name|mapping
operator|.
name|getEntityResults
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|JpaEntityResult
name|er1
init|=
name|erIt
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cayenne.jpa.entity.MockEntityX"
argument_list|,
name|er1
operator|.
name|getEntityClassName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"column1"
argument_list|,
name|er1
operator|.
name|getDiscriminatorColumn
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|er1
operator|.
name|getFieldResults
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|JpaFieldResult
argument_list|>
name|frIt1
init|=
name|er1
operator|.
name|getFieldResults
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|JpaFieldResult
name|fr11
init|=
name|frIt1
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"field1"
argument_list|,
name|fr11
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"column1"
argument_list|,
name|fr11
operator|.
name|getColumn
argument_list|()
argument_list|)
expr_stmt|;
name|JpaFieldResult
name|fr12
init|=
name|frIt1
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"field2"
argument_list|,
name|fr12
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"column2"
argument_list|,
name|fr12
operator|.
name|getColumn
argument_list|()
argument_list|)
expr_stmt|;
name|JpaEntityResult
name|er2
init|=
name|erIt
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cayenne.jpa.entity.MockEntityY"
argument_list|,
name|er2
operator|.
name|getEntityClassName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"column2"
argument_list|,
name|er2
operator|.
name|getDiscriminatorColumn
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|er2
operator|.
name|getFieldResults
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|JpaFieldResult
argument_list|>
name|frIt2
init|=
name|er2
operator|.
name|getFieldResults
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|JpaFieldResult
name|fr21
init|=
name|frIt2
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"field3"
argument_list|,
name|fr21
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"column3"
argument_list|,
name|fr21
operator|.
name|getColumn
argument_list|()
argument_list|)
expr_stmt|;
name|JpaFieldResult
name|fr22
init|=
name|frIt2
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"field4"
argument_list|,
name|fr22
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"column4"
argument_list|,
name|fr22
operator|.
name|getColumn
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|mapping
operator|.
name|getColumnResults
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|JpaColumnResult
argument_list|>
name|crIt
init|=
name|mapping
operator|.
name|getColumnResults
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"column-result1"
argument_list|,
name|crIt
operator|.
name|next
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"column-result2"
argument_list|,
name|crIt
operator|.
name|next
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|assertEntityListeners
parameter_list|(
name|JpaEntityListeners
name|listeners
parameter_list|)
block|{
name|assertNotNull
argument_list|(
name|listeners
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|listeners
operator|.
name|getEntityListeners
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|JpaEntityListener
argument_list|>
name|elIt
init|=
name|listeners
operator|.
name|getEntityListeners
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|JpaEntityListener
name|listener1
init|=
name|elIt
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cayenne.jpa.entity.MockEntityListener1"
argument_list|,
name|listener1
operator|.
name|getClassName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|listener1
operator|.
name|getPrePersist
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"prePersist"
argument_list|,
name|listener1
operator|.
name|getPrePersist
argument_list|()
operator|.
name|getMethodName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|listener1
operator|.
name|getPostPersist
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"postPersist"
argument_list|,
name|listener1
operator|.
name|getPostPersist
argument_list|()
operator|.
name|getMethodName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|listener1
operator|.
name|getPreUpdate
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"preUpdate"
argument_list|,
name|listener1
operator|.
name|getPreUpdate
argument_list|()
operator|.
name|getMethodName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|listener1
operator|.
name|getPostUpdate
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"postUpdate"
argument_list|,
name|listener1
operator|.
name|getPostUpdate
argument_list|()
operator|.
name|getMethodName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|listener1
operator|.
name|getPreRemove
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"preRemove"
argument_list|,
name|listener1
operator|.
name|getPreRemove
argument_list|()
operator|.
name|getMethodName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|listener1
operator|.
name|getPostRemove
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"postRemove"
argument_list|,
name|listener1
operator|.
name|getPostRemove
argument_list|()
operator|.
name|getMethodName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|listener1
operator|.
name|getPostLoad
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"postLoad"
argument_list|,
name|listener1
operator|.
name|getPostLoad
argument_list|()
operator|.
name|getMethodName
argument_list|()
argument_list|)
expr_stmt|;
name|JpaEntityListener
name|listener2
init|=
name|elIt
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cayenne.jpa.entity.MockEntityListener2"
argument_list|,
name|listener2
operator|.
name|getClassName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|listener2
operator|.
name|getPrePersist
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|listener2
operator|.
name|getPostPersist
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"postPersist"
argument_list|,
name|listener2
operator|.
name|getPostPersist
argument_list|()
operator|.
name|getMethodName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|listener2
operator|.
name|getPreUpdate
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|listener2
operator|.
name|getPostUpdate
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|listener2
operator|.
name|getPreRemove
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|listener2
operator|.
name|getPostRemove
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|listener2
operator|.
name|getPostLoad
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|assertId
parameter_list|(
name|JpaId
name|id
parameter_list|)
block|{
name|assertEquals
argument_list|(
literal|"id1"
argument_list|,
name|id
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|id
operator|.
name|getColumn
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"id_column"
argument_list|,
name|id
operator|.
name|getColumn
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
literal|"Expected null, got: "
operator|+
name|id
operator|.
name|getColumn
argument_list|()
operator|.
name|getColumnDefinition
argument_list|()
argument_list|,
name|id
operator|.
name|getColumn
argument_list|()
operator|.
name|getColumnDefinition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"id_table"
argument_list|,
name|id
operator|.
name|getColumn
argument_list|()
operator|.
name|getTable
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|3
argument_list|,
name|id
operator|.
name|getColumn
argument_list|()
operator|.
name|getLength
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|4
argument_list|,
name|id
operator|.
name|getColumn
argument_list|()
operator|.
name|getPrecision
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|id
operator|.
name|getColumn
argument_list|()
operator|.
name|getScale
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|id
operator|.
name|getColumn
argument_list|()
operator|.
name|isInsertable
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|id
operator|.
name|getColumn
argument_list|()
operator|.
name|isNullable
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|id
operator|.
name|getColumn
argument_list|()
operator|.
name|isUnique
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|id
operator|.
name|getColumn
argument_list|()
operator|.
name|isUpdatable
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|id
operator|.
name|getGeneratedValue
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|GenerationType
operator|.
name|SEQUENCE
argument_list|,
name|id
operator|.
name|getGeneratedValue
argument_list|()
operator|.
name|getStrategy
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"id-generator"
argument_list|,
name|id
operator|.
name|getGeneratedValue
argument_list|()
operator|.
name|getGenerator
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|TemporalType
operator|.
name|TIME
argument_list|,
name|id
operator|.
name|getTemporal
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|assertEmbeddedId
parameter_list|(
name|JpaEmbeddedId
name|id
parameter_list|)
block|{
name|assertNotNull
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"embeddedId"
argument_list|,
name|id
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|id
operator|.
name|getAttributeOverrides
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|List
argument_list|<
name|JpaAttributeOverride
argument_list|>
name|overrides
init|=
operator|new
name|ArrayList
argument_list|<
name|JpaAttributeOverride
argument_list|>
argument_list|(
name|id
operator|.
name|getAttributeOverrides
argument_list|()
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"attribute1"
argument_list|,
name|overrides
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ao_column1"
argument_list|,
name|overrides
operator|.
name|get
argument_list|(
literal|0
argument_list|)
operator|.
name|getColumn
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"attribute2"
argument_list|,
name|overrides
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ao_column2"
argument_list|,
name|overrides
operator|.
name|get
argument_list|(
literal|1
argument_list|)
operator|.
name|getColumn
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|assertMappedSuperclass1
parameter_list|(
name|JpaMappedSuperclass
name|mappedSuperclass1
parameter_list|)
block|{
name|assertNotNull
argument_list|(
name|mappedSuperclass1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cayenne.jpa.entity.MockMappedSuperclass1"
argument_list|,
name|mappedSuperclass1
operator|.
name|getClassName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|mappedSuperclass1
operator|.
name|getIdClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cayenne.jpa.entity.MockIdClass"
argument_list|,
name|mappedSuperclass1
operator|.
name|getIdClass
argument_list|()
operator|.
name|getClassName
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|mappedSuperclass1
operator|.
name|isExcludeDefaultListeners
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|mappedSuperclass1
operator|.
name|isExcludeSuperclassListeners
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|mappedSuperclass1
operator|.
name|getEntityListeners
argument_list|()
argument_list|)
expr_stmt|;
name|JpaEntityListeners
name|listeners
init|=
name|mappedSuperclass1
operator|.
name|getEntityListeners
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|listeners
operator|.
name|getEntityListeners
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|JpaEntityListener
argument_list|>
name|elIt
init|=
name|listeners
operator|.
name|getEntityListeners
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cayenne.jpa.entity.MockEntityListener1"
argument_list|,
name|elIt
operator|.
name|next
argument_list|()
operator|.
name|getClassName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|mappedSuperclass1
operator|.
name|getPrePersist
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"eprePersist"
argument_list|,
name|mappedSuperclass1
operator|.
name|getPrePersist
argument_list|()
operator|.
name|getMethodName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|mappedSuperclass1
operator|.
name|getPostPersist
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"epostPersist"
argument_list|,
name|mappedSuperclass1
operator|.
name|getPostPersist
argument_list|()
operator|.
name|getMethodName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|mappedSuperclass1
operator|.
name|getPreUpdate
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"epreUpdate"
argument_list|,
name|mappedSuperclass1
operator|.
name|getPreUpdate
argument_list|()
operator|.
name|getMethodName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|mappedSuperclass1
operator|.
name|getPostUpdate
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"epostUpdate"
argument_list|,
name|mappedSuperclass1
operator|.
name|getPostUpdate
argument_list|()
operator|.
name|getMethodName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|mappedSuperclass1
operator|.
name|getPreRemove
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"epreRemove"
argument_list|,
name|mappedSuperclass1
operator|.
name|getPreRemove
argument_list|()
operator|.
name|getMethodName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|mappedSuperclass1
operator|.
name|getPostRemove
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"epostRemove"
argument_list|,
name|mappedSuperclass1
operator|.
name|getPostRemove
argument_list|()
operator|.
name|getMethodName
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|mappedSuperclass1
operator|.
name|getPostLoad
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"epostLoad"
argument_list|,
name|mappedSuperclass1
operator|.
name|getPostLoad
argument_list|()
operator|.
name|getMethodName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|assertMappedSuperclass2
parameter_list|(
name|JpaMappedSuperclass
name|mappedSuperclass2
parameter_list|)
block|{
name|assertNotNull
argument_list|(
name|mappedSuperclass2
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cayenne.jpa.entity.MockMappedSuperclass2"
argument_list|,
name|mappedSuperclass2
operator|.
name|getClassName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|assertMappedSuperclass3
parameter_list|(
name|JpaMappedSuperclass
name|mappedSuperclass3
parameter_list|)
block|{
name|assertNotNull
argument_list|(
name|mappedSuperclass3
operator|.
name|getAttributes
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|16
argument_list|,
name|mappedSuperclass3
operator|.
name|getAttributes
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertAttributes
argument_list|(
name|mappedSuperclass3
operator|.
name|getAttributes
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|void
name|assertAttributes
parameter_list|(
name|JpaAttributes
name|attributes
parameter_list|)
block|{
comment|// BASIC
name|assertEquals
argument_list|(
literal|5
argument_list|,
name|attributes
operator|.
name|getBasicAttributes
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|JpaBasic
name|a0
init|=
name|attributes
operator|.
name|getBasicAttribute
argument_list|(
literal|"attribute1"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"attribute1"
argument_list|,
name|a0
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|a0
operator|.
name|isOptional
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|FetchType
operator|.
name|EAGER
argument_list|,
name|a0
operator|.
name|getFetch
argument_list|()
argument_list|)
expr_stmt|;
comment|// LOB
name|assertNotNull
argument_list|(
name|attributes
operator|.
name|getBasicAttribute
argument_list|(
literal|"attribute12"
argument_list|)
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|attributes
operator|.
name|getBasicAttribute
argument_list|(
literal|"attribute12"
argument_list|)
operator|.
name|isLob
argument_list|()
argument_list|)
expr_stmt|;
comment|// VERSION
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|attributes
operator|.
name|getVersionAttributes
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|JpaVersion
name|a1
init|=
name|attributes
operator|.
name|getVersionAttributes
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"attribute2"
argument_list|,
name|a1
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
comment|// ONE-TO_ONE
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|attributes
operator|.
name|getOneToOneRelationships
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|JpaOneToOne
name|a2
init|=
name|attributes
operator|.
name|getOneToOneRelationship
argument_list|(
literal|"attribute3"
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
literal|"attribute3"
argument_list|,
name|a2
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cayenne.jpa.entity.MockTargetEntity1"
argument_list|,
name|a2
operator|.
name|getTargetEntityName
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|a2
operator|.
name|isOptional
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|FetchType
operator|.
name|LAZY
argument_list|,
name|a2
operator|.
name|getFetch
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"mb1"
argument_list|,
name|a2
operator|.
name|getMappedBy
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|a2
operator|.
name|getCascade
argument_list|()
argument_list|)
expr_stmt|;
name|Collection
argument_list|<
name|CascadeType
argument_list|>
name|cascades
init|=
name|a2
operator|.
name|getCascade
argument_list|()
operator|.
name|getCascades
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|cascades
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|CascadeType
argument_list|>
name|cascades1It
init|=
name|cascades
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|assertSame
argument_list|(
name|CascadeType
operator|.
name|REMOVE
argument_list|,
name|cascades1It
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|CascadeType
operator|.
name|REFRESH
argument_list|,
name|cascades1It
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
comment|// ONE-TO-MANY
name|assertTrue
argument_list|(
name|attributes
operator|.
name|getOneToManyRelationships
argument_list|()
operator|.
name|size
argument_list|()
operator|>
literal|0
argument_list|)
expr_stmt|;
name|JpaOneToMany
name|a3
init|=
name|attributes
operator|.
name|getOneToManyRelationships
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"attribute4"
argument_list|,
name|a3
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"org.apache.cayenne.jpa.entity.MockTargetEntity2"
argument_list|,
name|a3
operator|.
name|getTargetEntityName
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|FetchType
operator|.
name|LAZY
argument_list|,
name|a3
operator|.
name|getFetch
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"mb2"
argument_list|,
name|a3
operator|.
name|getMappedBy
argument_list|()
argument_list|)
expr_stmt|;
name|assertNotNull
argument_list|(
name|a3
operator|.
name|getCascade
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|a3
operator|.
name|getCascade
argument_list|()
operator|.
name|getCascades
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|Iterator
argument_list|<
name|CascadeType
argument_list|>
name|cascades2It
init|=
name|a3
operator|.
name|getCascade
argument_list|()
operator|.
name|getCascades
argument_list|()
operator|.
name|iterator
argument_list|()
decl_stmt|;
name|assertSame
argument_list|(
name|CascadeType
operator|.
name|PERSIST
argument_list|,
name|cascades2It
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|CascadeType
operator|.
name|MERGE
argument_list|,
name|cascades2It
operator|.
name|next
argument_list|()
argument_list|)
expr_stmt|;
comment|// JOIN COLUMN
name|JpaOneToMany
name|a9
init|=
name|attributes
operator|.
name|getOneToManyRelationship
argument_list|(
literal|"attribute10"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|a9
operator|.
name|getJoinColumns
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|a9
operator|.
name|getJoinColumns
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|JpaJoinColumn
name|joinColumn
init|=
name|a9
operator|.
name|getJoinColumns
argument_list|()
operator|.
name|iterator
argument_list|()
operator|.
name|next
argument_list|()
decl_stmt|;
name|assertEquals
argument_list|(
literal|"join-column-10"
argument_list|,
name|joinColumn
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"x-def"
argument_list|,
name|joinColumn
operator|.
name|getColumnDefinition
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"x-ref"
argument_list|,
name|joinColumn
operator|.
name|getReferencedColumnName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"jt1"
argument_list|,
name|joinColumn
operator|.
name|getTable
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|joinColumn
operator|.
name|isInsertable
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|joinColumn
operator|.
name|isNullable
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|joinColumn
operator|.
name|isUnique
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|joinColumn
operator|.
name|isUpdatable
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

