begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|entity
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|AttributeOverride
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|AttributeOverrides
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Column
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Entity
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Inheritance
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|InheritanceType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|PrimaryKeyJoinColumn
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|PrimaryKeyJoinColumns
import|;
end_import

begin_class
annotation|@
name|Entity
argument_list|(
name|name
operator|=
literal|"MockEntity2"
argument_list|)
annotation|@
name|PrimaryKeyJoinColumns
argument_list|(
name|value
operator|=
block|{
annotation|@
name|PrimaryKeyJoinColumn
argument_list|(
name|name
operator|=
literal|"pk_column1"
argument_list|,
name|referencedColumnName
operator|=
literal|"super_column1"
argument_list|,
name|columnDefinition
operator|=
literal|"count(1)"
argument_list|)
block|,
annotation|@
name|PrimaryKeyJoinColumn
argument_list|(
name|name
operator|=
literal|"pk_column2"
argument_list|)
block|}
argument_list|)
annotation|@
name|Inheritance
argument_list|(
name|strategy
operator|=
name|InheritanceType
operator|.
name|JOINED
argument_list|)
annotation|@
name|AttributeOverrides
argument_list|(
name|value
operator|=
block|{
annotation|@
name|AttributeOverride
argument_list|(
name|name
operator|=
literal|"attribute1"
argument_list|,
name|column
operator|=
annotation|@
name|Column
argument_list|(
name|name
operator|=
literal|"ao_column1"
argument_list|,
name|unique
operator|=
literal|true
argument_list|,
name|nullable
operator|=
literal|true
argument_list|,
name|insertable
operator|=
literal|true
argument_list|,
name|updatable
operator|=
literal|true
argument_list|,
name|columnDefinition
operator|=
literal|"count(1)"
argument_list|,
name|table
operator|=
literal|"ao_table1"
argument_list|,
name|length
operator|=
literal|3
argument_list|,
name|precision
operator|=
literal|4
argument_list|,
name|scale
operator|=
literal|5
argument_list|)
argument_list|)
block|,
annotation|@
name|AttributeOverride
argument_list|(
name|name
operator|=
literal|"attribute2"
argument_list|,
name|column
operator|=
annotation|@
name|Column
argument_list|(
name|name
operator|=
literal|"ao_column2"
argument_list|,
name|unique
operator|=
literal|true
argument_list|,
name|nullable
operator|=
literal|true
argument_list|,
name|insertable
operator|=
literal|true
argument_list|,
name|updatable
operator|=
literal|true
argument_list|,
name|columnDefinition
operator|=
literal|"count(1)"
argument_list|,
name|table
operator|=
literal|"ao_table1"
argument_list|,
name|length
operator|=
literal|3
argument_list|,
name|precision
operator|=
literal|4
argument_list|,
name|scale
operator|=
literal|5
argument_list|)
argument_list|)
block|}
argument_list|)
specifier|public
class|class
name|MockEntity2
block|{  }
end_class

end_unit

