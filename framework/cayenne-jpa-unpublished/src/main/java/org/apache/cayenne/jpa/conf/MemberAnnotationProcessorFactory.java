begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|conf
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|AnnotatedElement
import|;
end_import

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|Member
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|AssociationOverride
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|AssociationOverrides
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|AttributeOverride
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|AttributeOverrides
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Basic
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Column
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|EnumType
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Enumerated
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|GeneratedValue
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|JoinColumn
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|JoinColumns
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|JoinTable
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|ManyToMany
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|ManyToOne
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|MapKey
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|OneToMany
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|OneToOne
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|OrderBy
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Temporal
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|TemporalType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaAssociationOverride
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaAttributeOverride
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaBasic
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaColumn
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaEmbedded
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaEmbeddedId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaGeneratedValue
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaJoinColumn
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaJoinTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaManagedClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaManyToMany
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaManyToOne
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaOneToMany
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaOneToOne
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaTransient
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaVersion
import|;
end_import

begin_comment
comment|/**  * A factory of member annotation processors.  *   */
end_comment

begin_class
class|class
name|MemberAnnotationProcessorFactory
extends|extends
name|AnnotationProcessorFactory
block|{
comment|// superclass of the top-level member annotations
specifier|abstract
specifier|static
class|class
name|L1Processor
implements|implements
name|AnnotationProcessor
block|{
specifier|public
name|void
name|onStartElement
parameter_list|(
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|Object
name|parent
init|=
name|context
operator|.
name|peek
argument_list|()
decl_stmt|;
if|if
condition|(
name|parent
operator|instanceof
name|JpaManagedClass
condition|)
block|{
name|onManagedClass
argument_list|(
operator|(
name|JpaManagedClass
operator|)
name|parent
argument_list|,
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|parent
operator|instanceof
name|JpaAttribute
condition|)
block|{
name|onAttribute
argument_list|(
operator|(
name|JpaAttribute
operator|)
name|parent
argument_list|,
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|recordUnsupportedAnnotation
argument_list|(
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**          * Does nothing by default. Any elements that push themselves on stack in the          * start method, must pop the stack here.          */
specifier|public
name|void
name|onFinishElement
parameter_list|(
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
block|}
name|void
name|onManagedClass
parameter_list|(
name|JpaManagedClass
name|managedClass
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|recordUnsupportedAnnotation
argument_list|(
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
name|void
name|onAttribute
parameter_list|(
name|JpaAttribute
name|attribute
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|recordUnsupportedAnnotation
argument_list|(
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
name|void
name|recordUnsupportedAnnotation
parameter_list|(
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|context
operator|.
name|recordConflict
argument_list|(
name|element
argument_list|,
name|AnnotationProcessorFactory
operator|.
name|annotationClass
argument_list|(
name|getClass
argument_list|()
argument_list|)
argument_list|,
literal|"Unsupported in this context"
argument_list|)
expr_stmt|;
block|}
block|}
comment|// superclass of the second-level member annotations
specifier|abstract
specifier|static
class|class
name|L2Processor
implements|implements
name|AnnotationProcessor
block|{
specifier|public
name|void
name|onStartElement
parameter_list|(
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|JpaAttribute
name|attribute
init|=
literal|null
decl_stmt|;
name|Object
name|parent
init|=
name|context
operator|.
name|peek
argument_list|()
decl_stmt|;
if|if
condition|(
name|parent
operator|instanceof
name|JpaAttribute
condition|)
block|{
name|attribute
operator|=
operator|(
name|JpaAttribute
operator|)
name|parent
expr_stmt|;
block|}
else|else
block|{
name|attribute
operator|=
name|findOrCreateAttribute
argument_list|(
name|element
argument_list|,
name|parent
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|parent
operator|!=
literal|null
condition|)
block|{
name|onAttribute
argument_list|(
name|attribute
argument_list|,
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|recordUnsupportedAnnotation
argument_list|(
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
block|}
name|JpaAttribute
name|findOrCreateAttribute
parameter_list|(
name|AnnotatedElement
name|element
parameter_list|,
name|Object
name|parent
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|JpaBasic
name|basic
init|=
literal|null
decl_stmt|;
if|if
condition|(
name|parent
operator|instanceof
name|JpaManagedClass
condition|)
block|{
name|JpaManagedClass
name|managedClass
init|=
operator|(
name|JpaManagedClass
operator|)
name|parent
decl_stmt|;
name|String
name|name
init|=
operator|(
operator|(
name|Member
operator|)
name|element
operator|)
operator|.
name|getName
argument_list|()
decl_stmt|;
name|basic
operator|=
name|managedClass
operator|.
name|getAttributes
argument_list|()
operator|.
name|getBasicAttribute
argument_list|(
name|name
argument_list|)
expr_stmt|;
if|if
condition|(
name|basic
operator|==
literal|null
condition|)
block|{
name|basic
operator|=
operator|new
name|JpaBasic
argument_list|()
expr_stmt|;
comment|// do push/pop as the context does some required injection
name|context
operator|.
name|push
argument_list|(
name|basic
argument_list|)
expr_stmt|;
name|context
operator|.
name|pop
argument_list|()
expr_stmt|;
name|managedClass
operator|.
name|getAttributes
argument_list|()
operator|.
name|getBasicAttributes
argument_list|()
operator|.
name|add
argument_list|(
name|basic
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|basic
return|;
block|}
comment|/**          * Does nothing by default. Any elements that push themselves on stack in the          * start method, must pop the stack here.          */
specifier|public
name|void
name|onFinishElement
parameter_list|(
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
block|}
name|void
name|onAttribute
parameter_list|(
name|JpaAttribute
name|attribute
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|recordUnsupportedAnnotation
argument_list|(
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
name|void
name|recordUnsupportedAnnotation
parameter_list|(
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|context
operator|.
name|recordConflict
argument_list|(
name|element
argument_list|,
name|AnnotationProcessorFactory
operator|.
name|annotationClass
argument_list|(
name|getClass
argument_list|()
argument_list|)
argument_list|,
literal|"Unsupported in this context"
argument_list|)
expr_stmt|;
block|}
block|}
specifier|static
specifier|final
class|class
name|AssociationOverrideProcessor
extends|extends
name|L1Processor
block|{
annotation|@
name|Override
name|void
name|onManagedClass
parameter_list|(
name|JpaManagedClass
name|managedClass
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
if|if
condition|(
name|managedClass
operator|instanceof
name|JpaEntity
condition|)
block|{
name|JpaAssociationOverride
name|override
init|=
operator|new
name|JpaAssociationOverride
argument_list|(
name|element
operator|.
name|getAnnotation
argument_list|(
name|AssociationOverride
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
operator|(
operator|(
name|JpaEntity
operator|)
name|managedClass
operator|)
operator|.
name|getAssociationOverrides
argument_list|()
operator|.
name|add
argument_list|(
name|override
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|super
operator|.
name|onManagedClass
argument_list|(
name|managedClass
argument_list|,
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|static
specifier|final
class|class
name|AssociationOverridesProcessor
extends|extends
name|L1Processor
block|{
annotation|@
name|Override
name|void
name|onManagedClass
parameter_list|(
name|JpaManagedClass
name|managedClass
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
if|if
condition|(
name|managedClass
operator|instanceof
name|JpaEntity
condition|)
block|{
name|AssociationOverrides
name|overrides
init|=
name|element
operator|.
name|getAnnotation
argument_list|(
name|AssociationOverrides
operator|.
name|class
argument_list|)
decl_stmt|;
for|for
control|(
name|AssociationOverride
name|overrideAnnotation
range|:
name|overrides
operator|.
name|value
argument_list|()
control|)
block|{
name|JpaAssociationOverride
name|override
init|=
operator|new
name|JpaAssociationOverride
argument_list|(
name|overrideAnnotation
argument_list|)
decl_stmt|;
operator|(
operator|(
name|JpaEntity
operator|)
name|managedClass
operator|)
operator|.
name|getAssociationOverrides
argument_list|()
operator|.
name|add
argument_list|(
name|override
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|super
operator|.
name|onManagedClass
argument_list|(
name|managedClass
argument_list|,
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|static
specifier|final
class|class
name|AttributeOverrideProcessor
extends|extends
name|L1Processor
block|{
annotation|@
name|Override
name|void
name|onAttribute
parameter_list|(
name|JpaAttribute
name|attribute
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
if|if
condition|(
name|attribute
operator|instanceof
name|JpaEmbeddedId
condition|)
block|{
name|JpaAttributeOverride
name|override
init|=
operator|new
name|JpaAttributeOverride
argument_list|(
name|element
operator|.
name|getAnnotation
argument_list|(
name|AttributeOverride
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
operator|(
operator|(
name|JpaEmbeddedId
operator|)
name|attribute
operator|)
operator|.
name|getAttributeOverrides
argument_list|()
operator|.
name|add
argument_list|(
name|override
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|super
operator|.
name|onAttribute
argument_list|(
name|attribute
argument_list|,
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|static
specifier|final
class|class
name|AttributeOverridesProcessor
extends|extends
name|L1Processor
block|{
annotation|@
name|Override
name|void
name|onAttribute
parameter_list|(
name|JpaAttribute
name|attribute
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
if|if
condition|(
name|attribute
operator|instanceof
name|JpaEmbeddedId
condition|)
block|{
name|AttributeOverrides
name|overrides
init|=
name|element
operator|.
name|getAnnotation
argument_list|(
name|AttributeOverrides
operator|.
name|class
argument_list|)
decl_stmt|;
for|for
control|(
name|AttributeOverride
name|overrideAnnotation
range|:
name|overrides
operator|.
name|value
argument_list|()
control|)
block|{
name|JpaAttributeOverride
name|override
init|=
operator|new
name|JpaAttributeOverride
argument_list|(
name|overrideAnnotation
argument_list|)
decl_stmt|;
operator|(
operator|(
name|JpaEmbeddedId
operator|)
name|attribute
operator|)
operator|.
name|getAttributeOverrides
argument_list|()
operator|.
name|add
argument_list|(
name|override
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
name|super
operator|.
name|onAttribute
argument_list|(
name|attribute
argument_list|,
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|static
specifier|final
class|class
name|BasicProcessor
extends|extends
name|L1Processor
block|{
annotation|@
name|Override
name|void
name|onManagedClass
parameter_list|(
name|JpaManagedClass
name|managedClass
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|JpaBasic
name|attribute
init|=
operator|new
name|JpaBasic
argument_list|(
name|element
operator|.
name|getAnnotation
argument_list|(
name|Basic
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|managedClass
operator|.
name|getAttributes
argument_list|()
operator|.
name|getBasicAttributes
argument_list|()
operator|.
name|add
argument_list|(
name|attribute
argument_list|)
expr_stmt|;
name|context
operator|.
name|push
argument_list|(
name|attribute
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
name|void
name|onAttribute
parameter_list|(
name|JpaAttribute
name|attribute
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
if|if
condition|(
operator|!
operator|(
name|attribute
operator|instanceof
name|JpaBasic
operator|)
condition|)
block|{
name|super
operator|.
name|onAttribute
argument_list|(
name|attribute
argument_list|,
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFinishElement
parameter_list|(
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|Object
name|pop
init|=
name|context
operator|.
name|pop
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|pop
operator|instanceof
name|JpaBasic
operator|)
condition|)
block|{
name|context
operator|.
name|push
argument_list|(
name|pop
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|static
specifier|final
class|class
name|ColumnProcessor
extends|extends
name|L2Processor
block|{
annotation|@
name|Override
name|void
name|onAttribute
parameter_list|(
name|JpaAttribute
name|attribute
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|JpaColumn
name|column
init|=
operator|new
name|JpaColumn
argument_list|(
name|element
operator|.
name|getAnnotation
argument_list|(
name|Column
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|attribute
operator|instanceof
name|JpaBasic
condition|)
block|{
operator|(
operator|(
name|JpaBasic
operator|)
name|attribute
operator|)
operator|.
name|setColumn
argument_list|(
name|column
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|attribute
operator|instanceof
name|JpaVersion
condition|)
block|{
operator|(
operator|(
name|JpaVersion
operator|)
name|attribute
operator|)
operator|.
name|setColumn
argument_list|(
name|column
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|attribute
operator|instanceof
name|JpaId
condition|)
block|{
operator|(
operator|(
name|JpaId
operator|)
name|attribute
operator|)
operator|.
name|setColumn
argument_list|(
name|column
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|super
operator|.
name|onAttribute
argument_list|(
name|attribute
argument_list|,
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|static
specifier|final
class|class
name|EmbeddedProcessor
extends|extends
name|L1Processor
block|{
annotation|@
name|Override
name|void
name|onManagedClass
parameter_list|(
name|JpaManagedClass
name|managedClass
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|JpaEmbedded
name|attribute
init|=
operator|new
name|JpaEmbedded
argument_list|()
decl_stmt|;
name|managedClass
operator|.
name|getAttributes
argument_list|()
operator|.
name|getEmbeddedAttributes
argument_list|()
operator|.
name|add
argument_list|(
name|attribute
argument_list|)
expr_stmt|;
name|context
operator|.
name|push
argument_list|(
name|attribute
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
name|void
name|onAttribute
parameter_list|(
name|JpaAttribute
name|attribute
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
if|if
condition|(
operator|!
operator|(
name|attribute
operator|instanceof
name|JpaEmbedded
operator|)
condition|)
block|{
name|super
operator|.
name|onAttribute
argument_list|(
name|attribute
argument_list|,
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFinishElement
parameter_list|(
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|Object
name|pop
init|=
name|context
operator|.
name|pop
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|pop
operator|instanceof
name|JpaEmbedded
operator|)
condition|)
block|{
name|context
operator|.
name|push
argument_list|(
name|pop
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|static
specifier|final
class|class
name|EmbeddedIdProcessor
extends|extends
name|L1Processor
block|{
annotation|@
name|Override
name|void
name|onManagedClass
parameter_list|(
name|JpaManagedClass
name|managedClass
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|JpaEmbeddedId
name|id
init|=
operator|new
name|JpaEmbeddedId
argument_list|()
decl_stmt|;
name|managedClass
operator|.
name|getAttributes
argument_list|()
operator|.
name|setEmbeddedId
argument_list|(
name|id
argument_list|)
expr_stmt|;
name|context
operator|.
name|push
argument_list|(
name|id
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
name|void
name|onAttribute
parameter_list|(
name|JpaAttribute
name|attribute
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
if|if
condition|(
name|attribute
operator|instanceof
name|JpaEmbeddedId
condition|)
block|{
comment|// was created implictly by another annotation
block|}
else|else
block|{
name|super
operator|.
name|onAttribute
argument_list|(
name|attribute
argument_list|,
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFinishElement
parameter_list|(
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|Object
name|pop
init|=
name|context
operator|.
name|pop
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|pop
operator|instanceof
name|JpaEmbeddedId
operator|)
condition|)
block|{
name|context
operator|.
name|push
argument_list|(
name|pop
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|static
specifier|final
class|class
name|EnumeratedProcessor
extends|extends
name|L2Processor
block|{
annotation|@
name|Override
name|void
name|onAttribute
parameter_list|(
name|JpaAttribute
name|attribute
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
if|if
condition|(
name|attribute
operator|instanceof
name|JpaBasic
condition|)
block|{
name|EnumType
name|enumType
init|=
name|element
operator|.
name|getAnnotation
argument_list|(
name|Enumerated
operator|.
name|class
argument_list|)
operator|.
name|value
argument_list|()
decl_stmt|;
operator|(
operator|(
name|JpaBasic
operator|)
name|attribute
operator|)
operator|.
name|setEnumerated
argument_list|(
name|enumType
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|super
operator|.
name|onAttribute
argument_list|(
name|attribute
argument_list|,
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|static
specifier|final
class|class
name|GeneratedValueProcessor
extends|extends
name|L2Processor
block|{
annotation|@
name|Override
name|void
name|onAttribute
parameter_list|(
name|JpaAttribute
name|attribute
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
comment|// can only attach to id
if|if
condition|(
name|attribute
operator|instanceof
name|JpaId
condition|)
block|{
name|JpaGeneratedValue
name|generated
init|=
operator|new
name|JpaGeneratedValue
argument_list|(
name|element
operator|.
name|getAnnotation
argument_list|(
name|GeneratedValue
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
operator|(
operator|(
name|JpaId
operator|)
name|attribute
operator|)
operator|.
name|setGeneratedValue
argument_list|(
name|generated
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|super
operator|.
name|onAttribute
argument_list|(
name|attribute
argument_list|,
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|static
specifier|final
class|class
name|IdProcessor
extends|extends
name|L1Processor
block|{
annotation|@
name|Override
name|void
name|onManagedClass
parameter_list|(
name|JpaManagedClass
name|managedClass
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|JpaId
name|attribute
init|=
operator|new
name|JpaId
argument_list|()
decl_stmt|;
name|managedClass
operator|.
name|getAttributes
argument_list|()
operator|.
name|getIds
argument_list|()
operator|.
name|add
argument_list|(
name|attribute
argument_list|)
expr_stmt|;
name|context
operator|.
name|push
argument_list|(
name|attribute
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
name|void
name|onAttribute
parameter_list|(
name|JpaAttribute
name|attribute
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
if|if
condition|(
name|attribute
operator|instanceof
name|JpaId
condition|)
block|{
comment|// id was created implictly by another annotation
block|}
else|else
block|{
name|super
operator|.
name|onAttribute
argument_list|(
name|attribute
argument_list|,
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFinishElement
parameter_list|(
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|Object
name|pop
init|=
name|context
operator|.
name|pop
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|pop
operator|instanceof
name|JpaId
operator|)
condition|)
block|{
name|context
operator|.
name|push
argument_list|(
name|pop
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|static
specifier|final
class|class
name|JoinColumnProcessor
extends|extends
name|L2Processor
block|{
annotation|@
name|Override
name|void
name|onAttribute
parameter_list|(
name|JpaAttribute
name|attribute
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|JpaJoinColumn
name|joinColumn
init|=
operator|new
name|JpaJoinColumn
argument_list|(
name|element
operator|.
name|getAnnotation
argument_list|(
name|JoinColumn
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|attribute
operator|instanceof
name|JpaOneToMany
condition|)
block|{
operator|(
operator|(
name|JpaOneToMany
operator|)
name|attribute
operator|)
operator|.
name|getJoinColumns
argument_list|()
operator|.
name|add
argument_list|(
name|joinColumn
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|attribute
operator|instanceof
name|JpaOneToOne
condition|)
block|{
operator|(
operator|(
name|JpaOneToOne
operator|)
name|attribute
operator|)
operator|.
name|getJoinColumns
argument_list|()
operator|.
name|add
argument_list|(
name|joinColumn
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|attribute
operator|instanceof
name|JpaManyToOne
condition|)
block|{
operator|(
operator|(
name|JpaManyToOne
operator|)
name|attribute
operator|)
operator|.
name|getJoinColumns
argument_list|()
operator|.
name|add
argument_list|(
name|joinColumn
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|super
operator|.
name|onAttribute
argument_list|(
name|attribute
argument_list|,
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|static
specifier|final
class|class
name|JoinColumnsProcessor
extends|extends
name|L2Processor
block|{
annotation|@
name|Override
name|void
name|onAttribute
parameter_list|(
name|JpaAttribute
name|attribute
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|JoinColumn
index|[]
name|annotations
init|=
name|element
operator|.
name|getAnnotation
argument_list|(
name|JoinColumns
operator|.
name|class
argument_list|)
operator|.
name|value
argument_list|()
decl_stmt|;
name|Collection
argument_list|<
name|JpaJoinColumn
argument_list|>
name|joinColumns
init|=
operator|new
name|ArrayList
argument_list|<
name|JpaJoinColumn
argument_list|>
argument_list|(
name|annotations
operator|.
name|length
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|annotations
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|joinColumns
operator|.
name|add
argument_list|(
operator|new
name|JpaJoinColumn
argument_list|(
name|annotations
index|[
name|i
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|attribute
operator|instanceof
name|JpaOneToMany
condition|)
block|{
operator|(
operator|(
name|JpaOneToMany
operator|)
name|attribute
operator|)
operator|.
name|getJoinColumns
argument_list|()
operator|.
name|addAll
argument_list|(
name|joinColumns
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|attribute
operator|instanceof
name|JpaOneToOne
condition|)
block|{
operator|(
operator|(
name|JpaOneToOne
operator|)
name|attribute
operator|)
operator|.
name|getJoinColumns
argument_list|()
operator|.
name|addAll
argument_list|(
name|joinColumns
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|attribute
operator|instanceof
name|JpaManyToOne
condition|)
block|{
operator|(
operator|(
name|JpaManyToOne
operator|)
name|attribute
operator|)
operator|.
name|getJoinColumns
argument_list|()
operator|.
name|addAll
argument_list|(
name|joinColumns
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|super
operator|.
name|onAttribute
argument_list|(
name|attribute
argument_list|,
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|static
specifier|final
class|class
name|JoinTableProcessor
extends|extends
name|L2Processor
block|{
annotation|@
name|Override
name|void
name|onAttribute
parameter_list|(
name|JpaAttribute
name|attribute
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|JpaJoinTable
name|joinTable
init|=
operator|new
name|JpaJoinTable
argument_list|(
name|element
operator|.
name|getAnnotation
argument_list|(
name|JoinTable
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
if|if
condition|(
name|attribute
operator|instanceof
name|JpaOneToMany
condition|)
block|{
operator|(
operator|(
name|JpaOneToMany
operator|)
name|attribute
operator|)
operator|.
name|setJoinTable
argument_list|(
name|joinTable
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|attribute
operator|instanceof
name|JpaOneToOne
condition|)
block|{
operator|(
operator|(
name|JpaOneToOne
operator|)
name|attribute
operator|)
operator|.
name|setJoinTable
argument_list|(
name|joinTable
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|attribute
operator|instanceof
name|JpaManyToOne
condition|)
block|{
operator|(
operator|(
name|JpaManyToOne
operator|)
name|attribute
operator|)
operator|.
name|setJoinTable
argument_list|(
name|joinTable
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|attribute
operator|instanceof
name|JpaManyToMany
condition|)
block|{
operator|(
operator|(
name|JpaManyToMany
operator|)
name|attribute
operator|)
operator|.
name|setJoinTable
argument_list|(
name|joinTable
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|super
operator|.
name|onAttribute
argument_list|(
name|attribute
argument_list|,
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|static
specifier|final
class|class
name|LobProcessor
extends|extends
name|L2Processor
block|{
annotation|@
name|Override
name|void
name|onAttribute
parameter_list|(
name|JpaAttribute
name|attribute
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
if|if
condition|(
name|attribute
operator|instanceof
name|JpaBasic
condition|)
block|{
operator|(
operator|(
name|JpaBasic
operator|)
name|attribute
operator|)
operator|.
name|setLob
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|super
operator|.
name|onAttribute
argument_list|(
name|attribute
argument_list|,
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|static
specifier|final
class|class
name|ManyToManyProcessor
extends|extends
name|L1Processor
block|{
annotation|@
name|Override
name|void
name|onManagedClass
parameter_list|(
name|JpaManagedClass
name|managedClass
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|JpaManyToMany
name|attribute
init|=
operator|new
name|JpaManyToMany
argument_list|(
name|element
operator|.
name|getAnnotation
argument_list|(
name|ManyToMany
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|managedClass
operator|.
name|getAttributes
argument_list|()
operator|.
name|getManyToManyRelationships
argument_list|()
operator|.
name|add
argument_list|(
name|attribute
argument_list|)
expr_stmt|;
name|context
operator|.
name|push
argument_list|(
name|attribute
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
name|void
name|onAttribute
parameter_list|(
name|JpaAttribute
name|attribute
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
if|if
condition|(
operator|!
operator|(
name|attribute
operator|instanceof
name|JpaManyToMany
operator|)
condition|)
block|{
name|super
operator|.
name|onAttribute
argument_list|(
name|attribute
argument_list|,
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFinishElement
parameter_list|(
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|Object
name|pop
init|=
name|context
operator|.
name|pop
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|pop
operator|instanceof
name|JpaManyToMany
operator|)
condition|)
block|{
name|context
operator|.
name|push
argument_list|(
name|pop
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|static
specifier|final
class|class
name|ManyToOneProcessor
extends|extends
name|L1Processor
block|{
annotation|@
name|Override
name|void
name|onManagedClass
parameter_list|(
name|JpaManagedClass
name|managedClass
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|JpaManyToOne
name|attribute
init|=
operator|new
name|JpaManyToOne
argument_list|(
name|element
operator|.
name|getAnnotation
argument_list|(
name|ManyToOne
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|managedClass
operator|.
name|getAttributes
argument_list|()
operator|.
name|getManyToOneRelationships
argument_list|()
operator|.
name|add
argument_list|(
name|attribute
argument_list|)
expr_stmt|;
name|context
operator|.
name|push
argument_list|(
name|attribute
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
name|void
name|onAttribute
parameter_list|(
name|JpaAttribute
name|attribute
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
if|if
condition|(
operator|!
operator|(
name|attribute
operator|instanceof
name|JpaManyToMany
operator|)
condition|)
block|{
name|super
operator|.
name|onAttribute
argument_list|(
name|attribute
argument_list|,
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFinishElement
parameter_list|(
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|Object
name|pop
init|=
name|context
operator|.
name|pop
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|pop
operator|instanceof
name|JpaManyToOne
operator|)
condition|)
block|{
name|context
operator|.
name|push
argument_list|(
name|pop
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|static
specifier|final
class|class
name|MapKeyProcessor
extends|extends
name|L2Processor
block|{
annotation|@
name|Override
name|void
name|onAttribute
parameter_list|(
name|JpaAttribute
name|attribute
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|String
name|key
init|=
name|element
operator|.
name|getAnnotation
argument_list|(
name|MapKey
operator|.
name|class
argument_list|)
operator|.
name|name
argument_list|()
decl_stmt|;
if|if
condition|(
name|attribute
operator|instanceof
name|JpaOneToMany
condition|)
block|{
operator|(
operator|(
name|JpaOneToMany
operator|)
name|attribute
operator|)
operator|.
name|setMapKey
argument_list|(
name|key
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|attribute
operator|instanceof
name|JpaManyToMany
condition|)
block|{
operator|(
operator|(
name|JpaManyToMany
operator|)
name|attribute
operator|)
operator|.
name|setMapKey
argument_list|(
name|key
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|super
operator|.
name|onAttribute
argument_list|(
name|attribute
argument_list|,
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|static
specifier|final
class|class
name|OneToManyProcessor
extends|extends
name|L1Processor
block|{
annotation|@
name|Override
name|void
name|onManagedClass
parameter_list|(
name|JpaManagedClass
name|managedClass
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|JpaOneToMany
name|attribute
init|=
operator|new
name|JpaOneToMany
argument_list|(
name|element
operator|.
name|getAnnotation
argument_list|(
name|OneToMany
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|managedClass
operator|.
name|getAttributes
argument_list|()
operator|.
name|getOneToManyRelationships
argument_list|()
operator|.
name|add
argument_list|(
name|attribute
argument_list|)
expr_stmt|;
name|context
operator|.
name|push
argument_list|(
name|attribute
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
name|void
name|onAttribute
parameter_list|(
name|JpaAttribute
name|attribute
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
if|if
condition|(
operator|!
operator|(
name|attribute
operator|instanceof
name|JpaOneToMany
operator|)
condition|)
block|{
name|super
operator|.
name|onAttribute
argument_list|(
name|attribute
argument_list|,
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFinishElement
parameter_list|(
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|Object
name|pop
init|=
name|context
operator|.
name|pop
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|pop
operator|instanceof
name|JpaOneToMany
operator|)
condition|)
block|{
name|context
operator|.
name|push
argument_list|(
name|pop
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|static
specifier|final
class|class
name|OneToOneProcessor
extends|extends
name|L1Processor
block|{
annotation|@
name|Override
name|void
name|onManagedClass
parameter_list|(
name|JpaManagedClass
name|managedClass
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|JpaOneToOne
name|attribute
init|=
operator|new
name|JpaOneToOne
argument_list|(
name|element
operator|.
name|getAnnotation
argument_list|(
name|OneToOne
operator|.
name|class
argument_list|)
argument_list|)
decl_stmt|;
name|managedClass
operator|.
name|getAttributes
argument_list|()
operator|.
name|getOneToOneRelationships
argument_list|()
operator|.
name|add
argument_list|(
name|attribute
argument_list|)
expr_stmt|;
name|context
operator|.
name|push
argument_list|(
name|attribute
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
name|void
name|onAttribute
parameter_list|(
name|JpaAttribute
name|attribute
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
if|if
condition|(
operator|!
operator|(
name|attribute
operator|instanceof
name|JpaOneToOne
operator|)
condition|)
block|{
name|super
operator|.
name|onAttribute
argument_list|(
name|attribute
argument_list|,
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFinishElement
parameter_list|(
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|Object
name|pop
init|=
name|context
operator|.
name|pop
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|pop
operator|instanceof
name|JpaOneToOne
operator|)
condition|)
block|{
name|context
operator|.
name|push
argument_list|(
name|pop
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|static
specifier|final
class|class
name|OrderByProcessor
extends|extends
name|L2Processor
block|{
annotation|@
name|Override
name|void
name|onAttribute
parameter_list|(
name|JpaAttribute
name|attribute
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|String
name|order
init|=
name|element
operator|.
name|getAnnotation
argument_list|(
name|OrderBy
operator|.
name|class
argument_list|)
operator|.
name|value
argument_list|()
decl_stmt|;
if|if
condition|(
name|attribute
operator|instanceof
name|JpaOneToMany
condition|)
block|{
operator|(
operator|(
name|JpaOneToMany
operator|)
name|attribute
operator|)
operator|.
name|setOrderBy
argument_list|(
name|order
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|attribute
operator|instanceof
name|JpaManyToMany
condition|)
block|{
operator|(
operator|(
name|JpaManyToMany
operator|)
name|attribute
operator|)
operator|.
name|setOrderBy
argument_list|(
name|order
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|super
operator|.
name|onAttribute
argument_list|(
name|attribute
argument_list|,
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|static
specifier|final
class|class
name|TemporalProcessor
extends|extends
name|L2Processor
block|{
annotation|@
name|Override
name|void
name|onAttribute
parameter_list|(
name|JpaAttribute
name|attribute
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|TemporalType
name|value
init|=
name|element
operator|.
name|getAnnotation
argument_list|(
name|Temporal
operator|.
name|class
argument_list|)
operator|.
name|value
argument_list|()
decl_stmt|;
if|if
condition|(
name|attribute
operator|instanceof
name|JpaBasic
condition|)
block|{
operator|(
operator|(
name|JpaBasic
operator|)
name|attribute
operator|)
operator|.
name|setTemporal
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
comment|// according to the spec, only @Basic is compatibel with @Temporal, however
comment|// @Id and @Version also support it in the schema
if|else if
condition|(
name|attribute
operator|instanceof
name|JpaId
condition|)
block|{
operator|(
operator|(
name|JpaId
operator|)
name|attribute
operator|)
operator|.
name|setTemporal
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|attribute
operator|instanceof
name|JpaVersion
condition|)
block|{
operator|(
operator|(
name|JpaVersion
operator|)
name|attribute
operator|)
operator|.
name|setTemporal
argument_list|(
name|value
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|super
operator|.
name|onAttribute
argument_list|(
name|attribute
argument_list|,
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|static
specifier|final
class|class
name|TransientProcessor
extends|extends
name|L1Processor
block|{
annotation|@
name|Override
name|void
name|onManagedClass
parameter_list|(
name|JpaManagedClass
name|managedClass
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|JpaTransient
name|attribute
init|=
operator|new
name|JpaTransient
argument_list|()
decl_stmt|;
name|managedClass
operator|.
name|getAttributes
argument_list|()
operator|.
name|getTransientAttributes
argument_list|()
operator|.
name|add
argument_list|(
name|attribute
argument_list|)
expr_stmt|;
name|context
operator|.
name|push
argument_list|(
name|attribute
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
name|void
name|onAttribute
parameter_list|(
name|JpaAttribute
name|attribute
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
if|if
condition|(
operator|!
operator|(
name|attribute
operator|instanceof
name|JpaTransient
operator|)
condition|)
block|{
name|super
operator|.
name|onAttribute
argument_list|(
name|attribute
argument_list|,
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFinishElement
parameter_list|(
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|Object
name|pop
init|=
name|context
operator|.
name|pop
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|pop
operator|instanceof
name|JpaTransient
operator|)
condition|)
block|{
name|context
operator|.
name|push
argument_list|(
name|pop
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|static
specifier|final
class|class
name|VersionProcessor
extends|extends
name|L1Processor
block|{
annotation|@
name|Override
name|void
name|onManagedClass
parameter_list|(
name|JpaManagedClass
name|managedClass
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|JpaVersion
name|attribute
init|=
operator|new
name|JpaVersion
argument_list|()
decl_stmt|;
name|managedClass
operator|.
name|getAttributes
argument_list|()
operator|.
name|getVersionAttributes
argument_list|()
operator|.
name|add
argument_list|(
name|attribute
argument_list|)
expr_stmt|;
name|context
operator|.
name|push
argument_list|(
name|attribute
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
name|void
name|onAttribute
parameter_list|(
name|JpaAttribute
name|attribute
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
if|if
condition|(
operator|!
operator|(
name|attribute
operator|instanceof
name|JpaVersion
operator|)
condition|)
block|{
name|super
operator|.
name|onAttribute
argument_list|(
name|attribute
argument_list|,
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|onFinishElement
parameter_list|(
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|Object
name|pop
init|=
name|context
operator|.
name|pop
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
operator|(
name|pop
operator|instanceof
name|JpaVersion
operator|)
condition|)
block|{
name|context
operator|.
name|push
argument_list|(
name|pop
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
end_class

end_unit

