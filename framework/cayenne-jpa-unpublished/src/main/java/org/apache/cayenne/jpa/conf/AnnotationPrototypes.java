begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|conf
package|;
end_package

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Column
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|JoinColumn
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|JpaProviderException
import|;
end_import

begin_comment
comment|/**  * A utility class that provides access to default JPA annotation instances.  *   */
end_comment

begin_class
annotation|@
name|Table
specifier|abstract
class|class
name|AnnotationPrototypes
block|{
specifier|static
specifier|final
name|Column
name|column
decl_stmt|;
specifier|static
specifier|final
name|JoinColumn
name|joinColumn
decl_stmt|;
specifier|static
specifier|final
name|Table
name|table
decl_stmt|;
static|static
block|{
name|table
operator|=
name|AnnotationPrototypes
operator|.
name|class
operator|.
name|getAnnotation
argument_list|(
name|Table
operator|.
name|class
argument_list|)
expr_stmt|;
try|try
block|{
name|column
operator|=
name|AnnotationPrototypes
operator|.
name|class
operator|.
name|getDeclaredField
argument_list|(
literal|"annotatedColumn"
argument_list|)
operator|.
name|getAnnotation
argument_list|(
name|Column
operator|.
name|class
argument_list|)
expr_stmt|;
name|joinColumn
operator|=
name|AnnotationPrototypes
operator|.
name|class
operator|.
name|getDeclaredField
argument_list|(
literal|"annotatedJoinColumn"
argument_list|)
operator|.
name|getAnnotation
argument_list|(
name|JoinColumn
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|NoSuchFieldException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|JpaProviderException
argument_list|(
literal|"No annotated field found"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Column
name|Object
name|annotatedColumn
decl_stmt|;
annotation|@
name|JoinColumn
name|Object
name|annotatedJoinColumn
decl_stmt|;
specifier|public
specifier|static
name|Column
name|getColumn
parameter_list|()
block|{
return|return
name|column
return|;
block|}
specifier|public
specifier|static
name|JoinColumn
name|getJoinColumn
parameter_list|()
block|{
return|return
name|joinColumn
return|;
block|}
specifier|public
specifier|static
name|Table
name|getTable
parameter_list|()
block|{
return|return
name|table
return|;
block|}
block|}
end_class

end_unit

