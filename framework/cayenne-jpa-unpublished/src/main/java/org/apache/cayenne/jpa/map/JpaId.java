begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
package|;
end_package

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|Types
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|TemporalType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|dba
operator|.
name|TypesMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|util
operator|.
name|TreeNodeChild
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|util
operator|.
name|XMLEncoder
import|;
end_import

begin_class
specifier|public
class|class
name|JpaId
extends|extends
name|JpaAttribute
block|{
specifier|protected
name|JpaColumn
name|column
decl_stmt|;
specifier|protected
name|JpaGeneratedValue
name|generatedValue
decl_stmt|;
specifier|protected
name|TemporalType
name|temporal
decl_stmt|;
specifier|protected
name|JpaTableGenerator
name|tableGenerator
decl_stmt|;
specifier|protected
name|JpaSequenceGenerator
name|sequenceGenerator
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|encodeAsXML
parameter_list|(
name|XMLEncoder
name|encoder
parameter_list|)
block|{
name|encoder
operator|.
name|print
argument_list|(
literal|"<id"
argument_list|)
expr_stmt|;
if|if
condition|(
name|name
operator|!=
literal|null
condition|)
block|{
name|encoder
operator|.
name|print
argument_list|(
literal|" name=\""
operator|+
name|name
operator|+
literal|"\""
argument_list|)
expr_stmt|;
block|}
name|encoder
operator|.
name|println
argument_list|(
literal|'>'
argument_list|)
expr_stmt|;
name|encoder
operator|.
name|indent
argument_list|(
literal|1
argument_list|)
expr_stmt|;
if|if
condition|(
name|column
operator|!=
literal|null
condition|)
block|{
name|column
operator|.
name|encodeAsXML
argument_list|(
name|encoder
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|generatedValue
operator|!=
literal|null
condition|)
block|{
name|generatedValue
operator|.
name|encodeAsXML
argument_list|(
name|encoder
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|temporal
operator|!=
literal|null
condition|)
block|{
name|encoder
operator|.
name|println
argument_list|(
literal|"<temporal>"
operator|+
name|temporal
operator|.
name|name
argument_list|()
operator|+
literal|"</temporal>"
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|tableGenerator
operator|!=
literal|null
condition|)
block|{
name|tableGenerator
operator|.
name|encodeAsXML
argument_list|(
name|encoder
argument_list|)
expr_stmt|;
block|}
if|if
condition|(
name|sequenceGenerator
operator|!=
literal|null
condition|)
block|{
name|sequenceGenerator
operator|.
name|encodeAsXML
argument_list|(
name|encoder
argument_list|)
expr_stmt|;
block|}
name|encoder
operator|.
name|indent
argument_list|(
operator|-
literal|1
argument_list|)
expr_stmt|;
name|encoder
operator|.
name|println
argument_list|(
literal|"</id>"
argument_list|)
expr_stmt|;
block|}
comment|/**      * Returns default JDBC mapping for this basic attribute.      */
specifier|public
name|int
name|getDefaultJdbcType
parameter_list|()
block|{
if|if
condition|(
name|getTemporal
argument_list|()
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|TemporalType
operator|.
name|TIMESTAMP
operator|==
name|getTemporal
argument_list|()
condition|)
block|{
return|return
name|Types
operator|.
name|TIMESTAMP
return|;
block|}
if|else if
condition|(
name|TemporalType
operator|.
name|DATE
operator|==
name|getTemporal
argument_list|()
condition|)
block|{
return|return
name|Types
operator|.
name|DATE
return|;
block|}
else|else
block|{
return|return
name|Types
operator|.
name|TIME
return|;
block|}
block|}
else|else
block|{
return|return
name|TypesMapping
operator|.
name|getSqlTypeByJava
argument_list|(
name|getPropertyDescriptor
argument_list|()
operator|.
name|getType
argument_list|()
argument_list|)
return|;
block|}
block|}
annotation|@
name|TreeNodeChild
specifier|public
name|JpaColumn
name|getColumn
parameter_list|()
block|{
return|return
name|column
return|;
block|}
specifier|public
name|void
name|setColumn
parameter_list|(
name|JpaColumn
name|column
parameter_list|)
block|{
name|this
operator|.
name|column
operator|=
name|column
expr_stmt|;
block|}
annotation|@
name|TreeNodeChild
specifier|public
name|JpaGeneratedValue
name|getGeneratedValue
parameter_list|()
block|{
return|return
name|generatedValue
return|;
block|}
specifier|public
name|void
name|setGeneratedValue
parameter_list|(
name|JpaGeneratedValue
name|generatedValue
parameter_list|)
block|{
name|this
operator|.
name|generatedValue
operator|=
name|generatedValue
expr_stmt|;
block|}
specifier|public
name|TemporalType
name|getTemporal
parameter_list|()
block|{
return|return
name|temporal
return|;
block|}
specifier|public
name|void
name|setTemporal
parameter_list|(
name|TemporalType
name|temporal
parameter_list|)
block|{
name|this
operator|.
name|temporal
operator|=
name|temporal
expr_stmt|;
block|}
specifier|public
name|JpaSequenceGenerator
name|getSequenceGenerator
parameter_list|()
block|{
return|return
name|sequenceGenerator
return|;
block|}
specifier|public
name|void
name|setSequenceGenerator
parameter_list|(
name|JpaSequenceGenerator
name|sequenceGenerator
parameter_list|)
block|{
name|this
operator|.
name|sequenceGenerator
operator|=
name|sequenceGenerator
expr_stmt|;
block|}
specifier|public
name|JpaTableGenerator
name|getTableGenerator
parameter_list|()
block|{
return|return
name|tableGenerator
return|;
block|}
specifier|public
name|void
name|setTableGenerator
parameter_list|(
name|JpaTableGenerator
name|tableGenerator
parameter_list|)
block|{
name|this
operator|.
name|tableGenerator
operator|=
name|tableGenerator
expr_stmt|;
block|}
block|}
end_class

end_unit

