begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|conf
package|;
end_package

begin_import
import|import
name|java
operator|.
name|lang
operator|.
name|reflect
operator|.
name|AnnotatedElement
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|AttributeOverride
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|AttributeOverrides
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|DiscriminatorColumn
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|DiscriminatorValue
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Entity
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|EntityListeners
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|IdClass
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Inheritance
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|NamedNativeQueries
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|NamedNativeQuery
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|NamedQueries
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|NamedQuery
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|PrimaryKeyJoinColumn
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|PrimaryKeyJoinColumns
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|SecondaryTable
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|SecondaryTables
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|SequenceGenerator
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|SqlResultSetMapping
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|Table
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|persistence
operator|.
name|TableGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaAttributeOverride
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaAttributes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaDiscriminatorColumn
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaEmbeddable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaEntityListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaEntityListeners
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaEntityMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaIdClass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaInheritance
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaMappedSuperclass
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaNamedNativeQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaNamedQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaPrimaryKeyJoinColumn
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaSecondaryTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaSequenceGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaSqlResultSetMapping
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaTable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaTableGenerator
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|util
operator|.
name|Util
import|;
end_import

begin_comment
comment|/**  * A factory of class annotation processors.  *   */
end_comment

begin_class
class|class
name|ClassAnnotationProcessorFactory
extends|extends
name|AnnotationProcessorFactory
block|{
specifier|static
specifier|final
class|class
name|EntityProcessor
implements|implements
name|AnnotationProcessor
block|{
specifier|public
name|void
name|onStartElement
parameter_list|(
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|Entity
name|entityAnnotation
init|=
name|element
operator|.
name|getAnnotation
argument_list|(
name|Entity
operator|.
name|class
argument_list|)
decl_stmt|;
name|JpaEntity
name|entity
init|=
operator|new
name|JpaEntity
argument_list|()
decl_stmt|;
name|entity
operator|.
name|setClassName
argument_list|(
operator|(
operator|(
name|Class
argument_list|<
name|?
argument_list|>
operator|)
name|element
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setAttributes
argument_list|(
operator|new
name|JpaAttributes
argument_list|()
argument_list|)
expr_stmt|;
if|if
condition|(
operator|!
name|Util
operator|.
name|isEmptyString
argument_list|(
name|entityAnnotation
operator|.
name|name
argument_list|()
argument_list|)
condition|)
block|{
name|entity
operator|.
name|setName
argument_list|(
name|entityAnnotation
operator|.
name|name
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|context
operator|.
name|push
argument_list|(
name|entity
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|onFinishElement
parameter_list|(
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|JpaEntity
name|entity
init|=
operator|(
name|JpaEntity
operator|)
name|context
operator|.
name|pop
argument_list|()
decl_stmt|;
name|JpaEntityMap
name|entityMap
init|=
operator|(
name|JpaEntityMap
operator|)
name|context
operator|.
name|peek
argument_list|()
decl_stmt|;
name|entityMap
operator|.
name|getEntities
argument_list|()
operator|.
name|add
argument_list|(
name|entity
argument_list|)
expr_stmt|;
block|}
block|}
specifier|static
specifier|final
class|class
name|EmbeddableProcessor
implements|implements
name|AnnotationProcessor
block|{
specifier|public
name|void
name|onStartElement
parameter_list|(
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|JpaEmbeddable
name|embeddable
init|=
operator|new
name|JpaEmbeddable
argument_list|()
decl_stmt|;
name|embeddable
operator|.
name|setClassName
argument_list|(
operator|(
operator|(
name|Class
argument_list|<
name|?
argument_list|>
operator|)
name|element
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|embeddable
operator|.
name|setAttributes
argument_list|(
operator|new
name|JpaAttributes
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|push
argument_list|(
name|embeddable
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|onFinishElement
parameter_list|(
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|JpaEmbeddable
name|embeddable
init|=
operator|(
name|JpaEmbeddable
operator|)
name|context
operator|.
name|pop
argument_list|()
decl_stmt|;
name|JpaEntityMap
name|entityMap
init|=
operator|(
name|JpaEntityMap
operator|)
name|context
operator|.
name|peek
argument_list|()
decl_stmt|;
name|entityMap
operator|.
name|getEmbeddables
argument_list|()
operator|.
name|add
argument_list|(
name|embeddable
argument_list|)
expr_stmt|;
block|}
block|}
specifier|static
specifier|final
class|class
name|MappedSuperclassProcessor
implements|implements
name|AnnotationProcessor
block|{
specifier|public
name|void
name|onStartElement
parameter_list|(
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|JpaMappedSuperclass
name|superclass
init|=
operator|new
name|JpaMappedSuperclass
argument_list|()
decl_stmt|;
name|superclass
operator|.
name|setClassName
argument_list|(
operator|(
operator|(
name|Class
argument_list|<
name|?
argument_list|>
operator|)
name|element
operator|)
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|superclass
operator|.
name|setAttributes
argument_list|(
operator|new
name|JpaAttributes
argument_list|()
argument_list|)
expr_stmt|;
name|context
operator|.
name|push
argument_list|(
name|superclass
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|onFinishElement
parameter_list|(
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|JpaMappedSuperclass
name|superclass
init|=
operator|(
name|JpaMappedSuperclass
operator|)
name|context
operator|.
name|pop
argument_list|()
decl_stmt|;
name|JpaEntityMap
name|entityMap
init|=
operator|(
name|JpaEntityMap
operator|)
name|context
operator|.
name|peek
argument_list|()
decl_stmt|;
name|entityMap
operator|.
name|getMappedSuperclasses
argument_list|()
operator|.
name|add
argument_list|(
name|superclass
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * A superclass of all processors that for class annotations that do not define the      * type of the mapping.      */
specifier|abstract
specifier|static
class|class
name|AbstractChildProcessor
implements|implements
name|AnnotationProcessor
block|{
specifier|public
name|void
name|onStartElement
parameter_list|(
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|Object
name|parent
init|=
name|context
operator|.
name|peek
argument_list|()
decl_stmt|;
if|if
condition|(
name|parent
operator|instanceof
name|JpaEntity
condition|)
block|{
name|onEntity
argument_list|(
operator|(
name|JpaEntity
operator|)
name|parent
argument_list|,
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|parent
operator|instanceof
name|JpaMappedSuperclass
condition|)
block|{
name|onMappedSuperclass
argument_list|(
operator|(
name|JpaMappedSuperclass
operator|)
name|parent
argument_list|,
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|parent
operator|instanceof
name|JpaEntityMap
condition|)
block|{
name|onEntityMap
argument_list|(
operator|(
name|JpaEntityMap
operator|)
name|parent
argument_list|,
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|parent
operator|instanceof
name|JpaEmbeddable
condition|)
block|{
name|onEmbeddable
argument_list|(
operator|(
name|JpaEmbeddable
operator|)
name|parent
argument_list|,
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|recordUnsupportedAnnotation
argument_list|(
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|onFinishElement
parameter_list|(
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
comment|// noop
block|}
name|void
name|onEntity
parameter_list|(
name|JpaEntity
name|entity
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|recordUnsupportedAnnotation
argument_list|(
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
name|void
name|onMappedSuperclass
parameter_list|(
name|JpaMappedSuperclass
name|superclass
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|recordUnsupportedAnnotation
argument_list|(
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
name|void
name|onEmbeddable
parameter_list|(
name|JpaEmbeddable
name|embeddable
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|recordUnsupportedAnnotation
argument_list|(
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
comment|// not sure if this is compatible with the spec, but such annotations are
comment|// possible...
name|void
name|onEntityMap
parameter_list|(
name|JpaEntityMap
name|entityMap
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|recordUnsupportedAnnotation
argument_list|(
name|element
argument_list|,
name|context
argument_list|)
expr_stmt|;
block|}
name|void
name|recordUnsupportedAnnotation
parameter_list|(
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|context
operator|.
name|recordConflict
argument_list|(
name|element
argument_list|,
name|AnnotationProcessorFactory
operator|.
name|annotationClass
argument_list|(
name|getClass
argument_list|()
argument_list|)
argument_list|,
literal|"Unsupported in this place"
argument_list|)
expr_stmt|;
block|}
block|}
specifier|static
specifier|final
class|class
name|AttributeOverrideProcessor
extends|extends
name|AbstractChildProcessor
block|{
annotation|@
name|Override
name|void
name|onEntity
parameter_list|(
name|JpaEntity
name|entity
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|AttributeOverride
name|annotation
init|=
name|element
operator|.
name|getAnnotation
argument_list|(
name|AttributeOverride
operator|.
name|class
argument_list|)
decl_stmt|;
name|entity
operator|.
name|getAttributeOverrides
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|JpaAttributeOverride
argument_list|(
name|annotation
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|static
specifier|final
class|class
name|AttributeOverridesProcessor
extends|extends
name|AbstractChildProcessor
block|{
annotation|@
name|Override
name|void
name|onEntity
parameter_list|(
name|JpaEntity
name|entity
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|AttributeOverrides
name|annotation
init|=
name|element
operator|.
name|getAnnotation
argument_list|(
name|AttributeOverrides
operator|.
name|class
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|annotation
operator|.
name|value
argument_list|()
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|entity
operator|.
name|getAttributeOverrides
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|JpaAttributeOverride
argument_list|(
name|annotation
operator|.
name|value
argument_list|()
index|[
name|i
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|static
specifier|final
class|class
name|DiscriminatorColumnProcessor
extends|extends
name|AbstractChildProcessor
block|{
annotation|@
name|Override
name|void
name|onEntity
parameter_list|(
name|JpaEntity
name|entity
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|DiscriminatorColumn
name|annotation
init|=
name|element
operator|.
name|getAnnotation
argument_list|(
name|DiscriminatorColumn
operator|.
name|class
argument_list|)
decl_stmt|;
name|entity
operator|.
name|setDiscriminatorColumn
argument_list|(
operator|new
name|JpaDiscriminatorColumn
argument_list|(
name|annotation
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|static
specifier|final
class|class
name|DiscriminatorValueProcessor
extends|extends
name|AbstractChildProcessor
block|{
annotation|@
name|Override
name|void
name|onEntity
parameter_list|(
name|JpaEntity
name|entity
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|DiscriminatorValue
name|annotation
init|=
name|element
operator|.
name|getAnnotation
argument_list|(
name|DiscriminatorValue
operator|.
name|class
argument_list|)
decl_stmt|;
name|entity
operator|.
name|setDiscriminatorValue
argument_list|(
name|annotation
operator|.
name|value
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
specifier|static
specifier|final
class|class
name|EntityListenersProcessor
extends|extends
name|AbstractChildProcessor
block|{
specifier|private
name|EntityListenerAnnotationLoader
name|listenerLoader
decl_stmt|;
annotation|@
name|Override
name|void
name|onEntity
parameter_list|(
name|JpaEntity
name|entity
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|EntityListeners
name|annotation
init|=
name|element
operator|.
name|getAnnotation
argument_list|(
name|EntityListeners
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|annotation
operator|.
name|value
argument_list|()
operator|.
name|length
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|listenerLoader
operator|==
literal|null
condition|)
block|{
name|listenerLoader
operator|=
operator|new
name|EntityListenerAnnotationLoader
argument_list|()
expr_stmt|;
block|}
name|JpaEntityListeners
name|listenerHolder
init|=
name|entity
operator|.
name|getEntityListeners
argument_list|()
decl_stmt|;
if|if
condition|(
name|listenerHolder
operator|==
literal|null
condition|)
block|{
name|listenerHolder
operator|=
operator|new
name|JpaEntityListeners
argument_list|()
expr_stmt|;
name|entity
operator|.
name|setEntityListeners
argument_list|(
name|listenerHolder
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|annotation
operator|.
name|value
argument_list|()
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|JpaEntityListener
name|listener
init|=
name|listenerLoader
operator|.
name|getEntityListener
argument_list|(
name|annotation
operator|.
name|value
argument_list|()
index|[
name|i
index|]
argument_list|)
decl_stmt|;
if|if
condition|(
name|listener
operator|!=
literal|null
condition|)
block|{
name|listenerHolder
operator|.
name|getEntityListeners
argument_list|()
operator|.
name|add
argument_list|(
name|listener
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
annotation|@
name|Override
name|void
name|onMappedSuperclass
parameter_list|(
name|JpaMappedSuperclass
name|superclass
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|EntityListeners
name|annotation
init|=
name|element
operator|.
name|getAnnotation
argument_list|(
name|EntityListeners
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|annotation
operator|.
name|value
argument_list|()
operator|.
name|length
operator|>
literal|0
condition|)
block|{
if|if
condition|(
name|listenerLoader
operator|==
literal|null
condition|)
block|{
name|listenerLoader
operator|=
operator|new
name|EntityListenerAnnotationLoader
argument_list|()
expr_stmt|;
block|}
name|JpaEntityListeners
name|listenerHolder
init|=
name|superclass
operator|.
name|getEntityListeners
argument_list|()
decl_stmt|;
if|if
condition|(
name|listenerHolder
operator|==
literal|null
condition|)
block|{
name|listenerHolder
operator|=
operator|new
name|JpaEntityListeners
argument_list|()
expr_stmt|;
name|superclass
operator|.
name|setEntityListeners
argument_list|(
name|listenerHolder
argument_list|)
expr_stmt|;
block|}
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|annotation
operator|.
name|value
argument_list|()
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|JpaEntityListener
name|listener
init|=
name|listenerLoader
operator|.
name|getEntityListener
argument_list|(
name|annotation
operator|.
name|value
argument_list|()
index|[
name|i
index|]
argument_list|)
decl_stmt|;
if|if
condition|(
name|listener
operator|!=
literal|null
condition|)
block|{
name|listenerHolder
operator|.
name|getEntityListeners
argument_list|()
operator|.
name|add
argument_list|(
name|listener
argument_list|)
expr_stmt|;
block|}
block|}
block|}
block|}
block|}
specifier|static
specifier|final
class|class
name|ExcludeDefaultListenersProcessor
extends|extends
name|AbstractChildProcessor
block|{
annotation|@
name|Override
name|void
name|onEntity
parameter_list|(
name|JpaEntity
name|entity
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|entity
operator|.
name|setExcludeDefaultListeners
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
name|void
name|onMappedSuperclass
parameter_list|(
name|JpaMappedSuperclass
name|superclass
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|superclass
operator|.
name|setExcludeDefaultListeners
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
specifier|static
specifier|final
class|class
name|ExcludeSuperclassListenersProcessor
extends|extends
name|AbstractChildProcessor
block|{
annotation|@
name|Override
name|void
name|onEntity
parameter_list|(
name|JpaEntity
name|entity
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|entity
operator|.
name|setExcludeSuperclassListeners
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
name|void
name|onMappedSuperclass
parameter_list|(
name|JpaMappedSuperclass
name|superclass
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|superclass
operator|.
name|setExcludeSuperclassListeners
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
specifier|static
specifier|final
class|class
name|IdClassProcessor
extends|extends
name|AbstractChildProcessor
block|{
annotation|@
name|Override
name|void
name|onEntity
parameter_list|(
name|JpaEntity
name|entity
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|IdClass
name|annotation
init|=
name|element
operator|.
name|getAnnotation
argument_list|(
name|IdClass
operator|.
name|class
argument_list|)
decl_stmt|;
name|JpaIdClass
name|idClass
init|=
operator|new
name|JpaIdClass
argument_list|()
decl_stmt|;
name|idClass
operator|.
name|setClassName
argument_list|(
name|annotation
operator|.
name|value
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|entity
operator|.
name|setIdClass
argument_list|(
name|idClass
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
name|void
name|onMappedSuperclass
parameter_list|(
name|JpaMappedSuperclass
name|superclass
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|IdClass
name|annotation
init|=
name|element
operator|.
name|getAnnotation
argument_list|(
name|IdClass
operator|.
name|class
argument_list|)
decl_stmt|;
name|JpaIdClass
name|idClass
init|=
operator|new
name|JpaIdClass
argument_list|()
decl_stmt|;
name|idClass
operator|.
name|setClassName
argument_list|(
name|annotation
operator|.
name|value
argument_list|()
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|superclass
operator|.
name|setIdClass
argument_list|(
name|idClass
argument_list|)
expr_stmt|;
block|}
block|}
specifier|static
specifier|final
class|class
name|InheritanceProcessor
extends|extends
name|AbstractChildProcessor
block|{
annotation|@
name|Override
name|void
name|onEntity
parameter_list|(
name|JpaEntity
name|entity
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|Inheritance
name|annotation
init|=
name|element
operator|.
name|getAnnotation
argument_list|(
name|Inheritance
operator|.
name|class
argument_list|)
decl_stmt|;
name|entity
operator|.
name|setInheritance
argument_list|(
operator|new
name|JpaInheritance
argument_list|(
name|annotation
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|static
specifier|final
class|class
name|NamedNativeQueriesProcessor
extends|extends
name|AbstractChildProcessor
block|{
annotation|@
name|Override
name|void
name|onEntity
parameter_list|(
name|JpaEntity
name|entity
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|NamedNativeQueries
name|annotation
init|=
name|element
operator|.
name|getAnnotation
argument_list|(
name|NamedNativeQueries
operator|.
name|class
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|annotation
operator|.
name|value
argument_list|()
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|entity
operator|.
name|getNamedNativeQueries
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|JpaNamedNativeQuery
argument_list|(
name|annotation
operator|.
name|value
argument_list|()
index|[
name|i
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
name|void
name|onEntityMap
parameter_list|(
name|JpaEntityMap
name|entityMap
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|NamedNativeQueries
name|annotation
init|=
name|element
operator|.
name|getAnnotation
argument_list|(
name|NamedNativeQueries
operator|.
name|class
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|annotation
operator|.
name|value
argument_list|()
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|entityMap
operator|.
name|getNamedNativeQueries
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|JpaNamedNativeQuery
argument_list|(
name|annotation
operator|.
name|value
argument_list|()
index|[
name|i
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|static
specifier|final
class|class
name|NamedNativeQueryProcessor
extends|extends
name|AbstractChildProcessor
block|{
annotation|@
name|Override
name|void
name|onEntity
parameter_list|(
name|JpaEntity
name|entity
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|NamedNativeQuery
name|annotation
init|=
name|element
operator|.
name|getAnnotation
argument_list|(
name|NamedNativeQuery
operator|.
name|class
argument_list|)
decl_stmt|;
name|entity
operator|.
name|getNamedNativeQueries
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|JpaNamedNativeQuery
argument_list|(
name|annotation
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
name|void
name|onEntityMap
parameter_list|(
name|JpaEntityMap
name|entityMap
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|NamedNativeQuery
name|annotation
init|=
name|element
operator|.
name|getAnnotation
argument_list|(
name|NamedNativeQuery
operator|.
name|class
argument_list|)
decl_stmt|;
name|entityMap
operator|.
name|getNamedNativeQueries
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|JpaNamedNativeQuery
argument_list|(
name|annotation
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|static
specifier|final
class|class
name|NamedQueriesProcessor
extends|extends
name|AbstractChildProcessor
block|{
annotation|@
name|Override
name|void
name|onEntity
parameter_list|(
name|JpaEntity
name|entity
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|NamedQueries
name|annotation
init|=
name|element
operator|.
name|getAnnotation
argument_list|(
name|NamedQueries
operator|.
name|class
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|annotation
operator|.
name|value
argument_list|()
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|entity
operator|.
name|getNamedQueries
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|JpaNamedQuery
argument_list|(
name|annotation
operator|.
name|value
argument_list|()
index|[
name|i
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
name|void
name|onEntityMap
parameter_list|(
name|JpaEntityMap
name|entityMap
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|NamedQueries
name|annotation
init|=
name|element
operator|.
name|getAnnotation
argument_list|(
name|NamedQueries
operator|.
name|class
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|annotation
operator|.
name|value
argument_list|()
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|entityMap
operator|.
name|getNamedQueries
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|JpaNamedQuery
argument_list|(
name|annotation
operator|.
name|value
argument_list|()
index|[
name|i
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|static
specifier|final
class|class
name|NamedQueryProcessor
extends|extends
name|AbstractChildProcessor
block|{
annotation|@
name|Override
name|void
name|onEntity
parameter_list|(
name|JpaEntity
name|entity
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|NamedQuery
name|annotation
init|=
name|element
operator|.
name|getAnnotation
argument_list|(
name|NamedQuery
operator|.
name|class
argument_list|)
decl_stmt|;
name|entity
operator|.
name|getNamedQueries
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|JpaNamedQuery
argument_list|(
name|annotation
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
name|void
name|onEntityMap
parameter_list|(
name|JpaEntityMap
name|entityMap
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|NamedQuery
name|annotation
init|=
name|element
operator|.
name|getAnnotation
argument_list|(
name|NamedQuery
operator|.
name|class
argument_list|)
decl_stmt|;
name|entityMap
operator|.
name|getNamedQueries
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|JpaNamedQuery
argument_list|(
name|annotation
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|static
specifier|final
class|class
name|PrimaryKeyJoinColumnProcessor
extends|extends
name|AbstractChildProcessor
block|{
annotation|@
name|Override
name|void
name|onEntity
parameter_list|(
name|JpaEntity
name|entity
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|PrimaryKeyJoinColumn
name|annotation
init|=
name|element
operator|.
name|getAnnotation
argument_list|(
name|PrimaryKeyJoinColumn
operator|.
name|class
argument_list|)
decl_stmt|;
name|entity
operator|.
name|getPrimaryKeyJoinColumns
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|JpaPrimaryKeyJoinColumn
argument_list|(
name|annotation
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|static
specifier|final
class|class
name|PrimaryKeyJoinColumnsProcessor
extends|extends
name|AbstractChildProcessor
block|{
annotation|@
name|Override
name|void
name|onEntity
parameter_list|(
name|JpaEntity
name|entity
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|PrimaryKeyJoinColumns
name|annotation
init|=
name|element
operator|.
name|getAnnotation
argument_list|(
name|PrimaryKeyJoinColumns
operator|.
name|class
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|annotation
operator|.
name|value
argument_list|()
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|entity
operator|.
name|getPrimaryKeyJoinColumns
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|JpaPrimaryKeyJoinColumn
argument_list|(
name|annotation
operator|.
name|value
argument_list|()
index|[
name|i
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|static
specifier|final
class|class
name|SecondaryTableProcessor
extends|extends
name|AbstractChildProcessor
block|{
annotation|@
name|Override
name|void
name|onEntity
parameter_list|(
name|JpaEntity
name|entity
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|SecondaryTable
name|annotation
init|=
name|element
operator|.
name|getAnnotation
argument_list|(
name|SecondaryTable
operator|.
name|class
argument_list|)
decl_stmt|;
name|entity
operator|.
name|getSecondaryTables
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|JpaSecondaryTable
argument_list|(
name|annotation
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|static
specifier|final
class|class
name|SecondaryTablesProcessor
extends|extends
name|AbstractChildProcessor
block|{
annotation|@
name|Override
name|void
name|onEntity
parameter_list|(
name|JpaEntity
name|entity
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|SecondaryTables
name|annotation
init|=
name|element
operator|.
name|getAnnotation
argument_list|(
name|SecondaryTables
operator|.
name|class
argument_list|)
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|annotation
operator|.
name|value
argument_list|()
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|entity
operator|.
name|getSecondaryTables
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|JpaSecondaryTable
argument_list|(
name|annotation
operator|.
name|value
argument_list|()
index|[
name|i
index|]
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|static
specifier|final
class|class
name|SequenceGeneratorProcessor
extends|extends
name|AbstractChildProcessor
block|{
annotation|@
name|Override
name|void
name|onEntity
parameter_list|(
name|JpaEntity
name|entity
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|SequenceGenerator
name|annotation
init|=
name|element
operator|.
name|getAnnotation
argument_list|(
name|SequenceGenerator
operator|.
name|class
argument_list|)
decl_stmt|;
name|entity
operator|.
name|setSequenceGenerator
argument_list|(
operator|new
name|JpaSequenceGenerator
argument_list|(
name|annotation
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
name|void
name|onEntityMap
parameter_list|(
name|JpaEntityMap
name|entityMap
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|SequenceGenerator
name|annotation
init|=
name|element
operator|.
name|getAnnotation
argument_list|(
name|SequenceGenerator
operator|.
name|class
argument_list|)
decl_stmt|;
name|entityMap
operator|.
name|getSequenceGenerators
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|JpaSequenceGenerator
argument_list|(
name|annotation
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|static
specifier|final
class|class
name|SqlResultSetMappingProcessor
extends|extends
name|AbstractChildProcessor
block|{
annotation|@
name|Override
name|void
name|onEntity
parameter_list|(
name|JpaEntity
name|entity
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|SqlResultSetMapping
name|annotation
init|=
name|element
operator|.
name|getAnnotation
argument_list|(
name|SqlResultSetMapping
operator|.
name|class
argument_list|)
decl_stmt|;
name|entity
operator|.
name|getSqlResultSetMappings
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|JpaSqlResultSetMapping
argument_list|(
name|annotation
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
name|void
name|onEntityMap
parameter_list|(
name|JpaEntityMap
name|entityMap
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|SqlResultSetMapping
name|annotation
init|=
name|element
operator|.
name|getAnnotation
argument_list|(
name|SqlResultSetMapping
operator|.
name|class
argument_list|)
decl_stmt|;
name|entityMap
operator|.
name|getSqlResultSetMappings
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|JpaSqlResultSetMapping
argument_list|(
name|annotation
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|static
specifier|final
class|class
name|TableGeneratorProcessor
extends|extends
name|AbstractChildProcessor
block|{
annotation|@
name|Override
name|void
name|onEntity
parameter_list|(
name|JpaEntity
name|entity
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|TableGenerator
name|annotation
init|=
name|element
operator|.
name|getAnnotation
argument_list|(
name|TableGenerator
operator|.
name|class
argument_list|)
decl_stmt|;
name|entity
operator|.
name|setTableGenerator
argument_list|(
operator|new
name|JpaTableGenerator
argument_list|(
name|annotation
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
name|void
name|onEntityMap
parameter_list|(
name|JpaEntityMap
name|entityMap
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|TableGenerator
name|annotation
init|=
name|element
operator|.
name|getAnnotation
argument_list|(
name|TableGenerator
operator|.
name|class
argument_list|)
decl_stmt|;
name|entityMap
operator|.
name|getTableGenerators
argument_list|()
operator|.
name|add
argument_list|(
operator|new
name|JpaTableGenerator
argument_list|(
name|annotation
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|static
specifier|final
class|class
name|TableProcessor
extends|extends
name|AbstractChildProcessor
block|{
annotation|@
name|Override
name|void
name|onEntity
parameter_list|(
name|JpaEntity
name|entity
parameter_list|,
name|AnnotatedElement
name|element
parameter_list|,
name|AnnotationProcessorStack
name|context
parameter_list|)
block|{
name|Table
name|annotation
init|=
name|element
operator|.
name|getAnnotation
argument_list|(
name|Table
operator|.
name|class
argument_list|)
decl_stmt|;
name|entity
operator|.
name|setTable
argument_list|(
operator|new
name|JpaTable
argument_list|(
name|annotation
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

