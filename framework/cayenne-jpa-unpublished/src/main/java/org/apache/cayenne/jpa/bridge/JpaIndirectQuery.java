begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|bridge
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|JpaProviderException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jpa
operator|.
name|map
operator|.
name|JpaNamedQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DataMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|IndirectQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|ParameterizedQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|Query
import|;
end_import

begin_comment
comment|/**  * A superclass of indirect queries that map JPA to Cayenne queries.  *   * @author Andrus Adamchik  */
end_comment

begin_class
specifier|public
specifier|abstract
class|class
name|JpaIndirectQuery
extends|extends
name|IndirectQuery
implements|implements
name|ParameterizedQuery
block|{
specifier|protected
name|JpaNamedQuery
name|jpaQuery
decl_stmt|;
specifier|protected
name|DataMap
name|parentMap
decl_stmt|;
specifier|protected
name|ObjEntity
name|parentEntity
decl_stmt|;
specifier|protected
name|Map
argument_list|<
name|String
argument_list|,
name|?
argument_list|>
name|parameters
decl_stmt|;
specifier|public
name|Query
name|createQuery
parameter_list|(
name|Map
argument_list|<
name|String
argument_list|,
name|?
argument_list|>
name|parameters
parameter_list|)
block|{
name|JpaIndirectQuery
name|clone
decl_stmt|;
try|try
block|{
name|clone
operator|=
operator|(
name|JpaIndirectQuery
operator|)
name|getClass
argument_list|()
operator|.
name|newInstance
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|Exception
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|JpaProviderException
argument_list|(
literal|"Error cloning a query"
argument_list|,
name|e
argument_list|)
throw|;
block|}
name|clone
operator|.
name|setJpaQuery
argument_list|(
name|jpaQuery
argument_list|)
expr_stmt|;
name|clone
operator|.
name|setParentEntity
argument_list|(
name|parentEntity
argument_list|)
expr_stmt|;
name|clone
operator|.
name|setParentMap
argument_list|(
name|parentMap
argument_list|)
expr_stmt|;
name|clone
operator|.
name|parameters
operator|=
name|parameters
expr_stmt|;
return|return
name|clone
return|;
block|}
specifier|public
name|JpaNamedQuery
name|getJpaQuery
parameter_list|()
block|{
return|return
name|jpaQuery
return|;
block|}
specifier|public
name|void
name|setJpaQuery
parameter_list|(
name|JpaNamedQuery
name|query
parameter_list|)
block|{
name|this
operator|.
name|jpaQuery
operator|=
name|query
expr_stmt|;
block|}
specifier|public
name|ObjEntity
name|getParentEntity
parameter_list|()
block|{
return|return
name|parentEntity
return|;
block|}
specifier|public
name|void
name|setParentEntity
parameter_list|(
name|ObjEntity
name|parentEntity
parameter_list|)
block|{
name|this
operator|.
name|parentEntity
operator|=
name|parentEntity
expr_stmt|;
block|}
specifier|public
name|DataMap
name|getParentMap
parameter_list|()
block|{
return|return
name|parentMap
return|;
block|}
specifier|public
name|void
name|setParentMap
parameter_list|(
name|DataMap
name|parentMap
parameter_list|)
block|{
name|this
operator|.
name|parentMap
operator|=
name|parentMap
expr_stmt|;
block|}
block|}
end_class

end_unit

