begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|project
operator|.
name|upgrade
operator|.
name|v7
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ConfigurationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|ConfigurationTree
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|DataChannelDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|XMLDataChannelDescriptorLoader
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Injector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|project
operator|.
name|Project
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|project
operator|.
name|ProjectSaver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|project
operator|.
name|upgrade
operator|.
name|BaseUpgradeHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|project
operator|.
name|upgrade
operator|.
name|UpgradeHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|project
operator|.
name|upgrade
operator|.
name|UpgradeMetaData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|project
operator|.
name|upgrade
operator|.
name|UpgradeType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|project
operator|.
name|upgrade
operator|.
name|v6
operator|.
name|ProjectUpgrader_V6
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|resource
operator|.
name|Resource
import|;
end_import

begin_class
class|class
name|UpgradeHandler_V7
extends|extends
name|BaseUpgradeHandler
block|{
specifier|static
specifier|final
name|String
name|TO_VERSION
init|=
literal|"7"
decl_stmt|;
specifier|static
specifier|final
name|String
name|MIN_SUPPORTED_VERSION
init|=
literal|"3.0.0.1"
decl_stmt|;
annotation|@
name|Inject
specifier|protected
name|Injector
name|injector
decl_stmt|;
annotation|@
name|Inject
specifier|private
name|ProjectSaver
name|projectSaver
decl_stmt|;
specifier|public
name|UpgradeHandler_V7
parameter_list|(
name|Resource
name|source
parameter_list|)
block|{
name|super
argument_list|(
name|source
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|Resource
name|doPerformUpgrade
parameter_list|(
name|UpgradeMetaData
name|metaData
parameter_list|)
throws|throws
name|ConfigurationException
block|{
if|if
condition|(
name|compareVersions
argument_list|(
name|metaData
operator|.
name|getProjectVersion
argument_list|()
argument_list|,
name|MIN_SUPPORTED_VERSION
argument_list|)
operator|==
literal|0
condition|)
block|{
name|ProjectUpgrader_V6
name|upgraderV6
init|=
operator|new
name|ProjectUpgrader_V6
argument_list|()
decl_stmt|;
name|injector
operator|.
name|injectMembers
argument_list|(
name|upgraderV6
argument_list|)
expr_stmt|;
name|UpgradeHandler
name|handlerV6
init|=
name|upgraderV6
operator|.
name|getUpgradeHandler
argument_list|(
name|projectSource
argument_list|)
decl_stmt|;
name|projectSource
operator|=
name|handlerV6
operator|.
name|performUpgrade
argument_list|()
expr_stmt|;
block|}
name|XMLDataChannelDescriptorLoader
name|loader
init|=
operator|new
name|XMLDataChannelDescriptorLoader
argument_list|()
decl_stmt|;
name|injector
operator|.
name|injectMembers
argument_list|(
name|loader
argument_list|)
expr_stmt|;
name|ConfigurationTree
argument_list|<
name|DataChannelDescriptor
argument_list|>
name|tree
init|=
name|loader
operator|.
name|load
argument_list|(
name|projectSource
argument_list|)
decl_stmt|;
name|Project
name|project
init|=
operator|new
name|Project
argument_list|(
name|tree
argument_list|)
decl_stmt|;
comment|// because listeners are no longer loaded they are not saved in upgraded project
name|projectSaver
operator|.
name|save
argument_list|(
name|project
argument_list|)
expr_stmt|;
return|return
name|project
operator|.
name|getConfigurationResource
argument_list|()
return|;
block|}
annotation|@
name|Override
specifier|protected
name|UpgradeMetaData
name|loadMetaData
parameter_list|()
block|{
name|String
name|version
init|=
name|loadProjectVersion
argument_list|()
decl_stmt|;
name|UpgradeMetaData
name|metadata
init|=
operator|new
name|UpgradeMetaData
argument_list|()
decl_stmt|;
name|metadata
operator|.
name|setSupportedVersion
argument_list|(
name|TO_VERSION
argument_list|)
expr_stmt|;
name|metadata
operator|.
name|setProjectVersion
argument_list|(
name|version
argument_list|)
expr_stmt|;
name|int
name|c1
init|=
name|compareVersions
argument_list|(
name|version
argument_list|,
name|MIN_SUPPORTED_VERSION
argument_list|)
decl_stmt|;
name|int
name|c2
init|=
name|compareVersions
argument_list|(
name|TO_VERSION
argument_list|,
name|version
argument_list|)
decl_stmt|;
if|if
condition|(
name|c1
operator|<
literal|0
condition|)
block|{
name|metadata
operator|.
name|setIntermediateUpgradeVersion
argument_list|(
name|MIN_SUPPORTED_VERSION
argument_list|)
expr_stmt|;
name|metadata
operator|.
name|setUpgradeType
argument_list|(
name|UpgradeType
operator|.
name|INTERMEDIATE_UPGRADE_NEEDED
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|c2
operator|<
literal|0
condition|)
block|{
name|metadata
operator|.
name|setUpgradeType
argument_list|(
name|UpgradeType
operator|.
name|DOWNGRADE_NEEDED
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|c2
operator|==
literal|0
condition|)
block|{
name|metadata
operator|.
name|setUpgradeType
argument_list|(
name|UpgradeType
operator|.
name|UPGRADE_NOT_NEEDED
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|metadata
operator|.
name|setUpgradeType
argument_list|(
name|UpgradeType
operator|.
name|UPGRADE_NEEDED
argument_list|)
expr_stmt|;
block|}
return|return
name|metadata
return|;
block|}
block|}
end_class

end_unit

