begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|lifecycle
operator|.
name|audit
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|mock
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|mockito
operator|.
name|Mockito
operator|.
name|verify
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|DataObject
import|;
end_import

begin_class
specifier|public
class|class
name|AuditableFilterTest
extends|extends
name|TestCase
block|{
specifier|public
name|void
name|testInsertAudit
parameter_list|()
block|{
name|AuditableProcessor
name|processor
init|=
name|mock
argument_list|(
name|AuditableProcessor
operator|.
name|class
argument_list|)
decl_stmt|;
name|AuditableFilter
name|filter
init|=
operator|new
name|AuditableFilter
argument_list|(
name|processor
argument_list|)
decl_stmt|;
name|Object
name|audited
init|=
operator|new
name|Object
argument_list|()
decl_stmt|;
name|filter
operator|.
name|insertAudit
argument_list|(
name|audited
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|processor
argument_list|)
operator|.
name|audit
argument_list|(
name|audited
argument_list|,
name|audited
argument_list|,
name|AuditableOperation
operator|.
name|INSERT
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testDeleteAudit
parameter_list|()
block|{
name|AuditableProcessor
name|processor
init|=
name|mock
argument_list|(
name|AuditableProcessor
operator|.
name|class
argument_list|)
decl_stmt|;
name|AuditableFilter
name|filter
init|=
operator|new
name|AuditableFilter
argument_list|(
name|processor
argument_list|)
decl_stmt|;
name|Object
name|audited
init|=
operator|new
name|Object
argument_list|()
decl_stmt|;
name|filter
operator|.
name|deleteAudit
argument_list|(
name|audited
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|processor
argument_list|)
operator|.
name|audit
argument_list|(
name|audited
argument_list|,
name|audited
argument_list|,
name|AuditableOperation
operator|.
name|DELETE
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testUpdateAudit
parameter_list|()
block|{
name|AuditableProcessor
name|processor
init|=
name|mock
argument_list|(
name|AuditableProcessor
operator|.
name|class
argument_list|)
decl_stmt|;
name|AuditableFilter
name|filter
init|=
operator|new
name|AuditableFilter
argument_list|(
name|processor
argument_list|)
decl_stmt|;
name|Object
name|audited
init|=
operator|new
name|Object
argument_list|()
decl_stmt|;
name|filter
operator|.
name|updateAudit
argument_list|(
name|audited
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|processor
argument_list|)
operator|.
name|audit
argument_list|(
name|audited
argument_list|,
name|audited
argument_list|,
name|AuditableOperation
operator|.
name|UPDATE
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testUpdateAuditChild
parameter_list|()
block|{
name|AuditableProcessor
name|processor
init|=
name|mock
argument_list|(
name|AuditableProcessor
operator|.
name|class
argument_list|)
decl_stmt|;
name|AuditableFilter
name|filter
init|=
operator|new
name|AuditableFilter
argument_list|(
name|processor
argument_list|)
decl_stmt|;
name|Object
name|auditedParent
init|=
operator|new
name|Object
argument_list|()
decl_stmt|;
name|DataObject
name|audited
init|=
operator|new
name|MockAuditableChild
argument_list|()
decl_stmt|;
name|audited
operator|.
name|writeProperty
argument_list|(
literal|"parent"
argument_list|,
name|auditedParent
argument_list|)
expr_stmt|;
name|filter
operator|.
name|updateAuditChild
argument_list|(
name|audited
argument_list|)
expr_stmt|;
name|verify
argument_list|(
name|processor
argument_list|)
operator|.
name|audit
argument_list|(
name|auditedParent
argument_list|,
name|audited
argument_list|,
name|AuditableOperation
operator|.
name|UPDATE
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

