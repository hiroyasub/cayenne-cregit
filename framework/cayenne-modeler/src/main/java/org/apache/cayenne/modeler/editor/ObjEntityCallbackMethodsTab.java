begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|editor
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|CallbackMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|ProjectController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|event
operator|.
name|ObjEntityDisplayListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|event
operator|.
name|EntityDisplayEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ComponentAdapter
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ComponentEvent
import|;
end_import

begin_comment
comment|/**  * Tab for editing callback methods on an ObjEntity  *  * @author Vasil Tarasevich  * @version 1.0 Oct 28, 2007  */
end_comment

begin_class
specifier|public
class|class
name|ObjEntityCallbackMethodsTab
extends|extends
name|AbstractCallbackMethodsTab
block|{
comment|/**      * constructor      * @param mediator mediator instance      */
specifier|public
name|ObjEntityCallbackMethodsTab
parameter_list|(
name|ProjectController
name|mediator
parameter_list|)
block|{
name|super
argument_list|(
name|mediator
argument_list|)
expr_stmt|;
block|}
comment|/**      * listeners initialization      */
specifier|protected
name|void
name|initController
parameter_list|()
block|{
name|super
operator|.
name|initController
argument_list|()
expr_stmt|;
comment|//mediator.addObjEntityDisplayListener(this);
name|addComponentListener
argument_list|(
operator|new
name|ComponentAdapter
argument_list|()
block|{
specifier|public
name|void
name|componentShown
parameter_list|(
name|ComponentEvent
name|e
parameter_list|)
block|{
name|mediator
operator|.
name|setCurrentCallbackType
argument_list|(
operator|(
name|CallbackType
operator|)
name|callbackTypeCombo
operator|.
name|getSelectedItem
argument_list|()
argument_list|)
expr_stmt|;
name|updateCallbackTypeCounters
argument_list|()
expr_stmt|;
name|rebuildTable
argument_list|()
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|mediator
operator|.
name|addObjEntityDisplayListener
argument_list|(
operator|new
name|ObjEntityDisplayListener
argument_list|()
block|{
specifier|public
name|void
name|currentObjEntityChanged
parameter_list|(
name|EntityDisplayEvent
name|e
parameter_list|)
block|{
if|if
condition|(
name|ObjEntityCallbackMethodsTab
operator|.
name|this
operator|.
name|isVisible
argument_list|()
condition|)
block|{
name|mediator
operator|.
name|setCurrentCallbackType
argument_list|(
operator|(
name|CallbackType
operator|)
name|callbackTypeCombo
operator|.
name|getSelectedItem
argument_list|()
argument_list|)
expr_stmt|;
name|updateCallbackTypeCounters
argument_list|()
expr_stmt|;
name|rebuildTable
argument_list|()
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
comment|/**      * @return CallbackMap with callback methods      */
specifier|protected
name|CallbackMap
name|getCallbackMap
parameter_list|()
block|{
if|if
condition|(
name|mediator
operator|.
name|getCurrentObjEntity
argument_list|()
operator|!=
literal|null
condition|)
block|{
return|return
name|mediator
operator|.
name|getCurrentObjEntity
argument_list|()
operator|.
name|getCallbackMap
argument_list|()
return|;
block|}
return|return
literal|null
return|;
block|}
block|}
end_class

end_unit

