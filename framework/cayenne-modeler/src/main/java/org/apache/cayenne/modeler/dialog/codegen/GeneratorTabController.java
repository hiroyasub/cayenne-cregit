begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|codegen
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|gen
operator|.
name|ClassGenerationAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|CayenneController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|pref
operator|.
name|CayenneProjectPreferences
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|pref
operator|.
name|PreferenceDetail
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|swing
operator|.
name|BindingBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|util
operator|.
name|Util
import|;
end_import

begin_comment
comment|/**  */
end_comment

begin_class
specifier|public
class|class
name|GeneratorTabController
extends|extends
name|CayenneController
block|{
specifier|private
specifier|static
specifier|final
name|String
name|STANDARD_OBJECTS_MODE
init|=
literal|"Standard Persistent Objects"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|CLIENT_OBJECTS_MODE
init|=
literal|"Client Persistent Objects"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|ADVANCED_MODE
init|=
literal|"Advanced"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|GENERATOR_PROPERTY
init|=
literal|"generator"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
index|[]
name|GENERATION_MODES
init|=
operator|new
name|String
index|[]
block|{
name|STANDARD_OBJECTS_MODE
block|,
name|CLIENT_OBJECTS_MODE
block|,
name|ADVANCED_MODE
block|}
decl_stmt|;
specifier|protected
name|GeneratorTabPanel
name|view
decl_stmt|;
specifier|protected
name|Map
name|controllers
decl_stmt|;
specifier|protected
name|PreferenceDetail
name|preferences
decl_stmt|;
specifier|public
name|GeneratorTabController
parameter_list|(
name|CodeGeneratorControllerBase
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|this
operator|.
name|controllers
operator|=
operator|new
name|HashMap
argument_list|(
literal|5
argument_list|)
expr_stmt|;
name|controllers
operator|.
name|put
argument_list|(
name|STANDARD_OBJECTS_MODE
argument_list|,
operator|new
name|StandardModeController
argument_list|(
name|parent
argument_list|)
argument_list|)
expr_stmt|;
name|controllers
operator|.
name|put
argument_list|(
name|CLIENT_OBJECTS_MODE
argument_list|,
operator|new
name|ClientModeController
argument_list|(
name|parent
argument_list|)
argument_list|)
expr_stmt|;
name|controllers
operator|.
name|put
argument_list|(
name|ADVANCED_MODE
argument_list|,
operator|new
name|CustomModeController
argument_list|(
name|parent
argument_list|)
argument_list|)
expr_stmt|;
name|Component
index|[]
name|modePanels
init|=
operator|new
name|Component
index|[
name|GENERATION_MODES
operator|.
name|length
index|]
decl_stmt|;
for|for
control|(
name|int
name|i
init|=
literal|0
init|;
name|i
operator|<
name|GENERATION_MODES
operator|.
name|length
condition|;
name|i
operator|++
control|)
block|{
name|modePanels
index|[
name|i
index|]
operator|=
operator|(
operator|(
name|GeneratorController
operator|)
name|controllers
operator|.
name|get
argument_list|(
name|GENERATION_MODES
index|[
name|i
index|]
argument_list|)
operator|)
operator|.
name|getView
argument_list|()
expr_stmt|;
block|}
name|this
operator|.
name|view
operator|=
operator|new
name|GeneratorTabPanel
argument_list|(
name|GENERATION_MODES
argument_list|,
name|modePanels
argument_list|)
expr_stmt|;
name|initBindings
argument_list|()
expr_stmt|;
block|}
specifier|public
name|Component
name|getView
parameter_list|()
block|{
return|return
name|view
return|;
block|}
specifier|protected
name|CodeGeneratorControllerBase
name|getParentController
parameter_list|()
block|{
return|return
operator|(
name|CodeGeneratorControllerBase
operator|)
name|getParent
argument_list|()
return|;
block|}
specifier|protected
name|void
name|initBindings
parameter_list|()
block|{
comment|// bind actions
name|BindingBuilder
name|builder
init|=
operator|new
name|BindingBuilder
argument_list|(
name|getApplication
argument_list|()
operator|.
name|getBindingFactory
argument_list|()
argument_list|,
name|this
argument_list|)
decl_stmt|;
name|builder
operator|.
name|bindToAction
argument_list|(
name|view
operator|.
name|getGenerationMode
argument_list|()
argument_list|,
literal|"updateModeAction()"
argument_list|)
expr_stmt|;
name|CayenneProjectPreferences
name|cayPrPref
init|=
name|application
operator|.
name|getCayenneProjectPreferences
argument_list|()
decl_stmt|;
name|this
operator|.
name|preferences
operator|=
operator|(
name|PreferenceDetail
operator|)
name|cayPrPref
operator|.
name|getProjectDetailObject
argument_list|(
name|PreferenceDetail
operator|.
name|class
argument_list|,
name|getViewPreferences
argument_list|()
operator|.
name|node
argument_list|(
literal|"controller"
argument_list|)
argument_list|)
expr_stmt|;
if|if
condition|(
name|Util
operator|.
name|isEmptyString
argument_list|(
name|preferences
operator|.
name|getProperty
argument_list|(
literal|"mode"
argument_list|)
argument_list|)
condition|)
block|{
name|preferences
operator|.
name|setProperty
argument_list|(
literal|"mode"
argument_list|,
name|STANDARD_OBJECTS_MODE
argument_list|)
expr_stmt|;
block|}
name|builder
operator|.
name|bindToComboSelection
argument_list|(
name|view
operator|.
name|getGenerationMode
argument_list|()
argument_list|,
literal|"preferences.property['mode']"
argument_list|)
operator|.
name|updateView
argument_list|()
expr_stmt|;
name|updateModeAction
argument_list|()
expr_stmt|;
block|}
specifier|public
name|PreferenceDetail
name|getPreferences
parameter_list|()
block|{
return|return
name|preferences
return|;
block|}
comment|/**      * Resets selection to default values for a given controller.      */
specifier|public
name|void
name|updateModeAction
parameter_list|()
block|{
name|firePropertyChange
argument_list|(
name|GENERATOR_PROPERTY
argument_list|,
literal|null
argument_list|,
name|getGeneratorController
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|GeneratorController
name|getGeneratorController
parameter_list|()
block|{
name|Object
name|name
init|=
name|view
operator|.
name|getGenerationMode
argument_list|()
operator|.
name|getSelectedItem
argument_list|()
decl_stmt|;
return|return
operator|(
name|GeneratorController
operator|)
name|controllers
operator|.
name|get
argument_list|(
name|name
argument_list|)
return|;
block|}
specifier|public
name|ClassGenerationAction
name|getGenerator
parameter_list|()
block|{
name|GeneratorController
name|modeController
init|=
name|getGeneratorController
argument_list|()
decl_stmt|;
return|return
operator|(
name|modeController
operator|!=
literal|null
operator|)
condition|?
name|modeController
operator|.
name|createGenerator
argument_list|()
else|:
literal|null
return|;
block|}
block|}
end_class

end_unit

