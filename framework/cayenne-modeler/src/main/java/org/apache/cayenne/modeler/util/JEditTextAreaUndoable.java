begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|FocusListener
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTextField
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|event
operator|.
name|UndoableEditListener
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|text
operator|.
name|Document
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|undo
operator|.
name|JTextFieldUndoListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|syntax
operator|.
name|jedit
operator|.
name|JEditTextArea
import|;
end_import

begin_class
class|class
name|JEditTextAreaUndoable
extends|extends
name|JEditTextArea
block|{
specifier|private
name|UndoableEditListener
name|undoListener
decl_stmt|;
name|JEditTextAreaUndoable
parameter_list|()
block|{
name|this
operator|.
name|undoListener
operator|=
operator|new
name|JTextFieldUndoListener
argument_list|(
operator|new
name|JEditTextAreaUndoableAdapter
argument_list|(
name|this
argument_list|)
argument_list|)
expr_stmt|;
name|this
operator|.
name|getDocument
argument_list|()
operator|.
name|addUndoableEditListener
argument_list|(
name|this
operator|.
name|undoListener
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setText
parameter_list|(
name|String
name|t
parameter_list|)
block|{
name|this
operator|.
name|getDocument
argument_list|()
operator|.
name|removeUndoableEditListener
argument_list|(
name|this
operator|.
name|undoListener
argument_list|)
expr_stmt|;
try|try
block|{
name|super
operator|.
name|setText
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
finally|finally
block|{
name|this
operator|.
name|getDocument
argument_list|()
operator|.
name|addUndoableEditListener
argument_list|(
name|this
operator|.
name|undoListener
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
specifier|static
class|class
name|JEditTextAreaUndoableAdapter
extends|extends
name|JTextField
block|{
annotation|@
name|Override
specifier|public
specifier|synchronized
name|void
name|addFocusListener
parameter_list|(
name|FocusListener
name|l
parameter_list|)
block|{
if|if
condition|(
name|textArea
operator|!=
literal|null
condition|)
block|{
name|textArea
operator|.
name|addFocusListener
argument_list|(
name|l
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|JEditTextArea
name|textArea
decl_stmt|;
specifier|public
name|JEditTextAreaUndoableAdapter
parameter_list|(
name|JEditTextArea
name|scriptArea
parameter_list|)
block|{
name|this
operator|.
name|textArea
operator|=
name|scriptArea
expr_stmt|;
block|}
specifier|public
name|int
name|getCaretPosition
parameter_list|()
block|{
if|if
condition|(
name|textArea
operator|==
literal|null
condition|)
block|{
return|return
literal|0
return|;
block|}
return|return
name|textArea
operator|.
name|getCaretPosition
argument_list|()
return|;
block|}
specifier|public
name|Document
name|getDocument
parameter_list|()
block|{
if|if
condition|(
name|textArea
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
return|return
name|textArea
operator|.
name|getDocument
argument_list|()
return|;
block|}
specifier|public
name|boolean
name|requestFocusInWindow
parameter_list|()
block|{
if|if
condition|(
name|textArea
operator|==
literal|null
condition|)
block|{
return|return
literal|false
return|;
block|}
return|return
name|textArea
operator|.
name|requestFocusInWindow
argument_list|()
return|;
block|}
specifier|public
name|void
name|selectAll
parameter_list|()
block|{
if|if
condition|(
name|textArea
operator|==
literal|null
condition|)
block|{
return|return;
block|}
name|textArea
operator|.
name|selectAll
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|setText
parameter_list|(
name|String
name|t
parameter_list|)
block|{
if|if
condition|(
name|textArea
operator|==
literal|null
condition|)
block|{
return|return;
block|}
name|textArea
operator|.
name|setText
argument_list|(
name|t
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|setCaretPosition
parameter_list|(
name|int
name|position
parameter_list|)
block|{
if|if
condition|(
name|textArea
operator|==
literal|null
condition|)
block|{
return|return;
block|}
name|textArea
operator|.
name|setCaretPosition
argument_list|(
name|position
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|updateUI
parameter_list|()
block|{
block|}
block|}
block|}
end_class

end_unit

