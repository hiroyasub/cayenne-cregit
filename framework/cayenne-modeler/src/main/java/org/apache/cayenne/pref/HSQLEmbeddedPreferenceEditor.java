begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|pref
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_comment
comment|/**  */
end_comment

begin_class
specifier|public
class|class
name|HSQLEmbeddedPreferenceEditor
extends|extends
name|CayennePreferenceEditor
block|{
specifier|protected
name|Delegate
name|delegate
decl_stmt|;
specifier|public
name|HSQLEmbeddedPreferenceEditor
parameter_list|(
name|HSQLEmbeddedPreferenceService
name|service
parameter_list|,
name|CayenneProjectPreferences
name|cayenneProjectPreferences
parameter_list|)
block|{
name|super
argument_list|(
name|service
argument_list|,
name|cayenneProjectPreferences
argument_list|)
expr_stmt|;
block|}
specifier|public
name|Delegate
name|getDelegate
parameter_list|()
block|{
return|return
name|delegate
return|;
block|}
specifier|public
name|void
name|setDelegate
parameter_list|(
name|Delegate
name|delegate
parameter_list|)
block|{
name|this
operator|.
name|delegate
operator|=
name|delegate
expr_stmt|;
block|}
specifier|protected
name|void
name|restart
parameter_list|()
block|{
try|try
block|{
name|service
operator|.
name|stopService
argument_list|()
expr_stmt|;
name|checkForLocks
argument_list|()
expr_stmt|;
name|service
operator|.
name|startService
argument_list|()
expr_stmt|;
block|}
finally|finally
block|{
name|restartRequired
operator|=
literal|false
expr_stmt|;
block|}
block|}
specifier|protected
name|HSQLEmbeddedPreferenceService
name|getHSQLService
parameter_list|()
block|{
return|return
operator|(
name|HSQLEmbeddedPreferenceService
operator|)
name|getService
argument_list|()
return|;
block|}
specifier|protected
name|boolean
name|checkForLocks
parameter_list|()
block|{
if|if
condition|(
name|delegate
operator|!=
literal|null
condition|)
block|{
name|HSQLEmbeddedPreferenceService
name|service
init|=
name|getHSQLService
argument_list|()
decl_stmt|;
if|if
condition|(
name|service
operator|.
name|isSecondaryDB
argument_list|()
condition|)
block|{
name|File
name|lock
init|=
name|service
operator|.
name|getMasterLock
argument_list|()
decl_stmt|;
if|if
condition|(
name|lock
operator|.
name|isFile
argument_list|()
condition|)
block|{
return|return
name|delegate
operator|.
name|deleteMasterLock
argument_list|(
name|lock
argument_list|)
return|;
block|}
block|}
block|}
return|return
literal|true
return|;
block|}
comment|// delegate interface allowing UI to interfere with the editor tasks
specifier|public
specifier|static
interface|interface
name|Delegate
block|{
name|boolean
name|deleteMasterLock
parameter_list|(
name|File
name|lock
parameter_list|)
function_decl|;
block|}
block|}
end_class

end_unit

