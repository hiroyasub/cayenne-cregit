begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
package|;
end_package

begin_comment
comment|/**  * An enum that provides high-level information about the host OS.  *   * @since 3.0  */
end_comment

begin_enum
specifier|public
enum|enum
name|OperatingSystem
block|{
name|MAC_OS_X
block|,
name|WINDOWS
block|,
name|OTHER
block|;
specifier|private
specifier|static
specifier|final
name|OperatingSystem
name|os
decl_stmt|;
static|static
block|{
name|String
name|osName
init|=
name|System
operator|.
name|getProperty
argument_list|(
literal|"os.name"
argument_list|)
decl_stmt|;
if|if
condition|(
name|osName
operator|==
literal|null
condition|)
block|{
name|os
operator|=
name|OTHER
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|osName
operator|.
name|startsWith
argument_list|(
literal|"Windows"
argument_list|)
condition|)
block|{
name|os
operator|=
name|WINDOWS
expr_stmt|;
block|}
if|else if
condition|(
name|osName
operator|.
name|startsWith
argument_list|(
literal|"Mac OS X"
argument_list|)
condition|)
block|{
name|os
operator|=
name|MAC_OS_X
expr_stmt|;
block|}
else|else
block|{
name|os
operator|=
name|OTHER
expr_stmt|;
block|}
block|}
block|}
specifier|public
specifier|static
name|OperatingSystem
name|getOS
parameter_list|()
block|{
return|return
name|os
return|;
block|}
block|}
end_enum

end_unit

