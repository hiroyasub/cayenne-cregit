begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|objentity
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JOptionPane
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|scopemvc
operator|.
name|controller
operator|.
name|basic
operator|.
name|BasicController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|scopemvc
operator|.
name|core
operator|.
name|Control
import|;
end_import

begin_import
import|import
name|org
operator|.
name|scopemvc
operator|.
name|core
operator|.
name|ControlException
import|;
end_import

begin_comment
comment|/**  * Controller of a dialog to select source, target and cardinality for DbRelationship    */
end_comment

begin_class
specifier|public
class|class
name|DbRelationshipTargetController
extends|extends
name|BasicController
block|{
specifier|public
specifier|static
specifier|final
name|String
name|CONTINUE_CONTROL
init|=
literal|"cayenne.modeler.mapObjRelationship.continue.button"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|CANCEL_CONTROL
init|=
literal|"cayenne.modeler.mapObjRelationship.cancel.button"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|TOMANY_CONTROL
init|=
literal|"cayenne.modeler.mapObjRelationship.tomany.checkbox"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|SOURCE1_CONTROL
init|=
literal|"cayenne.modeler.mapObjRelationship.source1.button"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|SOURCE2_CONTROL
init|=
literal|"cayenne.modeler.mapObjRelationship.source2.button"
decl_stmt|;
name|DbEntity
name|source1
decl_stmt|;
name|DbEntity
name|source2
decl_stmt|;
name|boolean
name|savePressed
decl_stmt|;
specifier|public
name|DbRelationshipTargetController
parameter_list|(
name|DbEntity
name|source1
parameter_list|,
name|DbEntity
name|source2
parameter_list|)
block|{
name|this
operator|.
name|source1
operator|=
name|source1
expr_stmt|;
name|this
operator|.
name|source2
operator|=
name|source2
expr_stmt|;
name|DbRelationshipTargetModel
name|model
init|=
operator|new
name|DbRelationshipTargetModel
argument_list|(
name|source1
argument_list|,
name|source2
argument_list|)
decl_stmt|;
name|setModel
argument_list|(
name|model
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|doHandleControl
parameter_list|(
name|Control
name|control
parameter_list|)
throws|throws
name|ControlException
block|{
if|if
condition|(
name|control
operator|.
name|matchesID
argument_list|(
name|CANCEL_CONTROL
argument_list|)
condition|)
block|{
name|shutdown
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
name|control
operator|.
name|matchesID
argument_list|(
name|CONTINUE_CONTROL
argument_list|)
condition|)
block|{
name|save
argument_list|()
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|save
parameter_list|()
block|{
name|DbRelationshipTargetModel
name|model
init|=
operator|(
name|DbRelationshipTargetModel
operator|)
name|getModel
argument_list|()
decl_stmt|;
name|DbEntity
name|target
init|=
name|model
operator|.
name|getTarget
argument_list|()
decl_stmt|;
if|if
condition|(
name|target
operator|==
literal|null
condition|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
operator|(
name|Component
operator|)
name|getView
argument_list|()
argument_list|,
literal|"Please select target entity first."
argument_list|,
literal|"Warning"
argument_list|,
name|JOptionPane
operator|.
name|WARNING_MESSAGE
argument_list|)
expr_stmt|;
return|return;
block|}
name|savePressed
operator|=
literal|true
expr_stmt|;
name|shutdown
argument_list|()
expr_stmt|;
block|}
comment|/**      * Creates and runs the dialog.      */
annotation|@
name|Override
specifier|public
name|void
name|startup
parameter_list|()
block|{
name|DbRelationshipTargetDialog
name|view
init|=
operator|new
name|DbRelationshipTargetDialog
argument_list|(
name|source1
argument_list|,
name|source2
argument_list|)
decl_stmt|;
name|setView
argument_list|(
name|view
argument_list|)
expr_stmt|;
name|view
operator|.
name|getSource1Button
argument_list|()
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
operator|(
operator|(
name|DbRelationshipTargetModel
operator|)
name|getModel
argument_list|()
operator|)
operator|.
name|setSource
argument_list|(
name|source1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|view
operator|.
name|getSource2Button
argument_list|()
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
operator|(
operator|(
name|DbRelationshipTargetModel
operator|)
name|getModel
argument_list|()
operator|)
operator|.
name|setSource
argument_list|(
name|source2
argument_list|,
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
name|view
operator|.
name|getSource1Button
argument_list|()
operator|.
name|setSelected
argument_list|(
literal|true
argument_list|)
expr_stmt|;
operator|(
operator|(
name|DbRelationshipTargetModel
operator|)
name|getModel
argument_list|()
operator|)
operator|.
name|setSource
argument_list|(
name|source1
argument_list|,
literal|true
argument_list|)
expr_stmt|;
name|super
operator|.
name|startup
argument_list|()
expr_stmt|;
block|}
name|boolean
name|isSavePressed
parameter_list|()
block|{
return|return
name|savePressed
return|;
block|}
block|}
end_class

end_unit

