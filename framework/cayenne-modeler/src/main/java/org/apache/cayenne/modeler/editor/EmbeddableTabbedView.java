begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|editor
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPanel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JScrollPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTabbedPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|event
operator|.
name|ChangeEvent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|event
operator|.
name|ChangeListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|Embeddable
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|EmbeddableAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|Application
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|ProjectController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|action
operator|.
name|ActionManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|action
operator|.
name|RemoveAttributeAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|action
operator|.
name|RemoveCallbackMethodAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|event
operator|.
name|EmbeddableAttributeDisplayEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|event
operator|.
name|EmbeddableAttributeDisplayListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|event
operator|.
name|EmbeddableDisplayEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|event
operator|.
name|EmbeddableDisplayListener
import|;
end_import

begin_class
specifier|public
class|class
name|EmbeddableTabbedView
extends|extends
name|JTabbedPane
implements|implements
name|EmbeddableAttributeDisplayListener
implements|,
name|EmbeddableDisplayListener
block|{
specifier|protected
name|ProjectController
name|mediator
decl_stmt|;
specifier|protected
name|JScrollPane
name|embeddablePanel
decl_stmt|;
specifier|protected
name|EmbeddableAttributeTab
name|attributesPanel
decl_stmt|;
specifier|protected
name|JPanel
name|listenersPanel
decl_stmt|;
specifier|public
name|EmbeddableTabbedView
parameter_list|(
name|ProjectController
name|mediator
parameter_list|)
block|{
name|this
operator|.
name|mediator
operator|=
name|mediator
expr_stmt|;
name|initView
argument_list|()
expr_stmt|;
name|initController
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|initView
parameter_list|()
block|{
name|setTabPlacement
argument_list|(
name|JTabbedPane
operator|.
name|TOP
argument_list|)
expr_stmt|;
name|embeddablePanel
operator|=
operator|new
name|JScrollPane
argument_list|(
operator|new
name|EmbeddableTab
argument_list|(
name|mediator
argument_list|)
argument_list|)
expr_stmt|;
name|addTab
argument_list|(
literal|"Embeddable"
argument_list|,
name|embeddablePanel
argument_list|)
expr_stmt|;
name|attributesPanel
operator|=
operator|new
name|EmbeddableAttributeTab
argument_list|(
name|mediator
argument_list|)
expr_stmt|;
name|addTab
argument_list|(
literal|"Attributes"
argument_list|,
name|attributesPanel
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|initController
parameter_list|()
block|{
name|mediator
operator|.
name|addEmbeddableAttributeDisplayListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|mediator
operator|.
name|addEmbeddableDisplayListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|addChangeListener
argument_list|(
operator|new
name|ChangeListener
argument_list|()
block|{
specifier|public
name|void
name|stateChanged
parameter_list|(
name|ChangeEvent
name|e
parameter_list|)
block|{
name|resetRemoveButtons
argument_list|()
expr_stmt|;
name|Component
name|selected
init|=
name|getSelectedComponent
argument_list|()
decl_stmt|;
while|while
condition|(
name|selected
operator|instanceof
name|JScrollPane
condition|)
block|{
name|selected
operator|=
operator|(
operator|(
name|JScrollPane
operator|)
name|selected
operator|)
operator|.
name|getViewport
argument_list|()
operator|.
name|getView
argument_list|()
expr_stmt|;
block|}
if|if
condition|(
name|selected
operator|instanceof
name|ExistingSelectionProcessor
condition|)
block|{
operator|(
operator|(
name|ExistingSelectionProcessor
operator|)
name|selected
operator|)
operator|.
name|processExistingSelection
argument_list|(
name|e
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
comment|/** Reset the remove buttons */
specifier|private
name|void
name|resetRemoveButtons
parameter_list|()
block|{
name|ActionManager
name|actionManager
init|=
name|Application
operator|.
name|getInstance
argument_list|()
operator|.
name|getActionManager
argument_list|()
decl_stmt|;
name|actionManager
operator|.
name|getAction
argument_list|(
name|RemoveAttributeAction
operator|.
name|class
argument_list|)
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|actionManager
operator|.
name|getAction
argument_list|(
name|RemoveCallbackMethodAction
operator|.
name|class
argument_list|)
operator|.
name|setEnabled
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|currentEmbeddableChanged
parameter_list|(
name|EmbeddableDisplayEvent
name|e
parameter_list|)
block|{
name|Embeddable
name|emb
init|=
name|e
operator|.
name|getEmbeddable
argument_list|()
decl_stmt|;
if|if
condition|(
name|e
operator|.
name|isMainTabFocus
argument_list|()
operator|&&
name|emb
operator|instanceof
name|Embeddable
condition|)
block|{
if|if
condition|(
name|getSelectedComponent
argument_list|()
operator|!=
name|embeddablePanel
condition|)
block|{
name|setSelectedComponent
argument_list|(
name|embeddablePanel
argument_list|)
expr_stmt|;
name|embeddablePanel
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
name|resetRemoveButtons
argument_list|()
expr_stmt|;
name|setVisible
argument_list|(
name|e
operator|.
name|getEmbeddable
argument_list|()
operator|!=
literal|null
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|currentEmbeddableAttributeChanged
parameter_list|(
name|EmbeddableAttributeDisplayEvent
name|e
parameter_list|)
block|{
if|if
condition|(
name|e
operator|.
name|getEmbeddable
argument_list|()
operator|==
literal|null
condition|)
return|return;
name|EmbeddableAttribute
index|[]
name|attrs
init|=
name|e
operator|.
name|getEmbeddableAttributes
argument_list|()
decl_stmt|;
name|EmbeddableAttribute
index|[]
name|embAttrs
init|=
operator|new
name|EmbeddableAttribute
index|[
name|attrs
operator|.
name|length
index|]
decl_stmt|;
name|System
operator|.
name|arraycopy
argument_list|(
name|attrs
argument_list|,
literal|0
argument_list|,
name|embAttrs
argument_list|,
literal|0
argument_list|,
name|attrs
operator|.
name|length
argument_list|)
expr_stmt|;
if|if
condition|(
name|getSelectedComponent
argument_list|()
operator|!=
name|attributesPanel
operator|&&
name|embAttrs
operator|.
name|length
operator|>
literal|0
condition|)
block|{
name|setSelectedComponent
argument_list|(
name|attributesPanel
argument_list|)
expr_stmt|;
name|attributesPanel
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
name|attributesPanel
operator|.
name|selectAttributes
argument_list|(
name|embAttrs
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

