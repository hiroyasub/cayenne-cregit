begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|objentity
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collections
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|List
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|Comparators
import|;
end_import

begin_import
import|import
name|org
operator|.
name|scopemvc
operator|.
name|core
operator|.
name|ModelChangeTypes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|scopemvc
operator|.
name|core
operator|.
name|Selector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|scopemvc
operator|.
name|model
operator|.
name|basic
operator|.
name|BasicModel
import|;
end_import

begin_comment
comment|/**  * Model of a dialog to select source, target and cardinality for DbRelationship    */
end_comment

begin_class
specifier|public
class|class
name|DbRelationshipTargetModel
extends|extends
name|BasicModel
block|{
specifier|public
specifier|static
specifier|final
name|Selector
name|TARGET_SELECTOR
init|=
name|Selector
operator|.
name|fromString
argument_list|(
literal|"target"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Selector
name|TARGETS_SELECTOR
init|=
name|Selector
operator|.
name|fromString
argument_list|(
literal|"targets"
argument_list|)
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|Selector
name|TO_MANY_SELECTOR
init|=
name|Selector
operator|.
name|fromString
argument_list|(
literal|"toMany"
argument_list|)
decl_stmt|;
specifier|protected
name|DbEntity
name|relTarget
decl_stmt|;
specifier|protected
name|List
argument_list|<
name|DbEntity
argument_list|>
name|relTargets
decl_stmt|;
specifier|protected
name|DbEntity
name|source
decl_stmt|;
specifier|protected
name|boolean
name|source1Selected
decl_stmt|;
specifier|protected
name|boolean
name|toMany
decl_stmt|;
annotation|@
name|SuppressWarnings
argument_list|(
literal|"unchecked"
argument_list|)
specifier|public
name|DbRelationshipTargetModel
parameter_list|(
name|DbEntity
name|source1
parameter_list|,
name|DbEntity
name|source2
parameter_list|)
block|{
name|this
operator|.
name|relTargets
operator|=
operator|new
name|ArrayList
argument_list|<
name|DbEntity
argument_list|>
argument_list|(
name|source1
operator|.
name|getDataMap
argument_list|()
operator|.
name|getDbEntities
argument_list|()
argument_list|)
expr_stmt|;
name|Collections
operator|.
name|sort
argument_list|(
name|relTargets
argument_list|,
name|Comparators
operator|.
name|getNamedObjectComparator
argument_list|()
argument_list|)
expr_stmt|;
comment|// this sets the right enabled state
name|fireModelChange
argument_list|(
name|ModelChangeTypes
operator|.
name|VALUE_CHANGED
argument_list|,
name|TARGETS_SELECTOR
argument_list|)
expr_stmt|;
block|}
specifier|public
name|List
argument_list|<
name|DbEntity
argument_list|>
name|getTargets
parameter_list|()
block|{
return|return
name|relTargets
return|;
block|}
specifier|public
name|DbEntity
name|getTarget
parameter_list|()
block|{
return|return
name|relTarget
return|;
block|}
specifier|public
name|void
name|setTarget
parameter_list|(
name|DbEntity
name|newRelTarget
parameter_list|)
block|{
name|this
operator|.
name|relTarget
operator|=
name|newRelTarget
expr_stmt|;
block|}
specifier|public
name|boolean
name|isSource1Selected
parameter_list|()
block|{
return|return
name|source1Selected
return|;
block|}
specifier|public
name|DbEntity
name|getSource
parameter_list|()
block|{
return|return
name|source
return|;
block|}
specifier|public
name|void
name|setSource
parameter_list|(
name|DbEntity
name|source
parameter_list|,
name|boolean
name|source1
parameter_list|)
block|{
name|this
operator|.
name|source
operator|=
name|source
expr_stmt|;
name|this
operator|.
name|source1Selected
operator|=
name|source1
expr_stmt|;
block|}
specifier|public
name|boolean
name|isToMany
parameter_list|()
block|{
return|return
name|toMany
return|;
block|}
specifier|public
name|void
name|setToMany
parameter_list|(
name|boolean
name|b
parameter_list|)
block|{
name|this
operator|.
name|toMany
operator|=
name|b
expr_stmt|;
block|}
block|}
end_class

end_unit

