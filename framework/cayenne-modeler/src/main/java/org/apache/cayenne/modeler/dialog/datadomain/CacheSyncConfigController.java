begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|datadomain
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashMap
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Map
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|DataDomain
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|DataRowStore
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|event
operator|.
name|DomainEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|ProjectController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|Log
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|logging
operator|.
name|LogFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|scopemvc
operator|.
name|controller
operator|.
name|basic
operator|.
name|BasicController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|scopemvc
operator|.
name|core
operator|.
name|Control
import|;
end_import

begin_import
import|import
name|org
operator|.
name|scopemvc
operator|.
name|core
operator|.
name|ControlException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|scopemvc
operator|.
name|core
operator|.
name|ModelChangeEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|scopemvc
operator|.
name|core
operator|.
name|ModelChangeListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|scopemvc
operator|.
name|core
operator|.
name|Selector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|scopemvc
operator|.
name|view
operator|.
name|swing
operator|.
name|SPanel
import|;
end_import

begin_comment
comment|/**  * A controller for CacheSyncConfigDialog and its subviews. Builds a model out of a  * DataDomain properties map, and on save updates DataDomain properties with configuration  * changes made by the user. This controller manages one main dialog view, and its  * subviews organized using CardLayout. Each subview as well as the main dialog have their  * own independent models.  *   */
end_comment

begin_class
specifier|public
class|class
name|CacheSyncConfigController
extends|extends
name|BasicController
implements|implements
name|ModelChangeListener
block|{
specifier|private
specifier|static
name|Log
name|logObj
init|=
name|LogFactory
operator|.
name|getLog
argument_list|(
name|CacheSyncConfigController
operator|.
name|class
argument_list|)
decl_stmt|;
comment|// using strings instead of the actioal factory classes, since we
comment|// JMS and JavaGroups libraries may not be around, and Modeler
comment|// may throw CNFE
specifier|private
specifier|static
specifier|final
name|String
name|JGROUPS_FACTORY_CLASS
init|=
literal|"org.apache.cayenne.event.JavaGroupsBridgeFactory"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|JMS_FACTORY_CLASS
init|=
literal|"org.apache.cayenne.event.JMSBridgeFactory"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|SAVE_CONFIG_CONTROL
init|=
literal|"cayenne.modeler.cacheSyncConfig.save.button"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|CANCEL_CONFIG_CONTROL
init|=
literal|"cayenne.modeler.cacheSyncConfig.cancel.button"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|JGROUPS_DEFAULT_CONTROL
init|=
literal|"cayenne.modeler.jgroupConfig.radio1"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|JGROUPS_URL_CONTROL
init|=
literal|"cayenne.modeler.jgroupConfig.radio2"
decl_stmt|;
specifier|protected
name|Map
name|existingCards
decl_stmt|;
specifier|protected
name|boolean
name|modified
decl_stmt|;
specifier|protected
name|ProjectController
name|eventController
decl_stmt|;
specifier|public
name|CacheSyncConfigController
parameter_list|(
name|ProjectController
name|eventController
parameter_list|)
block|{
name|this
operator|.
name|eventController
operator|=
name|eventController
expr_stmt|;
block|}
comment|/**      * Creates and shows a new modal dialog window. Registers as a listener for its own      * model to update subviews on model changes.      */
specifier|public
name|void
name|startup
parameter_list|()
block|{
name|DataDomain
name|domain
init|=
name|eventController
operator|.
name|getCurrentDataDomain
argument_list|()
decl_stmt|;
name|String
name|factory
init|=
operator|(
name|String
operator|)
name|domain
operator|.
name|getProperties
argument_list|()
operator|.
name|get
argument_list|(
name|DataRowStore
operator|.
name|EVENT_BRIDGE_FACTORY_PROPERTY
argument_list|)
decl_stmt|;
name|CacheSyncTypesModel
name|topModel
init|=
name|buildTypesModel
argument_list|(
name|factory
argument_list|)
decl_stmt|;
name|setModel
argument_list|(
name|topModel
argument_list|)
expr_stmt|;
name|setView
argument_list|(
operator|new
name|CacheSyncConfigDialog
argument_list|()
argument_list|)
expr_stmt|;
comment|// build cards, showing the one corresponding to DataDomain state
name|prepareChildren
argument_list|(
name|factory
argument_list|)
expr_stmt|;
name|super
operator|.
name|startup
argument_list|()
expr_stmt|;
block|}
comment|/**      * ModelChangeListener implementation that updates "modified" status and changes      * dialog subview on model changes.      */
specifier|public
name|void
name|modelChanged
parameter_list|(
name|ModelChangeEvent
name|inEvent
parameter_list|)
block|{
name|logObj
operator|.
name|info
argument_list|(
literal|"ModelChangeEvent: "
operator|+
name|inEvent
operator|.
name|getSelector
argument_list|()
argument_list|)
expr_stmt|;
name|Selector
name|selector
init|=
name|inEvent
operator|.
name|getSelector
argument_list|()
decl_stmt|;
if|if
condition|(
name|selector
operator|.
name|startsWith
argument_list|(
name|CacheSyncTypesModel
operator|.
name|FACTORY_LABEL_SELECTOR
argument_list|)
condition|)
block|{
name|changeConfigView
argument_list|()
expr_stmt|;
name|modified
operator|=
literal|true
expr_stmt|;
name|logObj
operator|.
name|info
argument_list|(
literal|"** Factory selection modified.."
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|modified
operator|=
literal|true
expr_stmt|;
name|logObj
operator|.
name|info
argument_list|(
literal|"** Property modified modified.."
argument_list|)
expr_stmt|;
block|}
block|}
comment|/**      * Overrides super implementation to process controls from this controller's view and      * its subviews.      */
specifier|protected
name|void
name|doHandleControl
parameter_list|(
name|Control
name|control
parameter_list|)
throws|throws
name|ControlException
block|{
name|logObj
operator|.
name|info
argument_list|(
literal|"Control: "
operator|+
name|control
argument_list|)
expr_stmt|;
if|if
condition|(
name|control
operator|.
name|matchesID
argument_list|(
name|CANCEL_CONFIG_CONTROL
argument_list|)
condition|)
block|{
name|shutdown
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
name|control
operator|.
name|matchesID
argument_list|(
name|SAVE_CONFIG_CONTROL
argument_list|)
condition|)
block|{
name|commitChanges
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
name|control
operator|.
name|matchesID
argument_list|(
name|JGROUPS_DEFAULT_CONTROL
argument_list|)
condition|)
block|{
name|jgroupsDefaultConfig
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
name|control
operator|.
name|matchesID
argument_list|(
name|JGROUPS_URL_CONTROL
argument_list|)
condition|)
block|{
name|jgroupsURLConfig
argument_list|()
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|jgroupsDefaultConfig
parameter_list|()
block|{
name|JGroupsConfigPanel
name|view
init|=
operator|(
name|JGroupsConfigPanel
operator|)
name|existingCards
operator|.
name|get
argument_list|(
name|CacheSyncTypesModel
operator|.
name|JGROUPS_FACTORY_LABEL
argument_list|)
decl_stmt|;
if|if
condition|(
name|view
operator|!=
literal|null
condition|)
block|{
name|view
operator|.
name|showDefaultConfig
argument_list|()
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|jgroupsURLConfig
parameter_list|()
block|{
name|JGroupsConfigPanel
name|view
init|=
operator|(
name|JGroupsConfigPanel
operator|)
name|existingCards
operator|.
name|get
argument_list|(
name|CacheSyncTypesModel
operator|.
name|JGROUPS_FACTORY_LABEL
argument_list|)
decl_stmt|;
if|if
condition|(
name|view
operator|!=
literal|null
condition|)
block|{
name|view
operator|.
name|showCustomConfig
argument_list|()
expr_stmt|;
block|}
block|}
comment|/**      * Stores configuration changes in the data domain properties.      */
specifier|protected
name|void
name|commitChanges
parameter_list|()
block|{
name|logObj
operator|.
name|info
argument_list|(
literal|"Has changes?: "
operator|+
name|modified
argument_list|)
expr_stmt|;
if|if
condition|(
name|modified
condition|)
block|{
comment|// extract model from current card
name|CacheSyncTypesModel
name|topModel
init|=
operator|(
name|CacheSyncTypesModel
operator|)
name|getModel
argument_list|()
decl_stmt|;
name|SPanel
name|card
init|=
operator|(
name|SPanel
operator|)
name|existingCards
operator|.
name|get
argument_list|(
name|topModel
operator|.
name|getFactoryLabel
argument_list|()
argument_list|)
decl_stmt|;
name|CacheSyncConfigModel
name|model
init|=
operator|(
name|CacheSyncConfigModel
operator|)
name|card
operator|.
name|getShownModel
argument_list|()
decl_stmt|;
name|DataDomain
name|domain
init|=
name|eventController
operator|.
name|getCurrentDataDomain
argument_list|()
decl_stmt|;
name|logObj
operator|.
name|warn
argument_list|(
literal|"domain properties BEFORE: "
operator|+
name|domain
operator|.
name|getProperties
argument_list|()
argument_list|)
expr_stmt|;
name|model
operator|.
name|storeProperties
argument_list|(
name|domain
operator|.
name|getProperties
argument_list|()
argument_list|)
expr_stmt|;
name|logObj
operator|.
name|warn
argument_list|(
literal|"domain properties: "
operator|+
name|domain
operator|.
name|getProperties
argument_list|()
argument_list|)
expr_stmt|;
name|eventController
operator|.
name|fireDomainEvent
argument_list|(
operator|new
name|DomainEvent
argument_list|(
name|this
argument_list|,
name|domain
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|shutdown
argument_list|()
expr_stmt|;
block|}
comment|/**      * Changes a subview to a panel specific for the currently selected configuration      * type.      */
specifier|protected
name|void
name|changeConfigView
parameter_list|()
block|{
name|CacheSyncTypesModel
name|topModel
init|=
operator|(
name|CacheSyncTypesModel
operator|)
name|getModel
argument_list|()
decl_stmt|;
name|CacheSyncConfigModel
name|newModel
init|=
name|buildModel
argument_list|(
name|topModel
argument_list|)
decl_stmt|;
comment|// NOTE: card doesn't have a controller, since it does not need it
name|String
name|label
init|=
name|topModel
operator|.
name|getFactoryLabel
argument_list|()
decl_stmt|;
name|SPanel
name|card
init|=
operator|(
name|SPanel
operator|)
name|existingCards
operator|.
name|get
argument_list|(
name|label
argument_list|)
decl_stmt|;
name|card
operator|.
name|setBoundModel
argument_list|(
name|newModel
argument_list|)
expr_stmt|;
operator|(
operator|(
name|CacheSyncConfigDialog
operator|)
name|getView
argument_list|()
operator|)
operator|.
name|showCard
argument_list|(
name|label
argument_list|)
expr_stmt|;
block|}
specifier|protected
name|CacheSyncTypesModel
name|buildTypesModel
parameter_list|(
name|String
name|factory
parameter_list|)
block|{
if|if
condition|(
name|factory
operator|==
literal|null
condition|)
block|{
name|factory
operator|=
name|DataRowStore
operator|.
name|EVENT_BRIDGE_FACTORY_DEFAULT
expr_stmt|;
block|}
name|String
name|label
decl_stmt|;
if|if
condition|(
name|JGROUPS_FACTORY_CLASS
operator|.
name|equals
argument_list|(
name|factory
argument_list|)
condition|)
block|{
name|label
operator|=
name|CacheSyncTypesModel
operator|.
name|JGROUPS_FACTORY_LABEL
expr_stmt|;
block|}
if|else if
condition|(
name|JMS_FACTORY_CLASS
operator|.
name|equals
argument_list|(
name|factory
argument_list|)
condition|)
block|{
name|label
operator|=
name|CacheSyncTypesModel
operator|.
name|JMS_FACTORY_LABEL
expr_stmt|;
block|}
else|else
block|{
name|label
operator|=
name|CacheSyncTypesModel
operator|.
name|CUSTOM_FACTORY_LABEL
expr_stmt|;
block|}
name|CacheSyncTypesModel
name|model
init|=
operator|new
name|CacheSyncTypesModel
argument_list|()
decl_stmt|;
name|model
operator|.
name|setFactoryLabel
argument_list|(
name|label
argument_list|)
expr_stmt|;
name|model
operator|.
name|addModelChangeListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
return|return
name|model
return|;
block|}
specifier|protected
name|CacheSyncConfigModel
name|buildModel
parameter_list|(
name|CacheSyncTypesModel
name|topModel
parameter_list|)
block|{
name|String
name|label
init|=
name|topModel
operator|.
name|getFactoryLabel
argument_list|()
decl_stmt|;
name|String
name|factory
decl_stmt|;
if|if
condition|(
name|label
operator|.
name|equals
argument_list|(
name|CacheSyncTypesModel
operator|.
name|JGROUPS_FACTORY_LABEL
argument_list|)
condition|)
block|{
name|factory
operator|=
name|JGROUPS_FACTORY_CLASS
expr_stmt|;
block|}
if|else if
condition|(
name|label
operator|.
name|equals
argument_list|(
name|CacheSyncTypesModel
operator|.
name|JMS_FACTORY_LABEL
argument_list|)
condition|)
block|{
name|factory
operator|=
name|JMS_FACTORY_CLASS
expr_stmt|;
block|}
else|else
block|{
comment|// reset factory
name|factory
operator|=
literal|null
expr_stmt|;
block|}
return|return
name|buildModel
argument_list|(
name|factory
argument_list|)
return|;
block|}
specifier|protected
name|CacheSyncConfigModel
name|buildModel
parameter_list|(
name|String
name|factory
parameter_list|)
block|{
name|CacheSyncConfigModel
name|model
decl_stmt|;
if|if
condition|(
name|JGROUPS_FACTORY_CLASS
operator|.
name|equals
argument_list|(
name|factory
argument_list|)
condition|)
block|{
name|model
operator|=
operator|new
name|JGroupsConfigModel
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
name|JMS_FACTORY_CLASS
operator|.
name|equals
argument_list|(
name|factory
argument_list|)
condition|)
block|{
name|model
operator|=
operator|new
name|JMSConfigModel
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|model
operator|=
operator|new
name|CacheSyncConfigModel
argument_list|()
expr_stmt|;
block|}
name|model
operator|.
name|setMap
argument_list|(
operator|new
name|HashMap
argument_list|(
name|eventController
operator|.
name|getCurrentDataDomain
argument_list|()
operator|.
name|getProperties
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|model
operator|.
name|setFactoryClass
argument_list|(
name|factory
argument_list|)
expr_stmt|;
name|model
operator|.
name|addModelChangeListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
return|return
name|model
return|;
block|}
specifier|protected
name|void
name|prepareChildren
parameter_list|(
name|String
name|factory
parameter_list|)
block|{
name|existingCards
operator|=
operator|new
name|HashMap
argument_list|()
expr_stmt|;
name|CacheSyncConfigDialog
name|topView
init|=
operator|(
name|CacheSyncConfigDialog
operator|)
name|getView
argument_list|()
decl_stmt|;
comment|// note that none of the panels need a controller
comment|// if they issue controls, they will use this object taken from parent
name|JGroupsConfigPanel
name|jgroupsPanel
init|=
operator|new
name|JGroupsConfigPanel
argument_list|()
decl_stmt|;
name|existingCards
operator|.
name|put
argument_list|(
name|CacheSyncTypesModel
operator|.
name|JGROUPS_FACTORY_LABEL
argument_list|,
name|jgroupsPanel
argument_list|)
expr_stmt|;
name|topView
operator|.
name|addCard
argument_list|(
name|jgroupsPanel
argument_list|,
name|CacheSyncTypesModel
operator|.
name|JGROUPS_FACTORY_LABEL
argument_list|)
expr_stmt|;
name|JMSConfigPanel
name|jmsPanel
init|=
operator|new
name|JMSConfigPanel
argument_list|()
decl_stmt|;
name|existingCards
operator|.
name|put
argument_list|(
name|CacheSyncTypesModel
operator|.
name|JMS_FACTORY_LABEL
argument_list|,
name|jmsPanel
argument_list|)
expr_stmt|;
name|topView
operator|.
name|addCard
argument_list|(
name|jmsPanel
argument_list|,
name|CacheSyncTypesModel
operator|.
name|JMS_FACTORY_LABEL
argument_list|)
expr_stmt|;
name|CustomRemoteEventsConfigPanel
name|customFactoryPanel
init|=
operator|new
name|CustomRemoteEventsConfigPanel
argument_list|()
decl_stmt|;
name|existingCards
operator|.
name|put
argument_list|(
name|CacheSyncTypesModel
operator|.
name|CUSTOM_FACTORY_LABEL
argument_list|,
name|customFactoryPanel
argument_list|)
expr_stmt|;
name|topView
operator|.
name|addCard
argument_list|(
name|customFactoryPanel
argument_list|,
name|CacheSyncTypesModel
operator|.
name|CUSTOM_FACTORY_LABEL
argument_list|)
expr_stmt|;
if|if
condition|(
name|factory
operator|==
literal|null
condition|)
block|{
name|factory
operator|=
name|DataRowStore
operator|.
name|EVENT_BRIDGE_FACTORY_DEFAULT
expr_stmt|;
block|}
comment|// display the right initial card
comment|// can't call "changeConfigView", since it will reset custom factories..
name|Object
name|model
init|=
name|buildModel
argument_list|(
name|factory
argument_list|)
decl_stmt|;
if|if
condition|(
name|JGROUPS_FACTORY_CLASS
operator|.
name|equals
argument_list|(
name|factory
argument_list|)
condition|)
block|{
name|jgroupsPanel
operator|.
name|setBoundModel
argument_list|(
name|model
argument_list|)
expr_stmt|;
operator|(
operator|(
name|CacheSyncConfigDialog
operator|)
name|getView
argument_list|()
operator|)
operator|.
name|showCard
argument_list|(
name|CacheSyncTypesModel
operator|.
name|JGROUPS_FACTORY_LABEL
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|JMS_FACTORY_CLASS
operator|.
name|equals
argument_list|(
name|factory
argument_list|)
condition|)
block|{
name|jmsPanel
operator|.
name|setBoundModel
argument_list|(
name|model
argument_list|)
expr_stmt|;
operator|(
operator|(
name|CacheSyncConfigDialog
operator|)
name|getView
argument_list|()
operator|)
operator|.
name|showCard
argument_list|(
name|CacheSyncTypesModel
operator|.
name|JMS_FACTORY_LABEL
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|customFactoryPanel
operator|.
name|setBoundModel
argument_list|(
name|model
argument_list|)
expr_stmt|;
operator|(
operator|(
name|CacheSyncConfigDialog
operator|)
name|getView
argument_list|()
operator|)
operator|.
name|showCard
argument_list|(
name|CacheSyncTypesModel
operator|.
name|CUSTOM_FACTORY_LABEL
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

