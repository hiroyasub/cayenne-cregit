begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|objentity
package|;
end_package

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbRelationship
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjRelationship
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|event
operator|.
name|RelationshipEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|Application
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|ProjectController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|ResolveDbRelationshipDialog
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|project
operator|.
name|NamedObjectFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|scopemvc
operator|.
name|controller
operator|.
name|basic
operator|.
name|BasicController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|scopemvc
operator|.
name|core
operator|.
name|Control
import|;
end_import

begin_import
import|import
name|org
operator|.
name|scopemvc
operator|.
name|core
operator|.
name|ControlException
import|;
end_import

begin_comment
comment|/**  * @since 1.1  * @author Andrus Adamchik  */
end_comment

begin_class
specifier|public
class|class
name|ObjRelationshipInfoController
extends|extends
name|BasicController
block|{
specifier|public
specifier|static
specifier|final
name|String
name|SAVE_CONTROL
init|=
literal|"cayenne.modeler.mapObjRelationship.save.button"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|CANCEL_CONTROL
init|=
literal|"cayenne.modeler.mapObjRelationship.cancel.button"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|NEW_TOONE_CONTROL
init|=
literal|"cayenne.modeler.mapObjRelationship.newtoone.button"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|NEW_TOMANY_CONTROL
init|=
literal|"cayenne.modeler.mapObjRelationship.newtomany.button"
decl_stmt|;
specifier|protected
name|ProjectController
name|mediator
decl_stmt|;
specifier|public
name|ObjRelationshipInfoController
parameter_list|(
name|ProjectController
name|mediator
parameter_list|,
name|ObjRelationship
name|relationship
parameter_list|)
block|{
name|this
operator|.
name|mediator
operator|=
name|mediator
expr_stmt|;
name|Collection
name|objEntities
init|=
name|mediator
operator|.
name|getCurrentDataMap
argument_list|()
operator|.
name|getNamespace
argument_list|()
operator|.
name|getObjEntities
argument_list|()
decl_stmt|;
name|ObjRelationshipInfoModel
name|model
init|=
operator|new
name|ObjRelationshipInfoModel
argument_list|(
name|relationship
argument_list|,
name|objEntities
argument_list|)
decl_stmt|;
name|setModel
argument_list|(
name|model
argument_list|)
expr_stmt|;
block|}
comment|/**      * Creates and runs the classpath dialog.      */
specifier|public
name|void
name|startup
parameter_list|()
block|{
name|ObjRelationshipInfoDialog
name|view
init|=
operator|new
name|ObjRelationshipInfoDialog
argument_list|()
decl_stmt|;
name|setView
argument_list|(
name|view
argument_list|)
expr_stmt|;
name|view
operator|.
name|initFromModel
argument_list|()
expr_stmt|;
name|super
operator|.
name|startup
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|doHandleControl
parameter_list|(
name|Control
name|control
parameter_list|)
throws|throws
name|ControlException
block|{
if|if
condition|(
name|control
operator|.
name|matchesID
argument_list|(
name|CANCEL_CONTROL
argument_list|)
condition|)
block|{
name|shutdown
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
name|control
operator|.
name|matchesID
argument_list|(
name|SAVE_CONTROL
argument_list|)
condition|)
block|{
name|saveMapping
argument_list|()
expr_stmt|;
block|}
if|else if
condition|(
name|control
operator|.
name|matchesID
argument_list|(
name|NEW_TOONE_CONTROL
argument_list|)
condition|)
block|{
name|createRelationship
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|control
operator|.
name|matchesID
argument_list|(
name|NEW_TOMANY_CONTROL
argument_list|)
condition|)
block|{
name|createRelationship
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
block|}
specifier|protected
name|void
name|saveMapping
parameter_list|()
block|{
name|ObjRelationshipInfoModel
name|model
init|=
operator|(
name|ObjRelationshipInfoModel
operator|)
name|getModel
argument_list|()
decl_stmt|;
if|if
condition|(
name|model
operator|.
name|savePath
argument_list|()
condition|)
block|{
name|mediator
operator|.
name|fireObjRelationshipEvent
argument_list|(
operator|new
name|RelationshipEvent
argument_list|(
name|Application
operator|.
name|getFrame
argument_list|()
argument_list|,
name|model
operator|.
name|getRelationship
argument_list|()
argument_list|,
name|model
operator|.
name|getRelationship
argument_list|()
operator|.
name|getSourceEntity
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
block|}
name|shutdown
argument_list|()
expr_stmt|;
block|}
comment|/**      * Creates a new relationship connecting currently selected source entity with      * ObjRelationship target entity. User is allowed to edit the relationship, change its      * name, and create joins.      */
specifier|protected
name|void
name|createRelationship
parameter_list|(
name|boolean
name|toMany
parameter_list|)
block|{
name|cancelEditing
argument_list|()
expr_stmt|;
name|ObjRelationshipInfoModel
name|model
init|=
operator|(
name|ObjRelationshipInfoModel
operator|)
name|getModel
argument_list|()
decl_stmt|;
name|DbEntity
name|source
init|=
name|model
operator|.
name|getStartEntity
argument_list|()
decl_stmt|;
name|DbEntity
name|target
init|=
name|model
operator|.
name|getEndEntity
argument_list|()
decl_stmt|;
name|EntityRelationshipsModel
name|selectedPathComponent
init|=
name|model
operator|.
name|getSelectedPathComponent
argument_list|()
decl_stmt|;
if|if
condition|(
name|selectedPathComponent
operator|!=
literal|null
condition|)
block|{
name|source
operator|=
operator|(
name|DbEntity
operator|)
name|selectedPathComponent
operator|.
name|getSourceEntity
argument_list|()
expr_stmt|;
block|}
name|DbRelationship
name|dbRelationship
init|=
operator|(
name|DbRelationship
operator|)
name|NamedObjectFactory
operator|.
name|createRelationship
argument_list|(
name|source
argument_list|,
name|target
argument_list|,
name|toMany
argument_list|)
decl_stmt|;
comment|// note: NamedObjectFactory doesn't set source or target, just the name
name|dbRelationship
operator|.
name|setSourceEntity
argument_list|(
name|source
argument_list|)
expr_stmt|;
name|dbRelationship
operator|.
name|setTargetEntity
argument_list|(
name|target
argument_list|)
expr_stmt|;
name|dbRelationship
operator|.
name|setToMany
argument_list|(
name|toMany
argument_list|)
expr_stmt|;
name|source
operator|.
name|addRelationship
argument_list|(
name|dbRelationship
argument_list|)
expr_stmt|;
comment|// TODO: creating relationship outside of ResolveDbRelationshipDialog confuses it
comment|// to send incorrect event - CHANGE instead of ADD
name|ResolveDbRelationshipDialog
name|dialog
init|=
operator|new
name|ResolveDbRelationshipDialog
argument_list|(
name|dbRelationship
argument_list|)
decl_stmt|;
name|dialog
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
if|if
condition|(
name|dialog
operator|.
name|isCancelPressed
argument_list|()
condition|)
block|{
name|source
operator|.
name|removeRelationship
argument_list|(
name|dbRelationship
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
else|else
block|{
if|if
condition|(
name|selectedPathComponent
operator|==
literal|null
condition|)
block|{
name|selectedPathComponent
operator|=
operator|(
name|EntityRelationshipsModel
operator|)
name|model
operator|.
name|getDbRelationshipPath
argument_list|()
operator|.
name|get
argument_list|(
literal|0
argument_list|)
expr_stmt|;
name|model
operator|.
name|setSelectedPathComponent
argument_list|(
name|selectedPathComponent
argument_list|)
expr_stmt|;
block|}
name|selectedPathComponent
operator|.
name|setRelationshipName
argument_list|(
name|dbRelationship
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|dialog
operator|.
name|dispose
argument_list|()
expr_stmt|;
block|}
specifier|protected
name|void
name|cancelEditing
parameter_list|()
block|{
operator|(
operator|(
name|ObjRelationshipInfoDialog
operator|)
name|getView
argument_list|()
operator|)
operator|.
name|cancelTableEditing
argument_list|()
expr_stmt|;
block|}
block|}
end_class

end_unit

