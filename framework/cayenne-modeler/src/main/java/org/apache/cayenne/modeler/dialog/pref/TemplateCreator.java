begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|pref
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Component
import|;
end_import

begin_import
import|import
name|java
operator|.
name|beans
operator|.
name|PropertyChangeEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|beans
operator|.
name|PropertyChangeListener
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|HashSet
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Set
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JDialog
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JOptionPane
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|SwingUtilities
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|pref
operator|.
name|FSPath
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|CayenneController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|pref
operator|.
name|Domain
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|pref
operator|.
name|PreferenceEditor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|swing
operator|.
name|BindingBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|swing
operator|.
name|control
operator|.
name|FileChooser
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|util
operator|.
name|Util
import|;
end_import

begin_class
specifier|public
class|class
name|TemplateCreator
extends|extends
name|CayenneController
block|{
specifier|protected
name|TemplateCreatorView
name|view
decl_stmt|;
specifier|protected
name|boolean
name|canceled
decl_stmt|;
specifier|protected
name|Set
name|existingNames
decl_stmt|;
specifier|protected
name|PreferenceEditor
name|editor
decl_stmt|;
specifier|protected
name|Domain
name|domain
decl_stmt|;
specifier|public
name|TemplateCreator
parameter_list|(
name|TemplatePreferences
name|parent
parameter_list|)
block|{
name|super
argument_list|(
name|parent
argument_list|)
expr_stmt|;
name|JDialog
name|parentDialog
init|=
operator|(
name|JDialog
operator|)
name|SwingUtilities
operator|.
name|getAncestorOfClass
argument_list|(
name|JDialog
operator|.
name|class
argument_list|,
name|parent
operator|.
name|getView
argument_list|()
argument_list|)
decl_stmt|;
name|this
operator|.
name|view
operator|=
operator|new
name|TemplateCreatorView
argument_list|(
name|parentDialog
argument_list|)
expr_stmt|;
name|this
operator|.
name|existingNames
operator|=
operator|new
name|HashSet
argument_list|()
expr_stmt|;
name|this
operator|.
name|editor
operator|=
name|parent
operator|.
name|getEditor
argument_list|()
expr_stmt|;
name|this
operator|.
name|domain
operator|=
name|parent
operator|.
name|getTemplateDomain
argument_list|()
expr_stmt|;
for|for
control|(
name|FSPath
name|path
range|:
name|parent
operator|.
name|getTemplateEntries
argument_list|()
control|)
block|{
name|existingNames
operator|.
name|add
argument_list|(
name|path
operator|.
name|getKey
argument_list|()
argument_list|)
expr_stmt|;
block|}
name|initBindings
argument_list|()
expr_stmt|;
block|}
specifier|public
name|Component
name|getView
parameter_list|()
block|{
return|return
name|view
return|;
block|}
name|FSPath
name|getLastTemplateDirectory
parameter_list|()
block|{
comment|// find start directory in preferences
name|FSPath
name|path
init|=
operator|(
name|FSPath
operator|)
name|getViewDomain
argument_list|()
operator|.
name|getDetail
argument_list|(
literal|"lastTemplate"
argument_list|,
name|FSPath
operator|.
name|class
argument_list|,
literal|true
argument_list|)
decl_stmt|;
if|if
condition|(
name|path
operator|.
name|getPath
argument_list|()
operator|==
literal|null
condition|)
block|{
name|path
operator|.
name|setPath
argument_list|(
name|getLastDirectory
argument_list|()
operator|.
name|getPath
argument_list|()
argument_list|)
expr_stmt|;
block|}
return|return
name|path
return|;
block|}
specifier|protected
name|void
name|initBindings
parameter_list|()
block|{
name|BindingBuilder
name|builder
init|=
operator|new
name|BindingBuilder
argument_list|(
name|getApplication
argument_list|()
operator|.
name|getBindingFactory
argument_list|()
argument_list|,
name|this
argument_list|)
decl_stmt|;
name|builder
operator|.
name|bindToAction
argument_list|(
name|view
operator|.
name|getCancelButton
argument_list|()
argument_list|,
literal|"cancelAction()"
argument_list|)
expr_stmt|;
name|builder
operator|.
name|bindToAction
argument_list|(
name|view
operator|.
name|getOkButton
argument_list|()
argument_list|,
literal|"okAction()"
argument_list|)
expr_stmt|;
specifier|final
name|FSPath
name|path
init|=
name|getLastTemplateDirectory
argument_list|()
decl_stmt|;
name|view
operator|.
name|getTemplateChooser
argument_list|()
operator|.
name|setCurrentDirectory
argument_list|(
name|path
operator|.
name|getExistingDirectory
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|view
operator|.
name|getTemplateChooser
argument_list|()
operator|.
name|addPropertyChangeListener
argument_list|(
name|FileChooser
operator|.
name|CURRENT_DIRECTORY_PROPERTY
argument_list|,
operator|new
name|PropertyChangeListener
argument_list|()
block|{
specifier|public
name|void
name|propertyChange
parameter_list|(
name|PropertyChangeEvent
name|evt
parameter_list|)
block|{
name|File
name|directory
init|=
name|view
operator|.
name|getTemplateChooser
argument_list|()
operator|.
name|getCurrentDirectory
argument_list|()
decl_stmt|;
name|path
operator|.
name|setDirectory
argument_list|(
name|directory
argument_list|)
expr_stmt|;
block|}
block|}
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|okAction
parameter_list|()
block|{
name|String
name|templateName
init|=
name|view
operator|.
name|getTemplateName
argument_list|()
operator|.
name|getText
argument_list|()
decl_stmt|;
if|if
condition|(
name|Util
operator|.
name|isEmptyString
argument_list|(
name|templateName
argument_list|)
condition|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|view
argument_list|,
literal|"Enter Template Name"
argument_list|,
literal|null
argument_list|,
name|JOptionPane
operator|.
name|WARNING_MESSAGE
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|existingNames
operator|.
name|contains
argument_list|(
name|templateName
argument_list|)
condition|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|view
argument_list|,
literal|"'"
operator|+
name|templateName
operator|+
literal|"' is already taken, enter a different name"
argument_list|,
literal|null
argument_list|,
name|JOptionPane
operator|.
name|WARNING_MESSAGE
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|view
operator|.
name|getTemplateChooser
argument_list|()
operator|.
name|getFile
argument_list|()
operator|==
literal|null
condition|)
block|{
name|JOptionPane
operator|.
name|showMessageDialog
argument_list|(
name|view
argument_list|,
literal|"Must select an existing template file"
argument_list|,
literal|null
argument_list|,
name|JOptionPane
operator|.
name|WARNING_MESSAGE
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|canceled
operator|=
literal|false
expr_stmt|;
name|view
operator|.
name|dispose
argument_list|()
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|cancelAction
parameter_list|()
block|{
name|canceled
operator|=
literal|true
expr_stmt|;
name|view
operator|.
name|dispose
argument_list|()
expr_stmt|;
block|}
comment|/**      * Pops up a dialog and blocks current thread until the dialog is closed.      */
specifier|public
name|FSPath
name|startupAction
parameter_list|()
block|{
comment|// this should handle closing via ESC
name|canceled
operator|=
literal|true
expr_stmt|;
name|view
operator|.
name|setModal
argument_list|(
literal|true
argument_list|)
expr_stmt|;
name|view
operator|.
name|pack
argument_list|()
expr_stmt|;
name|view
operator|.
name|setResizable
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|makeCloseableOnEscape
argument_list|()
expr_stmt|;
name|centerView
argument_list|()
expr_stmt|;
name|view
operator|.
name|setVisible
argument_list|(
literal|true
argument_list|)
expr_stmt|;
return|return
name|createTemplate
argument_list|()
return|;
block|}
specifier|protected
name|FSPath
name|createTemplate
parameter_list|()
block|{
if|if
condition|(
name|canceled
condition|)
block|{
return|return
literal|null
return|;
block|}
name|String
name|key
init|=
name|view
operator|.
name|getTemplateName
argument_list|()
operator|.
name|getText
argument_list|()
decl_stmt|;
name|File
name|file
init|=
name|view
operator|.
name|getTemplateChooser
argument_list|()
operator|.
name|getFile
argument_list|()
decl_stmt|;
name|FSPath
name|path
init|=
operator|(
name|FSPath
operator|)
name|editor
operator|.
name|createDetail
argument_list|(
name|domain
argument_list|,
name|key
argument_list|,
name|FSPath
operator|.
name|class
argument_list|)
decl_stmt|;
name|path
operator|.
name|setPath
argument_list|(
name|file
operator|!=
literal|null
condition|?
name|file
operator|.
name|getAbsolutePath
argument_list|()
else|:
literal|null
argument_list|)
expr_stmt|;
return|return
name|path
return|;
block|}
block|}
end_class

end_unit

