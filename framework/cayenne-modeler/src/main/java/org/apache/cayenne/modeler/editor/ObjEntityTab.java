begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|editor
package|;
end_package

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|BorderLayout
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|Color
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionEvent
import|;
end_import

begin_import
import|import
name|java
operator|.
name|awt
operator|.
name|event
operator|.
name|ActionListener
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Arrays
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|EventObject
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|DefaultComboBoxModel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JButton
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JCheckBox
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JComboBox
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JComponent
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JLabel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JPanel
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JTextField
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|swing
operator|.
name|JToolBar
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|DataDomain
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|exp
operator|.
name|Expression
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DataMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|event
operator|.
name|EntityEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|Application
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|ProjectController
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|action
operator|.
name|CreateAttributeAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|action
operator|.
name|CreateRelationshipAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|action
operator|.
name|ObjEntitySyncAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|dialog
operator|.
name|objentity
operator|.
name|ClassNameUpdater
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|event
operator|.
name|EntityDisplayEvent
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|event
operator|.
name|ObjEntityDisplayListener
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|CayenneWidgetFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|CellRenderers
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|Comparators
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|ExpressionConvertor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|ModelerUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|util
operator|.
name|TextAdapter
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|util
operator|.
name|CayenneMapEntry
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|util
operator|.
name|Util
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|validation
operator|.
name|ValidationException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|collections
operator|.
name|CollectionUtils
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|commons
operator|.
name|collections
operator|.
name|Predicate
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|builder
operator|.
name|DefaultFormBuilder
import|;
end_import

begin_import
import|import
name|com
operator|.
name|jgoodies
operator|.
name|forms
operator|.
name|layout
operator|.
name|FormLayout
import|;
end_import

begin_comment
comment|/**  * Detail view of the ObjEntity properties.  *   * @author Michael Misha Shengaout  * @author Andrus Adamchik  */
end_comment

begin_class
specifier|public
class|class
name|ObjEntityTab
extends|extends
name|JPanel
implements|implements
name|ObjEntityDisplayListener
implements|,
name|ExistingSelectionProcessor
block|{
specifier|private
specifier|static
specifier|final
name|Object
name|noInheritance
init|=
operator|new
name|CayenneMapEntry
argument_list|()
block|{
specifier|public
name|String
name|getName
parameter_list|()
block|{
return|return
literal|"Direct Mapping to Table/View"
return|;
block|}
specifier|public
name|Object
name|getParent
parameter_list|()
block|{
return|return
literal|null
return|;
block|}
specifier|public
name|void
name|setParent
parameter_list|(
name|Object
name|parent
parameter_list|)
block|{
block|}
block|}
decl_stmt|;
specifier|protected
name|ProjectController
name|mediator
decl_stmt|;
specifier|protected
name|TextAdapter
name|name
decl_stmt|;
specifier|protected
name|TextAdapter
name|className
decl_stmt|;
specifier|protected
name|JLabel
name|superclassLabel
decl_stmt|;
specifier|protected
name|TextAdapter
name|superClassName
decl_stmt|;
specifier|protected
name|TextAdapter
name|qualifier
decl_stmt|;
specifier|protected
name|JComboBox
name|dbEntityCombo
decl_stmt|;
specifier|protected
name|JButton
name|syncWithDbEntityButton
decl_stmt|;
specifier|protected
name|JComboBox
name|superEntityCombo
decl_stmt|;
specifier|protected
name|JButton
name|tableLabel
decl_stmt|;
specifier|protected
name|JCheckBox
name|readOnly
decl_stmt|;
specifier|protected
name|JCheckBox
name|optimisticLocking
decl_stmt|;
specifier|protected
name|JCheckBox
name|excludeSuperclassListeners
decl_stmt|;
specifier|protected
name|JCheckBox
name|excludeDefaultListeners
decl_stmt|;
specifier|protected
name|JComponent
name|clientSeparator
decl_stmt|;
specifier|protected
name|JLabel
name|serverOnlyLabel
decl_stmt|;
specifier|protected
name|JLabel
name|clientClassNameLabel
decl_stmt|;
specifier|protected
name|JLabel
name|clientSuperClassNameLabel
decl_stmt|;
specifier|protected
name|JCheckBox
name|serverOnly
decl_stmt|;
specifier|protected
name|TextAdapter
name|clientClassName
decl_stmt|;
specifier|protected
name|TextAdapter
name|clientSuperClassName
decl_stmt|;
specifier|public
name|ObjEntityTab
parameter_list|(
name|ProjectController
name|mediator
parameter_list|)
block|{
name|this
operator|.
name|mediator
operator|=
name|mediator
expr_stmt|;
name|initView
argument_list|()
expr_stmt|;
name|initController
argument_list|()
expr_stmt|;
block|}
specifier|private
name|void
name|initView
parameter_list|()
block|{
name|this
operator|.
name|setLayout
argument_list|(
operator|new
name|BorderLayout
argument_list|()
argument_list|)
expr_stmt|;
name|JToolBar
name|toolBar
init|=
operator|new
name|JToolBar
argument_list|()
decl_stmt|;
name|Application
name|app
init|=
name|Application
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|toolBar
operator|.
name|add
argument_list|(
name|app
operator|.
name|getAction
argument_list|(
name|ObjEntitySyncAction
operator|.
name|getActionName
argument_list|()
argument_list|)
operator|.
name|buildButton
argument_list|()
argument_list|)
expr_stmt|;
name|toolBar
operator|.
name|add
argument_list|(
name|app
operator|.
name|getAction
argument_list|(
name|CreateAttributeAction
operator|.
name|getActionName
argument_list|()
argument_list|)
operator|.
name|buildButton
argument_list|()
argument_list|)
expr_stmt|;
name|toolBar
operator|.
name|add
argument_list|(
name|app
operator|.
name|getAction
argument_list|(
name|CreateRelationshipAction
operator|.
name|getActionName
argument_list|()
argument_list|)
operator|.
name|buildButton
argument_list|()
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|toolBar
argument_list|,
name|BorderLayout
operator|.
name|NORTH
argument_list|)
expr_stmt|;
comment|// create widgets
name|name
operator|=
operator|new
name|TextAdapter
argument_list|(
operator|new
name|JTextField
argument_list|()
argument_list|)
block|{
specifier|protected
name|void
name|updateModel
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|setEntityName
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
block|}
expr_stmt|;
name|superClassName
operator|=
operator|new
name|TextAdapter
argument_list|(
operator|new
name|JTextField
argument_list|()
argument_list|)
block|{
specifier|protected
name|void
name|updateModel
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|setSuperClassName
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
block|}
expr_stmt|;
name|className
operator|=
operator|new
name|TextAdapter
argument_list|(
operator|new
name|JTextField
argument_list|()
argument_list|)
block|{
specifier|protected
name|void
name|updateModel
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|setClassName
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
block|}
expr_stmt|;
name|qualifier
operator|=
operator|new
name|TextAdapter
argument_list|(
operator|new
name|JTextField
argument_list|()
argument_list|)
block|{
specifier|protected
name|void
name|updateModel
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|setQualifier
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
block|}
expr_stmt|;
name|dbEntityCombo
operator|=
name|CayenneWidgetFactory
operator|.
name|createComboBox
argument_list|()
expr_stmt|;
name|superEntityCombo
operator|=
name|CayenneWidgetFactory
operator|.
name|createComboBox
argument_list|()
expr_stmt|;
name|readOnly
operator|=
operator|new
name|JCheckBox
argument_list|()
expr_stmt|;
name|optimisticLocking
operator|=
operator|new
name|JCheckBox
argument_list|()
expr_stmt|;
name|excludeSuperclassListeners
operator|=
operator|new
name|JCheckBox
argument_list|()
expr_stmt|;
name|excludeDefaultListeners
operator|=
operator|new
name|JCheckBox
argument_list|()
expr_stmt|;
name|tableLabel
operator|=
name|CayenneWidgetFactory
operator|.
name|createLabelButton
argument_list|(
literal|"Table/View:"
argument_list|)
expr_stmt|;
name|syncWithDbEntityButton
operator|=
name|CayenneWidgetFactory
operator|.
name|createButton
argument_list|(
literal|"Sync w/DbEntity"
argument_list|)
expr_stmt|;
name|syncWithDbEntityButton
operator|.
name|setIcon
argument_list|(
name|ModelerUtil
operator|.
name|buildIcon
argument_list|(
literal|"icon-sync.gif"
argument_list|)
argument_list|)
expr_stmt|;
name|syncWithDbEntityButton
operator|.
name|setToolTipText
argument_list|(
literal|"Sync this ObjEntity with its DBEntity"
argument_list|)
expr_stmt|;
name|serverOnly
operator|=
operator|new
name|JCheckBox
argument_list|()
expr_stmt|;
name|clientClassName
operator|=
operator|new
name|TextAdapter
argument_list|(
operator|new
name|JTextField
argument_list|()
argument_list|)
block|{
specifier|protected
name|void
name|updateModel
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|setClientClassName
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
block|}
expr_stmt|;
name|clientSuperClassName
operator|=
operator|new
name|TextAdapter
argument_list|(
operator|new
name|JTextField
argument_list|()
argument_list|)
block|{
specifier|protected
name|void
name|updateModel
parameter_list|(
name|String
name|text
parameter_list|)
block|{
name|setClientSuperClassName
argument_list|(
name|text
argument_list|)
expr_stmt|;
block|}
block|}
expr_stmt|;
comment|// assemble
name|FormLayout
name|layout
init|=
operator|new
name|FormLayout
argument_list|(
literal|"right:100dlu, 3dlu, fill:135dlu, 3dlu, pref"
argument_list|,
literal|""
argument_list|)
decl_stmt|;
name|DefaultFormBuilder
name|builder
init|=
operator|new
name|DefaultFormBuilder
argument_list|(
name|layout
argument_list|)
decl_stmt|;
name|builder
operator|.
name|setDefaultDialogBorder
argument_list|()
expr_stmt|;
name|builder
operator|.
name|appendSeparator
argument_list|(
literal|"ObjEntity Configuration"
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"ObjEntity Name:"
argument_list|,
name|name
operator|.
name|getComponent
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"Inheritance:"
argument_list|,
name|superEntityCombo
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
name|tableLabel
argument_list|,
name|dbEntityCombo
argument_list|,
name|syncWithDbEntityButton
argument_list|)
expr_stmt|;
name|builder
operator|.
name|appendSeparator
argument_list|()
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"Java Class:"
argument_list|,
name|className
operator|.
name|getComponent
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|superclassLabel
operator|=
name|builder
operator|.
name|append
argument_list|(
literal|"Superclass:"
argument_list|,
name|superClassName
operator|.
name|getComponent
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"Qualifier:"
argument_list|,
name|qualifier
operator|.
name|getComponent
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"Read-Only:"
argument_list|,
name|readOnly
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"Optimistic Locking:"
argument_list|,
name|optimisticLocking
argument_list|,
literal|3
argument_list|)
expr_stmt|;
comment|//add callback-related stuff
name|builder
operator|.
name|append
argument_list|(
literal|"Exclude superclass listeners:"
argument_list|,
name|excludeSuperclassListeners
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|builder
operator|.
name|append
argument_list|(
literal|"Exclude default listeners:"
argument_list|,
name|excludeDefaultListeners
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|clientSeparator
operator|=
name|builder
operator|.
name|appendSeparator
argument_list|(
literal|"Java Client"
argument_list|)
expr_stmt|;
name|serverOnlyLabel
operator|=
name|builder
operator|.
name|append
argument_list|(
literal|"Not for Client Use:"
argument_list|,
name|serverOnly
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|clientClassNameLabel
operator|=
name|builder
operator|.
name|append
argument_list|(
literal|"Client Java Class:"
argument_list|,
name|clientClassName
operator|.
name|getComponent
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|clientSuperClassNameLabel
operator|=
name|builder
operator|.
name|append
argument_list|(
literal|"Client Superclass:"
argument_list|,
name|clientSuperClassName
operator|.
name|getComponent
argument_list|()
argument_list|,
literal|3
argument_list|)
expr_stmt|;
name|add
argument_list|(
name|builder
operator|.
name|getPanel
argument_list|()
argument_list|,
name|BorderLayout
operator|.
name|CENTER
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|initController
parameter_list|()
block|{
comment|// initialize events processing and tracking of UI updates...
name|mediator
operator|.
name|addObjEntityDisplayListener
argument_list|(
name|this
argument_list|)
expr_stmt|;
name|dbEntityCombo
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
comment|// Change DbEntity for current ObjEntity
name|ObjEntity
name|entity
init|=
name|mediator
operator|.
name|getCurrentObjEntity
argument_list|()
decl_stmt|;
name|DbEntity
name|dbEntity
init|=
operator|(
name|DbEntity
operator|)
name|dbEntityCombo
operator|.
name|getSelectedItem
argument_list|()
decl_stmt|;
if|if
condition|(
name|dbEntity
operator|!=
name|entity
operator|.
name|getDbEntity
argument_list|()
condition|)
block|{
name|entity
operator|.
name|setDbEntity
argument_list|(
name|dbEntity
argument_list|)
expr_stmt|;
name|mediator
operator|.
name|fireObjEntityEvent
argument_list|(
operator|new
name|EntityEvent
argument_list|(
name|this
argument_list|,
name|entity
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|superEntityCombo
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
comment|// Change super-entity
name|CayenneMapEntry
name|superEntity
init|=
operator|(
name|CayenneMapEntry
operator|)
name|superEntityCombo
operator|.
name|getSelectedItem
argument_list|()
decl_stmt|;
name|String
name|name
init|=
operator|(
name|superEntity
operator|==
name|noInheritance
operator|)
condition|?
literal|null
else|:
name|superEntity
operator|.
name|getName
argument_list|()
decl_stmt|;
name|ObjEntity
name|entity
init|=
name|mediator
operator|.
name|getCurrentObjEntity
argument_list|()
decl_stmt|;
if|if
condition|(
operator|!
name|Util
operator|.
name|nullSafeEquals
argument_list|(
name|name
argument_list|,
name|entity
operator|.
name|getSuperEntityName
argument_list|()
argument_list|)
condition|)
block|{
name|entity
operator|.
name|setSuperEntityName
argument_list|(
name|name
argument_list|)
expr_stmt|;
comment|// if a super-entity selected, disable table selection
comment|// and also update parent DbEntity selection...
name|toggleEnabled
argument_list|(
name|name
operator|==
literal|null
argument_list|,
operator|!
name|serverOnly
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|dbEntityCombo
operator|.
name|getModel
argument_list|()
operator|.
name|setSelectedItem
argument_list|(
name|entity
operator|.
name|getDbEntity
argument_list|()
argument_list|)
expr_stmt|;
name|superClassName
operator|.
name|setText
argument_list|(
name|entity
operator|.
name|getSuperClassName
argument_list|()
argument_list|)
expr_stmt|;
comment|// fire both EntityEvent and EntityDisplayEvent;
comment|// the later is to update attribute and relationship display
name|DataDomain
name|domain
init|=
name|mediator
operator|.
name|getCurrentDataDomain
argument_list|()
decl_stmt|;
name|DataMap
name|map
init|=
name|mediator
operator|.
name|getCurrentDataMap
argument_list|()
decl_stmt|;
name|mediator
operator|.
name|fireObjEntityEvent
argument_list|(
operator|new
name|EntityEvent
argument_list|(
name|this
argument_list|,
name|entity
argument_list|)
argument_list|)
expr_stmt|;
name|mediator
operator|.
name|fireObjEntityDisplayEvent
argument_list|(
operator|new
name|EntityDisplayEvent
argument_list|(
name|this
argument_list|,
name|entity
argument_list|,
name|map
argument_list|,
name|domain
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|tableLabel
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
comment|// Jump to DbEntity of the current ObjEntity
name|DbEntity
name|entity
init|=
name|mediator
operator|.
name|getCurrentObjEntity
argument_list|()
operator|.
name|getDbEntity
argument_list|()
decl_stmt|;
if|if
condition|(
name|entity
operator|!=
literal|null
condition|)
block|{
name|DataDomain
name|dom
init|=
name|mediator
operator|.
name|getCurrentDataDomain
argument_list|()
decl_stmt|;
name|mediator
operator|.
name|fireDbEntityDisplayEvent
argument_list|(
operator|new
name|EntityDisplayEvent
argument_list|(
name|this
argument_list|,
name|entity
argument_list|,
name|entity
operator|.
name|getDataMap
argument_list|()
argument_list|,
name|dom
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|syncWithDbEntityButton
operator|.
name|addActionListener
argument_list|(
operator|new
name|ObjEntitySyncAction
argument_list|(
name|mediator
operator|.
name|getApplication
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
name|readOnly
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|ObjEntity
name|entity
init|=
name|mediator
operator|.
name|getCurrentObjEntity
argument_list|()
decl_stmt|;
if|if
condition|(
name|entity
operator|!=
literal|null
condition|)
block|{
name|entity
operator|.
name|setReadOnly
argument_list|(
name|readOnly
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|mediator
operator|.
name|fireObjEntityEvent
argument_list|(
operator|new
name|EntityEvent
argument_list|(
name|this
argument_list|,
name|entity
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|optimisticLocking
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|ObjEntity
name|entity
init|=
name|mediator
operator|.
name|getCurrentObjEntity
argument_list|()
decl_stmt|;
if|if
condition|(
name|entity
operator|!=
literal|null
condition|)
block|{
name|entity
operator|.
name|setDeclaredLockType
argument_list|(
name|optimisticLocking
operator|.
name|isSelected
argument_list|()
condition|?
name|ObjEntity
operator|.
name|LOCK_TYPE_OPTIMISTIC
else|:
name|ObjEntity
operator|.
name|LOCK_TYPE_NONE
argument_list|)
expr_stmt|;
name|mediator
operator|.
name|fireObjEntityEvent
argument_list|(
operator|new
name|EntityEvent
argument_list|(
name|this
argument_list|,
name|entity
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|excludeSuperclassListeners
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|ObjEntity
name|entity
init|=
name|mediator
operator|.
name|getCurrentObjEntity
argument_list|()
decl_stmt|;
if|if
condition|(
name|entity
operator|!=
literal|null
condition|)
block|{
name|entity
operator|.
name|setExcludingSuperclassListeners
argument_list|(
name|excludeSuperclassListeners
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|mediator
operator|.
name|fireObjEntityEvent
argument_list|(
operator|new
name|EntityEvent
argument_list|(
name|this
argument_list|,
name|entity
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|excludeDefaultListeners
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|ObjEntity
name|entity
init|=
name|mediator
operator|.
name|getCurrentObjEntity
argument_list|()
decl_stmt|;
if|if
condition|(
name|entity
operator|!=
literal|null
condition|)
block|{
name|entity
operator|.
name|setExcludingDefaultListeners
argument_list|(
name|excludeDefaultListeners
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|mediator
operator|.
name|fireObjEntityEvent
argument_list|(
operator|new
name|EntityEvent
argument_list|(
name|this
argument_list|,
name|entity
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
name|serverOnly
operator|.
name|addActionListener
argument_list|(
operator|new
name|ActionListener
argument_list|()
block|{
specifier|public
name|void
name|actionPerformed
parameter_list|(
name|ActionEvent
name|e
parameter_list|)
block|{
name|ObjEntity
name|entity
init|=
name|mediator
operator|.
name|getCurrentObjEntity
argument_list|()
decl_stmt|;
if|if
condition|(
name|entity
operator|!=
literal|null
condition|)
block|{
name|entity
operator|.
name|setServerOnly
argument_list|(
name|serverOnly
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|toggleEnabled
argument_list|(
name|dbEntityCombo
operator|.
name|isEnabled
argument_list|()
argument_list|,
operator|!
name|serverOnly
operator|.
name|isSelected
argument_list|()
argument_list|)
expr_stmt|;
name|mediator
operator|.
name|fireObjEntityEvent
argument_list|(
operator|new
name|EntityEvent
argument_list|(
name|this
argument_list|,
name|entity
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
block|}
argument_list|)
expr_stmt|;
block|}
comment|/**      * Updates the view from the current model state. Invoked when a currently displayed      * ObjEntity is changed.      *      * @param entity current entity      */
specifier|private
name|void
name|initFromModel
parameter_list|(
specifier|final
name|ObjEntity
name|entity
parameter_list|)
block|{
comment|// TODO: this is a hack until we implement a real MVC
name|qualifier
operator|.
name|getComponent
argument_list|()
operator|.
name|setBackground
argument_list|(
name|Color
operator|.
name|WHITE
argument_list|)
expr_stmt|;
name|name
operator|.
name|setText
argument_list|(
name|entity
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
name|superClassName
operator|.
name|setText
argument_list|(
name|entity
operator|.
name|getSuperClassName
argument_list|()
argument_list|)
expr_stmt|;
name|className
operator|.
name|setText
argument_list|(
name|entity
operator|.
name|getClassName
argument_list|()
argument_list|)
expr_stmt|;
name|readOnly
operator|.
name|setSelected
argument_list|(
name|entity
operator|.
name|isReadOnly
argument_list|()
argument_list|)
expr_stmt|;
name|serverOnly
operator|.
name|setSelected
argument_list|(
name|entity
operator|.
name|isServerOnly
argument_list|()
argument_list|)
expr_stmt|;
name|clientClassName
operator|.
name|setText
argument_list|(
name|entity
operator|.
name|getClientClassName
argument_list|()
argument_list|)
expr_stmt|;
name|clientSuperClassName
operator|.
name|setText
argument_list|(
name|entity
operator|.
name|getClientSuperClassName
argument_list|()
argument_list|)
expr_stmt|;
name|qualifier
operator|.
name|setText
argument_list|(
operator|new
name|ExpressionConvertor
argument_list|()
operator|.
name|valueAsString
argument_list|(
name|entity
operator|.
name|getDeclaredQualifier
argument_list|()
argument_list|)
argument_list|)
expr_stmt|;
comment|// TODO: fix inheritance - we should allow to select optimistic
comment|// lock if superclass is not already locked,
comment|// otherwise we must keep this checked in but not editable.
name|optimisticLocking
operator|.
name|setSelected
argument_list|(
name|entity
operator|.
name|getDeclaredLockType
argument_list|()
operator|==
name|ObjEntity
operator|.
name|LOCK_TYPE_OPTIMISTIC
argument_list|)
expr_stmt|;
name|excludeSuperclassListeners
operator|.
name|setSelected
argument_list|(
name|entity
operator|.
name|isExcludingSuperclassListeners
argument_list|()
argument_list|)
expr_stmt|;
name|excludeDefaultListeners
operator|.
name|setSelected
argument_list|(
name|entity
operator|.
name|isExcludingDefaultListeners
argument_list|()
argument_list|)
expr_stmt|;
comment|// init DbEntities
name|DataMap
name|map
init|=
name|mediator
operator|.
name|getCurrentDataMap
argument_list|()
decl_stmt|;
name|Object
index|[]
name|dbEntities
init|=
name|map
operator|.
name|getNamespace
argument_list|()
operator|.
name|getDbEntities
argument_list|()
operator|.
name|toArray
argument_list|()
decl_stmt|;
name|Arrays
operator|.
name|sort
argument_list|(
name|dbEntities
argument_list|,
name|Comparators
operator|.
name|getDataMapChildrenComparator
argument_list|()
argument_list|)
expr_stmt|;
name|DefaultComboBoxModel
name|dbModel
init|=
operator|new
name|DefaultComboBoxModel
argument_list|(
name|dbEntities
argument_list|)
decl_stmt|;
name|dbModel
operator|.
name|setSelectedItem
argument_list|(
name|entity
operator|.
name|getDbEntity
argument_list|()
argument_list|)
expr_stmt|;
name|dbEntityCombo
operator|.
name|setRenderer
argument_list|(
name|CellRenderers
operator|.
name|entityListRendererWithIcons
argument_list|(
name|map
argument_list|)
argument_list|)
expr_stmt|;
name|dbEntityCombo
operator|.
name|setModel
argument_list|(
name|dbModel
argument_list|)
expr_stmt|;
comment|// toggle visibilty and editability rules
name|toggleClientFieldsVisible
argument_list|(
name|map
operator|.
name|isClientSupported
argument_list|()
argument_list|)
expr_stmt|;
name|toggleEnabled
argument_list|(
name|entity
operator|.
name|getSuperEntityName
argument_list|()
operator|==
literal|null
argument_list|,
operator|!
name|entity
operator|.
name|isServerOnly
argument_list|()
argument_list|)
expr_stmt|;
comment|// init ObjEntities for inheritance
name|Predicate
name|inheritanceFilter
init|=
operator|new
name|Predicate
argument_list|()
block|{
specifier|public
name|boolean
name|evaluate
parameter_list|(
name|Object
name|object
parameter_list|)
block|{
comment|// do not show this entity or any of the subentities
if|if
condition|(
name|entity
operator|==
name|object
condition|)
block|{
return|return
literal|false
return|;
block|}
if|if
condition|(
name|object
operator|instanceof
name|ObjEntity
condition|)
block|{
return|return
operator|!
operator|(
operator|(
name|ObjEntity
operator|)
name|object
operator|)
operator|.
name|isSubentityOf
argument_list|(
name|entity
argument_list|)
return|;
block|}
return|return
literal|false
return|;
block|}
block|}
decl_stmt|;
name|Object
index|[]
name|objEntities
init|=
name|CollectionUtils
operator|.
name|select
argument_list|(
name|map
operator|.
name|getNamespace
argument_list|()
operator|.
name|getObjEntities
argument_list|()
argument_list|,
name|inheritanceFilter
argument_list|)
operator|.
name|toArray
argument_list|()
decl_stmt|;
name|Arrays
operator|.
name|sort
argument_list|(
name|objEntities
argument_list|,
name|Comparators
operator|.
name|getDataMapChildrenComparator
argument_list|()
argument_list|)
expr_stmt|;
name|Object
index|[]
name|finalObjEntities
init|=
operator|new
name|Object
index|[
name|objEntities
operator|.
name|length
operator|+
literal|1
index|]
decl_stmt|;
name|finalObjEntities
index|[
literal|0
index|]
operator|=
name|noInheritance
expr_stmt|;
name|System
operator|.
name|arraycopy
argument_list|(
name|objEntities
argument_list|,
literal|0
argument_list|,
name|finalObjEntities
argument_list|,
literal|1
argument_list|,
name|objEntities
operator|.
name|length
argument_list|)
expr_stmt|;
name|DefaultComboBoxModel
name|superEntityModel
init|=
operator|new
name|DefaultComboBoxModel
argument_list|(
name|finalObjEntities
argument_list|)
decl_stmt|;
name|superEntityModel
operator|.
name|setSelectedItem
argument_list|(
name|entity
operator|.
name|getSuperEntity
argument_list|()
argument_list|)
expr_stmt|;
name|superEntityCombo
operator|.
name|setRenderer
argument_list|(
name|CellRenderers
operator|.
name|entityListRendererWithIcons
argument_list|(
name|map
argument_list|)
argument_list|)
expr_stmt|;
name|superEntityCombo
operator|.
name|setModel
argument_list|(
name|superEntityModel
argument_list|)
expr_stmt|;
block|}
name|void
name|setClassName
parameter_list|(
name|String
name|className
parameter_list|)
block|{
if|if
condition|(
name|className
operator|!=
literal|null
operator|&&
name|className
operator|.
name|trim
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
name|className
operator|=
literal|null
expr_stmt|;
block|}
name|ObjEntity
name|entity
init|=
name|mediator
operator|.
name|getCurrentObjEntity
argument_list|()
decl_stmt|;
comment|// "ent" may be null if we quit editing by changing tree selection
if|if
condition|(
name|entity
operator|!=
literal|null
operator|&&
operator|!
name|Util
operator|.
name|nullSafeEquals
argument_list|(
name|entity
operator|.
name|getClassName
argument_list|()
argument_list|,
name|className
argument_list|)
condition|)
block|{
name|entity
operator|.
name|setClassName
argument_list|(
name|className
argument_list|)
expr_stmt|;
name|mediator
operator|.
name|fireObjEntityEvent
argument_list|(
operator|new
name|EntityEvent
argument_list|(
name|this
argument_list|,
name|entity
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|void
name|setSuperClassName
parameter_list|(
name|String
name|text
parameter_list|)
block|{
if|if
condition|(
name|text
operator|!=
literal|null
operator|&&
name|text
operator|.
name|trim
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
name|text
operator|=
literal|null
expr_stmt|;
block|}
name|ObjEntity
name|ent
init|=
name|mediator
operator|.
name|getCurrentObjEntity
argument_list|()
decl_stmt|;
if|if
condition|(
name|ent
operator|!=
literal|null
operator|&&
operator|!
name|Util
operator|.
name|nullSafeEquals
argument_list|(
name|ent
operator|.
name|getSuperClassName
argument_list|()
argument_list|,
name|text
argument_list|)
condition|)
block|{
name|ent
operator|.
name|setSuperClassName
argument_list|(
name|text
argument_list|)
expr_stmt|;
name|mediator
operator|.
name|fireObjEntityEvent
argument_list|(
operator|new
name|EntityEvent
argument_list|(
name|this
argument_list|,
name|ent
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|void
name|setClientClassName
parameter_list|(
name|String
name|className
parameter_list|)
block|{
if|if
condition|(
name|className
operator|!=
literal|null
operator|&&
name|className
operator|.
name|trim
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
name|className
operator|=
literal|null
expr_stmt|;
block|}
name|ObjEntity
name|entity
init|=
name|mediator
operator|.
name|getCurrentObjEntity
argument_list|()
decl_stmt|;
comment|// "ent" may be null if we quit editing by changing tree selection
if|if
condition|(
name|entity
operator|!=
literal|null
operator|&&
operator|!
name|Util
operator|.
name|nullSafeEquals
argument_list|(
name|entity
operator|.
name|getClientClassName
argument_list|()
argument_list|,
name|className
argument_list|)
condition|)
block|{
name|entity
operator|.
name|setClientClassName
argument_list|(
name|className
argument_list|)
expr_stmt|;
name|mediator
operator|.
name|fireObjEntityEvent
argument_list|(
operator|new
name|EntityEvent
argument_list|(
name|this
argument_list|,
name|entity
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|void
name|setClientSuperClassName
parameter_list|(
name|String
name|text
parameter_list|)
block|{
if|if
condition|(
name|text
operator|!=
literal|null
operator|&&
name|text
operator|.
name|trim
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
name|text
operator|=
literal|null
expr_stmt|;
block|}
name|ObjEntity
name|ent
init|=
name|mediator
operator|.
name|getCurrentObjEntity
argument_list|()
decl_stmt|;
if|if
condition|(
name|ent
operator|!=
literal|null
operator|&&
operator|!
name|Util
operator|.
name|nullSafeEquals
argument_list|(
name|ent
operator|.
name|getClientSuperClassName
argument_list|()
argument_list|,
name|text
argument_list|)
condition|)
block|{
name|ent
operator|.
name|setClientSuperClassName
argument_list|(
name|text
argument_list|)
expr_stmt|;
name|mediator
operator|.
name|fireObjEntityEvent
argument_list|(
operator|new
name|EntityEvent
argument_list|(
name|this
argument_list|,
name|ent
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
name|void
name|setQualifier
parameter_list|(
name|String
name|text
parameter_list|)
block|{
if|if
condition|(
name|text
operator|!=
literal|null
operator|&&
name|text
operator|.
name|trim
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
name|text
operator|=
literal|null
expr_stmt|;
block|}
name|ObjEntity
name|entity
init|=
name|mediator
operator|.
name|getCurrentObjEntity
argument_list|()
decl_stmt|;
if|if
condition|(
name|entity
operator|!=
literal|null
condition|)
block|{
name|ExpressionConvertor
name|convertor
init|=
operator|new
name|ExpressionConvertor
argument_list|()
decl_stmt|;
try|try
block|{
name|String
name|oldQualifier
init|=
name|convertor
operator|.
name|valueAsString
argument_list|(
name|entity
operator|.
name|getDeclaredQualifier
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
operator|!
name|Util
operator|.
name|nullSafeEquals
argument_list|(
name|oldQualifier
argument_list|,
name|text
argument_list|)
condition|)
block|{
name|Expression
name|exp
init|=
operator|(
name|Expression
operator|)
name|convertor
operator|.
name|stringAsValue
argument_list|(
name|text
argument_list|)
decl_stmt|;
name|entity
operator|.
name|setDeclaredQualifier
argument_list|(
name|exp
argument_list|)
expr_stmt|;
name|mediator
operator|.
name|fireObjEntityEvent
argument_list|(
operator|new
name|EntityEvent
argument_list|(
name|this
argument_list|,
name|entity
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
catch|catch
parameter_list|(
name|IllegalArgumentException
name|ex
parameter_list|)
block|{
comment|// unparsable qualifier
throw|throw
operator|new
name|ValidationException
argument_list|(
name|ex
operator|.
name|getMessage
argument_list|()
argument_list|)
throw|;
block|}
block|}
block|}
name|void
name|setEntityName
parameter_list|(
name|String
name|newName
parameter_list|)
block|{
if|if
condition|(
name|newName
operator|!=
literal|null
operator|&&
name|newName
operator|.
name|trim
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
name|newName
operator|=
literal|null
expr_stmt|;
block|}
name|ObjEntity
name|entity
init|=
name|mediator
operator|.
name|getCurrentObjEntity
argument_list|()
decl_stmt|;
if|if
condition|(
name|entity
operator|==
literal|null
condition|)
block|{
return|return;
block|}
if|if
condition|(
name|Util
operator|.
name|nullSafeEquals
argument_list|(
name|newName
argument_list|,
name|entity
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
return|return;
block|}
if|if
condition|(
name|newName
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|ValidationException
argument_list|(
literal|"Entity name is required."
argument_list|)
throw|;
block|}
if|else if
condition|(
name|entity
operator|.
name|getDataMap
argument_list|()
operator|.
name|getObjEntity
argument_list|(
name|newName
argument_list|)
operator|==
literal|null
condition|)
block|{
comment|// completely new name, set new name for entity
name|EntityEvent
name|e
init|=
operator|new
name|EntityEvent
argument_list|(
name|this
argument_list|,
name|entity
argument_list|,
name|entity
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
name|entity
operator|.
name|setName
argument_list|(
name|newName
argument_list|)
expr_stmt|;
name|mediator
operator|.
name|fireObjEntityEvent
argument_list|(
name|e
argument_list|)
expr_stmt|;
comment|// suggest to update class name
name|ClassNameUpdater
name|nameUpdater
init|=
operator|new
name|ClassNameUpdater
argument_list|(
name|Application
operator|.
name|getInstance
argument_list|()
operator|.
name|getFrameController
argument_list|()
argument_list|,
name|entity
argument_list|)
decl_stmt|;
if|if
condition|(
name|nameUpdater
operator|.
name|doNameUpdate
argument_list|()
condition|)
block|{
name|className
operator|.
name|setText
argument_list|(
name|entity
operator|.
name|getClassName
argument_list|()
argument_list|)
expr_stmt|;
name|clientClassName
operator|.
name|setText
argument_list|(
name|entity
operator|.
name|getClientClassName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
else|else
block|{
comment|// there is an entity with the same name
throw|throw
operator|new
name|ValidationException
argument_list|(
literal|"There is another entity with name '"
operator|+
name|newName
operator|+
literal|"'."
argument_list|)
throw|;
block|}
block|}
name|void
name|toggleClientFieldsVisible
parameter_list|(
name|boolean
name|visible
parameter_list|)
block|{
name|clientSeparator
operator|.
name|setVisible
argument_list|(
name|visible
argument_list|)
expr_stmt|;
name|clientSuperClassNameLabel
operator|.
name|setVisible
argument_list|(
name|visible
argument_list|)
expr_stmt|;
name|clientClassNameLabel
operator|.
name|setVisible
argument_list|(
name|visible
argument_list|)
expr_stmt|;
name|serverOnlyLabel
operator|.
name|setVisible
argument_list|(
name|visible
argument_list|)
expr_stmt|;
name|clientClassName
operator|.
name|getComponent
argument_list|()
operator|.
name|setVisible
argument_list|(
name|visible
argument_list|)
expr_stmt|;
name|clientSuperClassName
operator|.
name|getComponent
argument_list|()
operator|.
name|setVisible
argument_list|(
name|visible
argument_list|)
expr_stmt|;
name|serverOnly
operator|.
name|setVisible
argument_list|(
name|visible
argument_list|)
expr_stmt|;
block|}
name|void
name|toggleEnabled
parameter_list|(
name|boolean
name|directTableMapping
parameter_list|,
name|boolean
name|clientFieldsEnabled
parameter_list|)
block|{
name|superClassName
operator|.
name|getComponent
argument_list|()
operator|.
name|setEnabled
argument_list|(
name|directTableMapping
argument_list|)
expr_stmt|;
name|superclassLabel
operator|.
name|setEnabled
argument_list|(
name|directTableMapping
argument_list|)
expr_stmt|;
name|dbEntityCombo
operator|.
name|setEnabled
argument_list|(
name|directTableMapping
argument_list|)
expr_stmt|;
name|syncWithDbEntityButton
operator|.
name|setEnabled
argument_list|(
name|directTableMapping
argument_list|)
expr_stmt|;
name|tableLabel
operator|.
name|setEnabled
argument_list|(
name|directTableMapping
argument_list|)
expr_stmt|;
name|clientSuperClassName
operator|.
name|getComponent
argument_list|()
operator|.
name|setEnabled
argument_list|(
name|directTableMapping
operator|&&
name|clientFieldsEnabled
argument_list|)
expr_stmt|;
name|clientSuperClassNameLabel
operator|.
name|setEnabled
argument_list|(
name|directTableMapping
operator|&&
name|clientFieldsEnabled
argument_list|)
expr_stmt|;
name|clientClassNameLabel
operator|.
name|setEnabled
argument_list|(
name|clientFieldsEnabled
argument_list|)
expr_stmt|;
name|clientClassName
operator|.
name|getComponent
argument_list|()
operator|.
name|setEnabled
argument_list|(
name|clientFieldsEnabled
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|processExistingSelection
parameter_list|(
name|EventObject
name|e
parameter_list|)
block|{
name|EntityDisplayEvent
name|ede
init|=
operator|new
name|EntityDisplayEvent
argument_list|(
name|this
argument_list|,
name|mediator
operator|.
name|getCurrentObjEntity
argument_list|()
argument_list|,
name|mediator
operator|.
name|getCurrentDataMap
argument_list|()
argument_list|,
name|mediator
operator|.
name|getCurrentDataDomain
argument_list|()
argument_list|)
decl_stmt|;
name|mediator
operator|.
name|fireObjEntityDisplayEvent
argument_list|(
name|ede
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|currentObjEntityChanged
parameter_list|(
name|EntityDisplayEvent
name|e
parameter_list|)
block|{
name|ObjEntity
name|entity
init|=
operator|(
name|ObjEntity
operator|)
name|e
operator|.
name|getEntity
argument_list|()
decl_stmt|;
if|if
condition|(
name|entity
operator|==
literal|null
operator|||
operator|!
name|e
operator|.
name|isEntityChanged
argument_list|()
condition|)
block|{
return|return;
block|}
name|initFromModel
argument_list|(
name|entity
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

