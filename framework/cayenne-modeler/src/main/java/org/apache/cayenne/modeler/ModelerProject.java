begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
package|;
end_package

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|DataDomain
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|conf
operator|.
name|Configuration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|action
operator|.
name|ModelerProjectConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|modeler
operator|.
name|graph
operator|.
name|GraphFile
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|project
operator|.
name|ApplicationProject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|project
operator|.
name|ProjectFile
import|;
end_import

begin_comment
comment|/**  * Modeler-specific project.   * Used to save domain graphs together with main project files  */
end_comment

begin_class
specifier|public
class|class
name|ModelerProject
extends|extends
name|ApplicationProject
block|{
specifier|public
name|ModelerProject
parameter_list|(
name|File
name|projectFile
parameter_list|,
name|Configuration
name|configuration
parameter_list|)
block|{
name|super
argument_list|(
name|projectFile
argument_list|,
name|configuration
argument_list|)
expr_stmt|;
block|}
comment|/**      * Returns appropriate ProjectFile or null if object does not require a file of its      * own. In case of ModelerProject, the nodes that require separate files are: the      * project itself, each DataMap, each driver DataNode, and each DataDomain that had      * graphs built for.      */
annotation|@
name|Override
specifier|public
name|ProjectFile
name|projectFileForObject
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
if|if
condition|(
name|requiresDomainFile
argument_list|(
name|obj
argument_list|)
condition|)
block|{
return|return
operator|new
name|GraphFile
argument_list|(
name|this
argument_list|,
operator|(
operator|(
name|ModelerProjectConfiguration
operator|)
name|getConfiguration
argument_list|()
operator|)
operator|.
name|getGraphRegistry
argument_list|()
operator|.
name|getGraphMap
argument_list|(
operator|(
name|DataDomain
operator|)
name|obj
argument_list|)
argument_list|)
return|;
block|}
return|return
name|super
operator|.
name|projectFileForObject
argument_list|(
name|obj
argument_list|)
return|;
block|}
specifier|protected
name|boolean
name|requiresDomainFile
parameter_list|(
name|Object
name|obj
parameter_list|)
block|{
return|return
name|obj
operator|instanceof
name|DataDomain
return|;
block|}
block|}
end_class

end_unit

