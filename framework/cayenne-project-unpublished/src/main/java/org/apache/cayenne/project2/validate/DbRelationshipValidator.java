begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|project2
operator|.
name|validate
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbJoin
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbRelationship
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|project
operator|.
name|validator
operator|.
name|MappingNamesHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|util
operator|.
name|Util
import|;
end_import

begin_class
class|class
name|DbRelationshipValidator
block|{
name|void
name|validate
parameter_list|(
name|Object
name|object
parameter_list|,
name|ConfigurationValidationVisitor
name|validator
parameter_list|)
block|{
name|DbRelationship
name|rel
init|=
operator|(
name|DbRelationship
operator|)
name|object
decl_stmt|;
if|if
condition|(
name|rel
operator|.
name|getTargetEntity
argument_list|()
operator|==
literal|null
condition|)
block|{
name|validator
operator|.
name|registerWarning
argument_list|(
literal|"DbRelationship "
operator|+
name|dbRelationshipIdentifier
argument_list|(
name|rel
argument_list|)
operator|+
literal|" has no target entity."
argument_list|,
name|object
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|rel
operator|.
name|getJoins
argument_list|()
operator|.
name|size
argument_list|()
operator|==
literal|0
condition|)
block|{
name|validator
operator|.
name|registerWarning
argument_list|(
literal|"DbRelationship "
operator|+
name|dbRelationshipIdentifier
argument_list|(
name|rel
argument_list|)
operator|+
literal|" has no joins."
argument_list|,
name|object
argument_list|)
expr_stmt|;
block|}
else|else
block|{
comment|// validate joins
for|for
control|(
specifier|final
name|DbJoin
name|join
range|:
name|rel
operator|.
name|getJoins
argument_list|()
control|)
block|{
if|if
condition|(
name|join
operator|.
name|getSource
argument_list|()
operator|==
literal|null
operator|&&
name|join
operator|.
name|getTarget
argument_list|()
operator|==
literal|null
condition|)
block|{
name|validator
operator|.
name|registerWarning
argument_list|(
literal|"DbRelationship "
operator|+
name|dbRelationshipIdentifier
argument_list|(
name|rel
argument_list|)
operator|+
literal|" join has no source and target attributes selected."
argument_list|,
name|object
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|join
operator|.
name|getSource
argument_list|()
operator|==
literal|null
condition|)
block|{
name|validator
operator|.
name|registerWarning
argument_list|(
literal|"DbRelationship "
operator|+
name|dbRelationshipIdentifier
argument_list|(
name|rel
argument_list|)
operator|+
literal|" join has no source attribute selected."
argument_list|,
name|object
argument_list|)
expr_stmt|;
block|}
if|else if
condition|(
name|join
operator|.
name|getTarget
argument_list|()
operator|==
literal|null
condition|)
block|{
name|validator
operator|.
name|registerWarning
argument_list|(
literal|"DbRelationship "
operator|+
name|dbRelationshipIdentifier
argument_list|(
name|rel
argument_list|)
operator|+
literal|" join has no target attribute selected."
argument_list|,
name|object
argument_list|)
expr_stmt|;
block|}
block|}
block|}
if|if
condition|(
name|Util
operator|.
name|isEmptyString
argument_list|(
name|rel
operator|.
name|getName
argument_list|()
argument_list|)
condition|)
block|{
name|validator
operator|.
name|registerError
argument_list|(
literal|"Unnamed DbRelationship."
argument_list|,
name|object
argument_list|)
expr_stmt|;
block|}
comment|// check if there are attributes having the same name
if|else if
condition|(
name|rel
operator|.
name|getSourceEntity
argument_list|()
operator|.
name|getAttribute
argument_list|(
name|rel
operator|.
name|getName
argument_list|()
argument_list|)
operator|!=
literal|null
condition|)
block|{
name|validator
operator|.
name|registerError
argument_list|(
literal|"DbRelationship "
operator|+
name|dbRelationshipIdentifier
argument_list|(
name|rel
argument_list|)
operator|+
literal|" has the same name as one of DbAttributes"
argument_list|,
name|object
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|MappingNamesHelper
name|helper
init|=
name|MappingNamesHelper
operator|.
name|getInstance
argument_list|()
decl_stmt|;
name|String
name|invalidChars
init|=
name|helper
operator|.
name|invalidCharsInDbPathComponent
argument_list|(
name|rel
operator|.
name|getName
argument_list|()
argument_list|)
decl_stmt|;
if|if
condition|(
name|invalidChars
operator|!=
literal|null
condition|)
block|{
name|validator
operator|.
name|registerWarning
argument_list|(
literal|"DbRelationship "
operator|+
name|dbRelationshipIdentifier
argument_list|(
name|rel
argument_list|)
operator|+
literal|" name contains invalid characters: "
operator|+
name|invalidChars
argument_list|,
name|object
argument_list|)
expr_stmt|;
block|}
block|}
block|}
name|String
name|dbRelationshipIdentifier
parameter_list|(
name|DbRelationship
name|rel
parameter_list|)
block|{
if|if
condition|(
literal|null
operator|==
name|rel
operator|.
name|getSourceEntity
argument_list|()
condition|)
block|{
return|return
literal|"<[null source entity]."
operator|+
name|rel
operator|.
name|getName
argument_list|()
operator|+
literal|">"
return|;
block|}
return|return
literal|"<"
operator|+
name|rel
operator|.
name|getSourceEntity
argument_list|()
operator|.
name|getName
argument_list|()
operator|+
literal|"."
operator|+
name|rel
operator|.
name|getName
argument_list|()
operator|+
literal|">"
return|;
block|}
block|}
end_class

end_unit

