begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|project2
operator|.
name|validate
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|ConfigurationNode
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|project2
operator|.
name|Project
import|;
end_import

begin_class
specifier|public
class|class
name|DefaultValidator
implements|implements
name|Validator
block|{
specifier|private
name|ConfigurationValidator
name|validateVisitor
decl_stmt|;
comment|/* Validators */
specifier|private
name|DataChannelValidator
name|dataChannelValidator
decl_stmt|;
specifier|private
name|DataNodeValidator
name|nodeValidator
decl_stmt|;
specifier|private
name|DataMapValidator
name|mapValidator
decl_stmt|;
specifier|private
name|ObjEntityValidator
name|objEntityValidator
decl_stmt|;
specifier|private
name|ObjAttributeValidator
name|objAttrValidator
decl_stmt|;
specifier|private
name|ObjRelationshipValidator
name|objRelValidator
decl_stmt|;
specifier|private
name|DbEntityValidator
name|dbEntityValidator
decl_stmt|;
specifier|private
name|DbAttributeValidator
name|dbAttrValidator
decl_stmt|;
specifier|private
name|DbRelationshipValidator
name|dbRelValidator
decl_stmt|;
specifier|private
name|EmbeddableAttributeValidator
name|embeddableAttributeValidator
decl_stmt|;
specifier|private
name|EmbeddableValidator
name|embeddableValidator
decl_stmt|;
specifier|private
name|ProcedureValidator
name|procedureValidator
decl_stmt|;
specifier|private
name|ProcedureParameterValidator
name|procedureParameterValidator
decl_stmt|;
specifier|private
name|SelectQueryValidator
name|selectQueryValidator
decl_stmt|;
specifier|private
name|ProcedureQueryValidator
name|procedureQueryValidator
decl_stmt|;
specifier|private
name|EJBQLQueryValidator
name|ejbqlQueryValidator
decl_stmt|;
specifier|private
name|SQLTemplateValidator
name|sqlTemplateValidator
decl_stmt|;
name|DefaultValidator
parameter_list|()
block|{
name|dataChannelValidator
operator|=
operator|new
name|DataChannelValidator
argument_list|()
expr_stmt|;
name|nodeValidator
operator|=
operator|new
name|DataNodeValidator
argument_list|()
expr_stmt|;
name|mapValidator
operator|=
operator|new
name|DataMapValidator
argument_list|()
expr_stmt|;
name|objEntityValidator
operator|=
operator|new
name|ObjEntityValidator
argument_list|()
expr_stmt|;
name|objAttrValidator
operator|=
operator|new
name|ObjAttributeValidator
argument_list|()
expr_stmt|;
name|objRelValidator
operator|=
operator|new
name|ObjRelationshipValidator
argument_list|()
expr_stmt|;
name|dbEntityValidator
operator|=
operator|new
name|DbEntityValidator
argument_list|()
expr_stmt|;
name|dbAttrValidator
operator|=
operator|new
name|DbAttributeValidator
argument_list|()
expr_stmt|;
name|dbRelValidator
operator|=
operator|new
name|DbRelationshipValidator
argument_list|()
expr_stmt|;
name|embeddableAttributeValidator
operator|=
operator|new
name|EmbeddableAttributeValidator
argument_list|()
expr_stmt|;
name|embeddableValidator
operator|=
operator|new
name|EmbeddableValidator
argument_list|()
expr_stmt|;
name|procedureValidator
operator|=
operator|new
name|ProcedureValidator
argument_list|()
expr_stmt|;
name|procedureParameterValidator
operator|=
operator|new
name|ProcedureParameterValidator
argument_list|()
expr_stmt|;
name|selectQueryValidator
operator|=
operator|new
name|SelectQueryValidator
argument_list|()
expr_stmt|;
name|procedureQueryValidator
operator|=
operator|new
name|ProcedureQueryValidator
argument_list|()
expr_stmt|;
name|ejbqlQueryValidator
operator|=
operator|new
name|EJBQLQueryValidator
argument_list|()
expr_stmt|;
name|sqlTemplateValidator
operator|=
operator|new
name|SQLTemplateValidator
argument_list|()
expr_stmt|;
block|}
specifier|public
name|ConfigurationValidator
name|validate
parameter_list|(
name|ConfigurationNode
name|node
parameter_list|,
name|Project
name|project
parameter_list|)
block|{
name|initConfigurationValidator
argument_list|(
name|project
argument_list|)
expr_stmt|;
name|node
operator|.
name|acceptVisitor
argument_list|(
name|validateVisitor
argument_list|)
expr_stmt|;
return|return
name|validateVisitor
return|;
block|}
specifier|private
name|void
name|initConfigurationValidator
parameter_list|(
name|Project
name|project
parameter_list|)
block|{
if|if
condition|(
name|validateVisitor
operator|==
literal|null
operator|||
operator|!
name|validateVisitor
operator|.
name|getProject
argument_list|()
operator|.
name|equals
argument_list|(
name|project
argument_list|)
condition|)
block|{
name|validateVisitor
operator|=
operator|new
name|ConfigurationValidator
argument_list|(
name|project
argument_list|,
name|this
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|validateVisitor
operator|.
name|getValidationResults
argument_list|()
operator|.
name|clear
argument_list|()
expr_stmt|;
block|}
block|}
name|DataChannelValidator
name|getDataChannelValidator
parameter_list|()
block|{
return|return
name|dataChannelValidator
return|;
block|}
name|DataNodeValidator
name|getNodeValidator
parameter_list|()
block|{
return|return
name|nodeValidator
return|;
block|}
name|DataMapValidator
name|getMapValidator
parameter_list|()
block|{
return|return
name|mapValidator
return|;
block|}
name|ObjEntityValidator
name|getObjEntityValidator
parameter_list|()
block|{
return|return
name|objEntityValidator
return|;
block|}
name|ObjAttributeValidator
name|getObjAttrValidator
parameter_list|()
block|{
return|return
name|objAttrValidator
return|;
block|}
name|ObjRelationshipValidator
name|getObjRelValidator
parameter_list|()
block|{
return|return
name|objRelValidator
return|;
block|}
name|DbEntityValidator
name|getDbEntityValidator
parameter_list|()
block|{
return|return
name|dbEntityValidator
return|;
block|}
name|DbAttributeValidator
name|getDbAttrValidator
parameter_list|()
block|{
return|return
name|dbAttrValidator
return|;
block|}
name|DbRelationshipValidator
name|getDbRelValidator
parameter_list|()
block|{
return|return
name|dbRelValidator
return|;
block|}
name|EmbeddableAttributeValidator
name|getEmbeddableAttributeValidator
parameter_list|()
block|{
return|return
name|embeddableAttributeValidator
return|;
block|}
name|EmbeddableValidator
name|getEmbeddableValidator
parameter_list|()
block|{
return|return
name|embeddableValidator
return|;
block|}
name|ProcedureValidator
name|getProcedureValidator
parameter_list|()
block|{
return|return
name|procedureValidator
return|;
block|}
name|ProcedureParameterValidator
name|getProcedureParameterValidator
parameter_list|()
block|{
return|return
name|procedureParameterValidator
return|;
block|}
name|SelectQueryValidator
name|getSelectQueryValidator
parameter_list|()
block|{
return|return
name|selectQueryValidator
return|;
block|}
name|ProcedureQueryValidator
name|getProcedureQueryValidator
parameter_list|()
block|{
return|return
name|procedureQueryValidator
return|;
block|}
name|EJBQLQueryValidator
name|getEjbqlQueryValidator
parameter_list|()
block|{
return|return
name|ejbqlQueryValidator
return|;
block|}
name|SQLTemplateValidator
name|getSqlTemplateValidator
parameter_list|()
block|{
return|return
name|sqlTemplateValidator
return|;
block|}
block|}
end_class

end_unit

