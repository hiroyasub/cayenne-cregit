begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|wocompat
package|;
end_package

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|TestCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DataMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjRelationship
import|;
end_import

begin_class
specifier|public
class|class
name|EOModelProcessorInheritanceTest
extends|extends
name|TestCase
block|{
specifier|protected
name|EOModelProcessor
name|processor
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|processor
operator|=
operator|new
name|EOModelProcessor
argument_list|()
expr_stmt|;
block|}
specifier|public
name|void
name|testLoadAbstractEntity
parameter_list|()
throws|throws
name|Exception
block|{
name|DataMap
name|map
init|=
name|processor
operator|.
name|loadEOModel
argument_list|(
literal|"inheritance.eomodeld"
argument_list|)
decl_stmt|;
name|ObjEntity
name|abstractE
init|=
name|map
operator|.
name|getObjEntity
argument_list|(
literal|"AbstractEntity"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|abstractE
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|abstractE
operator|.
name|getDbEntityName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AbstractEntityClass"
argument_list|,
name|abstractE
operator|.
name|getClassName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testLoadConcreteEntity
parameter_list|()
throws|throws
name|Exception
block|{
name|DataMap
name|map
init|=
name|processor
operator|.
name|loadEOModel
argument_list|(
literal|"inheritance.eomodeld"
argument_list|)
decl_stmt|;
name|ObjEntity
name|concreteE
init|=
name|map
operator|.
name|getObjEntity
argument_list|(
literal|"ConcreteEntityOne"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|concreteE
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AbstractEntity"
argument_list|,
name|concreteE
operator|.
name|getSuperEntityName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"CONCRETE_ENTITY_ONE"
argument_list|,
name|concreteE
operator|.
name|getDbEntityName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"ConcreteEntityClass"
argument_list|,
name|concreteE
operator|.
name|getClassName
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"AbstractEntityClass"
argument_list|,
name|concreteE
operator|.
name|getSuperClassName
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testLoadFlattenedRelationship
parameter_list|()
throws|throws
name|Exception
block|{
name|DataMap
name|map
init|=
name|processor
operator|.
name|loadEOModel
argument_list|(
literal|"inheritance.eomodeld"
argument_list|)
decl_stmt|;
name|ObjEntity
name|e1
init|=
name|map
operator|.
name|getObjEntity
argument_list|(
literal|"HelperFlatEntity"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|e1
argument_list|)
expr_stmt|;
name|ObjRelationship
name|fr
init|=
operator|(
name|ObjRelationship
operator|)
name|e1
operator|.
name|getRelationship
argument_list|(
literal|"singleTables"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|fr
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"singleTableJoins.toSingleTable"
argument_list|,
name|fr
operator|.
name|getDbRelationshipPath
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"SingleTableConcreteEntityOne"
argument_list|,
name|fr
operator|.
name|getTargetEntityName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

