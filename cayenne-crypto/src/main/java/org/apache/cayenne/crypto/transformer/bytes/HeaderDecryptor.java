begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|crypto
operator|.
name|transformer
operator|.
name|bytes
package|;
end_package

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|Key
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|crypto
operator|.
name|key
operator|.
name|KeySource
import|;
end_import

begin_comment
comment|/**  * @since 3.2  */
end_comment

begin_class
class|class
name|HeaderDecryptor
implements|implements
name|BytesDecryptor
block|{
specifier|private
name|KeySource
name|keySource
decl_stmt|;
specifier|private
name|BytesDecryptor
name|delegate
decl_stmt|;
specifier|public
name|HeaderDecryptor
parameter_list|(
name|BytesDecryptor
name|delegate
parameter_list|,
name|KeySource
name|keySource
parameter_list|)
block|{
name|this
operator|.
name|delegate
operator|=
name|delegate
expr_stmt|;
name|this
operator|.
name|keySource
operator|=
name|keySource
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|byte
index|[]
name|decrypt
parameter_list|(
name|byte
index|[]
name|input
parameter_list|,
name|int
name|inputOffset
parameter_list|,
name|Key
name|key
parameter_list|)
block|{
comment|// ignoring the parameter key... using the key from the first block
name|Header
name|header
init|=
name|header
argument_list|(
name|input
argument_list|,
name|inputOffset
argument_list|)
decl_stmt|;
name|Key
name|inRecordKey
init|=
name|keySource
operator|.
name|getKey
argument_list|(
name|header
operator|.
name|getKeyName
argument_list|()
argument_list|)
decl_stmt|;
return|return
name|delegate
operator|.
name|decrypt
argument_list|(
name|input
argument_list|,
name|inputOffset
operator|+
name|Header
operator|.
name|HEADER_SIZE
argument_list|,
name|inRecordKey
argument_list|)
return|;
block|}
name|Header
name|header
parameter_list|(
name|byte
index|[]
name|input
parameter_list|,
name|int
name|inputOffset
parameter_list|)
block|{
return|return
name|Header
operator|.
name|create
argument_list|(
name|input
argument_list|,
name|inputOffset
argument_list|)
return|;
block|}
block|}
end_class

end_unit

