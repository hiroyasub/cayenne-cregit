begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|crypto
operator|.
name|unit
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertArrayEquals
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|CryptoUnitUtilsTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testHexToBytes
parameter_list|()
block|{
name|String
name|hexString
init|=
literal|"0506AB"
decl_stmt|;
name|byte
index|[]
name|hexByte
init|=
block|{
literal|5
block|,
literal|6
block|,
operator|(
name|byte
operator|)
literal|0xAB
block|}
decl_stmt|;
name|assertArrayEquals
argument_list|(
name|hexByte
argument_list|,
name|CryptoUnitUtils
operator|.
name|hexToBytes
argument_list|(
name|hexString
argument_list|)
argument_list|)
expr_stmt|;
name|String
name|hexString2
init|=
literal|"0591849d87c93414f4405d32f4d69220"
decl_stmt|;
name|byte
index|[]
name|hexByte2
init|=
block|{
literal|5
block|,
operator|(
name|byte
operator|)
literal|0x91
block|,
operator|(
name|byte
operator|)
literal|0x84
block|,
operator|(
name|byte
operator|)
literal|0x9d
block|,
operator|(
name|byte
operator|)
literal|0x87
block|,
operator|(
name|byte
operator|)
literal|0xc9
block|,
operator|(
name|byte
operator|)
literal|0x34
block|,
operator|(
name|byte
operator|)
literal|0x14
block|,
operator|(
name|byte
operator|)
literal|0xf4
block|,
operator|(
name|byte
operator|)
literal|0x40
block|,
operator|(
name|byte
operator|)
literal|0x5d
block|,
operator|(
name|byte
operator|)
literal|0x32
block|,
operator|(
name|byte
operator|)
literal|0xf4
block|,
operator|(
name|byte
operator|)
literal|0xd6
block|,
operator|(
name|byte
operator|)
literal|0x92
block|,
operator|(
name|byte
operator|)
literal|0x20
block|}
decl_stmt|;
name|assertArrayEquals
argument_list|(
name|hexByte2
argument_list|,
name|CryptoUnitUtils
operator|.
name|hexToBytes
argument_list|(
name|hexString2
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

