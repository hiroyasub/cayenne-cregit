begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|crypto
operator|.
name|transformer
operator|.
name|value
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|text
operator|.
name|ParseException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertArrayEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_class
specifier|public
class|class
name|BooleanConverterTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testFromBytes
parameter_list|()
block|{
name|assertEquals
argument_list|(
literal|true
argument_list|,
name|BooleanConverter
operator|.
name|INSTANCE
operator|.
name|fromBytes
argument_list|(
operator|new
name|byte
index|[]
block|{
literal|1
block|}
argument_list|)
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|false
argument_list|,
name|BooleanConverter
operator|.
name|INSTANCE
operator|.
name|fromBytes
argument_list|(
operator|new
name|byte
index|[]
block|{
literal|0
block|}
argument_list|)
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
argument_list|(
name|expected
operator|=
name|IllegalArgumentException
operator|.
name|class
argument_list|)
specifier|public
name|void
name|testFromBytes_InvalidArray
parameter_list|()
block|{
name|BooleanConverter
operator|.
name|INSTANCE
operator|.
name|fromBytes
argument_list|(
operator|new
name|byte
index|[]
block|{
literal|1
block|,
literal|0
block|}
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testToBytes
parameter_list|()
throws|throws
name|ParseException
block|{
name|assertArrayEquals
argument_list|(
operator|new
name|byte
index|[]
block|{
literal|0
block|}
argument_list|,
name|BooleanConverter
operator|.
name|INSTANCE
operator|.
name|toBytes
argument_list|(
literal|false
argument_list|)
argument_list|)
expr_stmt|;
name|assertArrayEquals
argument_list|(
operator|new
name|byte
index|[]
block|{
literal|1
block|}
argument_list|,
name|BooleanConverter
operator|.
name|INSTANCE
operator|.
name|toBytes
argument_list|(
literal|true
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

