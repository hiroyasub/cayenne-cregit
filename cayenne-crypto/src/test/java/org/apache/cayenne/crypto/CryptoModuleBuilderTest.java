begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|crypto
package|;
end_package

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import
name|java
operator|.
name|security
operator|.
name|Key
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|crypto
operator|.
name|key
operator|.
name|KeySource
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|crypto
operator|.
name|key
operator|.
name|KeyStoreKeySourceTest
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|crypto
operator|.
name|transformer
operator|.
name|value
operator|.
name|JceValueTransformerFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|DIBootstrap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Injector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Module
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_class
specifier|public
class|class
name|CryptoModuleBuilderTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testBuild_KeySource
parameter_list|()
block|{
name|Module
name|m
init|=
operator|new
name|CryptoModuleBuilder
argument_list|()
operator|.
name|keyPassword
argument_list|(
name|KeyStoreKeySourceTest
operator|.
name|TEST_KEY_PASS
argument_list|)
operator|.
name|keyStore
argument_list|(
name|KeyStoreKeySourceTest
operator|.
name|class
operator|.
name|getResource
argument_list|(
name|KeyStoreKeySourceTest
operator|.
name|KS1_JCEKS
argument_list|)
argument_list|)
operator|.
name|valueTransformer
argument_list|(
name|JceValueTransformerFactory
operator|.
name|class
argument_list|)
operator|.
name|build
argument_list|()
decl_stmt|;
name|Injector
name|injector
init|=
name|DIBootstrap
operator|.
name|createInjector
argument_list|(
name|m
argument_list|)
decl_stmt|;
name|KeySource
name|ks
init|=
name|injector
operator|.
name|getInstance
argument_list|(
name|KeySource
operator|.
name|class
argument_list|)
decl_stmt|;
name|Key
name|k1
init|=
name|ks
operator|.
name|getKey
argument_list|(
literal|"k1"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|k1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"DES"
argument_list|,
name|k1
operator|.
name|getAlgorithm
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

