begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|joda
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|CayenneJodaModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ObjectContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|server
operator|.
name|ServerRuntime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Module
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|joda
operator|.
name|db
operator|.
name|DateTimeTestEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|joda
operator|.
name|db
operator|.
name|LocalDateTestEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|joda
operator|.
name|db
operator|.
name|LocalDateTimeTestEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|joda
operator|.
name|db
operator|.
name|LocalTimeTestEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|SelectQuery
import|;
end_import

begin_import
import|import
name|org
operator|.
name|joda
operator|.
name|time
operator|.
name|DateTime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|joda
operator|.
name|time
operator|.
name|LocalDate
import|;
end_import

begin_import
import|import
name|org
operator|.
name|joda
operator|.
name|time
operator|.
name|LocalDateTime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|joda
operator|.
name|time
operator|.
name|LocalTime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|java
operator|.
name|sql
operator|.
name|SQLException
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_class
specifier|public
class|class
name|JodaTimeIT
block|{
specifier|private
name|ServerRuntime
name|runtime
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
throws|throws
name|Exception
block|{
name|Module
name|jodaModule
init|=
operator|new
name|CayenneJodaModule
argument_list|()
decl_stmt|;
name|this
operator|.
name|runtime
operator|=
operator|new
name|ServerRuntime
argument_list|(
literal|"cayenne-joda.xml"
argument_list|,
name|jodaModule
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testJodaDateTime
parameter_list|()
throws|throws
name|SQLException
block|{
name|ObjectContext
name|context
init|=
name|runtime
operator|.
name|newContext
argument_list|()
decl_stmt|;
name|DateTimeTestEntity
name|dateTimeTestEntity
init|=
name|context
operator|.
name|newObject
argument_list|(
name|DateTimeTestEntity
operator|.
name|class
argument_list|)
decl_stmt|;
name|DateTime
name|dateTime
init|=
name|DateTime
operator|.
name|now
argument_list|()
decl_stmt|;
name|dateTimeTestEntity
operator|.
name|setTimestamp
argument_list|(
name|dateTime
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|SelectQuery
name|q
init|=
operator|new
name|SelectQuery
argument_list|(
name|DateTimeTestEntity
operator|.
name|class
argument_list|)
decl_stmt|;
name|DateTimeTestEntity
name|testRead
init|=
operator|(
name|DateTimeTestEntity
operator|)
name|context
operator|.
name|performQuery
argument_list|(
name|q
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|DateTime
name|timestamp
init|=
name|testRead
operator|.
name|getTimestamp
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|timestamp
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|DateTime
operator|.
name|class
argument_list|,
name|timestamp
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|dateTime
argument_list|,
name|timestamp
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testJodaLocalDate
parameter_list|()
block|{
name|ObjectContext
name|context
init|=
name|runtime
operator|.
name|newContext
argument_list|()
decl_stmt|;
name|LocalDateTestEntity
name|localDateTestEntity
init|=
name|context
operator|.
name|newObject
argument_list|(
name|LocalDateTestEntity
operator|.
name|class
argument_list|)
decl_stmt|;
name|LocalDate
name|localDate
init|=
name|LocalDate
operator|.
name|now
argument_list|()
decl_stmt|;
name|localDateTestEntity
operator|.
name|setDate
argument_list|(
name|localDate
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|SelectQuery
name|q
init|=
operator|new
name|SelectQuery
argument_list|(
name|LocalDateTestEntity
operator|.
name|class
argument_list|)
decl_stmt|;
name|LocalDateTestEntity
name|testRead
init|=
operator|(
name|LocalDateTestEntity
operator|)
name|context
operator|.
name|performQuery
argument_list|(
name|q
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|LocalDate
name|date
init|=
name|testRead
operator|.
name|getDate
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|date
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|LocalDate
operator|.
name|class
argument_list|,
name|date
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|localDate
argument_list|,
name|date
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testJodaLocalTime
parameter_list|()
block|{
name|ObjectContext
name|context
init|=
name|runtime
operator|.
name|newContext
argument_list|()
decl_stmt|;
name|LocalTimeTestEntity
name|localTimeTestEntity
init|=
name|context
operator|.
name|newObject
argument_list|(
name|LocalTimeTestEntity
operator|.
name|class
argument_list|)
decl_stmt|;
name|LocalTime
name|localTime
init|=
name|LocalTime
operator|.
name|now
argument_list|()
decl_stmt|;
name|localTimeTestEntity
operator|.
name|setTime
argument_list|(
name|localTime
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|SelectQuery
name|q
init|=
operator|new
name|SelectQuery
argument_list|(
name|LocalTimeTestEntity
operator|.
name|class
argument_list|)
decl_stmt|;
name|LocalTimeTestEntity
name|testRead
init|=
operator|(
name|LocalTimeTestEntity
operator|)
name|context
operator|.
name|performQuery
argument_list|(
name|q
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|LocalTime
name|time
init|=
name|testRead
operator|.
name|getTime
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|time
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|LocalTime
operator|.
name|class
argument_list|,
name|time
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|localTime
operator|.
name|getSecondOfMinute
argument_list|()
argument_list|,
name|time
operator|.
name|getSecondOfMinute
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|localTime
operator|.
name|getMinuteOfHour
argument_list|()
argument_list|,
name|time
operator|.
name|getMinuteOfHour
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|localTime
operator|.
name|getHourOfDay
argument_list|()
argument_list|,
name|time
operator|.
name|getHourOfDay
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testJodaLocalDateTime
parameter_list|()
block|{
name|ObjectContext
name|context
init|=
name|runtime
operator|.
name|newContext
argument_list|()
decl_stmt|;
name|LocalDateTimeTestEntity
name|localDateTimeTestEntity
init|=
name|context
operator|.
name|newObject
argument_list|(
name|LocalDateTimeTestEntity
operator|.
name|class
argument_list|)
decl_stmt|;
name|LocalDateTime
name|localDateTime
init|=
name|LocalDateTime
operator|.
name|now
argument_list|()
decl_stmt|;
name|localDateTimeTestEntity
operator|.
name|setTimestamp
argument_list|(
name|localDateTime
argument_list|)
expr_stmt|;
name|context
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|SelectQuery
name|q
init|=
operator|new
name|SelectQuery
argument_list|(
name|LocalDateTimeTestEntity
operator|.
name|class
argument_list|)
decl_stmt|;
name|LocalDateTimeTestEntity
name|testRead
init|=
operator|(
name|LocalDateTimeTestEntity
operator|)
name|context
operator|.
name|performQuery
argument_list|(
name|q
argument_list|)
operator|.
name|get
argument_list|(
literal|0
argument_list|)
decl_stmt|;
name|LocalDateTime
name|timestamp
init|=
name|testRead
operator|.
name|getTimestamp
argument_list|()
decl_stmt|;
name|assertNotNull
argument_list|(
name|timestamp
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|LocalDateTime
operator|.
name|class
argument_list|,
name|timestamp
operator|.
name|getClass
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|localDateTime
argument_list|,
name|timestamp
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

