begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|commitlog
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|commitlog
operator|.
name|meta
operator|.
name|AnnotationCommitLogEntityFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|commitlog
operator|.
name|meta
operator|.
name|CommitLogEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|commitlog
operator|.
name|meta
operator|.
name|CommitLogEntityFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|server
operator|.
name|ServerModule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Binder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|ListBuilder
import|;
end_import

begin_comment
comment|/**  * A builder of a custom extensions module for {@link CommitLogModule} that customizes its services and installs  * application-specific commit log listeners.  *  * @since 4.0  */
end_comment

begin_class
specifier|public
class|class
name|CommitLogModuleExtender
block|{
specifier|private
specifier|final
name|Binder
name|binder
decl_stmt|;
specifier|private
name|ListBuilder
argument_list|<
name|CommitLogListener
argument_list|>
name|commitLogListeners
decl_stmt|;
specifier|protected
name|CommitLogModuleExtender
parameter_list|(
name|Binder
name|binder
parameter_list|)
block|{
name|this
operator|.
name|binder
operator|=
name|binder
expr_stmt|;
block|}
specifier|protected
name|CommitLogModuleExtender
name|initAllExtensions
parameter_list|()
block|{
name|contributeCommitLogListeners
argument_list|()
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|CommitLogModuleExtender
name|addListener
parameter_list|(
name|Class
argument_list|<
name|?
extends|extends
name|CommitLogListener
argument_list|>
name|type
parameter_list|)
block|{
name|contributeCommitLogListeners
argument_list|()
operator|.
name|add
argument_list|(
name|type
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|public
name|CommitLogModuleExtender
name|addListener
parameter_list|(
name|CommitLogListener
name|instance
parameter_list|)
block|{
name|contributeCommitLogListeners
argument_list|()
operator|.
name|add
argument_list|(
name|instance
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * If called, events will be dispatched outside the main commit transaction. By default, events are dispatched      * within the transaction, so listeners can commit their code together with the main commit.      */
specifier|public
name|CommitLogModuleExtender
name|excludeFromTransaction
parameter_list|()
block|{
return|return
name|registerFilter
argument_list|(
literal|false
argument_list|)
return|;
block|}
comment|/**      * @since 5.0      */
specifier|public
name|CommitLogModuleExtender
name|includeInTransaction
parameter_list|()
block|{
return|return
name|registerFilter
argument_list|(
literal|true
argument_list|)
return|;
block|}
specifier|protected
name|CommitLogModuleExtender
name|registerFilter
parameter_list|(
name|boolean
name|inTx
parameter_list|)
block|{
name|ServerModule
operator|.
name|extend
argument_list|(
name|binder
argument_list|)
operator|.
name|addSyncFilter
argument_list|(
name|CommitLogFilter
operator|.
name|class
argument_list|,
name|inTx
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
comment|/**      * Installs entity filter that would only include entities annotated with      * {@link CommitLog} on the callbacks. Also {@link CommitLog#confidential()}      * properties will be obfuscated and {@link CommitLog#ignoredProperties()} -      * excluded from the change collection.      */
specifier|public
name|CommitLogModuleExtender
name|commitLogAnnotationEntitiesOnly
parameter_list|()
block|{
return|return
name|entityFactory
argument_list|(
name|AnnotationCommitLogEntityFactory
operator|.
name|class
argument_list|)
return|;
block|}
comment|/**      * Installs a custom factory for {@link CommitLogEntity} objects that allows implementors to use their own      * annotations, etc.      */
specifier|public
name|CommitLogModuleExtender
name|entityFactory
parameter_list|(
name|Class
argument_list|<
name|?
extends|extends
name|CommitLogEntityFactory
argument_list|>
name|entityFactoryType
parameter_list|)
block|{
name|binder
operator|.
name|bind
argument_list|(
name|CommitLogEntityFactory
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|entityFactoryType
argument_list|)
expr_stmt|;
return|return
name|this
return|;
block|}
specifier|private
name|ListBuilder
argument_list|<
name|CommitLogListener
argument_list|>
name|contributeCommitLogListeners
parameter_list|()
block|{
return|return
name|commitLogListeners
operator|!=
literal|null
condition|?
name|commitLogListeners
else|:
operator|(
name|commitLogListeners
operator|=
name|binder
operator|.
name|bindList
argument_list|(
name|CommitLogListener
operator|.
name|class
argument_list|)
operator|)
return|;
block|}
block|}
end_class

end_unit

