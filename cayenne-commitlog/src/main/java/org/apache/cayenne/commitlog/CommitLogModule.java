begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|commitlog
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|commitlog
operator|.
name|meta
operator|.
name|IncludeAllCommitLogEntityFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Binder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|ListBuilder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Module
import|;
end_import

begin_comment
comment|/**  * Auto-loadable module that enables gathering of commit log information for Cayenne stack. To add custom listeners to  * receive commit log events, implement {@link CommitLogListener} and register it using {@link CommitLogModule#extend(Binder)}  *  * @since 4.0  */
end_comment

begin_class
specifier|public
class|class
name|CommitLogModule
implements|implements
name|Module
block|{
comment|/**      * @deprecated use {@link #extend(Binder)} instead      */
annotation|@
name|Deprecated
argument_list|(
name|since
operator|=
literal|"5.0"
argument_list|)
specifier|static
name|ListBuilder
argument_list|<
name|CommitLogListener
argument_list|>
name|contributeListeners
parameter_list|(
name|Binder
name|binder
parameter_list|)
block|{
return|return
name|binder
operator|.
name|bindList
argument_list|(
name|CommitLogListener
operator|.
name|class
argument_list|)
return|;
block|}
comment|/**      * Starts an extension module builder to add listeners and/or other customizations for {@link CommitLogModule}.      *      * @return a new builder of {@link CommitLogModule} extensions.      * @since 5.0      */
specifier|public
specifier|static
name|CommitLogModuleExtender
name|extend
parameter_list|(
name|Binder
name|binder
parameter_list|)
block|{
return|return
operator|new
name|CommitLogModuleExtender
argument_list|(
name|binder
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|(
name|Binder
name|binder
parameter_list|)
block|{
name|extend
argument_list|(
name|binder
argument_list|)
operator|.
name|initAllExtensions
argument_list|()
operator|.
name|entityFactory
argument_list|(
name|IncludeAllCommitLogEntityFactory
operator|.
name|class
argument_list|)
operator|.
name|includeInTransaction
argument_list|()
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|CommitLogFilter
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|CommitLogFilter
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

