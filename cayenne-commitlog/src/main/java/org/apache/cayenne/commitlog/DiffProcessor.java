begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|commitlog
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ObjectId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|graph
operator|.
name|GraphChangeHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|commitlog
operator|.
name|model
operator|.
name|MutableChangeMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|commitlog
operator|.
name|model
operator|.
name|MutableObjectChange
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|commitlog
operator|.
name|model
operator|.
name|ObjectChangeType
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|EntityResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjRelationship
import|;
end_import

begin_comment
comment|/**  * Records changes in a given transaction to a {@link MutableChangeMap} object.  *   * @since 4.0  */
end_comment

begin_class
class|class
name|DiffProcessor
implements|implements
name|GraphChangeHandler
block|{
specifier|private
name|EntityResolver
name|entityResolver
decl_stmt|;
specifier|private
name|MutableChangeMap
name|changeSet
decl_stmt|;
name|DiffProcessor
parameter_list|(
name|MutableChangeMap
name|changeSet
parameter_list|,
name|EntityResolver
name|entityResolver
parameter_list|)
block|{
name|this
operator|.
name|changeSet
operator|=
name|changeSet
expr_stmt|;
name|this
operator|.
name|entityResolver
operator|=
name|entityResolver
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|nodeRemoved
parameter_list|(
name|Object
name|nodeId
parameter_list|)
block|{
comment|// do nothing... deletes are processed pre-commit
block|}
annotation|@
name|Override
specifier|public
name|void
name|nodePropertyChanged
parameter_list|(
name|Object
name|nodeId
parameter_list|,
name|String
name|property
parameter_list|,
name|Object
name|oldValue
parameter_list|,
name|Object
name|newValue
parameter_list|)
block|{
name|changeSet
operator|.
name|getOrCreate
argument_list|(
operator|(
name|ObjectId
operator|)
name|nodeId
argument_list|,
name|ObjectChangeType
operator|.
name|UPDATE
argument_list|)
operator|.
name|attributeChanged
argument_list|(
name|property
argument_list|,
name|oldValue
argument_list|,
name|newValue
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|nodeIdChanged
parameter_list|(
name|Object
name|nodeId
parameter_list|,
name|Object
name|newId
parameter_list|)
block|{
name|changeSet
operator|.
name|aliasId
argument_list|(
operator|(
name|ObjectId
operator|)
name|nodeId
argument_list|,
operator|(
name|ObjectId
operator|)
name|newId
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|nodeCreated
parameter_list|(
name|Object
name|nodeId
parameter_list|)
block|{
name|changeSet
operator|.
name|getOrCreate
argument_list|(
operator|(
name|ObjectId
operator|)
name|nodeId
argument_list|,
name|ObjectChangeType
operator|.
name|INSERT
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|void
name|arcDeleted
parameter_list|(
name|Object
name|nodeId
parameter_list|,
name|Object
name|targetNodeId
parameter_list|,
name|Object
name|arcId
parameter_list|)
block|{
name|ObjectId
name|id
init|=
operator|(
name|ObjectId
operator|)
name|nodeId
decl_stmt|;
name|String
name|relationshipName
init|=
name|arcId
operator|.
name|toString
argument_list|()
decl_stmt|;
name|ObjEntity
name|entity
init|=
name|entityResolver
operator|.
name|getObjEntity
argument_list|(
name|id
operator|.
name|getEntityName
argument_list|()
argument_list|)
decl_stmt|;
name|ObjRelationship
name|relationship
init|=
name|entity
operator|.
name|getRelationship
argument_list|(
name|relationshipName
argument_list|)
decl_stmt|;
name|MutableObjectChange
name|c
init|=
name|changeSet
operator|.
name|getOrCreate
argument_list|(
name|id
argument_list|,
name|ObjectChangeType
operator|.
name|UPDATE
argument_list|)
decl_stmt|;
name|ObjectId
name|tid
init|=
operator|(
name|ObjectId
operator|)
name|targetNodeId
decl_stmt|;
if|if
condition|(
name|relationship
operator|.
name|isToMany
argument_list|()
condition|)
block|{
name|c
operator|.
name|toManyRelationshipDisconnected
argument_list|(
name|relationshipName
argument_list|,
name|tid
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|c
operator|.
name|toOneRelationshipDisconnected
argument_list|(
name|relationshipName
argument_list|,
name|tid
argument_list|)
expr_stmt|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|arcCreated
parameter_list|(
name|Object
name|nodeId
parameter_list|,
name|Object
name|targetNodeId
parameter_list|,
name|Object
name|arcId
parameter_list|)
block|{
name|ObjectId
name|id
init|=
operator|(
name|ObjectId
operator|)
name|nodeId
decl_stmt|;
name|String
name|relationshipName
init|=
name|arcId
operator|.
name|toString
argument_list|()
decl_stmt|;
name|ObjEntity
name|entity
init|=
name|entityResolver
operator|.
name|getObjEntity
argument_list|(
name|id
operator|.
name|getEntityName
argument_list|()
argument_list|)
decl_stmt|;
name|ObjRelationship
name|relationship
init|=
name|entity
operator|.
name|getRelationship
argument_list|(
name|relationshipName
argument_list|)
decl_stmt|;
name|MutableObjectChange
name|c
init|=
name|changeSet
operator|.
name|getOrCreate
argument_list|(
name|id
argument_list|,
name|ObjectChangeType
operator|.
name|UPDATE
argument_list|)
decl_stmt|;
name|ObjectId
name|tid
init|=
operator|(
name|ObjectId
operator|)
name|targetNodeId
decl_stmt|;
if|if
condition|(
name|relationship
operator|.
name|isToMany
argument_list|()
condition|)
block|{
name|c
operator|.
name|toManyRelationshipConnected
argument_list|(
name|relationshipName
argument_list|,
name|tid
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|c
operator|.
name|toOneRelationshipConnected
argument_list|(
name|relationshipName
argument_list|,
name|tid
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

