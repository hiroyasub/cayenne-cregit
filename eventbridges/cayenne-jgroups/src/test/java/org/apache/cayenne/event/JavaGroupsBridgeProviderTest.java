begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|event
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|access
operator|.
name|DataDomain
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|Constants
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|DefaultRuntimeProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|RuntimeProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Binder
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|DIBootstrap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Injector
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Module
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|log
operator|.
name|CommonsJdbcEventLogger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|log
operator|.
name|JdbcEventLogger
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|tx
operator|.
name|DefaultTransactionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|tx
operator|.
name|DefaultTransactionManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|tx
operator|.
name|TransactionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|tx
operator|.
name|TransactionManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertTrue
import|;
end_import

begin_class
specifier|public
class|class
name|JavaGroupsBridgeProviderTest
block|{
specifier|private
specifier|final
name|DataDomain
name|DOMAIN
init|=
operator|new
name|DataDomain
argument_list|(
literal|"test"
argument_list|)
decl_stmt|;
specifier|private
specifier|final
name|EventManager
name|EVENT_MANAGER
init|=
operator|new
name|DefaultEventManager
argument_list|()
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|MCAST_ADDRESS_TEST
init|=
literal|"192.168.0.0"
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|MCAST_PORT_TEST
init|=
literal|"1521"
decl_stmt|;
specifier|protected
specifier|static
specifier|final
name|String
name|CONFIG_URL_TEST
init|=
literal|"somehost.com"
decl_stmt|;
annotation|@
name|Test
specifier|public
name|void
name|testGetJavaGroupsBridge
parameter_list|()
throws|throws
name|Exception
block|{
name|Injector
name|injector
init|=
name|DIBootstrap
operator|.
name|createInjector
argument_list|(
operator|new
name|DefaultBindings
argument_list|()
argument_list|,
operator|new
name|JGroupsModule
argument_list|()
argument_list|)
decl_stmt|;
name|EventBridge
name|bridge
init|=
name|injector
operator|.
name|getInstance
argument_list|(
name|EventBridge
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|bridge
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|bridge
operator|instanceof
name|JavaGroupsBridge
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testUseProperties
parameter_list|()
throws|throws
name|Exception
block|{
name|Module
name|module
init|=
operator|new
name|Module
argument_list|()
block|{
specifier|public
name|void
name|configure
parameter_list|(
name|Binder
name|binder
parameter_list|)
block|{
name|JGroupsModule
operator|.
name|contributeMulticastAddress
argument_list|(
name|binder
argument_list|,
name|MCAST_ADDRESS_TEST
argument_list|)
expr_stmt|;
name|JGroupsModule
operator|.
name|contributeMulticastPort
argument_list|(
name|binder
argument_list|,
name|Integer
operator|.
name|parseInt
argument_list|(
name|MCAST_PORT_TEST
argument_list|)
argument_list|)
expr_stmt|;
name|JGroupsModule
operator|.
name|contributeConfigUrl
argument_list|(
name|binder
argument_list|,
name|CONFIG_URL_TEST
argument_list|)
expr_stmt|;
block|}
block|}
decl_stmt|;
name|Injector
name|injector
init|=
name|DIBootstrap
operator|.
name|createInjector
argument_list|(
operator|new
name|DefaultBindings
argument_list|()
argument_list|,
operator|new
name|JGroupsModule
argument_list|()
argument_list|,
name|module
argument_list|)
decl_stmt|;
name|JavaGroupsBridge
name|bridge
init|=
operator|(
name|JavaGroupsBridge
operator|)
name|injector
operator|.
name|getInstance
argument_list|(
name|EventBridge
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|MCAST_ADDRESS_TEST
argument_list|,
name|bridge
operator|.
name|getMulticastAddress
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|MCAST_PORT_TEST
argument_list|,
name|bridge
operator|.
name|getMulticastPort
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|CONFIG_URL_TEST
argument_list|,
name|bridge
operator|.
name|getConfigURL
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testUseDefaultProperties
parameter_list|()
throws|throws
name|Exception
block|{
name|Injector
name|injector
init|=
name|DIBootstrap
operator|.
name|createInjector
argument_list|(
operator|new
name|DefaultBindings
argument_list|()
argument_list|,
operator|new
name|JGroupsModule
argument_list|()
argument_list|)
decl_stmt|;
name|JavaGroupsBridge
name|bridge
init|=
operator|(
name|JavaGroupsBridge
operator|)
name|injector
operator|.
name|getInstance
argument_list|(
name|EventBridge
operator|.
name|class
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|JavaGroupsBridge
operator|.
name|MCAST_ADDRESS_DEFAULT
argument_list|,
name|bridge
operator|.
name|getMulticastAddress
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|JavaGroupsBridge
operator|.
name|MCAST_PORT_DEFAULT
argument_list|,
name|bridge
operator|.
name|getMulticastPort
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|null
argument_list|,
name|bridge
operator|.
name|getConfigURL
argument_list|()
argument_list|)
expr_stmt|;
block|}
class|class
name|DefaultBindings
implements|implements
name|Module
block|{
annotation|@
name|Override
specifier|public
name|void
name|configure
parameter_list|(
name|Binder
name|binder
parameter_list|)
block|{
name|binder
operator|.
name|bindMap
argument_list|(
name|String
operator|.
name|class
argument_list|,
name|Constants
operator|.
name|PROPERTIES_MAP
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|DataDomain
operator|.
name|class
argument_list|)
operator|.
name|toInstance
argument_list|(
name|DOMAIN
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|EventManager
operator|.
name|class
argument_list|)
operator|.
name|toInstance
argument_list|(
name|EVENT_MANAGER
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|TransactionManager
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|DefaultTransactionManager
operator|.
name|class
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|TransactionFactory
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|DefaultTransactionFactory
operator|.
name|class
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|JdbcEventLogger
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|CommonsJdbcEventLogger
operator|.
name|class
argument_list|)
expr_stmt|;
name|binder
operator|.
name|bind
argument_list|(
name|RuntimeProperties
operator|.
name|class
argument_list|)
operator|.
name|to
argument_list|(
name|DefaultRuntimeProperties
operator|.
name|class
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

