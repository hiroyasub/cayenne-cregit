begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|gen
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|exp
operator|.
name|Expression
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|exp
operator|.
name|ExpressionFactory
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DataMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DbEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjAttribute
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|ObjEntity
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|QueryDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|SQLTemplateDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|SelectQueryDescriptor
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Before
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Rule
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|rules
operator|.
name|TemporaryFolder
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|BufferedReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|FileNotFoundException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStreamReader
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Paths
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|ArrayList
import|;
end_import

begin_import
import|import
name|java
operator|.
name|util
operator|.
name|Collection
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_class
specifier|public
class|class
name|BaseTemplatesGenerationTest
block|{
annotation|@
name|Rule
specifier|public
name|TemporaryFolder
name|folder
init|=
operator|new
name|TemporaryFolder
argument_list|()
decl_stmt|;
specifier|protected
name|CgenConfiguration
name|cgenConfiguration
decl_stmt|;
specifier|protected
name|ClassGenerationAction
name|action
decl_stmt|;
specifier|protected
name|DataMap
name|dataMap
decl_stmt|;
specifier|protected
name|ObjEntity
name|objEntity
decl_stmt|;
annotation|@
name|Before
specifier|public
name|void
name|setUp
parameter_list|()
block|{
name|cgenConfiguration
operator|=
operator|new
name|CgenConfiguration
argument_list|(
literal|false
argument_list|)
expr_stmt|;
name|action
operator|=
operator|new
name|ClassGenerationAction
argument_list|(
name|cgenConfiguration
argument_list|)
expr_stmt|;
name|dataMap
operator|=
operator|new
name|DataMap
argument_list|()
expr_stmt|;
name|dataMap
operator|.
name|setDefaultPackage
argument_list|(
literal|"test"
argument_list|)
expr_stmt|;
name|objEntity
operator|=
operator|new
name|ObjEntity
argument_list|()
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSelectQuery
parameter_list|()
throws|throws
name|Exception
block|{
name|dataMap
operator|.
name|setName
argument_list|(
literal|"SelectQuery"
argument_list|)
expr_stmt|;
name|String
name|param
init|=
literal|"param"
decl_stmt|;
name|String
name|qualifierString
init|=
literal|"name = $"
operator|+
name|param
decl_stmt|;
name|DbEntity
name|dbEntity
init|=
operator|new
name|DbEntity
argument_list|()
decl_stmt|;
name|ObjAttribute
name|attribute
init|=
operator|new
name|ObjAttribute
argument_list|(
literal|"name"
argument_list|)
decl_stmt|;
name|attribute
operator|.
name|setDbAttributePath
argument_list|(
literal|"testKey"
argument_list|)
expr_stmt|;
name|attribute
operator|.
name|setType
argument_list|(
literal|"java.lang.String"
argument_list|)
expr_stmt|;
name|objEntity
operator|.
name|addAttribute
argument_list|(
name|attribute
argument_list|)
expr_stmt|;
name|objEntity
operator|.
name|setDbEntity
argument_list|(
name|dbEntity
argument_list|)
expr_stmt|;
name|objEntity
operator|.
name|setClassName
argument_list|(
literal|"Test"
argument_list|)
expr_stmt|;
name|SelectQueryDescriptor
name|selectQueryDescriptor
init|=
operator|new
name|SelectQueryDescriptor
argument_list|()
decl_stmt|;
name|Expression
name|exp
init|=
name|ExpressionFactory
operator|.
name|exp
argument_list|(
name|qualifierString
argument_list|)
decl_stmt|;
name|selectQueryDescriptor
operator|.
name|setQualifier
argument_list|(
name|exp
argument_list|)
expr_stmt|;
name|selectQueryDescriptor
operator|.
name|setName
argument_list|(
literal|"select"
argument_list|)
expr_stmt|;
name|selectQueryDescriptor
operator|.
name|setRoot
argument_list|(
name|objEntity
argument_list|)
expr_stmt|;
name|Collection
argument_list|<
name|QueryDescriptor
argument_list|>
name|descriptors
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|descriptors
operator|.
name|add
argument_list|(
name|selectQueryDescriptor
argument_list|)
expr_stmt|;
name|DataMapArtifact
name|dataMapArtifact
init|=
operator|new
name|DataMapArtifact
argument_list|(
name|dataMap
argument_list|,
name|descriptors
argument_list|)
decl_stmt|;
name|execute
argument_list|(
name|dataMapArtifact
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSQLTemplate
parameter_list|()
throws|throws
name|Exception
block|{
name|dataMap
operator|.
name|setName
argument_list|(
literal|"SQLTemplate"
argument_list|)
expr_stmt|;
name|DbEntity
name|dbEntity
init|=
operator|new
name|DbEntity
argument_list|()
decl_stmt|;
name|objEntity
operator|.
name|setDbEntity
argument_list|(
name|dbEntity
argument_list|)
expr_stmt|;
name|objEntity
operator|.
name|setClassName
argument_list|(
literal|"Test"
argument_list|)
expr_stmt|;
name|SQLTemplateDescriptor
name|sqlTemplateDescriptor
init|=
operator|new
name|SQLTemplateDescriptor
argument_list|()
decl_stmt|;
name|sqlTemplateDescriptor
operator|.
name|setSql
argument_list|(
literal|"SELECT * FROM table"
argument_list|)
expr_stmt|;
name|sqlTemplateDescriptor
operator|.
name|setRoot
argument_list|(
name|objEntity
argument_list|)
expr_stmt|;
name|sqlTemplateDescriptor
operator|.
name|setName
argument_list|(
literal|"select"
argument_list|)
expr_stmt|;
name|sqlTemplateDescriptor
operator|.
name|setRoot
argument_list|(
name|objEntity
argument_list|)
expr_stmt|;
name|Collection
argument_list|<
name|QueryDescriptor
argument_list|>
name|descriptors
init|=
operator|new
name|ArrayList
argument_list|<>
argument_list|()
decl_stmt|;
name|descriptors
operator|.
name|add
argument_list|(
name|sqlTemplateDescriptor
argument_list|)
expr_stmt|;
name|DataMapArtifact
name|dataMapArtifact
init|=
operator|new
name|DataMapArtifact
argument_list|(
name|dataMap
argument_list|,
name|descriptors
argument_list|)
decl_stmt|;
name|execute
argument_list|(
name|dataMapArtifact
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testGenClass
parameter_list|()
throws|throws
name|Exception
block|{
name|dataMap
operator|.
name|setName
argument_list|(
literal|"ObjEntity"
argument_list|)
expr_stmt|;
name|DbEntity
name|dbEntity
init|=
operator|new
name|DbEntity
argument_list|()
decl_stmt|;
name|dbEntity
operator|.
name|setName
argument_list|(
literal|"EntityTest"
argument_list|)
expr_stmt|;
name|objEntity
operator|.
name|setDbEntity
argument_list|(
name|dbEntity
argument_list|)
expr_stmt|;
name|objEntity
operator|.
name|setClassName
argument_list|(
literal|"test.ObjEntity"
argument_list|)
expr_stmt|;
name|objEntity
operator|.
name|setDataMap
argument_list|(
name|dataMap
argument_list|)
expr_stmt|;
name|EntityArtifact
name|entityArtifact
init|=
operator|new
name|EntityArtifact
argument_list|(
name|objEntity
argument_list|)
decl_stmt|;
name|execute
argument_list|(
name|entityArtifact
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|execute
parameter_list|(
name|Artifact
name|artifact
parameter_list|)
throws|throws
name|Exception
block|{
name|cgenConfiguration
operator|.
name|addArtifact
argument_list|(
name|artifact
argument_list|)
expr_stmt|;
name|cgenConfiguration
operator|.
name|setRootPath
argument_list|(
name|folder
operator|.
name|getRoot
argument_list|()
operator|.
name|toPath
argument_list|()
argument_list|)
expr_stmt|;
name|cgenConfiguration
operator|.
name|setRelPath
argument_list|(
name|Paths
operator|.
name|get
argument_list|(
literal|"."
argument_list|)
argument_list|)
expr_stmt|;
name|cgenConfiguration
operator|.
name|loadEntity
argument_list|(
name|objEntity
argument_list|)
expr_stmt|;
name|cgenConfiguration
operator|.
name|setDataMap
argument_list|(
name|dataMap
argument_list|)
expr_stmt|;
name|action
operator|.
name|setUtilsFactory
argument_list|(
operator|new
name|DefaultToolsUtilsFactory
argument_list|()
argument_list|)
expr_stmt|;
name|action
operator|.
name|execute
argument_list|()
expr_stmt|;
name|String
name|targetName
init|=
name|dataMap
operator|.
name|getName
argument_list|()
decl_stmt|;
name|fileComparison
argument_list|(
name|targetName
argument_list|)
expr_stmt|;
name|fileComparison
argument_list|(
literal|"auto/_"
operator|+
name|targetName
argument_list|)
expr_stmt|;
block|}
specifier|private
name|void
name|fileComparison
parameter_list|(
name|String
name|fileName
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|expected
init|=
name|readResource
argument_list|(
name|fileName
argument_list|)
decl_stmt|;
name|StringBuilder
name|generated
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
name|Files
operator|.
name|readAllLines
argument_list|(
operator|new
name|File
argument_list|(
name|folder
operator|.
name|getRoot
argument_list|()
operator|+
literal|"/test/"
operator|+
name|fileName
operator|+
literal|".java"
argument_list|)
operator|.
name|toPath
argument_list|()
argument_list|)
operator|.
name|forEach
argument_list|(
name|generated
operator|::
name|append
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|expected
argument_list|,
name|generated
operator|.
name|toString
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|private
name|String
name|readResource
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|IOException
block|{
name|String
name|resourceName
init|=
literal|"templateTest/_"
operator|+
name|name
operator|+
literal|".java"
decl_stmt|;
name|InputStream
name|stream
init|=
name|getClass
argument_list|()
operator|.
name|getClassLoader
argument_list|()
operator|.
name|getResourceAsStream
argument_list|(
name|resourceName
argument_list|)
decl_stmt|;
if|if
condition|(
name|stream
operator|==
literal|null
condition|)
block|{
throw|throw
operator|new
name|FileNotFoundException
argument_list|(
literal|"Resource not found: "
operator|+
name|resourceName
argument_list|)
throw|;
block|}
name|StringBuilder
name|expected
init|=
operator|new
name|StringBuilder
argument_list|()
decl_stmt|;
try|try
init|(
name|BufferedReader
name|resource
init|=
operator|new
name|BufferedReader
argument_list|(
operator|new
name|InputStreamReader
argument_list|(
name|stream
argument_list|)
argument_list|)
init|)
block|{
name|String
name|line
decl_stmt|;
while|while
condition|(
operator|(
name|line
operator|=
name|resource
operator|.
name|readLine
argument_list|()
operator|)
operator|!=
literal|null
condition|)
block|{
name|expected
operator|.
name|append
argument_list|(
name|line
argument_list|)
expr_stmt|;
block|}
block|}
return|return
name|expected
operator|.
name|toString
argument_list|()
return|;
block|}
block|}
end_class

end_unit

