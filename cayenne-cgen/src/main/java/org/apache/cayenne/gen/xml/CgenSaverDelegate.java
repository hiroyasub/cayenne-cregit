begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|gen
operator|.
name|xml
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|CayenneRuntimeException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|xml
operator|.
name|DataChannelMetaData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|gen
operator|.
name|CgenConfiguration
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|gen
operator|.
name|CgenConfigList
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|DataMap
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|project
operator|.
name|extension
operator|.
name|BaseSaverDelegate
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URL
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Files
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Path
import|;
end_import

begin_import
import|import
name|java
operator|.
name|nio
operator|.
name|file
operator|.
name|Paths
import|;
end_import

begin_comment
comment|/**  * @since 4.1  */
end_comment

begin_class
specifier|public
class|class
name|CgenSaverDelegate
extends|extends
name|BaseSaverDelegate
block|{
specifier|private
name|DataChannelMetaData
name|metaData
decl_stmt|;
name|CgenSaverDelegate
parameter_list|(
name|DataChannelMetaData
name|metaData
parameter_list|)
block|{
name|this
operator|.
name|metaData
operator|=
name|metaData
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|Void
name|visitDataMap
parameter_list|(
name|DataMap
name|dataMap
parameter_list|)
block|{
name|CgenConfigList
name|cgenConfigList
init|=
name|metaData
operator|.
name|get
argument_list|(
name|dataMap
argument_list|,
name|CgenConfigList
operator|.
name|class
argument_list|)
decl_stmt|;
if|if
condition|(
name|cgenConfigList
operator|!=
literal|null
condition|)
block|{
for|for
control|(
name|CgenConfiguration
name|cgen
range|:
name|cgenConfigList
operator|.
name|getAll
argument_list|()
control|)
block|{
if|if
condition|(
name|cgen
operator|!=
literal|null
condition|)
block|{
name|resolveOutputDir
argument_list|(
name|getBaseDirectory
argument_list|()
operator|.
name|getURL
argument_list|()
argument_list|,
name|cgen
argument_list|)
expr_stmt|;
name|encoder
operator|.
name|nested
argument_list|(
name|cgen
argument_list|,
name|getParentDelegate
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
block|}
return|return
literal|null
return|;
block|}
specifier|static
name|void
name|resolveOutputDir
parameter_list|(
name|URL
name|baseURL
parameter_list|,
name|CgenConfiguration
name|cgenConfiguration
parameter_list|)
block|{
if|if
condition|(
name|baseURL
operator|==
literal|null
condition|)
block|{
return|return;
block|}
name|Path
name|resourcePath
decl_stmt|;
try|try
block|{
name|resourcePath
operator|=
name|Paths
operator|.
name|get
argument_list|(
name|baseURL
operator|.
name|toURI
argument_list|()
argument_list|)
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|CayenneRuntimeException
argument_list|(
literal|"Unable to resolve output path"
argument_list|,
name|e
argument_list|)
throw|;
block|}
if|if
condition|(
name|Files
operator|.
name|isRegularFile
argument_list|(
name|resourcePath
argument_list|)
condition|)
block|{
name|resourcePath
operator|=
name|resourcePath
operator|.
name|getParent
argument_list|()
expr_stmt|;
block|}
name|Path
name|oldRoot
init|=
name|cgenConfiguration
operator|.
name|getRootPath
argument_list|()
decl_stmt|;
if|if
condition|(
name|oldRoot
operator|==
literal|null
condition|)
block|{
name|cgenConfiguration
operator|.
name|setRootPath
argument_list|(
name|resourcePath
argument_list|)
expr_stmt|;
block|}
name|Path
name|prevPath
init|=
name|cgenConfiguration
operator|.
name|buildPath
argument_list|()
decl_stmt|;
if|if
condition|(
name|prevPath
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|prevPath
operator|.
name|isAbsolute
argument_list|()
condition|)
block|{
name|Path
name|relPath
init|=
name|prevPath
decl_stmt|;
if|if
condition|(
name|resourcePath
operator|.
name|getRoot
argument_list|()
operator|.
name|equals
argument_list|(
name|prevPath
operator|.
name|getRoot
argument_list|()
argument_list|)
condition|)
block|{
name|relPath
operator|=
name|resourcePath
operator|.
name|relativize
argument_list|(
name|prevPath
argument_list|)
operator|.
name|normalize
argument_list|()
expr_stmt|;
block|}
name|cgenConfiguration
operator|.
name|setRelPath
argument_list|(
name|relPath
argument_list|)
expr_stmt|;
block|}
block|}
name|cgenConfiguration
operator|.
name|setRootPath
argument_list|(
name|resourcePath
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

