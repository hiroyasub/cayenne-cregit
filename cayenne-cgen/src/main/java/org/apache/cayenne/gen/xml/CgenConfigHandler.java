begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|gen
operator|.
name|xml
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|xml
operator|.
name|DataChannelMetaData
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|xml
operator|.
name|NamespaceAwareNestedTagHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|gen
operator|.
name|ClassGenerationAction
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|Attributes
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|ContentHandler
import|;
end_import

begin_import
import|import
name|org
operator|.
name|xml
operator|.
name|sax
operator|.
name|SAXException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|File
import|;
end_import

begin_class
specifier|public
class|class
name|CgenConfigHandler
extends|extends
name|NamespaceAwareNestedTagHandler
block|{
specifier|public
specifier|static
specifier|final
name|String
name|CONFIG_TAG
init|=
literal|"cgen"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|OUTPUT_DIRECTORY_TAG
init|=
literal|"outputDirectory"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|GENERATION_MODE_TAG
init|=
literal|"generationMode"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|SUBCLASS_TEMPLATE_TAG
init|=
literal|"subclassTemplate"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|SUPERCLASS_TEMPLATE_TAG
init|=
literal|"superclassTemplate"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|OUTPUT_PATTERN_TAG
init|=
literal|"outputPattern"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|MAKE_PAIRS_TAG
init|=
literal|"makePairs"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|USE_PKG_PATH_TAG
init|=
literal|"usePkgPath"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|OVERWRITE_SUBCLASSES_TAG
init|=
literal|"overwriteSubclasses"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|CREATE_PROPERTY_NAMES_TAG
init|=
literal|"createPropertyNames"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|SUPER_PKG_TAG
init|=
literal|"superPkg"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|OBJENTITY_TAG
init|=
literal|"objEntity"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|EMBEDDABLE_TAG
init|=
literal|"embeddable"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|ENCODING_TAG
init|=
literal|"encoding"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|EMBEDDABLE_TEMPLATE_TAG
init|=
literal|"embeddableTemplate"
decl_stmt|;
specifier|private
specifier|static
specifier|final
name|String
name|EMBEDDABLE_SUPERCLASS_TEMPLATE_TAG
init|=
literal|"embeddableSuperclassTemplate"
decl_stmt|;
specifier|public
specifier|static
specifier|final
name|String
name|TRUE
init|=
literal|"true"
decl_stmt|;
specifier|private
name|DataChannelMetaData
name|metaData
decl_stmt|;
specifier|private
name|ClassGenerationAction
name|configuration
decl_stmt|;
name|CgenConfigHandler
parameter_list|(
name|NamespaceAwareNestedTagHandler
name|parentHandler
parameter_list|,
name|DataChannelMetaData
name|metaData
parameter_list|)
block|{
name|super
argument_list|(
name|parentHandler
argument_list|)
expr_stmt|;
name|this
operator|.
name|metaData
operator|=
name|metaData
expr_stmt|;
name|this
operator|.
name|targetNamespace
operator|=
name|CgenExtension
operator|.
name|NAMESPACE
expr_stmt|;
block|}
annotation|@
name|Override
specifier|protected
name|boolean
name|processElement
parameter_list|(
name|String
name|namespaceURI
parameter_list|,
name|String
name|localName
parameter_list|,
name|Attributes
name|attributes
parameter_list|)
throws|throws
name|SAXException
block|{
switch|switch
condition|(
name|localName
condition|)
block|{
case|case
name|CONFIG_TAG
case|:
name|createConfig
argument_list|()
expr_stmt|;
return|return
literal|true
return|;
block|}
return|return
literal|false
return|;
block|}
annotation|@
name|Override
specifier|protected
name|ContentHandler
name|createChildTagHandler
parameter_list|(
name|String
name|namespaceURI
parameter_list|,
name|String
name|localName
parameter_list|,
name|String
name|qName
parameter_list|,
name|Attributes
name|attributes
parameter_list|)
block|{
if|if
condition|(
name|namespaceURI
operator|.
name|equals
argument_list|(
name|targetNamespace
argument_list|)
condition|)
block|{
switch|switch
condition|(
name|localName
condition|)
block|{
case|case
name|OBJENTITY_TAG
case|:
return|return
operator|new
name|ObjEntityHandler
argument_list|(
name|this
argument_list|,
name|configuration
argument_list|)
return|;
case|case
name|EMBEDDABLE_TAG
case|:
return|return
operator|new
name|EmbeddableHandler
argument_list|(
name|this
argument_list|,
name|configuration
argument_list|)
return|;
block|}
block|}
return|return
name|super
operator|.
name|createChildTagHandler
argument_list|(
name|namespaceURI
argument_list|,
name|localName
argument_list|,
name|qName
argument_list|,
name|attributes
argument_list|)
return|;
block|}
annotation|@
name|Override
specifier|protected
name|void
name|processCharData
parameter_list|(
name|String
name|localName
parameter_list|,
name|String
name|data
parameter_list|)
block|{
switch|switch
condition|(
name|localName
condition|)
block|{
case|case
name|OUTPUT_DIRECTORY_TAG
case|:
name|createOutputDir
argument_list|(
name|data
argument_list|)
expr_stmt|;
break|break;
case|case
name|GENERATION_MODE_TAG
case|:
name|createGenerationMode
argument_list|(
name|data
argument_list|)
expr_stmt|;
break|break;
case|case
name|SUBCLASS_TEMPLATE_TAG
case|:
name|createSubclassTemplate
argument_list|(
name|data
argument_list|)
expr_stmt|;
break|break;
case|case
name|SUPERCLASS_TEMPLATE_TAG
case|:
name|createSuperclassTemplate
argument_list|(
name|data
argument_list|)
expr_stmt|;
break|break;
case|case
name|OUTPUT_PATTERN_TAG
case|:
name|createOutputPattern
argument_list|(
name|data
argument_list|)
expr_stmt|;
break|break;
case|case
name|MAKE_PAIRS_TAG
case|:
name|createMakePairs
argument_list|(
name|data
argument_list|)
expr_stmt|;
break|break;
case|case
name|USE_PKG_PATH_TAG
case|:
name|createUsePkgPath
argument_list|(
name|data
argument_list|)
expr_stmt|;
break|break;
case|case
name|OVERWRITE_SUBCLASSES_TAG
case|:
name|createOverwriteSubclasses
argument_list|(
name|data
argument_list|)
expr_stmt|;
break|break;
case|case
name|CREATE_PROPERTY_NAMES_TAG
case|:
name|createPropertyNamesTag
argument_list|(
name|data
argument_list|)
expr_stmt|;
break|break;
case|case
name|SUPER_PKG_TAG
case|:
name|createSuperPkg
argument_list|(
name|data
argument_list|)
expr_stmt|;
break|break;
case|case
name|ENCODING_TAG
case|:
name|createEncoding
argument_list|(
name|data
argument_list|)
expr_stmt|;
break|break;
case|case
name|EMBEDDABLE_TEMPLATE_TAG
case|:
name|createEmbeddableTemplate
argument_list|(
name|data
argument_list|)
expr_stmt|;
break|break;
case|case
name|EMBEDDABLE_SUPERCLASS_TEMPLATE_TAG
case|:
name|createEmbeddableSuperclassTemplate
argument_list|(
name|data
argument_list|)
expr_stmt|;
break|break;
block|}
block|}
specifier|private
name|void
name|createOutputDir
parameter_list|(
name|String
name|path
parameter_list|)
block|{
if|if
condition|(
name|path
operator|.
name|trim
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
return|return;
block|}
if|if
condition|(
name|configuration
operator|!=
literal|null
condition|)
block|{
name|configuration
operator|.
name|setDestDir
argument_list|(
operator|new
name|File
argument_list|(
name|path
argument_list|)
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|createGenerationMode
parameter_list|(
name|String
name|mode
parameter_list|)
block|{
if|if
condition|(
name|mode
operator|.
name|trim
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
return|return;
block|}
if|if
condition|(
name|configuration
operator|!=
literal|null
condition|)
block|{
name|configuration
operator|.
name|setArtifactsGenerationMode
argument_list|(
name|mode
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|createSubclassTemplate
parameter_list|(
name|String
name|template
parameter_list|)
block|{
if|if
condition|(
name|template
operator|.
name|trim
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
return|return;
block|}
if|if
condition|(
name|configuration
operator|!=
literal|null
condition|)
block|{
name|configuration
operator|.
name|setTemplate
argument_list|(
name|template
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|createSuperclassTemplate
parameter_list|(
name|String
name|template
parameter_list|)
block|{
if|if
condition|(
name|template
operator|.
name|trim
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
return|return;
block|}
if|if
condition|(
name|configuration
operator|!=
literal|null
condition|)
block|{
name|configuration
operator|.
name|setSuperTemplate
argument_list|(
name|template
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|createEmbeddableTemplate
parameter_list|(
name|String
name|template
parameter_list|)
block|{
if|if
condition|(
name|template
operator|.
name|trim
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
return|return;
block|}
if|if
condition|(
name|configuration
operator|!=
literal|null
condition|)
block|{
name|configuration
operator|.
name|setEmbeddableTemplate
argument_list|(
name|template
argument_list|)
expr_stmt|;
block|}
block|}
specifier|public
name|void
name|createEmbeddableSuperclassTemplate
parameter_list|(
name|String
name|template
parameter_list|)
block|{
if|if
condition|(
name|template
operator|.
name|trim
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
return|return;
block|}
if|if
condition|(
name|configuration
operator|!=
literal|null
condition|)
block|{
name|configuration
operator|.
name|setEmbeddableSuperTemplate
argument_list|(
name|template
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|createOutputPattern
parameter_list|(
name|String
name|pattern
parameter_list|)
block|{
if|if
condition|(
name|pattern
operator|.
name|trim
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
return|return;
block|}
if|if
condition|(
name|configuration
operator|!=
literal|null
condition|)
block|{
name|configuration
operator|.
name|setOutputPattern
argument_list|(
name|pattern
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|createMakePairs
parameter_list|(
name|String
name|makePairs
parameter_list|)
block|{
if|if
condition|(
name|makePairs
operator|.
name|trim
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
return|return;
block|}
if|if
condition|(
name|configuration
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|makePairs
operator|.
name|equals
argument_list|(
name|TRUE
argument_list|)
condition|)
block|{
name|configuration
operator|.
name|setMakePairs
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|configuration
operator|.
name|setMakePairs
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|createUsePkgPath
parameter_list|(
name|String
name|data
parameter_list|)
block|{
if|if
condition|(
name|data
operator|.
name|trim
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
return|return;
block|}
if|if
condition|(
name|configuration
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|data
operator|.
name|equals
argument_list|(
name|TRUE
argument_list|)
condition|)
block|{
name|configuration
operator|.
name|setUsePkgPath
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|configuration
operator|.
name|setUsePkgPath
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|createOverwriteSubclasses
parameter_list|(
name|String
name|data
parameter_list|)
block|{
if|if
condition|(
name|data
operator|.
name|trim
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
return|return;
block|}
if|if
condition|(
name|configuration
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|data
operator|.
name|equals
argument_list|(
name|TRUE
argument_list|)
condition|)
block|{
name|configuration
operator|.
name|setOverwrite
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|configuration
operator|.
name|setOverwrite
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|createPropertyNamesTag
parameter_list|(
name|String
name|data
parameter_list|)
block|{
if|if
condition|(
name|data
operator|.
name|trim
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
return|return;
block|}
if|if
condition|(
name|configuration
operator|!=
literal|null
condition|)
block|{
if|if
condition|(
name|data
operator|.
name|equals
argument_list|(
name|TRUE
argument_list|)
condition|)
block|{
name|configuration
operator|.
name|setCreatePropertyNames
argument_list|(
literal|true
argument_list|)
expr_stmt|;
block|}
else|else
block|{
name|configuration
operator|.
name|setCreatePropertyNames
argument_list|(
literal|false
argument_list|)
expr_stmt|;
block|}
block|}
block|}
specifier|private
name|void
name|createSuperPkg
parameter_list|(
name|String
name|data
parameter_list|)
block|{
if|if
condition|(
name|data
operator|.
name|trim
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
return|return;
block|}
if|if
condition|(
name|configuration
operator|!=
literal|null
condition|)
block|{
name|configuration
operator|.
name|setSuperPkg
argument_list|(
name|data
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|createEncoding
parameter_list|(
name|String
name|data
parameter_list|)
block|{
if|if
condition|(
name|data
operator|.
name|trim
argument_list|()
operator|.
name|length
argument_list|()
operator|==
literal|0
condition|)
block|{
return|return;
block|}
if|if
condition|(
name|configuration
operator|!=
literal|null
condition|)
block|{
name|configuration
operator|.
name|setEncoding
argument_list|(
name|data
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|createConfig
parameter_list|()
block|{
name|configuration
operator|=
operator|new
name|ClassGenerationAction
argument_list|()
expr_stmt|;
name|loaderContext
operator|.
name|addDataMapListener
argument_list|(
name|dataMap
lambda|->
block|{
name|configuration
operator|.
name|setDataMap
argument_list|(
name|dataMap
argument_list|)
expr_stmt|;
name|configuration
operator|.
name|prepareArtifacts
argument_list|()
expr_stmt|;
name|CgenConfigHandler
operator|.
name|this
operator|.
name|metaData
operator|.
name|add
argument_list|(
name|dataMap
argument_list|,
name|configuration
argument_list|)
expr_stmt|;
block|}
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

