begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|EntityResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|remote
operator|.
name|hessian
operator|.
name|service
operator|.
name|HessianUtil
import|;
end_import

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Test
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertEquals
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNotSame
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertNull
import|;
end_import

begin_import
import|import static
name|org
operator|.
name|junit
operator|.
name|Assert
operator|.
name|assertSame
import|;
end_import

begin_class
specifier|public
class|class
name|PrefetchTreeNodeTest
block|{
annotation|@
name|Test
specifier|public
name|void
name|testTreeSerializationWithHessian
parameter_list|()
throws|throws
name|Exception
block|{
name|PrefetchTreeNode
name|n1
init|=
operator|new
name|PrefetchTreeNode
argument_list|()
decl_stmt|;
name|PrefetchTreeNode
name|n2
init|=
name|n1
operator|.
name|addPath
argument_list|(
literal|"abc"
argument_list|)
decl_stmt|;
name|PrefetchTreeNode
name|nc1
init|=
operator|(
name|PrefetchTreeNode
operator|)
name|HessianUtil
operator|.
name|cloneViaClientServerSerialization
argument_list|(
name|n1
argument_list|,
operator|new
name|EntityResolver
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|nc1
argument_list|)
expr_stmt|;
name|PrefetchTreeNode
name|nc2
init|=
name|nc1
operator|.
name|getNode
argument_list|(
literal|"abc"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|nc2
argument_list|)
expr_stmt|;
name|assertNotSame
argument_list|(
name|nc2
argument_list|,
name|n2
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|nc1
argument_list|,
name|nc2
operator|.
name|getParent
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"abc"
argument_list|,
name|nc2
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
annotation|@
name|Test
specifier|public
name|void
name|testSubtreeSerializationWithHessian
parameter_list|()
throws|throws
name|Exception
block|{
name|PrefetchTreeNode
name|n1
init|=
operator|new
name|PrefetchTreeNode
argument_list|()
decl_stmt|;
name|PrefetchTreeNode
name|n2
init|=
name|n1
operator|.
name|addPath
argument_list|(
literal|"abc"
argument_list|)
decl_stmt|;
name|PrefetchTreeNode
name|n3
init|=
name|n2
operator|.
name|addPath
argument_list|(
literal|"xyz"
argument_list|)
decl_stmt|;
comment|// test that substree was serialized as independent tree, instead of
comment|// sucking
name|PrefetchTreeNode
name|nc2
init|=
operator|(
name|PrefetchTreeNode
operator|)
name|HessianUtil
operator|.
name|cloneViaClientServerSerialization
argument_list|(
name|n2
argument_list|,
operator|new
name|EntityResolver
argument_list|()
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|nc2
argument_list|)
expr_stmt|;
name|assertNull
argument_list|(
name|nc2
operator|.
name|getParent
argument_list|()
argument_list|)
expr_stmt|;
name|PrefetchTreeNode
name|nc3
init|=
name|nc2
operator|.
name|getNode
argument_list|(
literal|"xyz"
argument_list|)
decl_stmt|;
name|assertNotNull
argument_list|(
name|nc3
argument_list|)
expr_stmt|;
name|assertNotSame
argument_list|(
name|nc3
argument_list|,
name|n3
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|nc2
argument_list|,
name|nc3
operator|.
name|getParent
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"xyz"
argument_list|,
name|nc3
operator|.
name|getName
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

