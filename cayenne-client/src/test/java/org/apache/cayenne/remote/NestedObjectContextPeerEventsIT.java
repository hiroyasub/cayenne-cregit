begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|remote
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ObjectContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ObjectId
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|rop
operator|.
name|client
operator|.
name|ClientRuntime
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|test
operator|.
name|jdbc
operator|.
name|DBHelper
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|mt
operator|.
name|ClientMtTable1
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|testdo
operator|.
name|mt
operator|.
name|ClientMtTable2
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|client
operator|.
name|ClientCase
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|server
operator|.
name|UseServerRuntime
import|;
end_import

begin_class
annotation|@
name|UseServerRuntime
argument_list|(
name|ClientCase
operator|.
name|MULTI_TIER_PROJECT
argument_list|)
specifier|public
class|class
name|NestedObjectContextPeerEventsIT
extends|extends
name|RemoteCayenneCase
block|{
annotation|@
name|Inject
specifier|private
name|ClientRuntime
name|runtime
decl_stmt|;
annotation|@
name|Inject
specifier|private
name|DBHelper
name|dbHelper
decl_stmt|;
annotation|@
name|Override
specifier|public
name|void
name|setUpAfterInjection
parameter_list|()
throws|throws
name|Exception
block|{
name|super
operator|.
name|setUpAfterInjection
argument_list|()
expr_stmt|;
name|dbHelper
operator|.
name|deleteAll
argument_list|(
literal|"MT_TABLE2"
argument_list|)
expr_stmt|;
name|dbHelper
operator|.
name|deleteAll
argument_list|(
literal|"MT_TABLE1"
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testPeerObjectUpdatedTempOID
parameter_list|()
throws|throws
name|Exception
block|{
name|ObjectContext
name|peer1
init|=
name|runtime
operator|.
name|newContext
argument_list|(
name|clientContext
argument_list|)
decl_stmt|;
name|ClientMtTable1
name|a1
init|=
name|peer1
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
decl_stmt|;
name|a1
operator|.
name|setGlobalAttribute1
argument_list|(
literal|"Y"
argument_list|)
expr_stmt|;
name|ObjectId
name|a1TempId
init|=
name|a1
operator|.
name|getObjectId
argument_list|()
decl_stmt|;
name|ObjectContext
name|peer2
init|=
name|runtime
operator|.
name|newContext
argument_list|(
name|clientContext
argument_list|)
decl_stmt|;
name|ClientMtTable1
name|a2
init|=
name|peer2
operator|.
name|localObject
argument_list|(
name|a1
argument_list|)
decl_stmt|;
name|assertEquals
argument_list|(
name|a1TempId
argument_list|,
name|a2
operator|.
name|getObjectId
argument_list|()
argument_list|)
expr_stmt|;
name|peer1
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|assertFalse
argument_list|(
name|a1
operator|.
name|getObjectId
argument_list|()
operator|.
name|isTemporary
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|a2
operator|.
name|getObjectId
argument_list|()
operator|.
name|isTemporary
argument_list|()
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
name|a2
operator|.
name|getObjectId
argument_list|()
argument_list|,
name|a1
operator|.
name|getObjectId
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testPeerObjectUpdatedSimpleProperty
parameter_list|()
throws|throws
name|Exception
block|{
name|ClientMtTable1
name|a
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
decl_stmt|;
name|a
operator|.
name|setGlobalAttribute1
argument_list|(
literal|"X"
argument_list|)
expr_stmt|;
name|clientContext
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|ObjectContext
name|peer1
init|=
name|runtime
operator|.
name|newContext
argument_list|(
name|clientContext
argument_list|)
decl_stmt|;
name|ClientMtTable1
name|a1
init|=
name|peer1
operator|.
name|localObject
argument_list|(
name|a
argument_list|)
decl_stmt|;
name|ObjectContext
name|peer2
init|=
name|runtime
operator|.
name|newContext
argument_list|(
name|clientContext
argument_list|)
decl_stmt|;
name|ClientMtTable1
name|a2
init|=
name|peer2
operator|.
name|localObject
argument_list|(
name|a
argument_list|)
decl_stmt|;
name|a1
operator|.
name|setGlobalAttribute1
argument_list|(
literal|"Y"
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|"X"
argument_list|,
name|a2
operator|.
name|getGlobalAttribute1
argument_list|()
argument_list|)
expr_stmt|;
name|peer1
operator|.
name|commitChangesToParent
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|"Y"
argument_list|,
name|a2
operator|.
name|getGlobalAttribute1
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"Peer data context became dirty on event processing"
argument_list|,
name|peer2
operator|.
name|hasChanges
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testPeerObjectUpdatedToOneRelationship
parameter_list|()
throws|throws
name|Exception
block|{
name|ClientMtTable1
name|a
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
decl_stmt|;
name|ClientMtTable1
name|altA
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
decl_stmt|;
name|ClientMtTable2
name|p
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable2
operator|.
name|class
argument_list|)
decl_stmt|;
name|p
operator|.
name|setTable1
argument_list|(
name|a
argument_list|)
expr_stmt|;
name|p
operator|.
name|setGlobalAttribute
argument_list|(
literal|"PPP"
argument_list|)
expr_stmt|;
name|a
operator|.
name|setGlobalAttribute1
argument_list|(
literal|"X"
argument_list|)
expr_stmt|;
name|altA
operator|.
name|setGlobalAttribute1
argument_list|(
literal|"Y"
argument_list|)
expr_stmt|;
name|clientContext
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|ObjectContext
name|peer1
init|=
name|runtime
operator|.
name|newContext
argument_list|(
name|clientContext
argument_list|)
decl_stmt|;
name|ClientMtTable2
name|p1
init|=
name|peer1
operator|.
name|localObject
argument_list|(
name|p
argument_list|)
decl_stmt|;
name|ClientMtTable1
name|altA1
init|=
name|peer1
operator|.
name|localObject
argument_list|(
name|altA
argument_list|)
decl_stmt|;
name|ObjectContext
name|peer2
init|=
name|runtime
operator|.
name|newContext
argument_list|(
name|clientContext
argument_list|)
decl_stmt|;
name|ClientMtTable2
name|p2
init|=
name|peer2
operator|.
name|localObject
argument_list|(
name|p
argument_list|)
decl_stmt|;
name|ClientMtTable1
name|altA2
init|=
name|peer2
operator|.
name|localObject
argument_list|(
name|altA
argument_list|)
decl_stmt|;
name|ClientMtTable1
name|a2
init|=
name|peer2
operator|.
name|localObject
argument_list|(
name|a
argument_list|)
decl_stmt|;
name|p1
operator|.
name|setTable1
argument_list|(
name|altA1
argument_list|)
expr_stmt|;
name|assertSame
argument_list|(
name|a2
argument_list|,
name|p2
operator|.
name|getTable1
argument_list|()
argument_list|)
expr_stmt|;
name|peer1
operator|.
name|commitChangesToParent
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
name|altA2
argument_list|,
name|p2
operator|.
name|getTable1
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"Peer data context became dirty on event processing"
argument_list|,
name|peer2
operator|.
name|hasChanges
argument_list|()
argument_list|)
expr_stmt|;
block|}
specifier|public
name|void
name|testPeerObjectUpdatedToManyRelationship
parameter_list|()
throws|throws
name|Exception
block|{
name|ClientMtTable1
name|a
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable1
operator|.
name|class
argument_list|)
decl_stmt|;
name|a
operator|.
name|setGlobalAttribute1
argument_list|(
literal|"X"
argument_list|)
expr_stmt|;
name|ClientMtTable2
name|px
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable2
operator|.
name|class
argument_list|)
decl_stmt|;
name|px
operator|.
name|setTable1
argument_list|(
name|a
argument_list|)
expr_stmt|;
name|px
operator|.
name|setGlobalAttribute
argument_list|(
literal|"PX"
argument_list|)
expr_stmt|;
name|ClientMtTable2
name|py
init|=
name|clientContext
operator|.
name|newObject
argument_list|(
name|ClientMtTable2
operator|.
name|class
argument_list|)
decl_stmt|;
name|py
operator|.
name|setGlobalAttribute
argument_list|(
literal|"PY"
argument_list|)
expr_stmt|;
name|clientContext
operator|.
name|commitChanges
argument_list|()
expr_stmt|;
name|ObjectContext
name|peer1
init|=
name|runtime
operator|.
name|newContext
argument_list|(
name|clientContext
argument_list|)
decl_stmt|;
name|ClientMtTable2
name|py1
init|=
name|peer1
operator|.
name|localObject
argument_list|(
name|py
argument_list|)
decl_stmt|;
name|ClientMtTable1
name|a1
init|=
name|peer1
operator|.
name|localObject
argument_list|(
name|a
argument_list|)
decl_stmt|;
name|ObjectContext
name|peer2
init|=
name|runtime
operator|.
name|newContext
argument_list|(
name|clientContext
argument_list|)
decl_stmt|;
name|ClientMtTable2
name|py2
init|=
name|peer2
operator|.
name|localObject
argument_list|(
name|py
argument_list|)
decl_stmt|;
name|ClientMtTable1
name|a2
init|=
name|peer2
operator|.
name|localObject
argument_list|(
name|a
argument_list|)
decl_stmt|;
name|a1
operator|.
name|addToTable2Array
argument_list|(
name|py1
argument_list|)
expr_stmt|;
name|assertEquals
argument_list|(
literal|1
argument_list|,
name|a2
operator|.
name|getTable2Array
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
name|a2
operator|.
name|getTable2Array
argument_list|()
operator|.
name|contains
argument_list|(
name|py2
argument_list|)
argument_list|)
expr_stmt|;
name|peer1
operator|.
name|commitChangesToParent
argument_list|()
expr_stmt|;
name|assertEquals
argument_list|(
literal|2
argument_list|,
name|a2
operator|.
name|getTable2Array
argument_list|()
operator|.
name|size
argument_list|()
argument_list|)
expr_stmt|;
name|assertTrue
argument_list|(
name|a2
operator|.
name|getTable2Array
argument_list|()
operator|.
name|contains
argument_list|(
name|py2
argument_list|)
argument_list|)
expr_stmt|;
name|assertFalse
argument_list|(
literal|"Peer data context became dirty on event processing"
argument_list|,
name|peer2
operator|.
name|hasChanges
argument_list|()
argument_list|)
expr_stmt|;
block|}
block|}
end_class

end_unit

