begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|client
package|;
end_package

begin_import
import|import
name|org
operator|.
name|junit
operator|.
name|Assert
import|;
end_import

begin_import
import|import
name|junit
operator|.
name|framework
operator|.
name|AssertionFailedError
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|DataChannel
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|ObjectContext
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|QueryResponse
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|event
operator|.
name|EventManager
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|graph
operator|.
name|GraphDiff
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|map
operator|.
name|EntityResolver
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|query
operator|.
name|Query
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|unit
operator|.
name|di
operator|.
name|DataChannelSyncStats
import|;
end_import

begin_class
specifier|public
class|class
name|ClientServerDataChannelDecorator
implements|implements
name|DataChannel
block|{
specifier|private
name|DataChannel
name|delegate
decl_stmt|;
specifier|private
name|boolean
name|blockingMessages
decl_stmt|;
specifier|private
name|DataChannelSyncStats
name|statsCounter
decl_stmt|;
specifier|public
name|ClientServerDataChannelDecorator
parameter_list|(
name|DataChannel
name|delegate
parameter_list|)
block|{
name|this
operator|.
name|delegate
operator|=
name|delegate
expr_stmt|;
block|}
specifier|public
name|DataChannel
name|getDelegate
parameter_list|()
block|{
return|return
name|delegate
return|;
block|}
specifier|public
name|EntityResolver
name|getEntityResolver
parameter_list|()
block|{
name|checkMessageAllowed
argument_list|(
literal|"getEntityResolver"
argument_list|)
expr_stmt|;
return|return
name|delegate
operator|.
name|getEntityResolver
argument_list|()
return|;
block|}
specifier|public
name|EventManager
name|getEventManager
parameter_list|()
block|{
name|checkMessageAllowed
argument_list|(
literal|"getEventManager"
argument_list|)
expr_stmt|;
return|return
name|delegate
operator|.
name|getEventManager
argument_list|()
return|;
block|}
specifier|public
name|QueryResponse
name|onQuery
parameter_list|(
name|ObjectContext
name|originatingContext
parameter_list|,
name|Query
name|query
parameter_list|)
block|{
name|checkMessageAllowed
argument_list|(
literal|"onQuery"
argument_list|)
expr_stmt|;
return|return
name|delegate
operator|.
name|onQuery
argument_list|(
name|originatingContext
argument_list|,
name|query
argument_list|)
return|;
block|}
specifier|public
name|GraphDiff
name|onSync
parameter_list|(
name|ObjectContext
name|originatingContext
parameter_list|,
name|GraphDiff
name|changes
parameter_list|,
name|int
name|syncType
parameter_list|)
block|{
name|checkMessageAllowed
argument_list|(
literal|"onSync"
argument_list|)
expr_stmt|;
name|countDiffs
argument_list|(
name|changes
argument_list|)
expr_stmt|;
return|return
name|delegate
operator|.
name|onSync
argument_list|(
name|originatingContext
argument_list|,
name|changes
argument_list|,
name|syncType
argument_list|)
return|;
block|}
specifier|public
name|void
name|setBlockingMessages
parameter_list|(
name|boolean
name|blockingMessages
parameter_list|)
block|{
name|this
operator|.
name|blockingMessages
operator|=
name|blockingMessages
expr_stmt|;
block|}
specifier|public
name|void
name|setSyncStatsCounter
parameter_list|(
name|DataChannelSyncStats
name|statsCounter
parameter_list|)
block|{
name|this
operator|.
name|statsCounter
operator|=
name|statsCounter
expr_stmt|;
block|}
specifier|private
name|void
name|checkMessageAllowed
parameter_list|(
name|String
name|label
parameter_list|)
throws|throws
name|AssertionFailedError
block|{
if|if
condition|(
name|blockingMessages
condition|)
block|{
name|Assert
operator|.
name|fail
argument_list|(
literal|"Message is unexpected: "
operator|+
name|label
argument_list|)
expr_stmt|;
block|}
block|}
specifier|private
name|void
name|countDiffs
parameter_list|(
name|GraphDiff
name|changes
parameter_list|)
block|{
if|if
condition|(
name|statsCounter
operator|!=
literal|null
condition|)
block|{
name|changes
operator|.
name|apply
argument_list|(
name|statsCounter
argument_list|)
expr_stmt|;
block|}
block|}
block|}
end_class

end_unit

