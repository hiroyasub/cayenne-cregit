begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    http://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|rop
package|;
end_package

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|remote
operator|.
name|ClientMessage
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|remote
operator|.
name|RemoteService
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|remote
operator|.
name|RemoteSession
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|IOException
import|;
end_import

begin_import
import|import
name|java
operator|.
name|io
operator|.
name|InputStream
import|;
end_import

begin_import
import|import
name|java
operator|.
name|rmi
operator|.
name|RemoteException
import|;
end_import

begin_class
specifier|public
class|class
name|ProxyRemoteService
implements|implements
name|RemoteService
block|{
specifier|protected
name|ROPSerializationService
name|serializationService
decl_stmt|;
specifier|protected
name|ROPConnector
name|ropConnector
decl_stmt|;
specifier|public
name|ProxyRemoteService
parameter_list|(
annotation|@
name|Inject
name|ROPSerializationService
name|serializationService
parameter_list|,
annotation|@
name|Inject
name|ROPConnector
name|ropConnector
parameter_list|)
block|{
name|this
operator|.
name|serializationService
operator|=
name|serializationService
expr_stmt|;
name|this
operator|.
name|ropConnector
operator|=
name|ropConnector
expr_stmt|;
block|}
annotation|@
name|Override
specifier|public
name|RemoteSession
name|establishSession
parameter_list|()
throws|throws
name|RemoteException
block|{
try|try
init|(
name|InputStream
name|is
init|=
name|ropConnector
operator|.
name|establishSession
argument_list|()
init|)
block|{
return|return
name|serializationService
operator|.
name|deserialize
argument_list|(
name|is
argument_list|,
name|RemoteSession
operator|.
name|class
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RemoteException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|RemoteSession
name|establishSharedSession
parameter_list|(
name|String
name|name
parameter_list|)
throws|throws
name|RemoteException
block|{
try|try
init|(
name|InputStream
name|is
init|=
name|ropConnector
operator|.
name|establishSharedSession
argument_list|(
name|name
argument_list|)
init|)
block|{
return|return
name|serializationService
operator|.
name|deserialize
argument_list|(
name|is
argument_list|,
name|RemoteSession
operator|.
name|class
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RemoteException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|Object
name|processMessage
parameter_list|(
name|ClientMessage
name|message
parameter_list|)
throws|throws
name|RemoteException
throws|,
name|Throwable
block|{
try|try
init|(
name|InputStream
name|is
init|=
name|ropConnector
operator|.
name|sendMessage
argument_list|(
name|serializationService
operator|.
name|serialize
argument_list|(
name|message
argument_list|)
argument_list|)
init|)
block|{
return|return
name|serializationService
operator|.
name|deserialize
argument_list|(
name|is
argument_list|,
name|Object
operator|.
name|class
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RemoteException
argument_list|(
name|e
operator|.
name|getMessage
argument_list|()
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
annotation|@
name|Override
specifier|public
name|void
name|close
parameter_list|()
throws|throws
name|RemoteException
block|{
try|try
block|{
name|ropConnector
operator|.
name|close
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|IOException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RemoteException
argument_list|(
literal|"Exception while closing ROP resources"
argument_list|,
name|e
argument_list|)
throw|;
block|}
block|}
block|}
end_class

end_unit

