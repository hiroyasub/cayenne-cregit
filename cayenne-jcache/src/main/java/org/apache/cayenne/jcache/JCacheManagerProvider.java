begin_unit|revision:1.0.0;language:Java;cregit-version:0.0.1
begin_comment
comment|/*****************************************************************  *   Licensed to the Apache Software Foundation (ASF) under one  *  or more contributor license agreements.  See the NOTICE file  *  distributed with this work for additional information  *  regarding copyright ownership.  The ASF licenses this file  *  to you under the Apache License, Version 2.0 (the  *  "License"); you may not use this file except in compliance  *  with the License.  You may obtain a copy of the License at  *  *    https://www.apache.org/licenses/LICENSE-2.0  *  *  Unless required by applicable law or agreed to in writing,  *  software distributed under the License is distributed on an  *  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY  *  KIND, either express or implied.  See the License for the  *  specific language governing permissions and limitations  *  under the License.  ****************************************************************/
end_comment

begin_package
package|package
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|jcache
package|;
end_package

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URI
import|;
end_import

begin_import
import|import
name|java
operator|.
name|net
operator|.
name|URISyntaxException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|cache
operator|.
name|CacheException
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|cache
operator|.
name|CacheManager
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|cache
operator|.
name|Caching
import|;
end_import

begin_import
import|import
name|javax
operator|.
name|cache
operator|.
name|spi
operator|.
name|CachingProvider
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|configuration
operator|.
name|RuntimeProperties
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|DIRuntimeException
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Inject
import|;
end_import

begin_import
import|import
name|org
operator|.
name|apache
operator|.
name|cayenne
operator|.
name|di
operator|.
name|Provider
import|;
end_import

begin_comment
comment|/**  * @since 4.0  */
end_comment

begin_class
specifier|public
class|class
name|JCacheManagerProvider
implements|implements
name|Provider
argument_list|<
name|CacheManager
argument_list|>
block|{
annotation|@
name|Inject
specifier|private
name|RuntimeProperties
name|properties
decl_stmt|;
annotation|@
name|Override
specifier|public
name|CacheManager
name|get
parameter_list|()
throws|throws
name|DIRuntimeException
block|{
name|CachingProvider
name|provider
decl_stmt|;
try|try
block|{
name|provider
operator|=
name|Caching
operator|.
name|getCachingProvider
argument_list|()
expr_stmt|;
block|}
catch|catch
parameter_list|(
name|CacheException
name|e
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"'cayenne-jcache' doesn't bundle any JCache providers. "
operator|+
literal|"You must place a JCache 1.0 provider on classpath explicitly."
argument_list|,
name|e
argument_list|)
throw|;
block|}
name|CacheManager
name|manager
decl_stmt|;
name|URI
name|jcacheConfig
init|=
name|getConfig
argument_list|()
decl_stmt|;
if|if
condition|(
name|jcacheConfig
operator|==
literal|null
condition|)
block|{
name|manager
operator|=
name|provider
operator|.
name|getCacheManager
argument_list|()
expr_stmt|;
block|}
else|else
block|{
name|manager
operator|=
name|provider
operator|.
name|getCacheManager
argument_list|(
name|jcacheConfig
argument_list|,
literal|null
argument_list|)
expr_stmt|;
block|}
return|return
name|manager
return|;
block|}
specifier|private
name|URI
name|getConfig
parameter_list|()
block|{
name|String
name|config
init|=
name|properties
operator|.
name|get
argument_list|(
name|JCacheConstants
operator|.
name|JCACHE_PROVIDER_CONFIG
argument_list|)
decl_stmt|;
if|if
condition|(
name|config
operator|==
literal|null
condition|)
block|{
return|return
literal|null
return|;
block|}
else|else
block|{
try|try
block|{
return|return
operator|new
name|URI
argument_list|(
name|config
argument_list|)
return|;
block|}
catch|catch
parameter_list|(
name|URISyntaxException
name|ex
parameter_list|)
block|{
throw|throw
operator|new
name|RuntimeException
argument_list|(
literal|"Wrong value for JCache provider config property"
argument_list|,
name|ex
argument_list|)
throw|;
block|}
block|}
block|}
block|}
end_class

end_unit

